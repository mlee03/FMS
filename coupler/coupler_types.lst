Page 1           Source Listing                  COUPLER_TYPES_INIT
2021-06-01 08:55                                 /tmp/ifortOhse9Y.i90

      1 # 1 "coupler_types.F90"
      2 !***********************************************************************
      3 !*                   GNU Lesser General Public License
      4 !*
      5 !* This file is part of the GFDL Flexible Modeling System (FMS).
      6 !*
      7 !* FMS is free software: you can redistribute it and/or modify it under
      8 !* the terms of the GNU Lesser General Public License as published by
      9 !* the Free Software Foundation, either version 3 of the License, or (at
     10 !* your option) any later version.
     11 !*
     12 !* FMS is distributed in the hope that it will be useful, but WITHOUT
     13 !* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
     14 !* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
     15 !* for more details.
     16 !*
     17 !* You should have received a copy of the GNU Lesser General Public
     18 !* License along with FMS.  If not, see <http://www.gnu.org/licenses/>.
     19 !***********************************************************************
     20 
     21 !> @file
     22 !! @brief This module contains type declarations for the coupler.
     23 !! @author Richard Slater, John Dunne
     24 !! @email gfdl.climate.model.info@noaa.gov
     25 module coupler_types_mod
     26   use fms_mod,           only: write_version_number, lowercase
     27   use fms2_io_mod,       only: FmsNetcdfDomainFile_t, open_file, register_restart_field
     28   use fms2_io_mod,       only: register_axis, unlimited, variable_exists, check_if_open
     29   use fms2_io_mod,       only: register_field, get_num_dimensions, variable_att_exists
     30   use fms2_io_mod,       only: get_variable_attribute, get_dimension_size, get_dimension_names
     31   use fms2_io_mod,       only: register_variable_attribute, get_variable_dimension_names
     32   use fms2_io_mod,       only: get_variable_num_dimensions
     33   use fms_io_mod,        only: restart_file_type, fms_io_register_restart_field=>register_restart_field
     34   use fms_io_mod,        only: query_initialized, restore_state
     35   use time_manager_mod,  only: time_type
     36   use diag_manager_mod,  only: register_diag_field, send_data
     37   use data_override_mod, only: data_override
     38   use mpp_domains_mod,   only: domain2D, mpp_redistribute
     39   use mpp_mod,           only: mpp_error, FATAL, mpp_chksum
     40 
     41 
     42   implicit none
     43   private
     44 
     45 
     46 ! Include variable "version" to be written to log file.
     47 # 1 "../include/file_version.h" 1 
     48 ! -*-f90-*-
     49 !***********************************************************************
     50 !*                   GNU Lesser General Public License
     51 !*
     52 !* This file is part of the GFDL Flexible Modeling System (FMS).
     53 !*
     54 !* FMS is free software: you can redistribute it and/or modify it under
     55 !* the terms of the GNU Lesser General Public License as published by
     56 !* the Free Software Foundation, either version 3 of the License, or (at
     57 !* your option) any later version.

Page 2           Source Listing                  COUPLER_TYPES_INIT
2021-06-01 08:55                                 ../include/file_version.h

     58 !*
     59 !* FMS is distributed in the hope that it will be useful, but WITHOUT
     60 !* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
     61 !* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
     62 !* for more details.
     63 !*
     64 !* You should have received a copy of the GNU Lesser General Public
     65 !* License along with FMS.  If not, see <http://www.gnu.org/licenses/>.
     66 !***********************************************************************
     67 
     68 # 23
     69 
     70   character(len=*), parameter :: version = 'unknown'
     71 
     72 # 47 "coupler_types.F90" 2 
     73 
     74   public coupler_types_init
     75   public coupler_type_copy, coupler_type_spawn, coupler_type_set_diags
     76   public coupler_type_write_chksums, coupler_type_send_data, coupler_type_data_override
     77   public coupler_type_register_restarts, coupler_type_restore_state
     78   public coupler_type_increment_data, coupler_type_rescale_data
     79   public coupler_type_copy_data, coupler_type_redistribute_data
     80   public coupler_type_destructor, coupler_type_initialized
     81   public coupler_type_extract_data, coupler_type_set_data
     82 
     83   public coupler_type_copy_1d_2d
     84   public coupler_type_copy_1d_3d
     85 
     86   character(len=*), parameter :: mod_name = 'coupler_types_mod'
     87 
     88 !       3-d fields
     89   type, public :: coupler_3d_values_type
     90     character(len=48)       :: name = ' '  !< The diagnostic name for this array
     91     real, pointer, contiguous, dimension(:,:,:) :: values => NULL() !< The pointer to the
     92 !! array of values for this field; this
     93 !! should be changed to allocatable
     94     logical                 :: mean = .true. !< mean
     95     logical                 :: override = .false. !< override
     96     integer                 :: id_diag = 0 !< The diagnostic id for this array
     97     character(len=128)      :: long_name = ' ' !< The diagnostic long_name for this array
     98     character(len=128)      :: units = ' ' !< The units for this array
     99     integer                 :: id_rest = 0 !< The id of this array in the restart field
    100     logical                 :: may_init = .true. !< If true, there is an internal method
    101 !! that can be used to initialize this field
    102 !! if it can not be read from a restart file
    103   end type coupler_3d_values_type
    104 
    105   type, public :: coupler_3d_field_type
    106     character(len=48)                 :: name = ' ' !< name
    107     integer                           :: num_fields = 0 !< num_fields
    108     type(coupler_3d_values_type), pointer, dimension(:) :: field => NULL() !< field
    109     character(len=128)                :: flux_type = ' ' !< flux_type
    110     character(len=128)                :: implementation = ' ' !< implementation
    111     real, pointer, dimension(:)       :: param => NULL() !< param
    112     logical, pointer, dimension(:)    :: flag => NULL() !< flag
    113     integer                           :: atm_tr_index = 0 !< atm_tr_index
    114     character(len=128)                :: ice_restart_file = ' ' !< ice_restart_file

Page 3           Source Listing                  COUPLER_TYPES_INIT
2021-06-01 08:55                                 coupler_types.F90

    115     character(len=128)                :: ocean_restart_file = ' ' !< ocean_restart_file
    116     type(restart_file_type), pointer  :: rest_type => NULL() !< A pointer to the restart_file_type
    117 !! that is used for this field.
    118     type(FmsNetcdfDomainFile_t), pointer :: fms2_io_rest_type => NULL() !< A pointer to the restart_file_type
    119 !! That is used for this field
    120     logical                           :: use_atm_pressure !< use_atm_pressure
    121     logical                           :: use_10m_wind_speed !< use_10m_wind_speed
    122     logical                           :: pass_through_ice !< pass_through_ice
    123     real                              :: mol_wt = 0.0 !< mol_wt
    124   end type coupler_3d_field_type
    125 
    126   type, public :: coupler_3d_bc_type
    127     integer                                            :: num_bcs = 0  !< The number of boundary condition fields
    128     type(coupler_3d_field_type), dimension(:), pointer :: bc => NULL() !< A pointer to the array of boundary condition field
    128 s
    129     logical    :: set = .false.       !< If true, this type has been initialized
    130     integer    :: isd, isc, iec, ied  !< The i-direction data and computational domain index ranges for this type
    131     integer    :: jsd, jsc, jec, jed  !< The j-direction data and computational domain index ranges for this type
    132     integer    :: ks, ke              !< The k-direction index ranges for this type
    133   end type coupler_3d_bc_type
    134 
    135 
    136 ! 2-d fields
    137   type, public    :: coupler_2d_values_type
    138     character(len=48)       :: name = ' '  !< The diagnostic name for this array
    139     real, pointer, contiguous, dimension(:,:) :: values => NULL() !< The pointer to the
    140 !! array of values for this field; this
    141 !! should be changed to allocatable
    142     logical                 :: mean = .true. !< mean
    143     logical                 :: override = .false. !< override
    144     integer                 :: id_diag = 0 !< The diagnostic id for this array
    145     character(len=128)      :: long_name = ' ' !< The diagnostic long_name for this array
    146     character(len=128)      :: units = ' ' !< The units for this array
    147     integer                 :: id_rest = 0 !< The id of this array in the restart field
    148     logical                 :: may_init = .true. !< If true, there is an internal method
    149 !! that can be used to initialize this field
    150 !! if it can not be read from a restart file
    151   end type coupler_2d_values_type
    152 
    153   type, public    :: coupler_2d_field_type
    154     character(len=48)                 :: name = ' ' !< name
    155     integer                           :: num_fields = 0 !< num_fields
    156     type(coupler_2d_values_type), pointer, dimension(:)   :: field => NULL() !< field
    157     character(len=128)                :: flux_type = ' ' !< flux_type
    158     character(len=128)                :: implementation = ' ' !< implementation
    159     real, pointer, dimension(:)       :: param => NULL() !< param
    160     logical, pointer, dimension(:)    :: flag => NULL() !< flag
    161     integer                           :: atm_tr_index = 0 !< atm_tr_index
    162     character(len=128)                :: ice_restart_file = ' ' !< ice_restart_file
    163     character(len=128)                :: ocean_restart_file = ' ' !< ocean_restart_file
    164     type(restart_file_type), pointer  :: rest_type => NULL() !< A pointer to the restart_file_type
    165 !! that is used for this field.
    166     type(FmsNetcdfDomainFile_t), pointer :: fms2_io_rest_type => NULL() !< A pointer to the restart_file_type
    167 !! That is used for this field
    168     logical                           :: use_atm_pressure !< use_atm_pressure
    169     logical                           :: use_10m_wind_speed !< use_10m_wind_speed
    170     logical                           :: pass_through_ice !< pass_through_ice

Page 4           Source Listing                  COUPLER_TYPES_INIT
2021-06-01 08:55                                 coupler_types.F90

    171     real                              :: mol_wt = 0.0 !< mol_wt
    172   end type coupler_2d_field_type
    173 
    174   type, public    :: coupler_2d_bc_type
    175     integer                                            :: num_bcs = 0  !< The number of boundary condition fields
    176     type(coupler_2d_field_type), dimension(:), pointer :: bc => NULL() !< A pointer to the array of boundary condition field
    176 s
    177     logical    :: set = .false.       !< If true, this type has been initialized
    178     integer    :: isd, isc, iec, ied  !< The i-direction data and computational domain index ranges for this type
    179     integer    :: jsd, jsc, jec, jed  !< The j-direction data and computational domain index ranges for this type
    180   end type coupler_2d_bc_type
    181 
    182 ! 1-d fields
    183   type, public    :: coupler_1d_values_type
    184     character(len=48)           :: name = ' '  !< The diagnostic name for this array
    185     real, pointer, dimension(:) :: values => NULL() !< The pointer to the array of values
    186     logical                     :: mean = .true. !< mean
    187     logical                     :: override = .false. !< override
    188     integer                     :: id_diag = 0 !< The diagnostic id for this array
    189     character(len=128)          :: long_name = ' ' !< The diagnostic long_name for this array
    190     character(len=128)          :: units = ' ' !< The units for this array
    191     logical                     :: may_init = .true. !< If true, there is an internal method
    192 !! that can be used to initialize this field
    193 !! if it can not be read from a restart file
    194   end type coupler_1d_values_type
    195 
    196   type, public    :: coupler_1d_field_type
    197     character(len=48)              :: name = ' ' !< name
    198     integer                        :: num_fields = 0 !< num_fields
    199     type(coupler_1d_values_type), pointer, dimension(:)   :: field => NULL() !< field
    200     character(len=128)             :: flux_type = ' ' !< flux_type
    201     character(len=128)             :: implementation = ' ' !< implementation
    202     real, pointer, dimension(:)    :: param => NULL() !< param
    203     logical, pointer, dimension(:) :: flag => NULL() !< flag
    204     integer                        :: atm_tr_index = 0 !< atm_tr_index
    205     character(len=128)             :: ice_restart_file = ' ' !< ice_restart_file
    206     character(len=128)             :: ocean_restart_file = ' ' !< ocean_restart_file
    207     logical                        :: use_atm_pressure !< use_atm_pressure
    208     logical                        :: use_10m_wind_speed !< use_10m_wind_speed
    209     logical                        :: pass_through_ice !< pass_through_ice
    210     real                           :: mol_wt = 0.0 !< mol_wt
    211   end type coupler_1d_field_type
    212 
    213   type, public    :: coupler_1d_bc_type
    214     integer                                            :: num_bcs = 0  !< The number of boundary condition fields
    215     type(coupler_1d_field_type), dimension(:), pointer :: bc => NULL() !< A pointer to the array of boundary condition field
    215 s
    216     logical    :: set = .false.       !< If true, this type has been initialized
    217   end type coupler_1d_bc_type
    218 
    219 
    220 ! The following public parameters can help in selecting the sub-elements of a
    221 ! coupler type.  There are duplicate values because different boundary
    222 ! conditions have different sub-elements.
    223 ! Note: These should be parameters, but doing so would break openMP directives.
    224   integer, public :: ind_pcair = 1 !< The index of the atmospheric concentration
    225   integer, public :: ind_u10 = 2   !< The index of the 10 m wind speed

Page 5           Source Listing                  COUPLER_TYPES_INIT
2021-06-01 08:55                                 coupler_types.F90

    226   integer, public :: ind_psurf = 3 !< The index of the surface atmospheric pressure
    227   integer, public :: ind_alpha = 1 !< The index of the solubility array for a tracer
    228   integer, public :: ind_csurf = 2 !< The index of the ocean surface concentration
    229   integer, public :: ind_sc_no = 3 !< The index for the Schmidt number for a tracer flux
    230   integer, public :: ind_flux = 1  !< The index for the tracer flux
    231   integer, public :: ind_deltap= 2 !< The index for ocean-air gas partial pressure change
    232   integer, public :: ind_kw = 3    !< The index for the piston velocity
    233   integer, public :: ind_flux0 = 4 !< The index for the piston velocity
    234   integer, public :: ind_deposition = 1 !< The index for the atmospheric deposition flux
    235   integer, public :: ind_runoff = 1 !< The index for a runoff flux
    236 
    237 ! Interface definitions for overloaded routines
    238 
    239 !> @brief This is the interface to spawn one coupler_bc_type into another and then
    240 !! register diagnostics associated with the new type.
    241   interface  coupler_type_copy
    242     module procedure coupler_type_copy_1d_2d, coupler_type_copy_1d_3d
    243     module procedure coupler_type_copy_2d_2d, coupler_type_copy_2d_3d
    244     module procedure coupler_type_copy_3d_2d, coupler_type_copy_3d_3d
    245   end interface coupler_type_copy
    246 
    247 !> @brief This is the interface to spawn one coupler_bc_type into another.
    248   interface  coupler_type_spawn
    249     module procedure CT_spawn_1d_2d, CT_spawn_2d_2d, CT_spawn_3d_2d
    250     module procedure CT_spawn_1d_3d, CT_spawn_2d_3d, CT_spawn_3d_3d
    251   end interface coupler_type_spawn
    252 
    253 !> @brief This is the interface to copy the field data from one coupler_bc_type
    254 !! to another of the same rank, size and decomposition.
    255   interface coupler_type_copy_data
    256     module procedure CT_copy_data_2d, CT_copy_data_3d, CT_copy_data_2d_3d
    257   end interface coupler_type_copy_data
    258 
    259 !> @brief This is the interface to redistribute the field data from one coupler_bc_type
    260 !! to another of the same rank and global size, but a different decomposition.
    261   interface coupler_type_redistribute_data
    262     module procedure CT_redistribute_data_2d, CT_redistribute_data_3d
    263   end interface coupler_type_redistribute_data
    264 
    265 !> @brief This is the interface to rescale the field data in a coupler_bc_type.
    266   interface coupler_type_rescale_data
    267     module procedure CT_rescale_data_2d, CT_rescale_data_3d
    268   end interface coupler_type_rescale_data
    269 
    270 !> @brief This is the interface to increment the field data from one coupler_bc_type
    271 !! with the data from another.  Both must have the same horizontal size and
    272 !! decomposition, but a 2d type may be incremented by a 2d or 3d type
    273   interface coupler_type_increment_data
    274     module procedure CT_increment_data_2d_2d, CT_increment_data_3d_3d, CT_increment_data_2d_3d
    275   end interface coupler_type_increment_data
    276 
    277 !> @brief This is the interface to extract a field in a coupler_bc_type into an array.
    278   interface coupler_type_extract_data
    279     module procedure CT_extract_data_2d, CT_extract_data_3d, CT_extract_data_3d_2d
    280   end interface coupler_type_extract_data
    281 
    282 !> @brief This is the interface to set a field in a coupler_bc_type from an array.

Page 6           Source Listing                  COUPLER_TYPES_INIT
2021-06-01 08:55                                 coupler_types.F90

    283   interface coupler_type_set_data
    284     module procedure CT_set_data_2d, CT_set_data_3d, CT_set_data_2d_3d
    285   end interface coupler_type_set_data
    286 
    287 !> @brief This is the interface to set diagnostics for the arrays in a coupler_bc_type.
    288   interface coupler_type_set_diags
    289     module procedure CT_set_diags_2d, CT_set_diags_3d
    290   end interface coupler_type_set_diags
    291 
    292 !> @brief This is the interface to write out checksums for the elements of a coupler_bc_type.
    293   interface coupler_type_write_chksums
    294     module procedure CT_write_chksums_2d, CT_write_chksums_3d
    295   end interface coupler_type_write_chksums
    296 
    297 !> @brief This is the interface to write out diagnostics of the arrays in a coupler_bc_type.
    298   interface coupler_type_send_data
    299     module procedure CT_send_data_2d, CT_send_data_3d
    300   end interface coupler_type_send_data
    301 
    302 !> @brief This is the interface to override the values of the arrays in a coupler_bc_type.
    303   interface coupler_type_data_override
    304     module procedure CT_data_override_2d, CT_data_override_3d
    305   end interface coupler_type_data_override
    306 
    307 !> @brief This is the interface to register the fields in a coupler_bc_type to be saved
    308 !! in restart files.
    309   interface coupler_type_register_restarts
    310     module procedure mpp_io_CT_register_restarts_2d, mpp_io_CT_register_restarts_3d
    311     module procedure mpp_io_CT_register_restarts_to_file_2d, mpp_io_CT_register_restarts_to_file_3d
    312 
    313     module procedure CT_register_restarts_2d, CT_register_restarts_3d
    314   end interface coupler_type_register_restarts
    315 
    316 !> @brief This is the interface to read in the fields in a coupler_bc_type that have
    317 !! been saved in restart files.
    318   interface coupler_type_restore_state
    319     module procedure mpp_io_CT_restore_state_2d, mpp_io_CT_restore_state_3d
    320     module procedure CT_restore_state_2d, CT_restore_state_3d
    321   end interface coupler_type_restore_state
    322 
    323 !> @brief This function interface indicates whether a coupler_bc_type has been initialized.
    324   interface coupler_type_initialized
    325     module procedure CT_initialized_1d, CT_initialized_2d, CT_initialized_3d
    326   end interface coupler_type_initialized
    327 
    328 !> @brief This is the interface to deallocate any data associated with a coupler_bc_type.
    329   interface coupler_type_destructor
    330     module procedure CT_destructor_1d, CT_destructor_2d, CT_destructor_3d
    331   end interface coupler_type_destructor
    332 
    333 contains
    334 
    335 !> @brief Initialize the coupler types
    336   subroutine coupler_types_init
    337 
    338     logical, save   :: module_is_initialized = .false.
    339 

Page 7           Source Listing                  COUPLER_TYPES_INIT
2021-06-01 08:55                                 coupler_types.F90

    340 ! Return if already intialized
    341     if (module_is_initialized) then
    342       return
    343     endif
    344 
    345 ! Write out the version of the file to the log file.
    346     call write_version_number(trim(mod_name), version)
    347 
    348     module_is_initialized = .true.
    349 
    350     return
    351   end subroutine  coupler_types_init  !}


ENTRY POINTS

  Name                                                
                                                      
 coupler_types_mod_mp_coupler_types_init_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 COUPLER_TYPES_INIT         Subr   336                                                                                              
 MODULE_IS_INITIALIZED      Local  338      L(4)            4           scalar   SAVE             338,341,348                       
 MOD_NAME                   Param  346      CHAR            17          scalar                    346                               
 TRIM                       Func   346                                  scalar                    346                               
 VERSION                    Param  346      CHAR            7           scalar                    346                               
 WRITE_VERSION_NUMBER       Subr   346                                           PRIV             26,346                            

Page 8           Source Listing                  COUPLER_TYPES_INIT
2021-06-01 08:55                                 coupler_types.F90

    352 
    353 
    354 !> @brief Copy fields from one coupler type to another. 1-D to 2-D version for generic coupler_type_copy.
    355 !!
    356 !! @throw FATAL, "Number of output fields exceeds zero"
    357   subroutine coupler_type_copy_1d_2d(var_in, var_out, is, ie, js, je,&
    358       & diag_name, axes, time, suffix)
    359     type(coupler_1d_bc_type), intent(in)    :: var_in !< variable to copy information from
    360     type(coupler_2d_bc_type), intent(inout) :: var_out !< variable to copy information to
    361     integer, intent(in)                     :: is !< lower bound of first dimension
    362     integer, intent(in)                     :: ie !< upper bound of first dimension
    363     integer, intent(in)                     :: js !< lower bound of second dimension
    364     integer, intent(in)                     :: je !< upper bound of second dimension
    365     character(len=*), intent(in)            :: diag_name !< name for diagnostic file--if blank, then don't register the fiel
    365 ds
    366     integer, dimension(:), intent(in)       :: axes !< array of axes identifiers for diagnostic variable registration
    367     type(time_type), intent(in)             :: time !< model time variable for registering diagnostic field
    368     character(len=*), intent(in), optional  :: suffix !< optional suffix to make the name identifier unique
    369 
    370     character(len=*), parameter :: error_header =&
    371         & '==>Error from coupler_types_mod (coupler_type_copy_1d_2d):'
    372     character(len=400)      :: error_msg
    373     integer                 :: m, n
    374 
    375     if (var_out%num_bcs > 0) then
    376 ! It is an error if the number of output fields exceeds zero, because it means this
    377 ! type has already been populated.
    378       call mpp_error(FATAL, trim(error_header) // ' Number of output fields exceeds zero')
    379     endif
    380 
    381     if (var_in%num_bcs >= 0)&
    382         & call CT_spawn_1d_2d(var_in, var_out, (/ is, is, ie, ie /), (/ js, js, je, je /), suffix)
    383 
    384     if ((var_out%num_bcs > 0) .and. (diag_name .ne. ' '))&
    385         & call CT_set_diags_2d(var_out, diag_name, axes, time)
    386   end subroutine  coupler_type_copy_1d_2d

Page 9           Source Listing                  COUPLER_TYPE_COPY_1D_2D
2021-06-01 08:55 Entry Points                    coupler_types.F90



ENTRY POINTS

  Name                                                     
                                                           
 coupler_types_mod_mp_coupler_type_copy_1d_2d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 AXES                       Dummy  358      I(4)            4     1     1        ARG,IN           385                               
 COUPLER_1D_BC_TYPE         Type   359                      88          scalar                    217,359,394,573,668,3952,3975     
 COUPLER_2D_BC_TYPE         Type   360                      120         scalar                    180,360,429,430,463,499,574,772,77
                                                                                                  3,867,970,1170,1171,1367,1465,1467
                                                                                                  ,1648,1841,1842,2070,2203,2636,303
                                                                                                  4,3087,3123,3324,3380,3603,3669,38
                                                                                                  76,3906,3960,3995                 
 COUPLER_TYPE_COPY_1D_2D    Subr   357                                                                                              
 DIAG_NAME                  Dummy  358      CHAR                        scalar   ARG,IN           384,385                           
 ERROR_HEADER               Param  370      CHAR            58          scalar                    378                               
 ERROR_MSG                  Local  372      CHAR            400         scalar                                                      
 FATAL                      Param  378      I(4)            4           scalar   PRIV             39,378,414,448,483,517,552,595,597
                                                                                                  ,604,608,615,632,648,692,694,702,7
                                                                                                  06,715,719,736,751,794,796,803,807
                                                                                                  ,814,831,846,891,893,901,905,909,9
                                                                                                  17,934,949,991,993,1000,1004,1011,
                                                                                                  1028,1043,1088,1090,1097,1101,1105
                                                                                                  ,1113,1130,1145,1186,1188,1192,120
                                                                                                  8,1210,1212,1214,1216,1218,1283,12
                                                                                                  85,1289,1305,1307,1309,1311,1313,1
                                                                                                  315,1317,1388,1390,1394,1410,1412,
                                                                                                  1414,1416,1418,1420,1501,1503,1515
                                                                                                  ,1592,1594,1606,1668,1670,1674,169
                                                                                                  0,1692,1758,1760,1764,1780,1782,18
                                                                                                  68,1871,1875,1891,1893,1895,1897,1
                                                                                                  899,1901,1977,1979,1983,1999,2001,
                                                                                                  2003,2005,2007,2009,2011,2097,2099
                                                                                                  ,2103,2119,2121,2123,2125,2127,212
                                                                                                  9,2131,2140,2149,2238,2240,2243,22
                                                                                                  45,2252,2257,2260,2262,2267,2276,2
                                                                                                  285,2290,2293,2295,2300,2309,2375,
                                                                                                  2377,2380,2382,2389,2394,2397,2399
                                                                                                  ,2404,2413,2422,2427,2430,2432,243
                                                                                                  7,2446,2454,2518,2520,2523,2525,25
                                                                                                  32,2537,2540,2542,2547,2556,2565,2
                                                                                                  570,2573,2575,2580,2589,2598,2660,
                                                                                                  2662,2665,2667,2674,2679,2682,2684
                                                                                                  ,2689,2698,2707,2712,2715,2717,272
                                                                                                  2,2731,2796,2798,2801,2803,2810,28
                                                                                                  15,2818,2820,2825,2834,2843,2848,2
                                                                                                  851,2853,2858,2867,2875,2936,2938,
                                                                                                  2941,2943,2950,2955,2958,2960,2965
                                                                                                  ,2974,2983,2988,2991,2993,2998,300
                                                                                                  7,3016,3044,3071,3643,3651,3658,37

Page 10          Source Listing                  COUPLER_TYPE_COPY_1D_2D
2021-06-01 08:55 Symbol Table                    coupler_types.F90

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
                                                                                                  13,3721,3728,3780,3788,3795,3851,3
                                                                                                  859,3866                          
 IE                         Dummy  357      I(4)            4           scalar   ARG,IN           382                               
 IS                         Dummy  357      I(4)            4           scalar   ARG,IN           382                               
 JE                         Dummy  357      I(4)            4           scalar   ARG,IN           382                               
 JS                         Dummy  357      I(4)            4           scalar   ARG,IN           382                               
 M                          Local  373      I(4)            4           scalar                                                      
 MPP_ERROR                  Local  378                                  scalar   PRIV             39,378,414,448,483,517,552,595,597
                                                                                                  ,604,608,615,632,648,692,694,702,7
                                                                                                  06,715,719,736,751,794,796,803,807
                                                                                                  ,814,831,846,891,893,901,905,909,9
                                                                                                  17,934,949,991,993,1000,1004,1011,
                                                                                                  1028,1043,1088,1090,1097,1101,1105
                                                                                                  ,1113,1130,1145,1186,1188,1192,120
                                                                                                  8,1210,1212,1214,1216,1218,1283,12
                                                                                                  85,1289,1305,1307,1309,1311,1313,1
                                                                                                  315,1317,1388,1390,1394,1410,1412,
                                                                                                  1414,1416,1418,1420,1501,1503,1515
                                                                                                  ,1592,1594,1606,1668,1670,1674,169
                                                                                                  0,1692,1758,1760,1764,1780,1782,18
                                                                                                  68,1871,1875,1891,1893,1895,1897,1
                                                                                                  899,1901,1977,1979,1983,1999,2001,
                                                                                                  2003,2005,2007,2009,2011,2097,2099
                                                                                                  ,2103,2119,2121,2123,2125,2127,212
                                                                                                  9,2131,2140,2149,2238,2240,2243,22
                                                                                                  45,2252,2257,2260,2262,2267,2276,2
                                                                                                  285,2290,2293,2295,2300,2309,2375,
                                                                                                  2377,2380,2382,2389,2394,2397,2399
                                                                                                  ,2404,2413,2422,2427,2430,2432,243
                                                                                                  7,2446,2454,2518,2520,2523,2525,25
                                                                                                  32,2537,2540,2542,2547,2556,2565,2
                                                                                                  570,2573,2575,2580,2589,2598,2660,
                                                                                                  2662,2665,2667,2674,2679,2682,2684
                                                                                                  ,2689,2698,2707,2712,2715,2717,272
                                                                                                  2,2731,2796,2798,2801,2803,2810,28
                                                                                                  15,2818,2820,2825,2834,2843,2848,2
                                                                                                  851,2853,2858,2867,2875,2936,2938,
                                                                                                  2941,2943,2950,2955,2958,2960,2965
                                                                                                  ,2974,2983,2988,2991,2993,2998,300
                                                                                                  7,3016,3044,3071,3643,3651,3658,37
                                                                                                  13,3721,3728,3780,3788,3795,3851,3
                                                                                                  859,3866                          
 MPP_ERROR_BASIC            Subr   378                                           PRIV             378,414,448,483,517,552,595,597,60
                                                                                                  4,608,615,632,648,692,694,702,706,
                                                                                                  715,719,736,751,794,796,803,807,81
                                                                                                  4,831,846,891,893,901,905,909,917,
                                                                                                  934,949,991,993,1000,1004,1011,102
                                                                                                  8,1043,1088,1090,1097,1101,1105,11
                                                                                                  13,1130,1145,1186,1188,1192,1208,1
                                                                                                  210,1212,1214,1216,1218,1283,1285,
                                                                                                  1289,1305,1307,1309,1311,1313,1315
                                                                                                  ,1317,1388,1390,1394,1410,1412,141
                                                                                                  4,1416,1418,1420,1501,1503,1515,15
                                                                                                  92,1594,1606,1668,1670,1674,1690,1
                                                                                                  692,1758,1760,1764,1780,1782,1868,

Page 11          Source Listing                  COUPLER_TYPE_COPY_1D_2D
2021-06-01 08:55 Symbol Table                    coupler_types.F90

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
                                                                                                  1871,1875,1891,1893,1895,1897,1899
                                                                                                  ,1901,1977,1979,1983,1999,2001,200
                                                                                                  3,2005,2007,2009,2011,2097,2099,21
                                                                                                  03,2119,2121,2123,2125,2127,2129,2
                                                                                                  131,2140,2149,2238,2240,2243,2245,
                                                                                                  2252,2257,2260,2262,2267,2276,2285
                                                                                                  ,2290,2293,2295,2300,2309,2375,237
                                                                                                  7,2380,2382,2389,2394,2397,2399,24
                                                                                                  04,2413,2422,2427,2430,2432,2437,2
                                                                                                  446,2454,2518,2520,2523,2525,2532,
                                                                                                  2537,2540,2542,2547,2556,2565,2570
                                                                                                  ,2573,2575,2580,2589,2598,2660,266
                                                                                                  2,2665,2667,2674,2679,2682,2684,26
                                                                                                  89,2698,2707,2712,2715,2717,2722,2
                                                                                                  731,2796,2798,2801,2803,2810,2815,
                                                                                                  2818,2820,2825,2834,2843,2848,2851
                                                                                                  ,2853,2858,2867,2875,2936,2938,294
                                                                                                  1,2943,2950,2955,2958,2960,2965,29
                                                                                                  74,2983,2988,2991,2993,2998,3007,3
                                                                                                  016,3044,3071,3643,3651,3658,3713,
                                                                                                  3721,3728,3780,3788,3795,3851,3859
                                                                                                  ,3866                             
 N                          Local  373      I(4)            4           scalar                                                      
 SUFFIX                     Dummy  358      CHAR                        scalar   ARG,IN           382                               
 TIME                       Dummy  358      TIME_TYPE       16          scalar   ARG,IN           385                               
 TIME_TYPE                  Type   367                                  scalar   PRIV             35,367,403,437,472,506,541,3037,30
                                                                                                  64,3088,3105,3877,3892            
 TRIM                       Func   378                                  scalar                    378                               
 VAR_IN                     Dummy  357      COUPLER_1D_BC_TYPE                                                                      
                                                            88          scalar   ARG,IN           381,382                           
 VAR_OUT                    Dummy  357      COUPLER_2D_BC_TYPE                                                                      
                                                            120         scalar   ARG,INOUT        375,382,384,385                   


TYPE COMPONENTS/COMMON VARIABLES

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 COUPLER_1D_BC_TYPE.NUM_BCS I(4)            4     0              scalar                    381,417,599,696,3979,3980,3989     
 COUPLER_2D_BC_TYPE.NUM_BCS I(4)            4     0              scalar                    375,384,445,451,454,486,514,523,59 
                                                                                           9,613,617,618,798,812,816,817,895, 
                                                                                           995,1009,1013,1014,1185,1199,1387, 
                                                                                           1401,1484,1492,1501,1511,1526,1537 
                                                                                           ,1667,1681,1867,1882,2242,2664,304 
                                                                                           8,3093,3131,3138,3156,3182,3330,33 
                                                                                           40,3357,3394,3625,3690,3881,3913,3 
                                                                                           999,4000,4009                      

Page 12          Source Listing                  COUPLER_TYPE_COPY_1D_2D
2021-06-01 08:55                                 coupler_types.F90

    387 
    388 !> @brief Copy fields from one coupler type to another. 1-D to 3-D version for generic coupler_type_copy.
    389 !!
    390 !!
    391 !! @throw FATAL, "Number of output fields is exceeds zero"
    392   subroutine coupler_type_copy_1d_3d(var_in, var_out, is, ie, js, je, kd,&
    393       & diag_name, axes, time, suffix)
    394     type(coupler_1d_bc_type), intent(in)    :: var_in !< variable to copy information from
    395     type(coupler_3d_bc_type), intent(inout) :: var_out !< variable to copy information to
    396     integer, intent(in)                     :: is !< lower bound of first dimension
    397     integer, intent(in)                     :: ie !< upper bound of first dimension
    398     integer, intent(in)                     :: js !< lower bound of second dimension
    399     integer, intent(in)                     :: je !< upper bound of second dimension
    400     integer, intent(in)                     :: kd !< third dimension
    401     character(len=*), intent(in)            :: diag_name !< name for diagnostic file--if blank, then don't register the fiel
    401 ds
    402     integer, dimension(:), intent(in)       :: axes !< array of axes identifiers for diagnostic variable registration
    403     type(time_type), intent(in)             :: time !< model time variable for registering diagnostic field
    404     character(len=*), intent(in), optional  :: suffix !< optional suffix to make the name identifier unique
    405 
    406     character(len=*), parameter :: error_header =&
    407         & '==>Error from coupler_types_mod (coupler_type_copy_1d_3d):'
    408     character(len=400)      :: error_msg
    409     integer                 :: m, n
    410 
    411     if (var_out%num_bcs > 0) then
    412 ! It is an error if the number of output fields exceeds zero, because it means this
    413 ! type has already been populated.
    414       call mpp_error(FATAL, trim(error_header) // ' Number of output fields exceeds zero')
    415     endif
    416 
    417     if (var_in%num_bcs >= 0)&
    418         & call CT_spawn_1d_3d(var_in, var_out,  (/ is, is, ie, ie /), (/ js, js, je, je /), (/1, kd/), suffix)
    419 
    420     if ((var_out%num_bcs > 0) .and. (diag_name .ne. ' '))&
    421         & call CT_set_diags_3d(var_out, diag_name, axes, time)
    422   end subroutine  coupler_type_copy_1d_3d

Page 13          Source Listing                  COUPLER_TYPE_COPY_1D_3D
2021-06-01 08:55 Entry Points                    coupler_types.F90



ENTRY POINTS

  Name                                                     
                                                           
 coupler_types_mod_mp_coupler_type_copy_1d_3d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 AXES                       Dummy  393      I(4)            4     1     1        ARG,IN           421                               
 COUPLER_3D_BC_TYPE         Type   395                      128         scalar                    133,395,464,498,532,533,669,868,96
                                                                                                  9,1064,1065,1265,1266,1368,1555,15
                                                                                                  57,1738,1950,1951,2065,2340,2483,2
                                                                                                  771,2911,3061,3104,3412,3520,3574,
                                                                                                  3739,3806,3891,3928,3968,4015     
 COUPLER_TYPE_COPY_1D_3D    Subr   392                                                                                              
 DIAG_NAME                  Dummy  393      CHAR                        scalar   ARG,IN           420,421                           
 ERROR_HEADER               Param  406      CHAR            58          scalar                    414                               
 ERROR_MSG                  Local  408      CHAR            400         scalar                                                      
 IE                         Dummy  392      I(4)            4           scalar   ARG,IN           418                               
 IS                         Dummy  392      I(4)            4           scalar   ARG,IN           418                               
 JE                         Dummy  392      I(4)            4           scalar   ARG,IN           418                               
 JS                         Dummy  392      I(4)            4           scalar   ARG,IN           418                               
 KD                         Dummy  392      I(4)            4           scalar   ARG,IN           418                               
 M                          Local  409      I(4)            4           scalar                                                      
 N                          Local  409      I(4)            4           scalar                                                      
 SUFFIX                     Dummy  393      CHAR                        scalar   ARG,IN           418                               
 TIME                       Dummy  393      TIME_TYPE       16          scalar   ARG,IN           421                               
 TRIM                       Func   414                                  scalar                    414                               
 VAR_IN                     Dummy  392      COUPLER_1D_BC_TYPE                                                                      
                                                            88          scalar   ARG,IN           417,418                           
 VAR_OUT                    Dummy  392      COUPLER_3D_BC_TYPE                                                                      
                                                            128         scalar   ARG,INOUT        411,418,420,421                   


TYPE COMPONENTS/COMMON VARIABLES

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 COUPLER_3D_BC_TYPE.NUM_BCS I(4)            4     0              scalar                    411,420,480,489,520,549,555,558,69 
                                                                                           6,712,721,722,895,915,919,920,995, 
                                                                                           1092,1111,1115,1116,1282,1296,1575 
                                                                                           ,1583,1592,1602,1617,1628,1757,177 
                                                                                           1,1976,1990,2096,2110,2379,2522,28 
                                                                                           00,2940,3075,3110,3420,3427,3447,3 
                                                                                           478,3526,3536,3553,3588,3761,3827, 
                                                                                           3896,3935,4019,4020,4029           

Page 14          Source Listing                  COUPLER_TYPE_COPY_1D_3D
2021-06-01 08:55                                 coupler_types.F90

    423 
    424 !> @brief Copy fields from one coupler type to another. 2-D to 2-D version for generic coupler_type_copy.
    425 !!
    426 !! @throw FATAL, "Number of output fields is exceeds zero"
    427   subroutine coupler_type_copy_2d_2d(var_in, var_out, is, ie, js, je,&
    428       & diag_name, axes, time, suffix)
    429     type(coupler_2d_bc_type), intent(in)    :: var_in !< variable to copy information from
    430     type(coupler_2d_bc_type), intent(inout) :: var_out !< variable to copy information to
    431     integer, intent(in)                     :: is !< lower bound of first dimension
    432     integer, intent(in)                     :: ie !< upper bound of first dimension
    433     integer, intent(in)                     :: js !< lower bound of second dimension
    434     integer, intent(in)                     :: je !< upper bound of second dimension
    435     character(len=*), intent(in)            :: diag_name !< name for diagnostic file--if blank, then don't register the fiel
    435 ds
    436     integer, dimension(:), intent(in)       :: axes !< array of axes identifiers for diagnostic variable registration
    437     type(time_type), intent(in)             :: time !< model time variable for registering diagnostic field
    438     character(len=*), intent(in), optional  :: suffix !< optional suffix to make the name identifier unique
    439 
    440     character(len=*), parameter :: error_header =&
    441         & '==>Error from coupler_types_mod (coupler_type_copy_2d_2d):'
    442     character(len=400)      :: error_msg
    443     integer                 :: m, n
    444 
    445     if (var_out%num_bcs > 0) then
    446 ! It is an error if the number of output fields exceeds zero, because it means this
    447 ! type has already been populated.
    448       call mpp_error(FATAL, trim(error_header) // ' Number of output fields exceeds zero')
    449     endif
    450 
    451     if (var_in%num_bcs >= 0)&
    452         & call CT_spawn_2d_2d(var_in, var_out, (/ is, is, ie, ie /), (/ js, js, je, je /), suffix)
    453 
    454     if ((var_out%num_bcs > 0) .and. (diag_name .ne. ' '))&
    455         & call CT_set_diags_2d(var_out, diag_name, axes, time)
    456   end subroutine  coupler_type_copy_2d_2d

Page 15          Source Listing                  COUPLER_TYPE_COPY_2D_2D
2021-06-01 08:55 Entry Points                    coupler_types.F90



ENTRY POINTS

  Name                                                     
                                                           
 coupler_types_mod_mp_coupler_type_copy_2d_2d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 AXES                       Dummy  428      I(4)            4     1     1        ARG,IN           455                               
 COUPLER_TYPE_COPY_2D_2D    Subr   427                                           PRIV                                               
 DIAG_NAME                  Dummy  428      CHAR                        scalar   ARG,IN           454,455                           
 ERROR_HEADER               Param  440      CHAR            58          scalar                    448                               
 ERROR_MSG                  Local  442      CHAR            400         scalar                                                      
 IE                         Dummy  427      I(4)            4           scalar   ARG,IN           452                               
 IS                         Dummy  427      I(4)            4           scalar   ARG,IN           452                               
 JE                         Dummy  427      I(4)            4           scalar   ARG,IN           452                               
 JS                         Dummy  427      I(4)            4           scalar   ARG,IN           452                               
 M                          Local  443      I(4)            4           scalar                                                      
 N                          Local  443      I(4)            4           scalar                                                      
 SUFFIX                     Dummy  428      CHAR                        scalar   ARG,IN           452                               
 TIME                       Dummy  428      TIME_TYPE       16          scalar   ARG,IN           455                               
 TRIM                       Func   448                                  scalar                    448                               
 VAR_IN                     Dummy  427      COUPLER_2D_BC_TYPE                                                                      
                                                            120         scalar   ARG,IN           451,452                           
 VAR_OUT                    Dummy  427      COUPLER_2D_BC_TYPE                                                                      
                                                            120         scalar   ARG,INOUT        445,452,454,455                   

Page 16          Source Listing                  COUPLER_TYPE_COPY_2D_2D
2021-06-01 08:55                                 coupler_types.F90

    457 
    458 !> @brief Copy fields from one coupler type to another. 2-D to 3-D version for generic coupler_type_copy.
    459 !!
    460 !! @throw FATAL, "Number of output fields is exceeds zero"
    461   subroutine coupler_type_copy_2d_3d(var_in, var_out, is, ie, js, je, kd,&
    462       & diag_name, axes, time, suffix)
    463     type(coupler_2d_bc_type), intent(in)    :: var_in !< variable to copy information from
    464     type(coupler_3d_bc_type), intent(inout) :: var_out !< variable to copy information to
    465     integer, intent(in)                     :: is !< lower bound of first dimension
    466     integer, intent(in)                     :: ie !< upper bound of first dimension
    467     integer, intent(in)                     :: js !< lower bound of second dimension
    468     integer, intent(in)                     :: je !< upper bound of second dimension
    469     integer, intent(in)                     :: kd !< third dimension
    470     character(len=*), intent(in)            :: diag_name !< name for diagnostic file--if blank, then don't register the fiel
    470 ds
    471     integer, dimension(:), intent(in)       :: axes !< array of axes identifiers for diagnostic variable registration
    472     type(time_type), intent(in)             :: time !< model time variable for registering diagnostic field
    473     character(len=*), intent(in), optional  :: suffix !< optional suffix to make the name identifier unique
    474 
    475     character(len=*), parameter :: error_header =&
    476         & '==>Error from coupler_types_mod (coupler_type_copy_2d_3d):'
    477     character(len=400)      :: error_msg
    478     integer                 :: m, n
    479 
    480     if (var_out%num_bcs > 0) then
    481 ! It is an error if the number of output fields exceeds zero, because it means this
    482 ! type has already been populated.
    483       call mpp_error(FATAL, trim(error_header) // ' Number of output fields exceeds zero')
    484     endif
    485 
    486     if (var_in%num_bcs >= 0)&
    487         & call CT_spawn_2d_3d(var_in, var_out,  (/ is, is, ie, ie /), (/ js, js, je, je /), (/1, kd/), suffix)
    488 
    489     if ((var_out%num_bcs > 0) .and. (diag_name .ne. ' '))&
    490         & call CT_set_diags_3d(var_out, diag_name, axes, time)
    491   end subroutine  coupler_type_copy_2d_3d

Page 17          Source Listing                  COUPLER_TYPE_COPY_2D_3D
2021-06-01 08:55 Entry Points                    coupler_types.F90



ENTRY POINTS

  Name                                                     
                                                           
 coupler_types_mod_mp_coupler_type_copy_2d_3d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 AXES                       Dummy  462      I(4)            4     1     1        ARG,IN           490                               
 COUPLER_TYPE_COPY_2D_3D    Subr   461                                           PRIV                                               
 DIAG_NAME                  Dummy  462      CHAR                        scalar   ARG,IN           489,490                           
 ERROR_HEADER               Param  475      CHAR            58          scalar                    483                               
 ERROR_MSG                  Local  477      CHAR            400         scalar                                                      
 IE                         Dummy  461      I(4)            4           scalar   ARG,IN           487                               
 IS                         Dummy  461      I(4)            4           scalar   ARG,IN           487                               
 JE                         Dummy  461      I(4)            4           scalar   ARG,IN           487                               
 JS                         Dummy  461      I(4)            4           scalar   ARG,IN           487                               
 KD                         Dummy  461      I(4)            4           scalar   ARG,IN           487                               
 M                          Local  478      I(4)            4           scalar                                                      
 N                          Local  478      I(4)            4           scalar                                                      
 SUFFIX                     Dummy  462      CHAR                        scalar   ARG,IN           487                               
 TIME                       Dummy  462      TIME_TYPE       16          scalar   ARG,IN           490                               
 TRIM                       Func   483                                  scalar                    483                               
 VAR_IN                     Dummy  461      COUPLER_2D_BC_TYPE                                                                      
                                                            120         scalar   ARG,IN           486,487                           
 VAR_OUT                    Dummy  461      COUPLER_3D_BC_TYPE                                                                      
                                                            128         scalar   ARG,INOUT        480,487,489,490                   

Page 18          Source Listing                  COUPLER_TYPE_COPY_2D_3D
2021-06-01 08:55                                 coupler_types.F90

    492 
    493 !> @brief Copy fields from one coupler type to another. 3-D to 2-D version for generic coupler_type_copy.
    494 !!
    495 !! @throw FATAL, "Number of output fields is exceeds zero"
    496   subroutine coupler_type_copy_3d_2d(var_in, var_out, is, ie, js, je,&
    497       & diag_name, axes, time, suffix)
    498     type(coupler_3d_bc_type), intent(in)    :: var_in !< variable to copy information from
    499     type(coupler_2d_bc_type), intent(inout) :: var_out !< variable to copy information to
    500     integer, intent(in)                     :: is !< lower bound of first dimension
    501     integer, intent(in)                     :: ie !< upper bound of first dimension
    502     integer, intent(in)                     :: js !< lower bound of second dimension
    503     integer, intent(in)                     :: je !< upper bound of second dimension
    504     character(len=*), intent(in)            :: diag_name !< name for diagnostic file--if blank, then don't register the fiel
    504 ds
    505     integer, dimension(:), intent(in)       :: axes !< array of axes identifiers for diagnostic variable registration
    506     type(time_type), intent(in)             :: time !< model time variable for registering diagnostic field
    507     character(len=*), intent(in), optional  :: suffix !< optional suffix to make the name identifier unique
    508 
    509     character(len=*), parameter :: error_header =&
    510         & '==>Error from coupler_types_mod (coupler_type_copy_3d_2d):'
    511     character(len=400)      :: error_msg
    512     integer                 :: m, n
    513 
    514     if (var_out%num_bcs > 0) then
    515 ! It is an error if the number of output fields exceeds zero, because it means this
    516 ! type has already been populated.
    517       call mpp_error(FATAL, trim(error_header) // ' Number of output fields exceeds zero')
    518     endif
    519 
    520     if (var_in%num_bcs >= 0)&
    521         & call CT_spawn_3d_2d(var_in, var_out, (/ is, is, ie, ie /), (/ js, js, je, je /), suffix)
    522 
    523     if ((var_out%num_bcs > 0) .and. (diag_name .ne. ' '))&
    524         & call CT_set_diags_2d(var_out, diag_name, axes, time)
    525   end subroutine  coupler_type_copy_3d_2d

Page 19          Source Listing                  COUPLER_TYPE_COPY_3D_2D
2021-06-01 08:55 Entry Points                    coupler_types.F90



ENTRY POINTS

  Name                                                     
                                                           
 coupler_types_mod_mp_coupler_type_copy_3d_2d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 AXES                       Dummy  497      I(4)            4     1     1        ARG,IN           524                               
 COUPLER_TYPE_COPY_3D_2D    Subr   496                                           PRIV                                               
 DIAG_NAME                  Dummy  497      CHAR                        scalar   ARG,IN           523,524                           
 ERROR_HEADER               Param  509      CHAR            58          scalar                    517                               
 ERROR_MSG                  Local  511      CHAR            400         scalar                                                      
 IE                         Dummy  496      I(4)            4           scalar   ARG,IN           521                               
 IS                         Dummy  496      I(4)            4           scalar   ARG,IN           521                               
 JE                         Dummy  496      I(4)            4           scalar   ARG,IN           521                               
 JS                         Dummy  496      I(4)            4           scalar   ARG,IN           521                               
 M                          Local  512      I(4)            4           scalar                                                      
 N                          Local  512      I(4)            4           scalar                                                      
 SUFFIX                     Dummy  497      CHAR                        scalar   ARG,IN           521                               
 TIME                       Dummy  497      TIME_TYPE       16          scalar   ARG,IN           524                               
 TRIM                       Func   517                                  scalar                    517                               
 VAR_IN                     Dummy  496      COUPLER_3D_BC_TYPE                                                                      
                                                            128         scalar   ARG,IN           520,521                           
 VAR_OUT                    Dummy  496      COUPLER_2D_BC_TYPE                                                                      
                                                            120         scalar   ARG,INOUT        514,521,523,524                   

Page 20          Source Listing                  COUPLER_TYPE_COPY_3D_2D
2021-06-01 08:55                                 coupler_types.F90

    526 
    527 !> @brief Copy fields from one coupler type to another. 3-D to 3-D version for generic coupler_type_copy.
    528 !!
    529 !! @throw FATAL, "Number of output fields exceeds zero"
    530   subroutine coupler_type_copy_3d_3d(var_in, var_out, is, ie, js, je, kd,&
    531       & diag_name, axes, time, suffix)
    532     type(coupler_3d_bc_type), intent(in)    :: var_in !< variable to copy information from
    533     type(coupler_3d_bc_type), intent(inout) :: var_out !< variable to copy information to
    534     integer, intent(in)                     :: is !< lower bound of first dimension
    535     integer, intent(in)                     :: ie !< upper bound of first dimension
    536     integer, intent(in)                     :: js !< lower bound of second dimension
    537     integer, intent(in)                     :: je !< upper bound of second dimension
    538     integer, intent(in)                     :: kd !< third dimension
    539     character(len=*), intent(in)            :: diag_name !< name for diagnostic file--if blank, then don't register the fiel
    539 ds
    540     integer, dimension(:), intent(in)       :: axes !< array of axes identifiers for diagnostic variable registration
    541     type(time_type), intent(in)             :: time !< model time variable for registering diagnostic field
    542     character(len=*), intent(in), optional  :: suffix !< optional suffix to make the name identifier unique
    543 
    544     character(len=*), parameter :: error_header =&
    545         & '==>Error from coupler_types_mod (coupler_type_copy_3d_3d):'
    546     character(len=400)      :: error_msg
    547     integer                 :: m, n
    548 
    549     if (var_out%num_bcs > 0) then
    550 ! It is an error if the number of output fields exceeds zero, because it means this
    551 ! type has already been populated.
    552       call mpp_error(FATAL, trim(error_header) // ' Number of output fields exceeds zero')
    553     endif
    554 
    555     if (var_in%num_bcs >= 0)&
    556         & call CT_spawn_3d_3d(var_in, var_out,  (/ is, is, ie, ie /), (/ js, js, je, je /), (/1, kd/), suffix)
    557 
    558     if ((var_out%num_bcs > 0) .and. (diag_name .ne. ' '))&
    559         & call CT_set_diags_3d(var_out, diag_name, axes, time)
    560   end subroutine  coupler_type_copy_3d_3d

Page 21          Source Listing                  COUPLER_TYPE_COPY_3D_3D
2021-06-01 08:55 Entry Points                    coupler_types.F90



ENTRY POINTS

  Name                                                     
                                                           
 coupler_types_mod_mp_coupler_type_copy_3d_3d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 AXES                       Dummy  531      I(4)            4     1     1        ARG,IN           559                               
 COUPLER_TYPE_COPY_3D_3D    Subr   530                                           PRIV                                               
 DIAG_NAME                  Dummy  531      CHAR                        scalar   ARG,IN           558,559                           
 ERROR_HEADER               Param  544      CHAR            58          scalar                    552                               
 ERROR_MSG                  Local  546      CHAR            400         scalar                                                      
 IE                         Dummy  530      I(4)            4           scalar   ARG,IN           556                               
 IS                         Dummy  530      I(4)            4           scalar   ARG,IN           556                               
 JE                         Dummy  530      I(4)            4           scalar   ARG,IN           556                               
 JS                         Dummy  530      I(4)            4           scalar   ARG,IN           556                               
 KD                         Dummy  530      I(4)            4           scalar   ARG,IN           556                               
 M                          Local  547      I(4)            4           scalar                                                      
 N                          Local  547      I(4)            4           scalar                                                      
 SUFFIX                     Dummy  531      CHAR                        scalar   ARG,IN           556                               
 TIME                       Dummy  531      TIME_TYPE       16          scalar   ARG,IN           559                               
 TRIM                       Func   552                                  scalar                    552                               
 VAR_IN                     Dummy  530      COUPLER_3D_BC_TYPE                                                                      
                                                            128         scalar   ARG,IN           555,556                           
 VAR_OUT                    Dummy  530      COUPLER_3D_BC_TYPE                                                                      
                                                            128         scalar   ARG,INOUT        549,556,558,559                   

Page 22          Source Listing                  COUPLER_TYPE_COPY_3D_3D
2021-06-01 08:55                                 coupler_types.F90

    561 
    562 
    563 !> @brief Generate one coupler type using another as a template. 1-D to 2-D version for generic coupler_type_spawn.
    564 !!
    565 !! @throw FATAL, "The output type has already been initialized"
    566 !! @throw FATAL, "The parent type has not been initialized"
    567 !! @throw FATAL, "Disordered i-dimension index bound list"
    568 !! @throw FATAL, "Disordered j-dimension index bound list"
    569 !! @throw FATAL, "var%bc already assocated"
    570 !! @throw FATAL, "var%bc('n')%field already associated"
    571 !! @throw FATAL, "var%bc('n')%field('m')%values already associated"
    572   subroutine CT_spawn_1d_2d(var_in, var, idim, jdim, suffix, as_needed)
    573     type(coupler_1d_bc_type), intent(in)    :: var_in  !< structure from which to copy information
    574     type(coupler_2d_bc_type), intent(inout) :: var     !< structure into which to copy information
    575     integer, dimension(4),    intent(in)    :: idim    !< The data and computational domain extents of
    576 !! the first dimension in a non-decreasing list
    577     integer, dimension(4),    intent(in)    :: jdim    !< The data and computational domain extents of
    578 !! the second dimension in a non-decreasing list
    579     character(len=*), optional, intent(in)  :: suffix  !< optional suffix to make the name identifier unique
    580     logical,          optional, intent(in)  :: as_needed !< Only do the spawn if the target type (var)
    581 !! is not set and the parent type (var_in) is set.
    582 
    583     character(len=*), parameter :: error_header =&
    584         & '==>Error from coupler_types_mod (CT_spawn_1d_2d):'
    585     character(len=400)      :: error_msg
    586     integer                 :: m, n
    587 
    588     if (present(as_needed)) then
    589       if (as_needed) then
    590         if ((var%set) .or. (.not.var_in%set)) return
    591       endif
    592     endif
    593 
    594     if (var%set)&
    595         & call mpp_error(FATAL, trim(error_header) // ' The output type has already been initialized.')
    596     if (.not.var_in%set)&
    597         & call mpp_error(FATAL, trim(error_header) // ' The parent type has not been initialized.')
    598 
    599     var%num_bcs = var_in%num_bcs
    600     var%set = .true.
    601 
    602     if ((idim(1) > idim(2)) .or. (idim(3) > idim(4))) then
    603       write (error_msg, *) trim(error_header), ' Disordered i-dimension index bound list ', idim
    604       call mpp_error(FATAL, trim(error_msg))
    605     endif
    606     if ((jdim(1) > jdim(2)) .or. (jdim(3) > jdim(4))) then
    607       write (error_msg, *) trim(error_header), ' Disordered j-dimension index bound list  ', jdim
    608       call mpp_error(FATAL, trim(error_msg))
    609     endif
    610     var%isd = idim(1) ; var%isc = idim(2) ; var%iec = idim(3) ; var%ied = idim(4)
    611     var%jsd = jdim(1) ; var%jsc = jdim(2) ; var%jec = jdim(3) ; var%jed = jdim(4)
    612 
    613     if (var%num_bcs > 0) then
    614       if (associated(var%bc)) then
    615         call mpp_error(FATAL, trim(error_header) // ' var%bc already associated')
    616       endif
    617       allocate ( var%bc(var%num_bcs) )

Page 23          Source Listing                  CT_SPAWN_1D_2D
2021-06-01 08:55                                 coupler_types.F90

    618       do n = 1, var%num_bcs
    619         var%bc(n)%name = var_in%bc(n)%name
    620         var%bc(n)%atm_tr_index = var_in%bc(n)%atm_tr_index
    621         var%bc(n)%flux_type = var_in%bc(n)%flux_type
    622         var%bc(n)%implementation = var_in%bc(n)%implementation
    623         var%bc(n)%ice_restart_file = var_in%bc(n)%ice_restart_file
    624         var%bc(n)%ocean_restart_file = var_in%bc(n)%ocean_restart_file
    625         var%bc(n)%use_atm_pressure = var_in%bc(n)%use_atm_pressure
    626         var%bc(n)%use_10m_wind_speed = var_in%bc(n)%use_10m_wind_speed
    627         var%bc(n)%pass_through_ice = var_in%bc(n)%pass_through_ice
    628         var%bc(n)%mol_wt = var_in%bc(n)%mol_wt
    629         var%bc(n)%num_fields = var_in%bc(n)%num_fields
    630         if (associated(var%bc(n)%field)) then
    631           write (error_msg, *) trim(error_header), ' var%bc(', n, ')%field already associated'
    632           call mpp_error(FATAL, trim(error_msg))
    633         endif
    634         allocate ( var%bc(n)%field(var%bc(n)%num_fields) )
    635         do m = 1, var%bc(n)%num_fields
    636           if (present(suffix)) then
    637             var%bc(n)%field(m)%name = trim(var_in%bc(n)%field(m)%name) // trim(suffix)
    638           else
    639             var%bc(n)%field(m)%name = var_in%bc(n)%field(m)%name
    640           endif
    641           var%bc(n)%field(m)%long_name = var_in%bc(n)%field(m)%long_name
    642           var%bc(n)%field(m)%units = var_in%bc(n)%field(m)%units
    643           var%bc(n)%field(m)%may_init = var_in%bc(n)%field(m)%may_init
    644           var%bc(n)%field(m)%mean = var_in%bc(n)%field(m)%mean
    645           if (associated(var%bc(n)%field(m)%values)) then
    646             write (error_msg, *) trim(error_header),&
    647                 & ' var%bc(', n, ')%field(', m, ')%values already associated'
    648             call mpp_error(FATAL, trim(error_msg))
    649           endif
    650 ! Note that this may be allocating a zero-sized array, which is legal in Fortran.
    651           allocate ( var%bc(n)%field(m)%values(var%isd:var%ied,var%jsd:var%jed) )
    652           var%bc(n)%field(m)%values(:,:) = 0.0
    653         enddo
    654       enddo
    655     endif
    656   end subroutine  CT_spawn_1d_2d

Page 24          Source Listing                  CT_SPAWN_1D_2D
2021-06-01 08:55 Entry Points                    coupler_types.F90



ENTRY POINTS

  Name                                            
                                                  
 coupler_types_mod_mp_ct_spawn_1d_2d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ASSOCIATED                 Func   614                                  scalar                    614,630,645                       
 AS_NEEDED                  Dummy  572      L(4)            4           scalar   ARG,IN           588,589                           
 CT_SPAWN_1D_2D             Subr   572                                           PRIV             382                               
 ERROR_HEADER               Param  583      CHAR            49          scalar                    595,597,603,607,615,631,646       
 ERROR_MSG                  Local  585      CHAR            400         scalar                    603,604,607,608,631,632,646,648   
 IDIM                       Dummy  572      I(4)            4     1     4        ARG,IN           602,603,610                       
 JDIM                       Dummy  572      I(4)            4     1     4        ARG,IN           606,607,611                       
 M                          Local  586      I(4)            4           scalar                    635,637,639,641,642,643,644,645,64
                                                                                                  7,651,652                         
 N                          Local  586      I(4)            4           scalar                    618,619,620,621,622,623,624,625,62
                                                                                                  6,627,628,629,630,631,634,635,637,
                                                                                                  639,641,642,643,644,645,647,651,65
                                                                                                  2                                 
 PRESENT                    Func   588                                  scalar                    588,636                           
 SUFFIX                     Dummy  572      CHAR                        scalar   ARG,IN           636,637                           
 TRIM                       Func   595                                  scalar                    595,597,603,604,607,608,615,631,63
                                                                                                  2,637,646,648                     
 VAR                        Dummy  572      COUPLER_2D_BC_TYPE                                                                      
                                                            120         scalar   ARG,INOUT        590,594,599,600,610,611,613,614,61
                                                                                                  7,618,619,620,621,622,623,624,625,
                                                                                                  626,627,628,629,630,634,635,637,63
                                                                                                  9,641,642,643,644,645,651,652     
 VAR_IN                     Dummy  572      COUPLER_1D_BC_TYPE                                                                      
                                                            88          scalar   ARG,IN           590,596,599,619,620,621,622,623,62
                                                                                                  4,625,626,627,628,629,637,639,641,
                                                                                                  642,643,644                       


TYPE COMPONENTS/COMMON VARIABLES

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 COUPLER_1D_BC_TYPE.BC      RECORD          808   8        1     1        PTR              619,620,621,622,623,624,625,626,62 
                                                                                           7,628,629,637,639,641,642,643,644, 
                                                                                           723,724,725,726,727,728,729,730,73 
                                                                                           1,732,733,741,743,745,746,747,748, 
                                                                                           3981,3982,3984,3986                
 COUPLER_1D_BC_TYPE.SET     L(4)            4     80             scalar                    590,596,687,693,3954,3990          
 COUPLER_1D_FIELD_TYPE.ATM_TR_INDEX                                                                                        ...
                            I(4)            4     528            scalar                    620,724                            
 COUPLER_1D_FIELD_TYPE.FIELD                                                                                               ...
                            RECORD          392   56       1     1        PTR              637,639,641,642,643,644,741,743,74 
                                                                                           5,746,747,748,3982,3984            
 COUPLER_1D_FIELD_TYPE.FLUX_TYPE                                                                                           ...

Page 25          Source Listing                  CT_SPAWN_1D_2D
2021-06-01 08:55 Symbol Table                    coupler_types.F90

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
                            CHAR            128   128            scalar                    621,725                            
 COUPLER_1D_FIELD_TYPE.ICE_RESTART_FILE                                                                                    ...
                            CHAR            128   532            scalar                    623,727                            
 COUPLER_1D_FIELD_TYPE.IMPLEMENTATION                                                                                      ...
                            CHAR            128   256            scalar                    622,726                            
 COUPLER_1D_FIELD_TYPE.MOL_WT                                                                                              ...
                            R(8)            8     800            scalar                    628,732                            
 COUPLER_1D_FIELD_TYPE.NAME CHAR            48    0              scalar                    619,723                            
 COUPLER_1D_FIELD_TYPE.NUM_FIELDS                                                                                          ...
                            I(4)            4     48             scalar                    629,733,3981                       
 COUPLER_1D_FIELD_TYPE.OCEAN_RESTART_FILE                                                                                  ...
                            CHAR            128   660            scalar                    624,728                            
 COUPLER_1D_FIELD_TYPE.PASS_THROUGH_ICE                                                                                    ...
                            L(4)            4     796            scalar                    627,731                            
 COUPLER_1D_FIELD_TYPE.USE_10M_WIND_SPEED                                                                                  ...
                            L(4)            4     792            scalar                    626,730                            
 COUPLER_1D_FIELD_TYPE.USE_ATM_PRESSURE                                                                                    ...
                            L(4)            4     788            scalar                    625,729                            
 COUPLER_1D_VALUES_TYPE.LONG_NAME                                                                                          ...
                            CHAR            128   132            scalar                    641,745                            
 COUPLER_1D_VALUES_TYPE.MAY_INIT                                                                                           ...
                            L(4)            4     388            scalar                    643,747                            
 COUPLER_1D_VALUES_TYPE.MEAN                                                                                               ...
                            L(4)            4     120            scalar                    644,748                            
 COUPLER_1D_VALUES_TYPE.NAME                                                                                               ...
                            CHAR            48    0              scalar                    637,639,741,743                    
 COUPLER_1D_VALUES_TYPE.UNITS                                                                                              ...
                            CHAR            128   260            scalar                    642,746                            
 COUPLER_2D_BC_TYPE.BC      RECORD          832   8        1     1        PTR              614,617,619,620,621,622,623,624,62 
                                                                                           5,626,627,628,629,630,634,635,637, 
                                                                                           639,641,642,643,644,645,651,652,81 
                                                                                           3,816,818,819,820,821,822,823,824, 
                                                                                           825,826,827,828,829,833,834,836,83 
                                                                                           8,840,841,842,843,844,849,850,921, 
                                                                                           922,923,924,925,926,927,928,929,93 
                                                                                           0,931,939,941,943,944,945,946,1010 
                                                                                           ,1013,1015,1016,1017,1018,1019,102 
                                                                                           0,1021,1022,1023,1024,1025,1026,10 
                                                                                           30,1031,1033,1035,1037,1038,1039,1 
                                                                                           040,1041,1046,1047,1187,1189,1227, 
                                                                                           1229,1231,1234,1238,1241,1389,1391 
                                                                                           ,1428,1430,1432,1435,1447,1485,148 
                                                                                           6,1493,1494,1512,1513,1514,1517,15 
                                                                                           19,1520,1527,1528,1530,1538,1539,1 
                                                                                           542,1669,1671,1698,1700,1702,1705, 
                                                                                           1709,1714,1718,1723,1870,1872,1910 
                                                                                           ,1912,1914,1917,1921,1924,1925,217 
                                                                                           1,2175,2244,2246,2316,2666,2668,27 
                                                                                           38,3049,3050,3051,3052,3094,3095,3 
                                                                                           096,3157,3158,3159,3183,3185,3186, 
                                                                                           3191,3193,3195,3197,3199,3209,3210 
                                                                                           ,3341,3342,3343,3358,3360,3361,336 
                                                                                           6,3367,3368,3369,3370,3395,3397,33 
                                                                                           98,3399,3401,3402,3403,3628,3630,3 
                                                                                           631,3634,3641,3642,3646,3693,3695, 

Page 26          Source Listing                  CT_SPAWN_1D_2D
2021-06-01 08:55 Symbol Table                    coupler_types.F90

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
                                                                                           3696,3698,3700,3704,3711,3712,3716 
                                                                                           ,3882,3883,3914,3916,3918,3921,400 
                                                                                           1,4002,4004,4006                   
 COUPLER_2D_BC_TYPE.IEC     I(4)            4     92             scalar                    610,809,1006,1207,1211,1215,1240,1 
                                                                                           409,1413,1689,1713,1722,1890,1894, 
                                                                                           1898,1923,2118,2128,2133,2174,2237 
                                                                                           ,2259,2263,2266,2272,2275,2315,265 
                                                                                           9,2681,2685,2688,2694,2697,2737,39 
                                                                                           21                                 
 COUPLER_2D_BC_TYPE.IED     I(4)            4     96             scalar                    610,651,809,849,1006,1046,1211,121 
                                                                                           5,1413,1689,1894,1898,2128,2135,22 
                                                                                           37,2659                            
 COUPLER_2D_BC_TYPE.ISC     I(4)            4     88             scalar                    610,809,1006,1207,1211,1215,1220,1 
                                                                                           240,1409,1413,1423,1689,1713,1722, 
                                                                                           1890,1894,1898,1903,1923,2118,2128 
                                                                                           ,2133,2134,2138,2152,2174,2237,225 
                                                                                           9,2263,2266,2270,2272,2275,2278,23 
                                                                                           15,2659,2681,2685,2688,2692,2694,2 
                                                                                           697,2700,2737,3921                 
 COUPLER_2D_BC_TYPE.ISD     I(4)            4     84             scalar                    610,651,809,849,1006,1046,1211,121 
                                                                                           5,1413,1689,1894,1898,2128,2135,21 
                                                                                           36,2237,2659                       
 COUPLER_2D_BC_TYPE.JEC     I(4)            4     108            scalar                    611,810,1007,1209,1213,1217,1239,1 
                                                                                           411,1415,1691,1712,1721,1892,1896, 
                                                                                           1900,1922,2120,2130,2142,2173,2239 
                                                                                           ,2292,2296,2299,2305,2308,2314,266 
                                                                                           1,2714,2718,2721,2727,2730,2736,39 
                                                                                           21                                 
 COUPLER_2D_BC_TYPE.JED     I(4)            4     112            scalar                    611,651,810,849,1007,1046,1213,121 
                                                                                           7,1415,1691,1896,1900,2130,2144,22 
                                                                                           39,2661                            
 COUPLER_2D_BC_TYPE.JSC     I(4)            4     104            scalar                    611,810,1007,1209,1213,1217,1221,1 
                                                                                           239,1411,1415,1424,1691,1712,1721, 
                                                                                           1892,1896,1900,1904,1922,2120,2130 
                                                                                           ,2142,2143,2147,2153,2173,2239,229 
                                                                                           2,2296,2299,2303,2305,2308,2311,23 
                                                                                           14,2661,2714,2718,2721,2725,2727,2 
                                                                                           730,2733,2736,3921                 
 COUPLER_2D_BC_TYPE.JSD     I(4)            4     100            scalar                    611,651,810,849,1007,1046,1213,121 
                                                                                           7,1415,1691,1896,1900,2130,2144,21 
                                                                                           45,2239,2661                       
 COUPLER_2D_BC_TYPE.SET     L(4)            4     80             scalar                    590,594,600,789,793,795,799,886,89 
                                                                                           2,986,990,996,1479,1480,3962,4010  
 COUPLER_2D_FIELD_TYPE.ATM_TR_INDEX                                                                                        ...
                            I(4)            4     528            scalar                    620,819,922,1016                   
 COUPLER_2D_FIELD_TYPE.FIELD                                                                                               ...
                            RECORD          424   56       1     1        PTR              630,634,637,639,641,642,643,644,64 
                                                                                           5,651,652,829,833,836,838,840,841, 
                                                                                           842,843,844,849,850,939,941,943,94 
                                                                                           4,945,946,1026,1030,1033,1035,1037 
                                                                                           ,1038,1039,1040,1041,1046,1047,123 
                                                                                           8,1241,1447,1486,1494,1513,1514,15 
                                                                                           17,1519,1520,1528,1530,1539,1542,1 
                                                                                           709,1714,1718,1723,1921,1924,1925, 
                                                                                           2171,2175,2316,2738,3050,3051,3052 

Page 27          Source Listing                  CT_SPAWN_1D_2D
2021-06-01 08:55 Symbol Table                    coupler_types.F90

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
                                                                                           ,3095,3096,3195,3197,3199,3209,321 
                                                                                           0,3368,3369,3370,3399,3401,3402,34 
                                                                                           03,3631,3634,3695,3696,3698,3700,3 
                                                                                           704,3883,3916,3918,3921,4002,4004  
 COUPLER_2D_FIELD_TYPE.FLUX_TYPE                                                                                           ...
                            CHAR            128   128            scalar                    621,820,923,1017,1227,1229,1428,14 
                                                                                           30,1698,1700,1910,1912             
 COUPLER_2D_FIELD_TYPE.ICE_RESTART_FILE                                                                                    ...
                            CHAR            128   532            scalar                    623,822,925,1019,3158,3185,3342,33 
                                                                                           60                                 
 COUPLER_2D_FIELD_TYPE.IMPLEMENTATION                                                                                      ...
                            CHAR            128   256            scalar                    622,821,924,1018                   
 COUPLER_2D_FIELD_TYPE.MOL_WT                                                                                              ...
                            R(8)            8     824            scalar                    628,827,930,1024                   
 COUPLER_2D_FIELD_TYPE.NAME CHAR            48    0              scalar                    619,818,921,1015,1189,1391,1671,18 
                                                                                           72,2246,2668,3646,3716             
 COUPLER_2D_FIELD_TYPE.NUM_FIELDS                                                                                          ...
                            I(4)            4     48             scalar                    629,634,635,828,833,834,931,1025,1 
                                                                                           030,1031,1187,1234,1389,1435,1485, 
                                                                                           1493,1512,1527,1538,1669,1705,1870 
                                                                                           ,1917,2244,2666,3049,3094,3157,318 
                                                                                           3,3193,3341,3358,3367,3395,3398,36 
                                                                                           28,3641,3642,3693,3711,3712,3882,3 
                                                                                           914,4001                           
 COUPLER_2D_FIELD_TYPE.OCEAN_RESTART_FILE                                                                                  ...
                            CHAR            128   660            scalar                    624,823,926,1020,3159,3186,3343,33 
                                                                                           61                                 
 COUPLER_2D_FIELD_TYPE.PASS_THROUGH_ICE                                                                                    ...
                            L(4)            4     816            scalar                    627,826,929,1023,1231,1432,1702,19 
                                                                                           14                                 
 COUPLER_2D_FIELD_TYPE.USE_10M_WIND_SPEED                                                                                  ...
                            L(4)            4     812            scalar                    626,825,928,1022                   
 COUPLER_2D_FIELD_TYPE.USE_ATM_PRESSURE                                                                                    ...
                            L(4)            4     808            scalar                    625,824,927,1021                   
 COUPLER_2D_VALUES_TYPE.LONG_NAME                                                                                          ...
                            CHAR            128   156            scalar                    641,840,943,1037,3052              
 COUPLER_2D_VALUES_TYPE.MAY_INIT                                                                                           ...
                            L(4)            4     416            scalar                    643,842,945,1039,3210,3370,3403    
 COUPLER_2D_VALUES_TYPE.MEAN                                                                                               ...
                            L(4)            4     144            scalar                    644,843,946,1040                   
 COUPLER_2D_VALUES_TYPE.NAME                                                                                               ...
                            CHAR            48    0              scalar                    637,639,836,838,939,941,1033,1035, 
                                                                                           3051,3195,3197,3199,3209,3369,3399 
                                                                                           ,3631,3634,3704,3883,3916,3918     
 COUPLER_2D_VALUES_TYPE.UNITS                                                                                              ...
                            CHAR            128   284            scalar                    642,841,944,1038,3052              
 COUPLER_2D_VALUES_TYPE.VALUES                                                                                             ...
                            R(8)            8     48       2     1        PTR              645,651,652,844,849,850,1041,1046, 
                                                                                           1047,1238,1241,1447,1486,1494,1513 
                                                                                           ,1514,1517,1519,1520,1528,1530,153 
                                                                                           9,1542,1709,1714,1718,1723,1921,19 
                                                                                           24,1925,2171,2175,2316,2738,3096,3 
                                                                                           209,3369,3402,3883,3921,4002       

Page 28          Source Listing                  CT_SPAWN_1D_2D
2021-06-01 08:55                                 coupler_types.F90

    657 
    658 !> @brief Generate one coupler type using another as a template. 1-D to 3-D version for generic CT_spawn.
    659 !!
    660 !! @throw FATAL, "The output type has already been initialized"
    661 !! @throw FATAL, "The parent type has not been initialized"
    662 !! @throw FATAL, "Disordered i-dimension index bound list"
    663 !! @throw FATAL, "Disordered j-dimension index bound list"
    664 !! @throw FATAL, "var%bc already assocated"
    665 !! @throw FATAL, "var%bc('n')%field already associated"
    666 !! @throw FATAL, "var%bc('n')%field('m')%values already associated"
    667   subroutine CT_spawn_1d_3d(var_in, var, idim, jdim, kdim, suffix, as_needed)
    668     type(coupler_1d_bc_type), intent(in)    :: var_in  !< structure from which to copy information
    669     type(coupler_3d_bc_type), intent(inout) :: var     !< structure into which to copy information
    670     integer, dimension(4),    intent(in)    :: idim    !< The data and computational domain extents of
    671 !! the first dimension in a non-decreasing list
    672     integer, dimension(4),    intent(in)    :: jdim    !< The data and computational domain extents of
    673 !! the second dimension in a non-decreasing list
    674     integer, dimension(2),    intent(in)    :: kdim    !< The array extents of the third dimension in
    675 !! a non-decreasing list
    676     character(len=*), optional, intent(in)  :: suffix  !< optional suffix to make the name identifier unique
    677     logical,          optional, intent(in)  :: as_needed !< Only do the spawn if the target type (var)
    678 !! is not set and the parent type (var_in) is set.
    679 
    680     character(len=*), parameter :: error_header =&
    681         & '==>Error from coupler_types_mod (CT_spawn_1d_3d):'
    682     character(len=400)      :: error_msg
    683     integer                 :: m, n
    684 
    685     if (present(as_needed)) then
    686       if (as_needed) then
    687         if ((var%set) .or. (.not.var_in%set)) return
    688       endif
    689     endif
    690 
    691     if (var%set)&
    692         & call mpp_error(FATAL, trim(error_header) // ' The output type has already been initialized.')
    693     if (.not.var_in%set)&
    694         & call mpp_error(FATAL, trim(error_header) // ' The parent type has not been initialized.')
    695 
    696     var%num_bcs = var_in%num_bcs
    697     var%set = .true.
    698 
    699 ! Store the array extents that are to be used with this bc_type.
    700     if ((idim(1) > idim(2)) .or. (idim(3) > idim(4))) then
    701       write (error_msg, *) trim(error_header), ' Disordered i-dimension index bound list ', idim
    702       call mpp_error(FATAL, trim(error_msg))
    703     endif
    704     if ((jdim(1) > jdim(2)) .or. (jdim(3) > jdim(4))) then
    705       write (error_msg, *) trim(error_header), ' Disordered j-dimension index bound list  ', jdim
    706       call mpp_error(FATAL, trim(error_msg))
    707     endif
    708     var%isd = idim(1) ; var%isc = idim(2) ; var%iec = idim(3) ; var%ied = idim(4)
    709     var%jsd = jdim(1) ; var%jsc = jdim(2) ; var%jec = jdim(3) ; var%jed = jdim(4)
    710     var%ks  = kdim(1) ; var%ke  = kdim(2)
    711 
    712     if (var%num_bcs > 0) then
    713       if (kdim(1) > kdim(2)) then

Page 29          Source Listing                  CT_SPAWN_1D_3D
2021-06-01 08:55                                 coupler_types.F90

    714         write (error_msg, *) trim(error_header), ' Disordered k-dimension index bound list  ', kdim
    715         call mpp_error(FATAL, trim(error_msg))
    716       endif
    717 
    718       if (associated(var%bc)) then
    719         call mpp_error(FATAL, trim(error_header) // ' var%bc already associated')
    720       endif
    721       allocate ( var%bc(var%num_bcs) )
    722       do n = 1, var%num_bcs
    723         var%bc(n)%name = var_in%bc(n)%name
    724         var%bc(n)%atm_tr_index = var_in%bc(n)%atm_tr_index
    725         var%bc(n)%flux_type = var_in%bc(n)%flux_type
    726         var%bc(n)%implementation = var_in%bc(n)%implementation
    727         var%bc(n)%ice_restart_file = var_in%bc(n)%ice_restart_file
    728         var%bc(n)%ocean_restart_file = var_in%bc(n)%ocean_restart_file
    729         var%bc(n)%use_atm_pressure = var_in%bc(n)%use_atm_pressure
    730         var%bc(n)%use_10m_wind_speed = var_in%bc(n)%use_10m_wind_speed
    731         var%bc(n)%pass_through_ice = var_in%bc(n)%pass_through_ice
    732         var%bc(n)%mol_wt = var_in%bc(n)%mol_wt
    733         var%bc(n)%num_fields = var_in%bc(n)%num_fields
    734         if (associated(var%bc(n)%field)) then
    735           write (error_msg, *) trim(error_header), ' var%bc(', n, ')%field already associated'
    736           call mpp_error(FATAL, trim(error_msg))
    737         endif
    738         allocate ( var%bc(n)%field(var%bc(n)%num_fields) )
    739         do m = 1, var%bc(n)%num_fields
    740           if (present(suffix)) then
    741             var%bc(n)%field(m)%name = trim(var_in%bc(n)%field(m)%name) // trim(suffix)
    742           else
    743             var%bc(n)%field(m)%name = var_in%bc(n)%field(m)%name
    744           endif
    745           var%bc(n)%field(m)%long_name = var_in%bc(n)%field(m)%long_name
    746           var%bc(n)%field(m)%units = var_in%bc(n)%field(m)%units
    747           var%bc(n)%field(m)%may_init = var_in%bc(n)%field(m)%may_init
    748           var%bc(n)%field(m)%mean = var_in%bc(n)%field(m)%mean
    749           if (associated(var%bc(n)%field(m)%values)) then
    750             write (error_msg, *) trim(error_header), ' var%bc(', n, ')%field(', m, ')%values already associated'
    751             call mpp_error(FATAL, trim(error_msg))
    752           endif
    753 ! Note that this may be allocating a zero-sized array, which is legal in Fortran.
    754           allocate ( var%bc(n)%field(m)%values(var%isd:var%ied,var%jsd:var%jed,var%ks:var%ke) )
    755           var%bc(n)%field(m)%values(:,:,:) = 0.0
    756         enddo
    757       enddo
    758     endif
    759   end subroutine  CT_spawn_1d_3d

Page 30          Source Listing                  CT_SPAWN_1D_3D
2021-06-01 08:55 Entry Points                    coupler_types.F90



ENTRY POINTS

  Name                                            
                                                  
 coupler_types_mod_mp_ct_spawn_1d_3d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ASSOCIATED                 Func   718                                  scalar                    718,734,749                       
 AS_NEEDED                  Dummy  667      L(4)            4           scalar   ARG,IN           685,686                           
 CT_SPAWN_1D_3D             Subr   667                                           PRIV             418                               
 ERROR_HEADER               Param  680      CHAR            49          scalar                    692,694,701,705,714,719,735,750   
 ERROR_MSG                  Local  682      CHAR            400         scalar                    701,702,705,706,714,715,735,736,75
                                                                                                  0,751                             
 IDIM                       Dummy  667      I(4)            4     1     4        ARG,IN           700,701,708                       
 JDIM                       Dummy  667      I(4)            4     1     4        ARG,IN           704,705,709                       
 KDIM                       Dummy  667      I(4)            4     1     2        ARG,IN           710,713,714                       
 M                          Local  683      I(4)            4           scalar                    739,741,743,745,746,747,748,749,75
                                                                                                  0,754,755                         
 N                          Local  683      I(4)            4           scalar                    722,723,724,725,726,727,728,729,73
                                                                                                  0,731,732,733,734,735,738,739,741,
                                                                                                  743,745,746,747,748,749,750,754,75
                                                                                                  5                                 
 PRESENT                    Func   685                                  scalar                    685,740                           
 SUFFIX                     Dummy  667      CHAR                        scalar   ARG,IN           740,741                           
 TRIM                       Func   692                                  scalar                    692,694,701,702,705,706,714,715,71
                                                                                                  9,735,736,741,750,751             
 VAR                        Dummy  667      COUPLER_3D_BC_TYPE                                                                      
                                                            128         scalar   ARG,INOUT        687,691,696,697,708,709,710,712,71
                                                                                                  8,721,722,723,724,725,726,727,728,
                                                                                                  729,730,731,732,733,734,738,739,74
                                                                                                  1,743,745,746,747,748,749,754,755 
 VAR_IN                     Dummy  667      COUPLER_1D_BC_TYPE                                                                      
                                                            88          scalar   ARG,IN           687,693,696,723,724,725,726,727,72
                                                                                                  8,729,730,731,732,733,741,743,745,
                                                                                                  746,747,748                       


TYPE COMPONENTS/COMMON VARIABLES

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 COUPLER_3D_BC_TYPE.BC      RECORD          832   8        1     1        PTR              718,721,723,724,725,726,727,728,72 
                                                                                           9,730,731,732,733,734,738,739,741, 
                                                                                           743,745,746,747,748,749,754,755,91 
                                                                                           6,919,921,922,923,924,925,926,927, 
                                                                                           928,929,930,931,932,936,937,939,94 
                                                                                           1,943,944,945,946,947,952,953,1015 
                                                                                           ,1016,1017,1018,1019,1020,1021,102 
                                                                                           2,1023,1024,1025,1033,1035,1037,10 
                                                                                           38,1039,1040,1112,1115,1117,1118,1 
                                                                                           119,1120,1121,1122,1123,1124,1125, 

Page 31          Source Listing                  CT_SPAWN_1D_3D
2021-06-01 08:55 Symbol Table                    coupler_types.F90

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
                                                                                           1126,1127,1128,1132,1133,1135,1137 
                                                                                           ,1139,1140,1141,1142,1143,1149,115 
                                                                                           0,1284,1286,1327,1329,1331,1334,13 
                                                                                           38,1342,1439,1447,1576,1577,1584,1 
                                                                                           585,1603,1604,1605,1608,1610,1611, 
                                                                                           1618,1619,1621,1629,1630,1633,1759 
                                                                                           ,1761,1788,1790,1792,1795,1799,180 
                                                                                           5,1810,1816,1978,1980,2021,2023,20 
                                                                                           25,2028,2032,2036,2037,2098,2100,2 
                                                                                           160,2162,2164,2167,2176,2381,2383, 
                                                                                           2459,2524,2526,2605,2802,2804,2880 
                                                                                           ,2942,2944,3023,3076,3077,3078,307 
                                                                                           9,3111,3112,3113,3448,3449,3450,34 
                                                                                           79,3481,3482,3487,3489,3491,3493,3 
                                                                                           495,3506,3507,3537,3538,3539,3554, 
                                                                                           3555,3556,3561,3562,3563,3564,3565 
                                                                                           ,3589,3591,3592,3593,3595,3596,359 
                                                                                           7,3764,3766,3767,3770,3778,3779,37 
                                                                                           83,3830,3832,3833,3835,3837,3841,3 
                                                                                           849,3850,3854,3897,3898,3936,3938, 
                                                                                           3940,3943,4021,4022,4024,4026      
 COUPLER_3D_BC_TYPE.IEC     I(4)            4     92             scalar                    708,911,1107,1304,1310,1314,1341,1 
                                                                                           409,1417,1446,1779,1804,1815,1998, 
                                                                                           2004,2008,2035,2118,2124,2374,2396 
                                                                                           ,2400,2403,2409,2412,2458,2517,253 
                                                                                           9,2543,2546,2552,2555,2604,2795,28 
                                                                                           17,2821,2824,2830,2833,2879,2935,2 
                                                                                           957,2961,2964,2970,2973,3022,3943  
 COUPLER_3D_BC_TYPE.IED     I(4)            4     96             scalar                    708,754,911,952,1107,1149,1310,131 
                                                                                           4,1417,1779,2004,2008,2124,2137,23 
                                                                                           74,2517,2795,2935                  
 COUPLER_3D_BC_TYPE.ISC     I(4)            4     88             scalar                    708,911,1107,1304,1310,1314,1319,1 
                                                                                           341,1409,1417,1423,1446,1779,1804, 
                                                                                           1815,1998,2004,2008,2013,2035,2118 
                                                                                           ,2124,2138,2152,2374,2396,2400,240 
                                                                                           3,2407,2409,2412,2415,2458,2517,25 
                                                                                           39,2543,2546,2550,2552,2555,2558,2 
                                                                                           604,2795,2817,2821,2824,2828,2830, 
                                                                                           2833,2836,2879,2935,2957,2961,2964 
                                                                                           ,2968,2970,2973,2976,3022,3943     
 COUPLER_3D_BC_TYPE.ISD     I(4)            4     84             scalar                    708,754,911,952,1107,1149,1310,131 
                                                                                           4,1417,1779,2004,2008,2124,2137,21 
                                                                                           38,2374,2517,2795,2935             
 COUPLER_3D_BC_TYPE.JEC     I(4)            4     108            scalar                    709,912,1108,1306,1312,1316,1340,1 
                                                                                           411,1419,1445,1781,1803,1814,2000, 
                                                                                           2006,2010,2034,2120,2126,2376,2429 
                                                                                           ,2433,2436,2442,2445,2457,2519,257 
                                                                                           2,2576,2579,2585,2588,2603,2797,28 
                                                                                           50,2854,2857,2863,2866,2878,2937,2 
                                                                                           990,2994,2997,3003,3006,3021,3943  
 COUPLER_3D_BC_TYPE.JED     I(4)            4     112            scalar                    709,754,912,952,1108,1149,1312,131 
                                                                                           6,1419,1781,2006,2010,2126,2146,23 
                                                                                           76,2519,2797,2937                  
 COUPLER_3D_BC_TYPE.JSC     I(4)            4     104            scalar                    709,912,1108,1306,1312,1316,1320,1 
                                                                                           340,1411,1419,1424,1445,1781,1803, 

Page 32          Source Listing                  CT_SPAWN_1D_3D
2021-06-01 08:55 Symbol Table                    coupler_types.F90

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
                                                                                           1814,2000,2006,2010,2014,2034,2120 
                                                                                           ,2126,2147,2153,2376,2429,2433,243 
                                                                                           6,2440,2442,2445,2448,2457,2519,25 
                                                                                           72,2576,2579,2583,2585,2588,2591,2 
                                                                                           603,2797,2850,2854,2857,2861,2863, 
                                                                                           2866,2869,2878,2937,2990,2994,2997 
                                                                                           ,3001,3003,3006,3009,3021,3943     
 COUPLER_3D_BC_TYPE.JSD     I(4)            4     100            scalar                    709,754,912,952,1108,1149,1312,131 
                                                                                           6,1419,1781,2006,2010,2126,2146,21 
                                                                                           47,2376,2519,2797,2937             
 COUPLER_3D_BC_TYPE.KE      I(4)            4     120            scalar                    710,754,913,952,1109,1149,1308,133 
                                                                                           9,1442,1802,1813,2002,2033,2122,21 
                                                                                           72,2451,2453,2594,2597,2602,2872,2 
                                                                                           874,3012,3015,3020,3444            
 COUPLER_3D_BC_TYPE.KS      I(4)            4     116            scalar                    710,754,913,952,1109,1149,1308,132 
                                                                                           1,1339,1440,1802,1813,2002,2015,20 
                                                                                           33,2122,2154,2172,2451,2453,2594,2 
                                                                                           597,2600,2602,2872,2874,3012,3015, 
                                                                                           3018,3020,3444                     
 COUPLER_3D_BC_TYPE.SET     L(4)            4     80             scalar                    687,691,697,886,890,896,986,992,10 
                                                                                           83,1087,1089,1093,1569,1570,3970,4 
                                                                                           030                                
 COUPLER_3D_FIELD_TYPE.ATM_TR_INDEX                                                                                        ...
                            I(4)            4     528            scalar                    724,922,1016,1118                  
 COUPLER_3D_FIELD_TYPE.FIELD                                                                                               ...
                            RECORD          448   56       1     1        PTR              734,738,741,743,745,746,747,748,74 
                                                                                           9,754,755,932,936,939,941,943,944, 
                                                                                           945,946,947,952,953,1033,1035,1037 
                                                                                           ,1038,1039,1040,1128,1132,1135,113 
                                                                                           7,1139,1140,1141,1142,1143,1149,11 
                                                                                           50,1338,1342,1439,1447,1577,1585,1 
                                                                                           604,1605,1608,1610,1611,1619,1621, 
                                                                                           1630,1633,1799,1805,1810,1816,2032 
                                                                                           ,2036,2037,2176,2459,2605,2880,302 
                                                                                           3,3077,3078,3079,3112,3113,3491,34 
                                                                                           93,3495,3506,3507,3563,3564,3565,3 
                                                                                           593,3595,3596,3597,3767,3770,3832, 
                                                                                           3833,3835,3837,3841,3898,3938,3940 
                                                                                           ,3943,4022,4024                    
 COUPLER_3D_FIELD_TYPE.FLUX_TYPE                                                                                           ...
                            CHAR            128   128            scalar                    725,923,1017,1119,1327,1329,1788,1 
                                                                                           790,2021,2023,2160,2162            
 COUPLER_3D_FIELD_TYPE.ICE_RESTART_FILE                                                                                    ...
                            CHAR            128   532            scalar                    727,925,1019,1121,3449,3481,3538,3 
                                                                                           555                                
 COUPLER_3D_FIELD_TYPE.IMPLEMENTATION                                                                                      ...
                            CHAR            128   256            scalar                    726,924,1018,1120                  
 COUPLER_3D_FIELD_TYPE.MOL_WT                                                                                              ...
                            R(8)            8     824            scalar                    732,930,1024,1126                  
 COUPLER_3D_FIELD_TYPE.NAME CHAR            48    0              scalar                    723,921,1015,1117,1286,1761,1980,2 
                                                                                           100,2383,2526,2804,2944,3783,3854  
 COUPLER_3D_FIELD_TYPE.NUM_FIELDS                                                                                          ...
                            I(4)            4     48             scalar                    733,738,739,931,936,937,1025,1127, 
                                                                                           1132,1133,1284,1334,1576,1584,1603 
                                                                                           ,1618,1629,1759,1795,1978,2028,209 

Page 33          Source Listing                  CT_SPAWN_1D_3D
2021-06-01 08:55 Symbol Table                    coupler_types.F90

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
                                                                                           8,2167,2381,2524,2802,2942,3076,31 
                                                                                           11,3448,3479,3489,3537,3554,3562,3 
                                                                                           589,3592,3764,3778,3779,3830,3849, 
                                                                                           3850,3897,3936,4021                
 COUPLER_3D_FIELD_TYPE.OCEAN_RESTART_FILE                                                                                  ...
                            CHAR            128   660            scalar                    728,926,1020,1122,3450,3482,3539,3 
                                                                                           556                                
 COUPLER_3D_FIELD_TYPE.PASS_THROUGH_ICE                                                                                    ...
                            L(4)            4     816            scalar                    731,929,1023,1125,1331,1792,2025,2 
                                                                                           164                                
 COUPLER_3D_FIELD_TYPE.USE_10M_WIND_SPEED                                                                                  ...
                            L(4)            4     812            scalar                    730,928,1022,1124                  
 COUPLER_3D_FIELD_TYPE.USE_ATM_PRESSURE                                                                                    ...
                            L(4)            4     808            scalar                    729,927,1021,1123                  
 COUPLER_3D_VALUES_TYPE.LONG_NAME                                                                                          ...
                            CHAR            128   180            scalar                    745,943,1037,1139,3079             
 COUPLER_3D_VALUES_TYPE.MAY_INIT                                                                                           ...
                            L(4)            4     440            scalar                    747,945,1039,1141,3507,3565,3597   
 COUPLER_3D_VALUES_TYPE.MEAN                                                                                               ...
                            L(4)            4     168            scalar                    748,946,1040,1142                  
 COUPLER_3D_VALUES_TYPE.NAME                                                                                               ...
                            CHAR            48    0              scalar                    741,743,939,941,1033,1035,1135,113 
                                                                                           7,3078,3491,3493,3495,3506,3564,35 
                                                                                           93,3767,3770,3841,3898,3938,3940   
 COUPLER_3D_VALUES_TYPE.UNITS                                                                                              ...
                            CHAR            128   308            scalar                    746,944,1038,1140,3079             
 COUPLER_3D_VALUES_TYPE.VALUES                                                                                             ...
                            R(8)            8     48       3     1        PTR              749,754,755,947,952,953,1143,1149, 
                                                                                           1150,1338,1342,1439,1447,1577,1585 
                                                                                           ,1604,1605,1608,1610,1611,1619,162 
                                                                                           1,1630,1633,1799,1805,1810,1816,20 
                                                                                           32,2036,2037,2176,2459,2605,2880,3 
                                                                                           023,3113,3506,3564,3596,3898,3943, 
                                                                                           4022                               

Page 34          Source Listing                  CT_SPAWN_1D_3D
2021-06-01 08:55                                 coupler_types.F90

    760 
    761 
    762 !> @brief Generate one coupler type using another as a template. 2-D to 2-D version for generic CT_spawn.
    763 !!
    764 !! @throw FATAL, "The output type has already been initialized"
    765 !! @throw FATAL, "The parent type has not been initialized"
    766 !! @throw FATAL, "Disordered i-dimension index bound list"
    767 !! @throw FATAL, "Disordered j-dimension index bound list"
    768 !! @throw FATAL, "var%bc already assocated"
    769 !! @throw FATAL, "var%bc('n')%field already associated"
    770 !! @throw FATAL, "var%bc('n')%field('m')%values already associated"
    771   subroutine CT_spawn_2d_2d(var_in, var, idim, jdim, suffix, as_needed)
    772     type(coupler_2d_bc_type), intent(in)    :: var_in  !< structure from which to copy information
    773     type(coupler_2d_bc_type), intent(inout) :: var     !< structure into which to copy information
    774     integer, dimension(4),    intent(in)    :: idim    !< The data and computational domain extents of
    775 !! the first dimension in a non-decreasing list
    776     integer, dimension(4),    intent(in)    :: jdim    !< The data and computational domain extents of
    777 !! the second dimension in a non-decreasing list
    778     character(len=*), optional, intent(in)  :: suffix  !< optional suffix to make the name identifier unique
    779     logical,          optional, intent(in)  :: as_needed !< Only do the spawn if the target type (var)
    780 !! is not set and the parent type (var_in) is set.
    781 
    782     character(len=*), parameter :: error_header =&
    783         & '==>Error from coupler_types_mod (CT_spawn_2d_2d):'
    784     character(len=400)      :: error_msg
    785     integer                 :: m, n
    786 
    787     if (present(as_needed)) then
    788       if (as_needed) then
    789         if ((var%set) .or. (.not.var_in%set)) return
    790       endif
    791     endif
    792 
    793     if (var%set)&
    794         & call mpp_error(FATAL, trim(error_header) // ' The output type has already been initialized.')
    795     if (.not.var_in%set)&
    796         & call mpp_error(FATAL, trim(error_header) // ' The parent type has not been initialized.')
    797 
    798     var%num_bcs = var_in%num_bcs
    799     var%set = .true.
    800 
    801     if ((idim(1) > idim(2)) .or. (idim(3) > idim(4))) then
    802       write (error_msg, *) trim(error_header), ' Disordered i-dimension index bound list ', idim
    803       call mpp_error(FATAL, trim(error_msg))
    804     endif
    805     if ((jdim(1) > jdim(2)) .or. (jdim(3) > jdim(4))) then
    806       write (error_msg, *) trim(error_header), ' Disordered j-dimension index bound list  ', jdim
    807       call mpp_error(FATAL, trim(error_msg))
    808     endif
    809     var%isd = idim(1) ; var%isc = idim(2) ; var%iec = idim(3) ; var%ied = idim(4)
    810     var%jsd = jdim(1) ; var%jsc = jdim(2) ; var%jec = jdim(3) ; var%jed = jdim(4)
    811 
    812     if (var%num_bcs > 0) then
    813       if (associated(var%bc)) then
    814         call mpp_error(FATAL, trim(error_header) // ' var%bc already associated')
    815       endif
    816       allocate ( var%bc(var%num_bcs) )

Page 35          Source Listing                  CT_SPAWN_2D_2D
2021-06-01 08:55                                 coupler_types.F90

    817       do n = 1, var%num_bcs
    818         var%bc(n)%name = var_in%bc(n)%name
    819         var%bc(n)%atm_tr_index = var_in%bc(n)%atm_tr_index
    820         var%bc(n)%flux_type = var_in%bc(n)%flux_type
    821         var%bc(n)%implementation = var_in%bc(n)%implementation
    822         var%bc(n)%ice_restart_file = var_in%bc(n)%ice_restart_file
    823         var%bc(n)%ocean_restart_file = var_in%bc(n)%ocean_restart_file
    824         var%bc(n)%use_atm_pressure = var_in%bc(n)%use_atm_pressure
    825         var%bc(n)%use_10m_wind_speed = var_in%bc(n)%use_10m_wind_speed
    826         var%bc(n)%pass_through_ice = var_in%bc(n)%pass_through_ice
    827         var%bc(n)%mol_wt = var_in%bc(n)%mol_wt
    828         var%bc(n)%num_fields = var_in%bc(n)%num_fields
    829         if (associated(var%bc(n)%field)) then
    830           write (error_msg, *) trim(error_header), ' var%bc(', n, ')%field already associated'
    831           call mpp_error(FATAL, trim(error_msg))
    832         endif
    833         allocate ( var%bc(n)%field(var%bc(n)%num_fields) )
    834         do m = 1, var%bc(n)%num_fields
    835           if (present(suffix)) then
    836             var%bc(n)%field(m)%name = trim(var_in%bc(n)%field(m)%name) // trim(suffix)
    837           else
    838             var%bc(n)%field(m)%name = var_in%bc(n)%field(m)%name
    839           endif
    840           var%bc(n)%field(m)%long_name = var_in%bc(n)%field(m)%long_name
    841           var%bc(n)%field(m)%units = var_in%bc(n)%field(m)%units
    842           var%bc(n)%field(m)%may_init = var_in%bc(n)%field(m)%may_init
    843           var%bc(n)%field(m)%mean = var_in%bc(n)%field(m)%mean
    844           if (associated(var%bc(n)%field(m)%values)) then
    845             write (error_msg, *) trim(error_header), ' var%bc(', n, ')%field(', m, ')%values already associated'
    846             call mpp_error(FATAL, trim(error_msg))
    847           endif
    848 ! Note that this may be allocating a zero-sized array, which is legal in Fortran.
    849           allocate ( var%bc(n)%field(m)%values(var%isd:var%ied,var%jsd:var%jed) )
    850           var%bc(n)%field(m)%values(:,:) = 0.0
    851         enddo
    852       enddo
    853     endif
    854   end subroutine  CT_spawn_2d_2d

Page 36          Source Listing                  CT_SPAWN_2D_2D
2021-06-01 08:55 Entry Points                    coupler_types.F90



ENTRY POINTS

  Name                                            
                                                  
 coupler_types_mod_mp_ct_spawn_2d_2d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ASSOCIATED                 Func   813                                  scalar                    813,829,844                       
 AS_NEEDED                  Dummy  771      L(4)            4           scalar   ARG,IN           787,788                           
 CT_SPAWN_2D_2D             Subr   771                                           PRIV             452                               
 ERROR_HEADER               Param  782      CHAR            49          scalar                    794,796,802,806,814,830,845       
 ERROR_MSG                  Local  784      CHAR            400         scalar                    802,803,806,807,830,831,845,846   
 IDIM                       Dummy  771      I(4)            4     1     4        ARG,IN           801,802,809                       
 JDIM                       Dummy  771      I(4)            4     1     4        ARG,IN           805,806,810                       
 M                          Local  785      I(4)            4           scalar                    834,836,838,840,841,842,843,844,84
                                                                                                  5,849,850                         
 N                          Local  785      I(4)            4           scalar                    817,818,819,820,821,822,823,824,82
                                                                                                  5,826,827,828,829,830,833,834,836,
                                                                                                  838,840,841,842,843,844,845,849,85
                                                                                                  0                                 
 PRESENT                    Func   787                                  scalar                    787,835                           
 SUFFIX                     Dummy  771      CHAR                        scalar   ARG,IN           835,836                           
 TRIM                       Func   794                                  scalar                    794,796,802,803,806,807,814,830,83
                                                                                                  1,836,845,846                     
 VAR                        Dummy  771      COUPLER_2D_BC_TYPE                                                                      
                                                            120         scalar   ARG,INOUT        789,793,798,799,809,810,812,813,81
                                                                                                  6,817,818,819,820,821,822,823,824,
                                                                                                  825,826,827,828,829,833,834,836,83
                                                                                                  8,840,841,842,843,844,849,850     
 VAR_IN                     Dummy  771      COUPLER_2D_BC_TYPE                                                                      
                                                            120         scalar   ARG,IN           789,795,798,818,819,820,821,822,82
                                                                                                  3,824,825,826,827,828,836,838,840,
                                                                                                  841,842,843                       

Page 37          Source Listing                  CT_SPAWN_2D_2D
2021-06-01 08:55                                 coupler_types.F90

    855 
    856 !> @brief Generate one coupler type using another as a template. 2-D to 3-D version for generic CT_spawn.
    857 !!
    858 !! @throw FATAL, "The output type has already been initialized"
    859 !! @throw FATAL, "The parent type has not been initialized"
    860 !! @throw FATAL, "Disordered i-dimension index bound list"
    861 !! @throw FATAL, "Disordered j-dimension index bound list"
    862 !! @throw FATAL, "Disordered k-dimension index bound list"
    863 !! @throw FATAL, "var%bc already assocated"
    864 !! @throw FATAL, "var%bc('n')%field already associated"
    865 !! @throw FATAL, "var%bc('n')%field('m')%values already associated"
    866   subroutine CT_spawn_2d_3d(var_in, var, idim, jdim, kdim, suffix, as_needed)
    867     type(coupler_2d_bc_type), intent(in)    :: var_in  !< structure from which to copy information
    868     type(coupler_3d_bc_type), intent(inout) :: var     !< structure into which to copy information
    869     integer, dimension(4),    intent(in)    :: idim    !< The data and computational domain extents of
    870 !! the first dimension in a non-decreasing list
    871     integer, dimension(4),    intent(in)    :: jdim    !< The data and computational domain extents of
    872 !! the second dimension in a non-decreasing list
    873     integer, dimension(2),    intent(in)    :: kdim    !< The array extents of the third dimension in
    874 !! a non-decreasing list
    875     character(len=*), optional, intent(in)  :: suffix  !< optional suffix to make the name identifier unique
    876     logical,          optional, intent(in)  :: as_needed !< Only do the spawn if the target type (var)
    877 !! is not set and the parent type (var_in) is set.
    878 
    879     character(len=*), parameter :: error_header =&
    880         & '==>Error from coupler_types_mod (CT_spawn_2d_3d):'
    881     character(len=400)      :: error_msg
    882     integer                 :: m, n
    883 
    884     if (present(as_needed)) then
    885       if (as_needed) then
    886         if ((var%set) .or. (.not.var_in%set)) return
    887       endif
    888     endif
    889 
    890     if (var%set)&
    891         & call mpp_error(FATAL, trim(error_header) // ' The output type has already been initialized.')
    892     if (.not.var_in%set)&
    893         & call mpp_error(FATAL, trim(error_header) // ' The parent type has not been initialized.')
    894 
    895     var%num_bcs = var_in%num_bcs
    896     var%set = .true.
    897 
    898 ! Store the array extents that are to be used with this bc_type.
    899     if ((idim(1) > idim(2)) .or. (idim(3) > idim(4))) then
    900       write (error_msg, *) trim(error_header), ' Disordered i-dimension index bound list ', idim
    901       call mpp_error(FATAL, trim(error_msg))
    902     endif
    903     if ((jdim(1) > jdim(2)) .or. (jdim(3) > jdim(4))) then
    904       write (error_msg, *) trim(error_header), ' Disordered j-dimension index bound list  ', jdim
    905       call mpp_error(FATAL, trim(error_msg))
    906     endif
    907     if (kdim(1) > kdim(2)) then
    908       write (error_msg, *) trim(error_header), ' Disordered k-dimension index bound list  ', kdim
    909       call mpp_error(FATAL, trim(error_msg))
    910     endif
    911     var%isd = idim(1) ; var%isc = idim(2) ; var%iec = idim(3) ; var%ied = idim(4)

Page 38          Source Listing                  CT_SPAWN_2D_3D
2021-06-01 08:55                                 coupler_types.F90

    912     var%jsd = jdim(1) ; var%jsc = jdim(2) ; var%jec = jdim(3) ; var%jed = jdim(4)
    913     var%ks  = kdim(1) ; var%ke = kdim(2)
    914 
    915     if (var%num_bcs > 0) then
    916       if (associated(var%bc)) then
    917         call mpp_error(FATAL, trim(error_header) // ' var%bc already associated')
    918       endif
    919       allocate ( var%bc(var%num_bcs) )
    920       do n = 1, var%num_bcs
    921         var%bc(n)%name = var_in%bc(n)%name
    922         var%bc(n)%atm_tr_index = var_in%bc(n)%atm_tr_index
    923         var%bc(n)%flux_type = var_in%bc(n)%flux_type
    924         var%bc(n)%implementation = var_in%bc(n)%implementation
    925         var%bc(n)%ice_restart_file = var_in%bc(n)%ice_restart_file
    926         var%bc(n)%ocean_restart_file = var_in%bc(n)%ocean_restart_file
    927         var%bc(n)%use_atm_pressure = var_in%bc(n)%use_atm_pressure
    928         var%bc(n)%use_10m_wind_speed = var_in%bc(n)%use_10m_wind_speed
    929         var%bc(n)%pass_through_ice = var_in%bc(n)%pass_through_ice
    930         var%bc(n)%mol_wt = var_in%bc(n)%mol_wt
    931         var%bc(n)%num_fields = var_in%bc(n)%num_fields
    932         if (associated(var%bc(n)%field)) then
    933           write (error_msg, *) trim(error_header), ' var%bc(', n, ')%field already associated'
    934           call mpp_error(FATAL, trim(error_msg))
    935         endif
    936         allocate ( var%bc(n)%field(var%bc(n)%num_fields) )
    937         do m = 1, var%bc(n)%num_fields
    938           if (present(suffix)) then
    939             var%bc(n)%field(m)%name = trim(var_in%bc(n)%field(m)%name) // trim(suffix)
    940           else
    941             var%bc(n)%field(m)%name = var_in%bc(n)%field(m)%name
    942           endif
    943           var%bc(n)%field(m)%long_name = var_in%bc(n)%field(m)%long_name
    944           var%bc(n)%field(m)%units = var_in%bc(n)%field(m)%units
    945           var%bc(n)%field(m)%may_init = var_in%bc(n)%field(m)%may_init
    946           var%bc(n)%field(m)%mean = var_in%bc(n)%field(m)%mean
    947           if (associated(var%bc(n)%field(m)%values)) then
    948             write (error_msg, *) trim(error_header), ' var%bc(', n, ')%field(', m, ')%values already associated'
    949             call mpp_error(FATAL, trim(error_msg))
    950           endif
    951 ! Note that this may be allocating a zero-sized array, which is legal in Fortran.
    952           allocate ( var%bc(n)%field(m)%values(var%isd:var%ied,var%jsd:var%jed,var%ks:var%ke) )
    953           var%bc(n)%field(m)%values(:,:,:) = 0.0
    954         enddo
    955       enddo
    956     endif
    957   end subroutine  CT_spawn_2d_3d

Page 39          Source Listing                  CT_SPAWN_2D_3D
2021-06-01 08:55 Entry Points                    coupler_types.F90



ENTRY POINTS

  Name                                            
                                                  
 coupler_types_mod_mp_ct_spawn_2d_3d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ASSOCIATED                 Func   916                                  scalar                    916,932,947                       
 AS_NEEDED                  Dummy  866      L(4)            4           scalar   ARG,IN           884,885                           
 CT_SPAWN_2D_3D             Subr   866                                           PRIV             487                               
 ERROR_HEADER               Param  879      CHAR            49          scalar                    891,893,900,904,908,917,933,948   
 ERROR_MSG                  Local  881      CHAR            400         scalar                    900,901,904,905,908,909,933,934,94
                                                                                                  8,949                             
 IDIM                       Dummy  866      I(4)            4     1     4        ARG,IN           899,900,911                       
 JDIM                       Dummy  866      I(4)            4     1     4        ARG,IN           903,904,912                       
 KDIM                       Dummy  866      I(4)            4     1     2        ARG,IN           907,908,913                       
 M                          Local  882      I(4)            4           scalar                    937,939,941,943,944,945,946,947,94
                                                                                                  8,952,953                         
 N                          Local  882      I(4)            4           scalar                    920,921,922,923,924,925,926,927,92
                                                                                                  8,929,930,931,932,933,936,937,939,
                                                                                                  941,943,944,945,946,947,948,952,95
                                                                                                  3                                 
 PRESENT                    Func   884                                  scalar                    884,938                           
 SUFFIX                     Dummy  866      CHAR                        scalar   ARG,IN           938,939                           
 TRIM                       Func   891                                  scalar                    891,893,900,901,904,905,908,909,91
                                                                                                  7,933,934,939,948,949             
 VAR                        Dummy  866      COUPLER_3D_BC_TYPE                                                                      
                                                            128         scalar   ARG,INOUT        886,890,895,896,911,912,913,915,91
                                                                                                  6,919,920,921,922,923,924,925,926,
                                                                                                  927,928,929,930,931,932,936,937,93
                                                                                                  9,941,943,944,945,946,947,952,953 
 VAR_IN                     Dummy  866      COUPLER_2D_BC_TYPE                                                                      
                                                            120         scalar   ARG,IN           886,892,895,921,922,923,924,925,92
                                                                                                  6,927,928,929,930,931,939,941,943,
                                                                                                  944,945,946                       

Page 40          Source Listing                  CT_SPAWN_2D_3D
2021-06-01 08:55                                 coupler_types.F90

    958 
    959 !> @brief Generate one coupler type using another as a template. 3-D to 2-D version for generic CT_spawn.
    960 !!
    961 !! @throw FATAL, "The output type has already been initialized"
    962 !! @throw FATAL, "The parent type has not been initialized"
    963 !! @throw FATAL, "Disordered i-dimension index bound list"
    964 !! @throw FATAL, "Disordered j-dimension index bound list"
    965 !! @throw FATAL, "var%bc already assocated"
    966 !! @throw FATAL, "var%bc('n')%field already associated"
    967 !! @throw FATAL, "var%bc('n')%field('m')%values already associated"
    968   subroutine CT_spawn_3d_2d(var_in, var, idim, jdim, suffix, as_needed)
    969     type(coupler_3d_bc_type), intent(in)    :: var_in  !< structure from which to copy information
    970     type(coupler_2d_bc_type), intent(inout) :: var     !< structure into which to copy information
    971     integer, dimension(4),    intent(in)    :: idim    !< The data and computational domain extents of
    972 !! the first dimension in a non-decreasing list
    973     integer, dimension(4),    intent(in)    :: jdim    !< The data and computational domain extents of
    974 !! the second dimension in a non-decreasing list
    975     character(len=*), optional, intent(in)  :: suffix  !< optional suffix to make the name identifier unique
    976     logical,          optional, intent(in)  :: as_needed !< Only do the spawn if the target type (var)
    977 !! is not set and the parent type (var_in) is set.
    978 
    979     character(len=*), parameter :: error_header =&
    980         & '==>Error from coupler_types_mod (CT_spawn_3d_2d):'
    981     character(len=400)      :: error_msg
    982     integer                 :: m, n
    983 
    984     if (present(as_needed)) then
    985       if (as_needed) then
    986         if ((var%set) .or. (.not.var_in%set)) return
    987       endif
    988     endif
    989 
    990     if (var%set)&
    991         & call mpp_error(FATAL, trim(error_header) // ' The output type has already been initialized.')
    992     if (.not.var_in%set)&
    993         & call mpp_error(FATAL, trim(error_header) // ' The parent type has not been initialized.')
    994 
    995     var%num_bcs = var_in%num_bcs
    996     var%set = .true.
    997 
    998     if ((idim(1) > idim(2)) .or. (idim(3) > idim(4))) then
    999       write (error_msg, *) trim(error_header), ' Disordered i-dimension index bound list ', idim
   1000       call mpp_error(FATAL, trim(error_msg))
   1001     endif
   1002     if ((jdim(1) > jdim(2)) .or. (jdim(3) > jdim(4))) then
   1003       write (error_msg, *) trim(error_header), ' Disordered j-dimension index bound list  ', jdim
   1004       call mpp_error(FATAL, trim(error_msg))
   1005     endif
   1006     var%isd = idim(1) ; var%isc = idim(2) ; var%iec = idim(3) ; var%ied = idim(4)
   1007     var%jsd = jdim(1) ; var%jsc = jdim(2) ; var%jec = jdim(3) ; var%jed = jdim(4)
   1008 
   1009     if (var%num_bcs > 0) then
   1010       if (associated(var%bc)) then
   1011         call mpp_error(FATAL, trim(error_header) // ' var%bc already associated')
   1012       endif
   1013       allocate ( var%bc(var%num_bcs) )
   1014       do n = 1, var%num_bcs

Page 41          Source Listing                  CT_SPAWN_3D_2D
2021-06-01 08:55                                 coupler_types.F90

   1015         var%bc(n)%name = var_in%bc(n)%name
   1016         var%bc(n)%atm_tr_index = var_in%bc(n)%atm_tr_index
   1017         var%bc(n)%flux_type = var_in%bc(n)%flux_type
   1018         var%bc(n)%implementation = var_in%bc(n)%implementation
   1019         var%bc(n)%ice_restart_file = var_in%bc(n)%ice_restart_file
   1020         var%bc(n)%ocean_restart_file = var_in%bc(n)%ocean_restart_file
   1021         var%bc(n)%use_atm_pressure = var_in%bc(n)%use_atm_pressure
   1022         var%bc(n)%use_10m_wind_speed = var_in%bc(n)%use_10m_wind_speed
   1023         var%bc(n)%pass_through_ice = var_in%bc(n)%pass_through_ice
   1024         var%bc(n)%mol_wt = var_in%bc(n)%mol_wt
   1025         var%bc(n)%num_fields = var_in%bc(n)%num_fields
   1026         if (associated(var%bc(n)%field)) then
   1027           write (error_msg, *) trim(error_header), ' var%bc(', n, ')%field already associated'
   1028           call mpp_error(FATAL, trim(error_msg))
   1029         endif
   1030         allocate ( var%bc(n)%field(var%bc(n)%num_fields) )
   1031         do m = 1, var%bc(n)%num_fields
   1032           if (present(suffix)) then
   1033             var%bc(n)%field(m)%name = trim(var_in%bc(n)%field(m)%name) // trim(suffix)
   1034           else
   1035             var%bc(n)%field(m)%name = var_in%bc(n)%field(m)%name
   1036           endif
   1037           var%bc(n)%field(m)%long_name = var_in%bc(n)%field(m)%long_name
   1038           var%bc(n)%field(m)%units = var_in%bc(n)%field(m)%units
   1039           var%bc(n)%field(m)%may_init = var_in%bc(n)%field(m)%may_init
   1040           var%bc(n)%field(m)%mean = var_in%bc(n)%field(m)%mean
   1041           if (associated(var%bc(n)%field(m)%values)) then
   1042             write (error_msg, *) trim(error_header), ' var%bc(', n, ')%field(', m, ')%values already associated'
   1043             call mpp_error(FATAL, trim(error_msg))
   1044           endif
   1045 ! Note that this may be allocating a zero-sized array, which is legal in Fortran.
   1046           allocate ( var%bc(n)%field(m)%values(var%isd:var%ied,var%jsd:var%jed) )
   1047           var%bc(n)%field(m)%values(:,:) = 0.0
   1048         enddo
   1049       enddo
   1050     endif
   1051   end subroutine  CT_spawn_3d_2d

Page 42          Source Listing                  CT_SPAWN_3D_2D
2021-06-01 08:55 Entry Points                    coupler_types.F90



ENTRY POINTS

  Name                                            
                                                  
 coupler_types_mod_mp_ct_spawn_3d_2d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ASSOCIATED                 Func   1010                                 scalar                    1010,1026,1041                    
 AS_NEEDED                  Dummy  968      L(4)            4           scalar   ARG,IN           984,985                           
 CT_SPAWN_3D_2D             Subr   968                                           PRIV             521                               
 ERROR_HEADER               Param  979      CHAR            49          scalar                    991,993,999,1003,1011,1027,1042   
 ERROR_MSG                  Local  981      CHAR            400         scalar                    999,1000,1003,1004,1027,1028,1042,
                                                                                                  1043                              
 IDIM                       Dummy  968      I(4)            4     1     4        ARG,IN           998,999,1006                      
 JDIM                       Dummy  968      I(4)            4     1     4        ARG,IN           1002,1003,1007                    
 M                          Local  982      I(4)            4           scalar                    1031,1033,1035,1037,1038,1039,1040
                                                                                                  ,1041,1042,1046,1047              
 N                          Local  982      I(4)            4           scalar                    1014,1015,1016,1017,1018,1019,1020
                                                                                                  ,1021,1022,1023,1024,1025,1026,102
                                                                                                  7,1030,1031,1033,1035,1037,1038,10
                                                                                                  39,1040,1041,1042,1046,1047       
 PRESENT                    Func   984                                  scalar                    984,1032                          
 SUFFIX                     Dummy  968      CHAR                        scalar   ARG,IN           1032,1033                         
 TRIM                       Func   991                                  scalar                    991,993,999,1000,1003,1004,1011,10
                                                                                                  27,1028,1033,1042,1043            
 VAR                        Dummy  968      COUPLER_2D_BC_TYPE                                                                      
                                                            120         scalar   ARG,INOUT        986,990,995,996,1006,1007,1009,101
                                                                                                  0,1013,1014,1015,1016,1017,1018,10
                                                                                                  19,1020,1021,1022,1023,1024,1025,1
                                                                                                  026,1030,1031,1033,1035,1037,1038,
                                                                                                  1039,1040,1041,1046,1047          
 VAR_IN                     Dummy  968      COUPLER_3D_BC_TYPE                                                                      
                                                            128         scalar   ARG,IN           986,992,995,1015,1016,1017,1018,10
                                                                                                  19,1020,1021,1022,1023,1024,1025,1
                                                                                                  033,1035,1037,1038,1039,1040      

Page 43          Source Listing                  CT_SPAWN_3D_2D
2021-06-01 08:55                                 coupler_types.F90

   1052 
   1053 !> @brief Generate one coupler type using another as a template. 3-D to 3-D version for generic CT_spawn.
   1054 !!
   1055 !! @throw FATAL, "The output type has already been initialized"
   1056 !! @throw FATAL, "The parent type has not been initialized"
   1057 !! @throw FATAL, "Disordered i-dimension index bound list"
   1058 !! @throw FATAL, "Disordered j-dimension index bound list"
   1059 !! @throw FATAL, "Disordered k-dimension index bound list"
   1060 !! @throw FATAL, "var%bc already assocated"
   1061 !! @throw FATAL, "var%bc('n')%field already associated"
   1062 !! @throw FATAL, "var%bc('n')%field('m')%values already associated"
   1063   subroutine CT_spawn_3d_3d(var_in, var, idim, jdim, kdim, suffix, as_needed)
   1064     type(coupler_3d_bc_type), intent(in)    :: var_in  !< structure from which to copy information
   1065     type(coupler_3d_bc_type), intent(inout) :: var     !< structure into which to copy information
   1066     integer, dimension(4),    intent(in)    :: idim    !< The data and computational domain extents of
   1067 !! the first dimension in a non-decreasing list
   1068     integer, dimension(4),    intent(in)    :: jdim    !< The data and computational domain extents of
   1069 !! the second dimension in a non-decreasing list
   1070     integer, dimension(2),    intent(in)    :: kdim    !< The array extents of the third dimension in
   1071 !! a non-decreasing list
   1072     character(len=*), optional, intent(in)  :: suffix  !< optional suffix to make the name identifier unique
   1073     logical,          optional, intent(in)  :: as_needed !< Only do the spawn if the target type (var)
   1074 !! is not set and the parent type (var_in) is set.
   1075 
   1076     character(len=*), parameter :: error_header =&
   1077         & '==>Error from coupler_types_mod (CT_spawn_3d_3d):'
   1078     character(len=400)      :: error_msg
   1079     integer                 :: m, n
   1080 
   1081     if (present(as_needed)) then
   1082       if (as_needed) then
   1083         if ((var%set) .or. (.not.var_in%set)) return
   1084       endif
   1085     endif
   1086 
   1087     if (var%set)&
   1088         & call mpp_error(FATAL, trim(error_header) // ' The output type has already been initialized.')
   1089     if (.not.var_in%set)&
   1090         & call mpp_error(FATAL, trim(error_header) // ' The parent type has not been initialized.')
   1091 
   1092     var%num_bcs = var_in%num_bcs
   1093     var%set = .true.
   1094 
   1095     if ((idim(1) > idim(2)) .or. (idim(3) > idim(4))) then
   1096       write (error_msg, *) trim(error_header), ' Disordered i-dimension index bound list ', idim
   1097       call mpp_error(FATAL, trim(error_msg))
   1098     endif
   1099     if ((jdim(1) > jdim(2)) .or. (jdim(3) > jdim(4))) then
   1100       write (error_msg, *) trim(error_header), ' Disordered j-dimension index bound list  ', jdim
   1101       call mpp_error(FATAL, trim(error_msg))
   1102     endif
   1103     if (kdim(1) > kdim(2)) then
   1104       write (error_msg, *) trim(error_header), ' Disordered k-dimension index bound list  ', kdim
   1105       call mpp_error(FATAL, trim(error_msg))
   1106     endif
   1107     var%isd = idim(1) ; var%isc = idim(2) ; var%iec = idim(3) ; var%ied = idim(4)
   1108     var%jsd = jdim(1) ; var%jsc = jdim(2) ; var%jec = jdim(3) ; var%jed = jdim(4)

Page 44          Source Listing                  CT_SPAWN_3D_3D
2021-06-01 08:55                                 coupler_types.F90

   1109     var%ks  = kdim(1) ; var%ke  = kdim(2)
   1110 
   1111     if (var%num_bcs > 0) then
   1112       if (associated(var%bc)) then
   1113         call mpp_error(FATAL, trim(error_header) // ' var%bc already associated')
   1114       endif
   1115       allocate ( var%bc(var%num_bcs) )
   1116       do n = 1, var%num_bcs
   1117         var%bc(n)%name = var_in%bc(n)%name
   1118         var%bc(n)%atm_tr_index = var_in%bc(n)%atm_tr_index
   1119         var%bc(n)%flux_type = var_in%bc(n)%flux_type
   1120         var%bc(n)%implementation = var_in%bc(n)%implementation
   1121         var%bc(n)%ice_restart_file = var_in%bc(n)%ice_restart_file
   1122         var%bc(n)%ocean_restart_file = var_in%bc(n)%ocean_restart_file
   1123         var%bc(n)%use_atm_pressure = var_in%bc(n)%use_atm_pressure
   1124         var%bc(n)%use_10m_wind_speed = var_in%bc(n)%use_10m_wind_speed
   1125         var%bc(n)%pass_through_ice = var_in%bc(n)%pass_through_ice
   1126         var%bc(n)%mol_wt = var_in%bc(n)%mol_wt
   1127         var%bc(n)%num_fields = var_in%bc(n)%num_fields
   1128         if (associated(var%bc(n)%field)) then
   1129           write (error_msg, *) trim(error_header), ' var%bc(', n, ')%field already associated'
   1130           call mpp_error(FATAL, trim(error_msg))
   1131         endif
   1132         allocate ( var%bc(n)%field(var%bc(n)%num_fields) )
   1133         do m = 1, var%bc(n)%num_fields
   1134           if (present(suffix)) then
   1135             var%bc(n)%field(m)%name = trim(var_in%bc(n)%field(m)%name) // trim(suffix)
   1136           else
   1137             var%bc(n)%field(m)%name = var_in%bc(n)%field(m)%name
   1138           endif
   1139           var%bc(n)%field(m)%long_name = var_in%bc(n)%field(m)%long_name
   1140           var%bc(n)%field(m)%units = var_in%bc(n)%field(m)%units
   1141           var%bc(n)%field(m)%may_init = var_in%bc(n)%field(m)%may_init
   1142           var%bc(n)%field(m)%mean = var_in%bc(n)%field(m)%mean
   1143           if (associated(var%bc(n)%field(m)%values)) then
   1144             write (error_msg, *) trim(error_header), ' var%bc(', n, ')%field(', m, ')%values already associated'
   1145             call mpp_error(FATAL, trim(error_msg))
   1146           endif
   1147 
   1148 ! Note that this may be allocating a zero-sized array, which is legal in Fortran.
   1149           allocate ( var%bc(n)%field(m)%values(var%isd:var%ied,var%jsd:var%jed,var%ks:var%ke) )
   1150           var%bc(n)%field(m)%values(:,:,:) = 0.0
   1151         enddo
   1152       enddo
   1153     endif
   1154   end subroutine  CT_spawn_3d_3d

Page 45          Source Listing                  CT_SPAWN_3D_3D
2021-06-01 08:55 Entry Points                    coupler_types.F90



ENTRY POINTS

  Name                                            
                                                  
 coupler_types_mod_mp_ct_spawn_3d_3d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ASSOCIATED                 Func   1112                                 scalar                    1112,1128,1143                    
 AS_NEEDED                  Dummy  1063     L(4)            4           scalar   ARG,IN           1081,1082                         
 CT_SPAWN_3D_3D             Subr   1063                                          PRIV             556                               
 ERROR_HEADER               Param  1076     CHAR            49          scalar                    1088,1090,1096,1100,1104,1113,1129
                                                                                                  ,1144                             
 ERROR_MSG                  Local  1078     CHAR            400         scalar                    1096,1097,1100,1101,1104,1105,1129
                                                                                                  ,1130,1144,1145                   
 IDIM                       Dummy  1063     I(4)            4     1     4        ARG,IN           1095,1096,1107                    
 JDIM                       Dummy  1063     I(4)            4     1     4        ARG,IN           1099,1100,1108                    
 KDIM                       Dummy  1063     I(4)            4     1     2        ARG,IN           1103,1104,1109                    
 M                          Local  1079     I(4)            4           scalar                    1133,1135,1137,1139,1140,1141,1142
                                                                                                  ,1143,1144,1149,1150              
 N                          Local  1079     I(4)            4           scalar                    1116,1117,1118,1119,1120,1121,1122
                                                                                                  ,1123,1124,1125,1126,1127,1128,112
                                                                                                  9,1132,1133,1135,1137,1139,1140,11
                                                                                                  41,1142,1143,1144,1149,1150       
 PRESENT                    Func   1081                                 scalar                    1081,1134                         
 SUFFIX                     Dummy  1063     CHAR                        scalar   ARG,IN           1134,1135                         
 TRIM                       Func   1088                                 scalar                    1088,1090,1096,1097,1100,1101,1104
                                                                                                  ,1105,1113,1129,1130,1135,1144,114
                                                                                                  5                                 
 VAR                        Dummy  1063     COUPLER_3D_BC_TYPE                                                                      
                                                            128         scalar   ARG,INOUT        1083,1087,1092,1093,1107,1108,1109
                                                                                                  ,1111,1112,1115,1116,1117,1118,111
                                                                                                  9,1120,1121,1122,1123,1124,1125,11
                                                                                                  26,1127,1128,1132,1133,1135,1137,1
                                                                                                  139,1140,1141,1142,1143,1149,1150 
 VAR_IN                     Dummy  1063     COUPLER_3D_BC_TYPE                                                                      
                                                            128         scalar   ARG,IN           1083,1089,1092,1117,1118,1119,1120
                                                                                                  ,1121,1122,1123,1124,1125,1126,112
                                                                                                  7,1135,1137,1139,1140,1141,1142   

Page 46          Source Listing                  CT_SPAWN_3D_3D
2021-06-01 08:55                                 coupler_types.F90

   1155 
   1156 
   1157 !> @brief Copy all elements of coupler_2d_bc_type.
   1158 !! Do a direct copy of the data in all elements of one
   1159 !! coupler_2d_bc_type into another.  Both must have the same array sizes.
   1160 !!
   1161 !! @throw FATAL, "bc_index is present and exceeds var_in%num_bcs."
   1162 !! @throw FATAL, "field_index is present and exceeds num_fields for var_in%bc(bc_incdx)%name"
   1163 !! @throw FATAL, "bc_index must be present if field_index is present."
   1164 !! @throw FATAL, "There is an i-direction computational domain size mismatch."
   1165 !! @throw FATAL, "There is an j-direction computational domain size mismatch."
   1166 !! @throw FATAL, "Excessive i-direction halo size for the input structure."
   1167 !! @throw FATAL, "Excessive i-direction halo size for the input structure."
   1168   subroutine CT_copy_data_2d(var_in, var, halo_size, bc_index, field_index,&
   1169       & exclude_flux_type, only_flux_type, pass_through_ice)
   1170     type(coupler_2d_bc_type),   intent(in)    :: var_in  !< BC_type structure with the data to copy
   1171     type(coupler_2d_bc_type),   intent(inout) :: var !< The recipient BC_type structure
   1172     integer,          optional, intent(in)    :: halo_size !< The extent of the halo to copy; 0 by default
   1173     integer,          optional, intent(in)    :: bc_index  !< The index of the boundary condition
   1174 !! that is being copied
   1175     integer,          optional, intent(in)    :: field_index !< The index of the field in the
   1176 !! boundary condition that is being copied
   1177     character(len=*), optional, intent(in)    :: exclude_flux_type !< A string describing which types of fluxes to exclude f
   1177 rom this copy.
   1178     character(len=*), optional, intent(in)    :: only_flux_type    !< A string describing which types of fluxes to include f
   1178 rom this copy.
   1179     logical,          optional, intent(in)    :: pass_through_ice !< If true, only copy BCs whose
   1180 !! value of pass_through ice matches this
   1181     logical :: copy_bc
   1182     integer :: i, j, m, n, n1, n2, halo, i_off, j_off
   1183 
   1184     if (present(bc_index)) then
   1185       if (bc_index > var_in%num_bcs)&
   1186           & call mpp_error(FATAL, "CT_copy_data_2d: bc_index is present and exceeds var_in%num_bcs.")
   1187       if (present(field_index)) then ; if (field_index > var_in%bc(bc_index)%num_fields)&
   1188           & call mpp_error(FATAL, "CT_copy_data_2d: field_index is present and exceeds num_fields for" //&
   1189           & trim(var_in%bc(bc_index)%name) )
   1190       endif
   1191     elseif (present(field_index)) then
   1192       call mpp_error(FATAL, "CT_copy_data_2d: bc_index must be present if field_index is present.")
   1193     endif
   1194 
   1195     halo = 0
   1196     if (present(halo_size)) halo = halo_size
   1197 
   1198     n1 = 1
   1199     n2 = var_in%num_bcs
   1200     if (present(bc_index)) then
   1201       n1 = bc_index
   1202       n2 = bc_index
   1203     endif
   1204 
   1205     if (n2 >= n1) then
   1206 ! A more consciencious implementation would include a more descriptive error messages.
   1207       if ((var_in%iec-var_in%isc) /= (var%iec-var%isc))&
   1208           & call mpp_error(FATAL, "CT_copy_data_2d: There is an i-direction computational domain size mismatch.")
   1209       if ((var_in%jec-var_in%jsc) /= (var%jec-var%jsc))&

Page 47          Source Listing                  CT_COPY_DATA_2D
2021-06-01 08:55                                 coupler_types.F90

   1210           & call mpp_error(FATAL, "CT_copy_data_2d: There is a j-direction computational domain size mismatch.")
   1211       if ((var_in%isc-var_in%isd < halo) .or. (var_in%ied-var_in%iec < halo))&
   1212           & call mpp_error(FATAL, "CT_copy_data_2d: Excessive i-direction halo size for the input structure.")
   1213       if ((var_in%jsc-var_in%jsd < halo) .or. (var_in%jed-var_in%jec < halo))&
   1214           & call mpp_error(FATAL, "CT_copy_data_2d: Excessive j-direction halo size for the input structure.")
   1215       if ((var%isc-var%isd < halo) .or. (var%ied-var%iec < halo))&
   1216           & call mpp_error(FATAL, "CT_copy_data_2d: Excessive i-direction halo size for the output structure.")
   1217       if ((var%jsc-var%jsd < halo) .or. (var%jed-var%jec < halo))&
   1218           & call mpp_error(FATAL, "CT_copy_data_2d: Excessive j-direction halo size for the output structure.")
   1219 
   1220       i_off = var_in%isc - var%isc
   1221       j_off = var_in%jsc - var%jsc
   1222     endif
   1223 
   1224     do n = n1, n2
   1225       copy_bc = .true.
   1226       if (copy_bc .and. present(exclude_flux_type))&
   1227           & copy_bc = .not.(trim(var%bc(n)%flux_type) == trim(exclude_flux_type))
   1228       if (copy_bc .and. present(only_flux_type))&
   1229           & copy_bc = (trim(var%bc(n)%flux_type) == trim(only_flux_type))
   1230       if (copy_bc .and. present(pass_through_ice))&
   1231           & copy_bc = (pass_through_ice .eqv. var%bc(n)%pass_through_ice)
   1232       if (.not.copy_bc) cycle
   1233 
   1234       do m = 1, var%bc(n)%num_fields
   1235         if (present(field_index)) then
   1236           if (m /= field_index) cycle
   1237         endif
   1238         if ( associated(var%bc(n)%field(m)%values) ) then
   1239           do j=var%jsc-halo,var%jec+halo
   1240             do i=var%isc-halo,var%iec+halo
   1241               var%bc(n)%field(m)%values(i,j) = var_in%bc(n)%field(m)%values(i+i_off,j+j_off)
   1242             enddo
   1243           enddo
   1244         endif
   1245       enddo
   1246     enddo
   1247   end subroutine CT_copy_data_2d

Page 48          Source Listing                  CT_COPY_DATA_2D
2021-06-01 08:55 Entry Points                    coupler_types.F90



ENTRY POINTS

  Name                                             
                                                   
 coupler_types_mod_mp_ct_copy_data_2d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ASSOCIATED                 Func   1238                                 scalar                    1238                              
 BC_INDEX                   Dummy  1168     I(4)            4           scalar   ARG,IN           1184,1185,1187,1189,1200,1201,1202
 COPY_BC                    Local  1181     L(4)            4           scalar                    1225,1226,1227,1228,1229,1230,1231
                                                                                                  ,1232                             
 CT_COPY_DATA_2D            Subr   1168                                          PRIV                                               
 EXCLUDE_FLUX_TYPE          Dummy  1169     CHAR                        scalar   ARG,IN           1226,1227                         
 FIELD_INDEX                Dummy  1168     I(4)            4           scalar   ARG,IN           1187,1191,1235,1236               
 HALO                       Local  1182     I(4)            4           scalar                    1195,1196,1211,1213,1215,1217,1239
                                                                                                  ,1240                             
 HALO_SIZE                  Dummy  1168     I(4)            4           scalar   ARG,IN           1196                              
 I                          Local  1182     I(4)            4           scalar                    1240,1241                         
 I_OFF                      Local  1182     I(4)            4           scalar                    1220,1241                         
 J                          Local  1182     I(4)            4           scalar                    1239,1241                         
 J_OFF                      Local  1182     I(4)            4           scalar                    1221,1241                         
 M                          Local  1182     I(4)            4           scalar                    1234,1236,1238,1241               
 N                          Local  1182     I(4)            4           scalar                    1224,1227,1229,1231,1234,1238,1241
 N1                         Local  1182     I(4)            4           scalar                    1198,1201,1205,1224               
 N2                         Local  1182     I(4)            4           scalar                    1199,1202,1205,1224               
 ONLY_FLUX_TYPE             Dummy  1169     CHAR                        scalar   ARG,IN           1228,1229                         
 PASS_THROUGH_ICE           Dummy  1169     L(4)            4           scalar   ARG,IN           1230,1231                         
 PRESENT                    Func   1184                                 scalar                    1184,1187,1191,1196,1200,1226,1228
                                                                                                  ,1230,1235                        
 TRIM                       Func   1189                                 scalar                    1189,1227,1229                    
 VAR                        Dummy  1168     COUPLER_2D_BC_TYPE                                                                      
                                                            120         scalar   ARG,INOUT        1207,1209,1215,1217,1220,1221,1227
                                                                                                  ,1229,1231,1234,1238,1239,1240,124
                                                                                                  1                                 
 VAR_IN                     Dummy  1168     COUPLER_2D_BC_TYPE                                                                      
                                                            120         scalar   ARG,IN           1185,1187,1189,1199,1207,1209,1211
                                                                                                  ,1213,1220,1221,1241              

Page 49          Source Listing                  CT_COPY_DATA_2D
2021-06-01 08:55                                 coupler_types.F90

   1248 
   1249 !> @brief Copy all elements of coupler_3d_bc_type
   1250 !!
   1251 !! Do a direct copy of the data in all elements of one
   1252 !! coupler_3d_bc_type into another.  Both must have the same array sizes.
   1253 !!
   1254 !! @throw FATAL, "bc_index is present and exceeds var_in%num_bcs."
   1255 !! @throw FATAL, "field_index is present and exceeds num_fields for var_in%bc(bc_incdx)%name"
   1256 !! @throw FATAL, "bc_index must be present if field_index is present."
   1257 !! @throw FATAL, "There is an i-direction computational domain size mismatch."
   1258 !! @throw FATAL, "There is an j-direction computational domain size mismatch."
   1259 !! @throw FATAL, "There is an k-direction computational domain size mismatch."
   1260 !! @throw FATAL, "Excessive i-direction halo size for the input structure."
   1261 !! @throw FATAL, "Excessive i-direction halo size for the input structure."
   1262 !! @throw FATAL, "Excessive k-direction halo size for the input structure."
   1263   subroutine CT_copy_data_3d(var_in, var, halo_size, bc_index, field_index,&
   1264       & exclude_flux_type, only_flux_type, pass_through_ice)
   1265     type(coupler_3d_bc_type),   intent(in)    :: var_in  !< BC_type structure with the data to copy
   1266     type(coupler_3d_bc_type),   intent(inout) :: var !< The recipient BC_type structure
   1267     integer,          optional, intent(in)    :: halo_size !< The extent of the halo to copy; 0 by default
   1268     integer,          optional, intent(in)    :: bc_index  !< The index of the boundary condition
   1269 !! that is being copied
   1270     integer,          optional, intent(in)    :: field_index !< The index of the field in the
   1271 !! boundary condition that is being copied
   1272     character(len=*), optional, intent(in)    :: exclude_flux_type !< A string describing which types
   1273 !! of fluxes to exclude from this copy.
   1274     character(len=*), optional, intent(in)    :: only_flux_type !< A string describing which types
   1275 !! of fluxes to include from this copy.
   1276     logical,          optional, intent(in)    :: pass_through_ice !< If true, only copy BCs whose
   1277 !! value of pass_through ice matches this
   1278     logical :: copy_bc
   1279     integer :: i, j, k, m, n, n1, n2, halo, i_off, j_off, k_off
   1280 
   1281     if (present(bc_index)) then
   1282       if (bc_index > var_in%num_bcs) &
   1283           call mpp_error(FATAL, "CT_copy_data_3d: bc_index is present and exceeds var_in%num_bcs.")
   1284       if (present(field_index)) then ; if (field_index > var_in%bc(bc_index)%num_fields)&
   1285           & call mpp_error(FATAL, "CT_copy_data_3d: field_index is present and exceeds num_fields for" //&
   1286           & trim(var_in%bc(bc_index)%name) )
   1287       endif
   1288     elseif (present(field_index)) then
   1289       call mpp_error(FATAL, "CT_copy_data_3d: bc_index must be present if field_index is present.")
   1290     endif
   1291 
   1292     halo = 0
   1293     if (present(halo_size)) halo = halo_size
   1294 
   1295     n1 = 1
   1296     n2 = var_in%num_bcs
   1297     if (present(bc_index)) then
   1298       n1 = bc_index
   1299       n2 = bc_index
   1300     endif
   1301 
   1302     if (n2 >= n1) then
   1303 ! A more consciencious implementation would include a more descriptive error messages.
   1304       if ((var_in%iec-var_in%isc) /= (var%iec-var%isc))&

Page 50          Source Listing                  CT_COPY_DATA_3D
2021-06-01 08:55                                 coupler_types.F90

   1305           & call mpp_error(FATAL, "CT_copy_data_3d: There is an i-direction computational domain size mismatch.")
   1306       if ((var_in%jec-var_in%jsc) /= (var%jec-var%jsc))&
   1307           & call mpp_error(FATAL, "CT_copy_data_3d: There is a j-direction computational domain size mismatch.")
   1308       if ((var_in%ke-var_in%ks) /= (var%ke-var%ks))&
   1309           & call mpp_error(FATAL, "CT_copy_data_3d: There is a k-direction computational domain size mismatch.")
   1310       if ((var_in%isc-var_in%isd < halo) .or. (var_in%ied-var_in%iec < halo))&
   1311           & call mpp_error(FATAL, "CT_copy_data_3d: Excessive i-direction halo size for the input structure.")
   1312       if ((var_in%jsc-var_in%jsd < halo) .or. (var_in%jed-var_in%jec < halo))&
   1313           & call mpp_error(FATAL, "CT_copy_data_3d: Excessive j-direction halo size for the input structure.")
   1314       if ((var%isc-var%isd < halo) .or. (var%ied-var%iec < halo))&
   1315           & call mpp_error(FATAL, "CT_copy_data_3d: Excessive i-direction halo size for the output structure.")
   1316       if ((var%jsc-var%jsd < halo) .or. (var%jed-var%jec < halo))&
   1317           & call mpp_error(FATAL, "CT_copy_data_3d: Excessive j-direction halo size for the output structure.")
   1318 
   1319       i_off = var_in%isc - var%isc
   1320       j_off = var_in%jsc - var%jsc
   1321       k_off = var_in%ks - var%ks
   1322     endif
   1323 
   1324     do n = n1, n2
   1325       copy_bc = .true.
   1326       if (copy_bc .and. present(exclude_flux_type))&
   1327           & copy_bc = .not.(trim(var%bc(n)%flux_type) == trim(exclude_flux_type))
   1328       if (copy_bc .and. present(only_flux_type))&
   1329           & copy_bc = (trim(var%bc(n)%flux_type) == trim(only_flux_type))
   1330       if (copy_bc .and. present(pass_through_ice))&
   1331           & copy_bc = (pass_through_ice .eqv. var%bc(n)%pass_through_ice)
   1332       if (.not.copy_bc) cycle
   1333 
   1334       do m = 1, var_in%bc(n)%num_fields
   1335         if (present(field_index)) then
   1336           if (m /= field_index) cycle
   1337         endif
   1338         if ( associated(var%bc(n)%field(m)%values) ) then
   1339           do k=var%ks,var%ke
   1340             do j=var%jsc-halo,var%jec+halo
   1341               do i=var%isc-halo,var%iec+halo
   1342                 var%bc(n)%field(m)%values(i,j,k) = var_in%bc(n)%field(m)%values(i+i_off,j+j_off,k+k_off)
   1343               enddo
   1344             enddo
   1345           enddo
   1346         endif
   1347       enddo
   1348     enddo
   1349   end subroutine CT_copy_data_3d

Page 51          Source Listing                  CT_COPY_DATA_3D
2021-06-01 08:55 Entry Points                    coupler_types.F90



ENTRY POINTS

  Name                                             
                                                   
 coupler_types_mod_mp_ct_copy_data_3d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ASSOCIATED                 Func   1338                                 scalar                    1338                              
 BC_INDEX                   Dummy  1263     I(4)            4           scalar   ARG,IN           1281,1282,1284,1286,1297,1298,1299
 COPY_BC                    Local  1278     L(4)            4           scalar                    1325,1326,1327,1328,1329,1330,1331
                                                                                                  ,1332                             
 CT_COPY_DATA_3D            Subr   1263                                          PRIV                                               
 EXCLUDE_FLUX_TYPE          Dummy  1264     CHAR                        scalar   ARG,IN           1326,1327                         
 FIELD_INDEX                Dummy  1263     I(4)            4           scalar   ARG,IN           1284,1288,1335,1336               
 HALO                       Local  1279     I(4)            4           scalar                    1292,1293,1310,1312,1314,1316,1340
                                                                                                  ,1341                             
 HALO_SIZE                  Dummy  1263     I(4)            4           scalar   ARG,IN           1293                              
 I                          Local  1279     I(4)            4           scalar                    1341,1342                         
 I_OFF                      Local  1279     I(4)            4           scalar                    1319,1342                         
 J                          Local  1279     I(4)            4           scalar                    1340,1342                         
 J_OFF                      Local  1279     I(4)            4           scalar                    1320,1342                         
 K                          Local  1279     I(4)            4           scalar                    1339,1342                         
 K_OFF                      Local  1279     I(4)            4           scalar                    1321,1342                         
 M                          Local  1279     I(4)            4           scalar                    1334,1336,1338,1342               
 N                          Local  1279     I(4)            4           scalar                    1324,1327,1329,1331,1334,1338,1342
 N1                         Local  1279     I(4)            4           scalar                    1295,1298,1302,1324               
 N2                         Local  1279     I(4)            4           scalar                    1296,1299,1302,1324               
 ONLY_FLUX_TYPE             Dummy  1264     CHAR                        scalar   ARG,IN           1328,1329                         
 PASS_THROUGH_ICE           Dummy  1264     L(4)            4           scalar   ARG,IN           1330,1331                         
 PRESENT                    Func   1281                                 scalar                    1281,1284,1288,1293,1297,1326,1328
                                                                                                  ,1330,1335                        
 TRIM                       Func   1286                                 scalar                    1286,1327,1329                    
 VAR                        Dummy  1263     COUPLER_3D_BC_TYPE                                                                      
                                                            128         scalar   ARG,INOUT        1304,1306,1308,1314,1316,1319,1320
                                                                                                  ,1321,1327,1329,1331,1338,1339,134
                                                                                                  0,1341,1342                       
 VAR_IN                     Dummy  1263     COUPLER_3D_BC_TYPE                                                                      
                                                            128         scalar   ARG,IN           1282,1284,1286,1296,1304,1306,1308
                                                                                                  ,1310,1312,1319,1320,1321,1334,134
                                                                                                  2                                 

Page 52          Source Listing                  CT_COPY_DATA_3D
2021-06-01 08:55                                 coupler_types.F90

   1350 
   1351 !> @brief Copy all elements of coupler_2d_bc_type to coupler_3d_bc_type
   1352 !!
   1353 !! Do a direct copy of the data in all elements of one coupler_2d_bc_type into a
   1354 !! coupler_3d_bc_type.  Both must have the same array sizes for the first two dimensions, while
   1355 !! the extend of the 3rd dimension that is being filled may be specified via optional arguments..
   1356 !!
   1357 !! @throw FATAL, "bc_index is present and exceeds var_in%num_bcs."
   1358 !! @throw FATAL, "field_index is present and exceeds num_fields for var_in%bc(bc_incdx)%name"
   1359 !! @throw FATAL, "bc_index must be present if field_index is present."
   1360 !! @throw FATAL, "There is an i-direction computational domain size mismatch."
   1361 !! @throw FATAL, "There is an j-direction computational domain size mismatch."
   1362 !! @throw FATAL, "Excessive i-direction halo size for the input structure."
   1363 !! @throw FATAL, "Excessive i-direction halo size for the input structure."
   1364   subroutine CT_copy_data_2d_3d(var_in, var, halo_size, bc_index, field_index,&
   1365       & exclude_flux_type, only_flux_type, pass_through_ice,&
   1366       & ind3_start, ind3_end)
   1367     type(coupler_2d_bc_type),   intent(in)    :: var_in  !< BC_type structure with the data to copy
   1368     type(coupler_3d_bc_type),   intent(inout) :: var !< The recipient BC_type structure
   1369     integer,          optional, intent(in)    :: halo_size !< The extent of the halo to copy; 0 by default
   1370     integer,          optional, intent(in)    :: bc_index  !< The index of the boundary condition
   1371 !! that is being copied
   1372     integer,          optional, intent(in)    :: field_index !< The index of the field in the
   1373 !! boundary condition that is being copied
   1374     character(len=*), optional, intent(in)    :: exclude_flux_type !< A string describing which types of fluxes to exclude f
   1374 rom this copy.
   1375     character(len=*), optional, intent(in)    :: only_flux_type    !< A string describing which types of fluxes to include f
   1375 rom this copy.
   1376     logical,          optional, intent(in)    :: pass_through_ice !< If true, only copy BCs whose
   1377 !! value of pass_through ice matches this
   1378     integer,          optional, intent(in)    :: ind3_start  !< The starting value of the 3rd
   1379 !! index of the 3d type to fill in.
   1380     integer,          optional, intent(in)    :: ind3_end    !< The ending value of the 3rd
   1381 !! index of the 3d type to fill in.
   1382 
   1383     logical :: copy_bc
   1384     integer :: i, j, k, m, n, n1, n2, halo, i_off, j_off, ks, ke
   1385 
   1386     if (present(bc_index)) then
   1387       if (bc_index > var_in%num_bcs)&
   1388           & call mpp_error(FATAL, "CT_copy_data_2d_3d: bc_index is present and exceeds var_in%num_bcs.")
   1389       if (present(field_index)) then ; if (field_index > var_in%bc(bc_index)%num_fields)&
   1390           & call mpp_error(FATAL, "CT_copy_data_2d_3d: field_index is present and exceeds num_fields for" //&
   1391           & trim(var_in%bc(bc_index)%name) )
   1392       endif
   1393     elseif (present(field_index)) then
   1394       call mpp_error(FATAL, "CT_copy_data_2d_3d: bc_index must be present if field_index is present.")
   1395     endif
   1396 
   1397     halo = 0
   1398     if (present(halo_size)) halo = halo_size
   1399 
   1400     n1 = 1
   1401     n2 = var_in%num_bcs
   1402     if (present(bc_index)) then
   1403       n1 = bc_index
   1404       n2 = bc_index

Page 53          Source Listing                  CT_COPY_DATA_2D_3D
2021-06-01 08:55                                 coupler_types.F90

   1405     endif
   1406 
   1407     if (n2 >= n1) then
   1408 ! A more consciencious implementation would include a more descriptive error messages.
   1409       if ((var_in%iec-var_in%isc) /= (var%iec-var%isc))&
   1410           & call mpp_error(FATAL, "CT_copy_data_2d_3d: There is an i-direction computational domain size mismatch.")
   1411       if ((var_in%jec-var_in%jsc) /= (var%jec-var%jsc))&
   1412           & call mpp_error(FATAL, "CT_copy_data_2d_3d: There is a j-direction computational domain size mismatch.")
   1413       if ((var_in%isc-var_in%isd < halo) .or. (var_in%ied-var_in%iec < halo))&
   1414           & call mpp_error(FATAL, "CT_copy_data_2d_3d: Excessive i-direction halo size for the input structure.")
   1415       if ((var_in%jsc-var_in%jsd < halo) .or. (var_in%jed-var_in%jec < halo))&
   1416           & call mpp_error(FATAL, "CT_copy_data_2d_3d: Excessive j-direction halo size for the input structure.")
   1417       if ((var%isc-var%isd < halo) .or. (var%ied-var%iec < halo))&
   1418           & call mpp_error(FATAL, "CT_copy_data_2d_3d: Excessive i-direction halo size for the output structure.")
   1419       if ((var%jsc-var%jsd < halo) .or. (var%jed-var%jec < halo))&
   1420           & call mpp_error(FATAL, "CT_copy_data_2d_3d: Excessive j-direction halo size for the output structure.")
   1421     endif
   1422 
   1423     i_off = var_in%isc - var%isc
   1424     j_off = var_in%jsc - var%jsc
   1425     do n = n1, n2
   1426       copy_bc = .true.
   1427       if (copy_bc .and. present(exclude_flux_type))&
   1428           & copy_bc = .not.(trim(var_in%bc(n)%flux_type) == trim(exclude_flux_type))
   1429       if (copy_bc .and. present(only_flux_type))&
   1430           & copy_bc = (trim(var_in%bc(n)%flux_type) == trim(only_flux_type))
   1431       if (copy_bc .and. present(pass_through_ice))&
   1432           & copy_bc = (pass_through_ice .eqv. var_in%bc(n)%pass_through_ice)
   1433       if (.not.copy_bc) cycle
   1434 
   1435       do m = 1, var_in%bc(n)%num_fields
   1436         if (present(field_index)) then
   1437           if (m /= field_index) cycle
   1438         endif
   1439         if ( associated(var%bc(n)%field(m)%values) ) then
   1440           ks = var%ks
   1441           if (present(ind3_start)) ks = max(ks, ind3_start)
   1442           ke = var%ke
   1443           if (present(ind3_end)) ke = max(ke, ind3_end)
   1444           do k=ks,ke
   1445             do j=var%jsc-halo,var%jec+halo
   1446               do i=var%isc-halo,var%iec+halo
   1447                 var%bc(n)%field(m)%values(i,j,k) = var_in%bc(n)%field(m)%values(i+i_off,j+j_off)
   1448               enddo
   1449             enddo
   1450           enddo
   1451         endif
   1452       enddo
   1453     enddo
   1454   end subroutine CT_copy_data_2d_3d

Page 54          Source Listing                  CT_COPY_DATA_2D_3D
2021-06-01 08:55 Entry Points                    coupler_types.F90



ENTRY POINTS

  Name                                                
                                                      
 coupler_types_mod_mp_ct_copy_data_2d_3d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ASSOCIATED                 Func   1439                                 scalar                    1439                              
 BC_INDEX                   Dummy  1364     I(4)            4           scalar   ARG,IN           1386,1387,1389,1391,1402,1403,1404
 COPY_BC                    Local  1383     L(4)            4           scalar                    1426,1427,1428,1429,1430,1431,1432
                                                                                                  ,1433                             
 CT_COPY_DATA_2D_3D         Subr   1364                                          PRIV                                               
 EXCLUDE_FLUX_TYPE          Dummy  1365     CHAR                        scalar   ARG,IN           1427,1428                         
 FIELD_INDEX                Dummy  1364     I(4)            4           scalar   ARG,IN           1389,1393,1436,1437               
 HALO                       Local  1384     I(4)            4           scalar                    1397,1398,1413,1415,1417,1419,1445
                                                                                                  ,1446                             
 HALO_SIZE                  Dummy  1364     I(4)            4           scalar   ARG,IN           1398                              
 I                          Local  1384     I(4)            4           scalar                    1446,1447                         
 IND3_END                   Dummy  1366     I(4)            4           scalar   ARG,IN           1443                              
 IND3_START                 Dummy  1366     I(4)            4           scalar   ARG,IN           1441                              
 I_OFF                      Local  1384     I(4)            4           scalar                    1423,1447                         
 J                          Local  1384     I(4)            4           scalar                    1445,1447                         
 J_OFF                      Local  1384     I(4)            4           scalar                    1424,1447                         
 K                          Local  1384     I(4)            4           scalar                    1444,1447                         
 KE                         Local  1384     I(4)            4           scalar                    1442,1443,1444                    
 KS                         Local  1384     I(4)            4           scalar                    1440,1441,1444                    
 M                          Local  1384     I(4)            4           scalar                    1435,1437,1439,1447               
 MAX                        Func   1441                                 scalar                    1441,1443                         
 N                          Local  1384     I(4)            4           scalar                    1425,1428,1430,1432,1435,1439,1447
 N1                         Local  1384     I(4)            4           scalar                    1400,1403,1407,1425               
 N2                         Local  1384     I(4)            4           scalar                    1401,1404,1407,1425               
 ONLY_FLUX_TYPE             Dummy  1365     CHAR                        scalar   ARG,IN           1429,1430                         
 PASS_THROUGH_ICE           Dummy  1365     L(4)            4           scalar   ARG,IN           1431,1432                         
 PRESENT                    Func   1386                                 scalar                    1386,1389,1393,1398,1402,1427,1429
                                                                                                  ,1431,1436,1441,1443              
 TRIM                       Func   1391                                 scalar                    1391,1428,1430                    
 VAR                        Dummy  1364     COUPLER_3D_BC_TYPE                                                                      
                                                            128         scalar   ARG,INOUT        1409,1411,1417,1419,1423,1424,1439
                                                                                                  ,1440,1442,1445,1446,1447         
 VAR_IN                     Dummy  1364     COUPLER_2D_BC_TYPE                                                                      
                                                            120         scalar   ARG,IN           1387,1389,1391,1401,1409,1411,1413
                                                                                                  ,1415,1423,1424,1428,1430,1432,143
                                                                                                  5,1447                            

Page 55          Source Listing                  CT_COPY_DATA_2D_3D
2021-06-01 08:55                                 coupler_types.F90

   1455 
   1456 
   1457 !> @brief Redistribute the data in all elements of a coupler_2d_bc_type
   1458 !!
   1459 !! Redistributes the data in all elements of one coupler_2d_bc_type
   1460 !! into another, which may be on different processors with a different decomposition.
   1461 !!
   1462 !! @throw FATAL, "Mismatch in num_bcs in CT_copy_data_2d."
   1463 !! @throw FATAL, "Mismatch in the total number of fields in CT_redistribute_data_2d."
   1464   subroutine CT_redistribute_data_2d(var_in, domain_in, var_out, domain_out, complete)
   1465     type(coupler_2d_bc_type), intent(in)    :: var_in     !< BC_type structure with the data to copy (intent in)
   1466     type(domain2D),           intent(in)    :: domain_in  !< The FMS domain for the input structure
   1467     type(coupler_2d_bc_type), intent(inout) :: var_out    !< The recipient BC_type structure (data intent out)
   1468     type(domain2D),           intent(in)    :: domain_out !< The FMS domain for the output structure
   1469     logical,        optional, intent(in)    :: complete   !< If true, complete the updates
   1470 
   1471     real, pointer, dimension(:,:) :: null_ptr2D => NULL()
   1472     logical :: do_in, do_out, do_complete
   1473     integer :: m, n, fc, fc_in, fc_out
   1474 
   1475     do_complete = .true.
   1476     if (present(complete)) do_complete = complete
   1477 
   1478 ! Figure out whether this PE has valid input or output fields or both.
   1479     do_in = var_in%set
   1480     do_out = var_out%set
   1481 
   1482     fc_in = 0 ; fc_out = 0
   1483     if (do_in) then
   1484       do n = 1, var_in%num_bcs
   1485         do m = 1, var_in%bc(n)%num_fields
   1486           if (associated(var_in%bc(n)%field(m)%values)) fc_in = fc_in + 1
   1487         enddo
   1488       enddo
   1489     endif
   1490     if (fc_in == 0) do_in = .false.
   1491     if (do_out) then
   1492       do n = 1, var_out%num_bcs
   1493         do m = 1, var_out%bc(n)%num_fields
   1494           if (associated(var_out%bc(n)%field(m)%values)) fc_out = fc_out + 1
   1495         enddo
   1496       enddo
   1497     endif
   1498     if (fc_out == 0) do_out = .false.
   1499 
   1500     if (do_in .and. do_out) then
   1501       if (var_in%num_bcs /= var_out%num_bcs) call mpp_error(FATAL,&
   1502           & "Mismatch in num_bcs in CT_copy_data_2d.")
   1503       if (fc_in /= fc_out) call mpp_error(FATAL,&
   1504           & "Mismatch in the total number of fields in CT_redistribute_data_2d.")
   1505     endif
   1506 
   1507     if (.not.(do_in .or. do_out)) return
   1508 
   1509     fc = 0
   1510     if (do_in .and. do_out) then
   1511       do n = 1, var_in%num_bcs

Page 56          Source Listing                  CT_REDISTRIBUTE_DATA_2D
2021-06-01 08:55                                 coupler_types.F90

   1512         do m = 1, var_in%bc(n)%num_fields
   1513           if ( associated(var_in%bc(n)%field(m)%values) .neqv.&
   1514               & associated(var_out%bc(n)%field(m)%values) ) &
   1515               call mpp_error(FATAL,&
   1516               & "Mismatch in which fields are associated in CT_redistribute_data_2d.")
   1517           if ( associated(var_in%bc(n)%field(m)%values) ) then
   1518             fc = fc + 1
   1519             call mpp_redistribute(domain_in, var_in%bc(n)%field(m)%values,&
   1520                 & domain_out, var_out%bc(n)%field(m)%values,&
   1521                 & complete=(do_complete.and.(fc==fc_in)) )
   1522           endif
   1523         enddo
   1524       enddo
   1525     elseif (do_in) then
   1526       do n = 1, var_in%num_bcs
   1527         do m = 1, var_in%bc(n)%num_fields
   1528           if ( associated(var_in%bc(n)%field(m)%values) ) then
   1529             fc = fc + 1
   1530             call mpp_redistribute(domain_in, var_in%bc(n)%field(m)%values,&
   1531                 & domain_out, null_ptr2D,&
   1532                 & complete=(do_complete.and.(fc==fc_in)) )
   1533           endif
   1534         enddo
   1535       enddo
   1536     elseif (do_out) then
   1537       do n = 1, var_out%num_bcs
   1538         do m = 1, var_out%bc(n)%num_fields
   1539           if ( associated(var_out%bc(n)%field(m)%values) ) then
   1540             fc = fc + 1
   1541             call mpp_redistribute(domain_in, null_ptr2D,&
   1542                 & domain_out, var_out%bc(n)%field(m)%values,&
   1543                 & complete=(do_complete.and.(fc==fc_out)) )
   1544           endif
   1545         enddo
   1546       enddo
   1547     endif
   1548   end subroutine CT_redistribute_data_2d

Page 57          Source Listing                  CT_REDISTRIBUTE_DATA_2D
2021-06-01 08:55 Entry Points                    coupler_types.F90



ENTRY POINTS

  Name                                                     
                                                           
 coupler_types_mod_mp_ct_redistribute_data_2d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ASSOCIATED                 Func   1486                                 scalar                    1486,1494,1513,1514,1517,1528,1539
 COMPLETE                   Dummy  1464     L(4)            4           scalar   ARG,IN           1476                              
 CT_REDISTRIBUTE_DATA_2D    Subr   1464                                          PRIV                                               
 DOMAIN2D                   Type   1466                                 scalar                    38,1466,1468,1556,1558,3126,3327,3
                                                                                                  383,3415,3523,3577                
 DOMAIN_IN                  Dummy  1464     DOMAIN2D        752         scalar   ARG,IN           1519,1530,1541                    
 DOMAIN_OUT                 Dummy  1464     DOMAIN2D        752         scalar   ARG,IN           1520,1531,1542                    
 DO_COMPLETE                Local  1472     L(4)            4           scalar                    1475,1476,1521,1532,1543          
 DO_IN                      Local  1472     L(4)            4           scalar                    1479,1483,1490,1500,1507,1510,1525
 DO_OUT                     Local  1472     L(4)            4           scalar                    1480,1491,1498,1500,1507,1510,1536
 FC                         Local  1473     I(4)            4           scalar                    1509,1518,1521,1529,1532,1540,1543
 FC_IN                      Local  1473     I(4)            4           scalar                    1482,1486,1490,1503,1521,1532     
 FC_OUT                     Local  1473     I(4)            4           scalar                    1482,1494,1498,1503,1543          
 M                          Local  1473     I(4)            4           scalar                    1485,1486,1493,1494,1512,1513,1514
                                                                                                  ,1517,1519,1520,1527,1528,1530,153
                                                                                                  8,1539,1542                       
 MPP_REDISTRIBUTE           Local  1519                                 scalar   PRIV             38,1519,1530,1541,1610,1621,1632  
 MPP_REDISTRIBUTE_R8_2D     Subr   1519                                          PRIV             1519,1530,1541                    
 N                          Local  1473     I(4)            4           scalar                    1484,1485,1486,1492,1493,1494,1511
                                                                                                  ,1512,1513,1514,1517,1519,1520,152
                                                                                                  6,1527,1528,1530,1537,1538,1539,15
                                                                                                  42                                
 NULL                       Func   1471                                 scalar   PTR              91,108,111,112,116,118,128,139,156
                                                                                                  ,159,160,164,166,176,185,199,202,2
                                                                                                  03,215,1471,1561                  
 NULL_PTR2D                 Local  1471     R(8)            8     2     1        PTR              1471,1531,1541                    
 PRESENT                    Func   1476                                 scalar                    1476                              
 VAR_IN                     Dummy  1464     COUPLER_2D_BC_TYPE                                                                      
                                                            120         scalar   ARG,IN           1479,1484,1485,1486,1501,1511,1512
                                                                                                  ,1513,1517,1519,1526,1527,1528,153
                                                                                                  0                                 
 VAR_OUT                    Dummy  1464     COUPLER_2D_BC_TYPE                                                                      
                                                            120         scalar   ARG,INOUT        1480,1492,1493,1494,1501,1514,1520
                                                                                                  ,1537,1538,1539,1542              

Page 58          Source Listing                  CT_REDISTRIBUTE_DATA_2D
2021-06-01 08:55                                 coupler_types.F90

   1549 
   1550 !> @brief Redistributes the data in all elements of one coupler_2d_bc_type
   1551 !!
   1552 !! Redistributes the data in all elements of one coupler_2d_bc_type into another, which may be on
   1553 !! different processors with a different decomposition.
   1554   subroutine CT_redistribute_data_3d(var_in, domain_in, var_out, domain_out, complete)
   1555     type(coupler_3d_bc_type), intent(in)    :: var_in     !< BC_type structure with the data to copy (intent in)
   1556     type(domain2D),           intent(in)    :: domain_in  !< The FMS domain for the input structure
   1557     type(coupler_3d_bc_type), intent(inout) :: var_out    !< The recipient BC_type structure (data intent out)
   1558     type(domain2D),           intent(in)    :: domain_out !< The FMS domain for the output structure
   1559     logical,        optional, intent(in)    :: complete   !< If true, complete the updates
   1560 
   1561     real, pointer, dimension(:,:,:) :: null_ptr3D => NULL()
   1562     logical :: do_in, do_out, do_complete
   1563     integer :: m, n, fc, fc_in, fc_out
   1564 
   1565     do_complete = .true.
   1566     if (present(complete)) do_complete = complete
   1567 
   1568 ! Figure out whether this PE has valid input or output fields or both.
   1569     do_in = var_in%set
   1570     do_out = var_out%set
   1571 
   1572     fc_in = 0
   1573     fc_out = 0
   1574     if (do_in) then
   1575       do n = 1, var_in%num_bcs
   1576         do m = 1, var_in%bc(n)%num_fields
   1577           if (associated(var_in%bc(n)%field(m)%values)) fc_in = fc_in + 1
   1578         enddo
   1579       enddo
   1580     endif
   1581     if (fc_in == 0) do_in = .false.
   1582     if (do_out) then
   1583       do n = 1, var_out%num_bcs
   1584         do m = 1, var_out%bc(n)%num_fields
   1585           if (associated(var_out%bc(n)%field(m)%values)) fc_out = fc_out + 1
   1586         enddo
   1587       enddo
   1588     endif
   1589     if (fc_out == 0) do_out = .false.
   1590 
   1591     if (do_in .and. do_out) then
   1592       if (var_in%num_bcs /= var_out%num_bcs) call mpp_error(FATAL,&
   1593           & "Mismatch in num_bcs in CT_copy_data_3d.")
   1594       if (fc_in /= fc_out) call mpp_error(FATAL,&
   1595           & "Mismatch in the total number of fields in CT_redistribute_data_3d.")
   1596     endif
   1597 
   1598     if (.not.(do_in .or. do_out)) return
   1599 
   1600     fc = 0
   1601     if (do_in .and. do_out) then
   1602       do n = 1, var_in%num_bcs
   1603         do m = 1, var_in%bc(n)%num_fields
   1604           if ( associated(var_in%bc(n)%field(m)%values) .neqv.&
   1605               & associated(var_out%bc(n)%field(m)%values) )&

Page 59          Source Listing                  CT_REDISTRIBUTE_DATA_3D
2021-06-01 08:55                                 coupler_types.F90

   1606               & call mpp_error(FATAL,&
   1607               & "Mismatch in which fields are associated in CT_redistribute_data_3d.")
   1608           if ( associated(var_in%bc(n)%field(m)%values) ) then
   1609             fc = fc + 1
   1610             call mpp_redistribute(domain_in, var_in%bc(n)%field(m)%values,&
   1611                 & domain_out, var_out%bc(n)%field(m)%values,&
   1612                 & complete=(do_complete.and.(fc==fc_in)) )
   1613           endif
   1614         enddo
   1615       enddo
   1616     elseif (do_in) then
   1617       do n = 1, var_in%num_bcs
   1618         do m = 1, var_in%bc(n)%num_fields
   1619           if ( associated(var_in%bc(n)%field(m)%values) ) then
   1620             fc = fc + 1
   1621             call mpp_redistribute(domain_in, var_in%bc(n)%field(m)%values,&
   1622                 & domain_out, null_ptr3D,&
   1623                 & complete=(do_complete.and.(fc==fc_in)) )
   1624           endif
   1625         enddo
   1626       enddo
   1627     elseif (do_out) then
   1628       do n = 1, var_out%num_bcs
   1629         do m = 1, var_out%bc(n)%num_fields
   1630           if ( associated(var_out%bc(n)%field(m)%values) ) then
   1631             fc = fc + 1
   1632             call mpp_redistribute(domain_in, null_ptr3D,&
   1633                 & domain_out, var_out%bc(n)%field(m)%values,&
   1634                 & complete=(do_complete.and.(fc==fc_out)) )
   1635           endif
   1636         enddo
   1637       enddo
   1638     endif
   1639   end subroutine CT_redistribute_data_3d

Page 60          Source Listing                  CT_REDISTRIBUTE_DATA_3D
2021-06-01 08:55 Entry Points                    coupler_types.F90



ENTRY POINTS

  Name                                                     
                                                           
 coupler_types_mod_mp_ct_redistribute_data_3d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ASSOCIATED                 Func   1577                                 scalar                    1577,1585,1604,1605,1608,1619,1630
 COMPLETE                   Dummy  1554     L(4)            4           scalar   ARG,IN           1566                              
 CT_REDISTRIBUTE_DATA_3D    Subr   1554                                          PRIV                                               
 DOMAIN_IN                  Dummy  1554     DOMAIN2D        752         scalar   ARG,IN           1610,1621,1632                    
 DOMAIN_OUT                 Dummy  1554     DOMAIN2D        752         scalar   ARG,IN           1611,1622,1633                    
 DO_COMPLETE                Local  1562     L(4)            4           scalar                    1565,1566,1612,1623,1634          
 DO_IN                      Local  1562     L(4)            4           scalar                    1569,1574,1581,1591,1598,1601,1616
 DO_OUT                     Local  1562     L(4)            4           scalar                    1570,1582,1589,1591,1598,1601,1627
 FC                         Local  1563     I(4)            4           scalar                    1600,1609,1612,1620,1623,1631,1634
 FC_IN                      Local  1563     I(4)            4           scalar                    1572,1577,1581,1594,1612,1623     
 FC_OUT                     Local  1563     I(4)            4           scalar                    1573,1585,1589,1594,1634          
 M                          Local  1563     I(4)            4           scalar                    1576,1577,1584,1585,1603,1604,1605
                                                                                                  ,1608,1610,1611,1618,1619,1621,162
                                                                                                  9,1630,1633                       
 MPP_REDISTRIBUTE_R8_3D     Subr   1610                                          PRIV             1610,1621,1632                    
 N                          Local  1563     I(4)            4           scalar                    1575,1576,1577,1583,1584,1585,1602
                                                                                                  ,1603,1604,1605,1608,1610,1611,161
                                                                                                  7,1618,1619,1621,1628,1629,1630,16
                                                                                                  33                                
 NULL_PTR3D                 Local  1561     R(8)            8     3     1        PTR              1561,1622,1632                    
 PRESENT                    Func   1566                                 scalar                    1566                              
 VAR_IN                     Dummy  1554     COUPLER_3D_BC_TYPE                                                                      
                                                            128         scalar   ARG,IN           1569,1575,1576,1577,1592,1602,1603
                                                                                                  ,1604,1608,1610,1617,1618,1619,162
                                                                                                  1                                 
 VAR_OUT                    Dummy  1554     COUPLER_3D_BC_TYPE                                                                      
                                                            128         scalar   ARG,INOUT        1570,1583,1584,1585,1592,1605,1611
                                                                                                  ,1628,1629,1630,1633              

Page 61          Source Listing                  CT_REDISTRIBUTE_DATA_3D
2021-06-01 08:55                                 coupler_types.F90

   1640 
   1641 
   1642 !> @brief Rescales the fields in the fields in the elements of a coupler_2d_bc_type
   1643 !!
   1644 !! Rescales the fields in the elements of a coupler_2d_bc_type by multiplying by a factor scale.
   1645 !! If scale is 0, this is a direct assignment to 0, so that NaNs will not persist.
   1646   subroutine CT_rescale_data_2d(var, scale, halo_size, bc_index, field_index,&
   1647       & exclude_flux_type, only_flux_type, pass_through_ice)
   1648     type(coupler_2d_bc_type),   intent(inout) :: var !< The BC_type structure whose fields are being rescaled
   1649     real,                       intent(in)    :: scale   !< A scaling factor to multiply fields by
   1650     integer,          optional, intent(in)    :: halo_size !< The extent of the halo to copy; 0 by default or
   1651 !! the full arrays if scale is 0.
   1652     integer,          optional, intent(in)    :: bc_index  !< The index of the boundary condition
   1653 !! that is being copied
   1654     integer,          optional, intent(in)    :: field_index !< The index of the field in the
   1655 !! boundary condition that is being copied
   1656     character(len=*), optional, intent(in)    :: exclude_flux_type !< A string describing which types
   1657 !! of fluxes to exclude from this copy.
   1658     character(len=*), optional, intent(in)    :: only_flux_type !< A string describing which types
   1659 !! of fluxes to include from this copy.
   1660     logical,          optional, intent(in)    :: pass_through_ice !< If true, only copy BCs whose
   1661 !! value of pass_through ice matches this
   1662 
   1663     logical :: do_bc
   1664     integer :: i, j, m, n, n1, n2, halo
   1665 
   1666     if (present(bc_index)) then
   1667       if (bc_index > var%num_bcs)&
   1668           & call mpp_error(FATAL, "CT_rescale_data_2d: bc_index is present and exceeds var%num_bcs.")
   1669       if (present(field_index)) then ; if (field_index > var%bc(bc_index)%num_fields)&
   1670           & call mpp_error(FATAL, "CT_rescale_data_2d: field_index is present and exceeds num_fields for" //&
   1671           & trim(var%bc(bc_index)%name) )
   1672       endif
   1673     elseif (present(field_index)) then
   1674       call mpp_error(FATAL, "CT_rescale_data_2d: bc_index must be present if field_index is present.")
   1675     endif
   1676 
   1677     halo = 0
   1678     if (present(halo_size)) halo = halo_size
   1679 
   1680     n1 = 1
   1681     n2 = var%num_bcs
   1682     if (present(bc_index)) then
   1683       n1 = bc_index
   1684       n2 = bc_index
   1685     endif
   1686 
   1687     if (n2 >= n1) then
   1688 ! A more consciencious implementation would include a more descriptive error messages.
   1689       if ((var%isc-var%isd < halo) .or. (var%ied-var%iec < halo))&
   1690           & call mpp_error(FATAL, "CT_rescale_data_2d: Excessive i-direction halo size.")
   1691       if ((var%jsc-var%jsd < halo) .or. (var%jed-var%jec < halo))&
   1692           & call mpp_error(FATAL, "CT_rescale_data_2d: Excessive j-direction halo size.")
   1693     endif
   1694 
   1695     do n = n1, n2
   1696       do_bc = .true.

Page 62          Source Listing                  CT_RESCALE_DATA_2D
2021-06-01 08:55                                 coupler_types.F90

   1697       if (do_bc .and. present(exclude_flux_type))&
   1698           & do_bc = .not.(trim(var%bc(n)%flux_type) == trim(exclude_flux_type))
   1699       if (do_bc .and. present(only_flux_type))&
   1700           & do_bc = (trim(var%bc(n)%flux_type) == trim(only_flux_type))
   1701       if (do_bc .and. present(pass_through_ice))&
   1702           & do_bc = (pass_through_ice .eqv. var%bc(n)%pass_through_ice)
   1703       if (.not.do_bc) cycle
   1704 
   1705       do m = 1, var%bc(n)%num_fields
   1706         if (present(field_index)) then
   1707           if (m /= field_index) cycle
   1708         endif
   1709         if ( associated(var%bc(n)%field(m)%values) ) then
   1710           if (scale == 0.0) then
   1711             if (present(halo_size)) then
   1712               do j=var%jsc-halo,var%jec+halo
   1713                 do i=var%isc-halo,var%iec+halo
   1714                   var%bc(n)%field(m)%values(i,j) = 0.0
   1715                 enddo
   1716               enddo
   1717             else
   1718               var%bc(n)%field(m)%values(:,:) = 0.0
   1719             endif
   1720           else
   1721             do j=var%jsc-halo,var%jec+halo
   1722               do i=var%isc-halo,var%iec+halo
   1723                 var%bc(n)%field(m)%values(i,j) = scale * var%bc(n)%field(m)%values(i,j)
   1724               enddo
   1725             enddo
   1726           endif
   1727         endif
   1728       enddo
   1729     enddo
   1730   end subroutine CT_rescale_data_2d

Page 63          Source Listing                  CT_RESCALE_DATA_2D
2021-06-01 08:55 Entry Points                    coupler_types.F90



ENTRY POINTS

  Name                                                
                                                      
 coupler_types_mod_mp_ct_rescale_data_2d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ASSOCIATED                 Func   1709                                 scalar                    1709                              
 BC_INDEX                   Dummy  1646     I(4)            4           scalar   ARG,IN           1666,1667,1669,1671,1682,1683,1684
 CT_RESCALE_DATA_2D         Subr   1646                                          PRIV                                               
 DO_BC                      Local  1663     L(4)            4           scalar                    1696,1697,1698,1699,1700,1701,1702
                                                                                                  ,1703                             
 EXCLUDE_FLUX_TYPE          Dummy  1647     CHAR                        scalar   ARG,IN           1697,1698                         
 FIELD_INDEX                Dummy  1646     I(4)            4           scalar   ARG,IN           1669,1673,1706,1707               
 HALO                       Local  1664     I(4)            4           scalar                    1677,1678,1689,1691,1712,1713,1721
                                                                                                  ,1722                             
 HALO_SIZE                  Dummy  1646     I(4)            4           scalar   ARG,IN           1678,1711                         
 I                          Local  1664     I(4)            4           scalar                    1713,1714,1722,1723               
 J                          Local  1664     I(4)            4           scalar                    1712,1714,1721,1723               
 M                          Local  1664     I(4)            4           scalar                    1705,1707,1709,1714,1718,1723     
 N                          Local  1664     I(4)            4           scalar                    1695,1698,1700,1702,1705,1709,1714
                                                                                                  ,1718,1723                        
 N1                         Local  1664     I(4)            4           scalar                    1680,1683,1687,1695               
 N2                         Local  1664     I(4)            4           scalar                    1681,1684,1687,1695               
 ONLY_FLUX_TYPE             Dummy  1647     CHAR                        scalar   ARG,IN           1699,1700                         
 PASS_THROUGH_ICE           Dummy  1647     L(4)            4           scalar   ARG,IN           1701,1702                         
 PRESENT                    Func   1666                                 scalar                    1666,1669,1673,1678,1682,1697,1699
                                                                                                  ,1701,1706,1711                   
 SCALE                      Dummy  1646     R(8)            8           scalar   ARG,IN           1710,1723                         
 TRIM                       Func   1671                                 scalar                    1671,1698,1700                    
 VAR                        Dummy  1646     COUPLER_2D_BC_TYPE                                                                      
                                                            120         scalar   ARG,INOUT        1667,1669,1671,1681,1689,1691,1698
                                                                                                  ,1700,1702,1705,1709,1712,1713,171
                                                                                                  4,1718,1721,1722,1723             

Page 64          Source Listing                  CT_RESCALE_DATA_2D
2021-06-01 08:55                                 coupler_types.F90

   1731 
   1732 !! @brief Rescales the fields in the elements of a coupler_3d_bc_type
   1733 !!
   1734 !! This subroutine rescales the fields in the elements of a coupler_3d_bc_type by multiplying by a
   1735 !! factor scale.  If scale is 0, this is a direct assignment to 0, so that NaNs will not persist.
   1736   subroutine CT_rescale_data_3d(var, scale, halo_size, bc_index, field_index,&
   1737       & exclude_flux_type, only_flux_type, pass_through_ice)
   1738     type(coupler_3d_bc_type),   intent(inout) :: var !< The BC_type structure whose fields are being rescaled
   1739     real,                       intent(in)    :: scale   !< A scaling factor to multiply fields by
   1740     integer,          optional, intent(in)    :: halo_size !< The extent of the halo to copy; 0 by default or
   1741 !! the full arrays if scale is 0.
   1742     integer,          optional, intent(in)    :: bc_index  !< The index of the boundary condition
   1743 !! that is being copied
   1744     integer,          optional, intent(in)    :: field_index !< The index of the field in the
   1745 !! boundary condition that is being copied
   1746     character(len=*), optional, intent(in)    :: exclude_flux_type !< A string describing which types
   1747 !! of fluxes to exclude from this copy.
   1748     character(len=*), optional, intent(in)    :: only_flux_type !< A string describing which types of
   1749 !! fluxes to include from this copy.
   1750     logical,          optional, intent(in)    :: pass_through_ice !< If true, only copy BCs whose
   1751 !! value of pass_through ice matches this
   1752 
   1753     logical :: do_bc
   1754     integer :: i, j, k, m, n, n1, n2, halo
   1755 
   1756     if (present(bc_index)) then
   1757       if (bc_index > var%num_bcs)&
   1758           & call mpp_error(FATAL, "CT_rescale_data_2d: bc_index is present and exceeds var%num_bcs.")
   1759       if (present(field_index)) then ; if (field_index > var%bc(bc_index)%num_fields)&
   1760           & call mpp_error(FATAL, "CT_rescale_data_2d: field_index is present and exceeds num_fields for" //&
   1761           & trim(var%bc(bc_index)%name) )
   1762       endif
   1763     elseif (present(field_index)) then
   1764       call mpp_error(FATAL, "CT_rescale_data_2d: bc_index must be present if field_index is present.")
   1765     endif
   1766 
   1767     halo = 0
   1768     if (present(halo_size)) halo = halo_size
   1769 
   1770     n1 = 1
   1771     n2 = var%num_bcs
   1772     if (present(bc_index)) then
   1773       n1 = bc_index
   1774       n2 = bc_index
   1775     endif
   1776 
   1777     if (n2 >= n1) then
   1778 ! A more consciencious implementation would include a more descriptive error messages.
   1779       if ((var%isc-var%isd < halo) .or. (var%ied-var%iec < halo))&
   1780           & call mpp_error(FATAL, "CT_rescale_data_3d: Excessive i-direction halo size.")
   1781       if ((var%jsc-var%jsd < halo) .or. (var%jed-var%jec < halo))&
   1782           & call mpp_error(FATAL, "CT_rescale_data_3d: Excessive j-direction halo size.")
   1783     endif
   1784 
   1785     do n = n1, n2
   1786       do_bc = .true.
   1787       if (do_bc .and. present(exclude_flux_type))&

Page 65          Source Listing                  CT_RESCALE_DATA_3D
2021-06-01 08:55                                 coupler_types.F90

   1788           & do_bc = .not.(trim(var%bc(n)%flux_type) == trim(exclude_flux_type))
   1789       if (do_bc .and. present(only_flux_type))&
   1790           & do_bc = (trim(var%bc(n)%flux_type) == trim(only_flux_type))
   1791       if (do_bc .and. present(pass_through_ice))&
   1792           & do_bc = (pass_through_ice .eqv. var%bc(n)%pass_through_ice)
   1793       if (.not.do_bc) cycle
   1794 
   1795       do m = 1, var%bc(n)%num_fields
   1796         if (present(field_index)) then
   1797           if (m /= field_index) cycle
   1798         endif
   1799         if ( associated(var%bc(n)%field(m)%values) ) then
   1800           if (scale == 0.0) then
   1801             if (present(halo_size)) then
   1802               do k=var%ks,var%ke
   1803                 do j=var%jsc-halo,var%jec+halo
   1804                   do i=var%isc-halo,var%iec+halo
   1805                     var%bc(n)%field(m)%values(i,j,k) = 0.0
   1806                   enddo
   1807                 enddo
   1808               enddo
   1809             else
   1810               var%bc(n)%field(m)%values(:,:,:) = 0.0
   1811             endif
   1812           else
   1813             do k=var%ks,var%ke
   1814               do j=var%jsc-halo,var%jec+halo
   1815                 do i=var%isc-halo,var%iec+halo
   1816                   var%bc(n)%field(m)%values(i,j,k) = scale * var%bc(n)%field(m)%values(i,j,k)
   1817                 enddo
   1818               enddo
   1819             enddo
   1820           endif
   1821         endif
   1822       enddo
   1823     enddo
   1824   end subroutine CT_rescale_data_3d

Page 66          Source Listing                  CT_RESCALE_DATA_3D
2021-06-01 08:55 Entry Points                    coupler_types.F90



ENTRY POINTS

  Name                                                
                                                      
 coupler_types_mod_mp_ct_rescale_data_3d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ASSOCIATED                 Func   1799                                 scalar                    1799                              
 BC_INDEX                   Dummy  1736     I(4)            4           scalar   ARG,IN           1756,1757,1759,1761,1772,1773,1774
 CT_RESCALE_DATA_3D         Subr   1736                                          PRIV                                               
 DO_BC                      Local  1753     L(4)            4           scalar                    1786,1787,1788,1789,1790,1791,1792
                                                                                                  ,1793                             
 EXCLUDE_FLUX_TYPE          Dummy  1737     CHAR                        scalar   ARG,IN           1787,1788                         
 FIELD_INDEX                Dummy  1736     I(4)            4           scalar   ARG,IN           1759,1763,1796,1797               
 HALO                       Local  1754     I(4)            4           scalar                    1767,1768,1779,1781,1803,1804,1814
                                                                                                  ,1815                             
 HALO_SIZE                  Dummy  1736     I(4)            4           scalar   ARG,IN           1768,1801                         
 I                          Local  1754     I(4)            4           scalar                    1804,1805,1815,1816               
 J                          Local  1754     I(4)            4           scalar                    1803,1805,1814,1816               
 K                          Local  1754     I(4)            4           scalar                    1802,1805,1813,1816               
 M                          Local  1754     I(4)            4           scalar                    1795,1797,1799,1805,1810,1816     
 N                          Local  1754     I(4)            4           scalar                    1785,1788,1790,1792,1795,1799,1805
                                                                                                  ,1810,1816                        
 N1                         Local  1754     I(4)            4           scalar                    1770,1773,1777,1785               
 N2                         Local  1754     I(4)            4           scalar                    1771,1774,1777,1785               
 ONLY_FLUX_TYPE             Dummy  1737     CHAR                        scalar   ARG,IN           1789,1790                         
 PASS_THROUGH_ICE           Dummy  1737     L(4)            4           scalar   ARG,IN           1791,1792                         
 PRESENT                    Func   1756                                 scalar                    1756,1759,1763,1768,1772,1787,1789
                                                                                                  ,1791,1796,1801                   
 SCALE                      Dummy  1736     R(8)            8           scalar   ARG,IN           1800,1816                         
 TRIM                       Func   1761                                 scalar                    1761,1788,1790                    
 VAR                        Dummy  1736     COUPLER_3D_BC_TYPE                                                                      
                                                            128         scalar   ARG,INOUT        1757,1759,1761,1771,1779,1781,1788
                                                                                                  ,1790,1792,1795,1799,1802,1803,180
                                                                                                  4,1805,1810,1813,1814,1815,1816   

Page 67          Source Listing                  CT_RESCALE_DATA_3D
2021-06-01 08:55                                 coupler_types.F90

   1825 
   1826 
   1827 !! @brief Increment data in all elements of one coupler_2d_bc_type
   1828 !!
   1829 !! Do a direct increment of the data in all elements of one coupler_2d_bc_type into another.  Both
   1830 !! must have the same array sizes.
   1831 !!
   1832 !! @throw FATAL, "bc_index is present and exceeds var_in%num_bcs."
   1833 !! @throw FATAL, "field_index is present and exceeds num_fields for var_in%bc(bc_incdx)%name"
   1834 !! @throw FATAL, "bc_index must be present if field_index is present."
   1835 !! @throw FATAL, "There is an i-direction computational domain size mismatch."
   1836 !! @throw FATAL, "There is an j-direction computational domain size mismatch."
   1837 !! @throw FATAL, "Excessive i-direction halo size for the input structure."
   1838 !! @throw FATAL, "Excessive i-direction halo size for the input structure."
   1839   subroutine CT_increment_data_2d_2d(var_in, var, halo_size, bc_index, field_index,&
   1840       & scale_factor, scale_prev, exclude_flux_type, only_flux_type, pass_through_ice)
   1841     type(coupler_2d_bc_type),   intent(in)    :: var_in  !< BC_type structure with the data to add to the other type
   1842     type(coupler_2d_bc_type),   intent(inout) :: var !< The BC_type structure whose fields are being incremented
   1843     integer,          optional, intent(in)    :: halo_size !< The extent of the halo to increment; 0 by default
   1844     integer,          optional, intent(in)    :: bc_index  !< The index of the boundary condition
   1845 !! that is being copied
   1846     integer,          optional, intent(in)    :: field_index !< The index of the field in the
   1847 !! boundary condition that is being copied
   1848     real,             optional, intent(in)    :: scale_factor  !< A scaling factor for the data that is being added
   1849     real,             optional, intent(in)    :: scale_prev    !< A scaling factor for the data that is already here
   1850     character(len=*), optional, intent(in)    :: exclude_flux_type !< A string describing which types
   1851 !! of fluxes to exclude from this increment.
   1852     character(len=*), optional, intent(in)    :: only_flux_type    !< A string describing which types
   1853 !! of fluxes to include from this increment.
   1854     logical,          optional, intent(in)    :: pass_through_ice !< If true, only increment BCs whose
   1855 !! value of pass_through ice matches this
   1856 
   1857     real :: scale, sc_prev
   1858     logical :: increment_bc
   1859     integer :: i, j, m, n, n1, n2, halo, i_off, j_off
   1860 
   1861     scale = 1.0
   1862     if (present(scale_factor)) scale = scale_factor
   1863     sc_prev = 1.0
   1864     if (present(scale_prev)) sc_prev = scale_prev
   1865 
   1866     if (present(bc_index)) then
   1867       if (bc_index > var_in%num_bcs)&
   1868           & call mpp_error(FATAL, "CT_increment_data_2d_2d: bc_index is present and exceeds var_in%num_bcs.")
   1869       if (present(field_index)) then
   1870         if (field_index > var_in%bc(bc_index)%num_fields)&
   1871             & call mpp_error(FATAL, "CT_increment_data_2d_2d: field_index is present and exceeds num_fields for" //&
   1872             & trim(var_in%bc(bc_index)%name) )
   1873       endif
   1874     elseif (present(field_index)) then
   1875       call mpp_error(FATAL, "CT_increment_data_2d_2d: bc_index must be present if field_index is present.")
   1876     endif
   1877 
   1878     halo = 0
   1879     if (present(halo_size)) halo = halo_size
   1880 
   1881     n1 = 1

Page 68          Source Listing                  CT_INCREMENT_DATA_2D_2D
2021-06-01 08:55                                 coupler_types.F90

   1882     n2 = var_in%num_bcs
   1883     if (present(bc_index)) then
   1884       n1 = bc_index
   1885       n2 = bc_index
   1886     endif
   1887 
   1888     if (n2 >= n1) then
   1889 ! A more consciencious implementation would include a more descriptive error messages.
   1890       if ((var_in%iec-var_in%isc) /= (var%iec-var%isc))&
   1891           & call mpp_error(FATAL, "CT_increment_data_2d: There is an i-direction computational domain size mismatch.")
   1892       if ((var_in%jec-var_in%jsc) /= (var%jec-var%jsc))&
   1893           & call mpp_error(FATAL, "CT_increment_data_2d: There is a j-direction computational domain size mismatch.")
   1894       if ((var_in%isc-var_in%isd < halo) .or. (var_in%ied-var_in%iec < halo))&
   1895           & call mpp_error(FATAL, "CT_increment_data_2d: Excessive i-direction halo size for the input structure.")
   1896       if ((var_in%jsc-var_in%jsd < halo) .or. (var_in%jed-var_in%jec < halo))&
   1897           & call mpp_error(FATAL, "CT_increment_data_2d: Excessive j-direction halo size for the input structure.")
   1898       if ((var%isc-var%isd < halo) .or. (var%ied-var%iec < halo))&
   1899           & call mpp_error(FATAL, "CT_increment_data_2d: Excessive i-direction halo size for the output structure.")
   1900       if ((var%jsc-var%jsd < halo) .or. (var%jed-var%jec < halo))&
   1901           & call mpp_error(FATAL, "CT_increment_data_2d: Excessive j-direction halo size for the output structure.")
   1902 
   1903       i_off = var_in%isc - var%isc
   1904       j_off = var_in%jsc - var%jsc
   1905     endif
   1906 
   1907     do n = n1, n2
   1908       increment_bc = .true.
   1909       if (increment_bc .and. present(exclude_flux_type))&
   1910           & increment_bc = .not.(trim(var%bc(n)%flux_type) == trim(exclude_flux_type))
   1911       if (increment_bc .and. present(only_flux_type))&
   1912           & increment_bc = (trim(var%bc(n)%flux_type) == trim(only_flux_type))
   1913       if (increment_bc .and. present(pass_through_ice))&
   1914           & increment_bc = (pass_through_ice .eqv. var%bc(n)%pass_through_ice)
   1915       if (.not.increment_bc) cycle
   1916 
   1917       do m = 1, var_in%bc(n)%num_fields
   1918         if (present(field_index)) then
   1919           if (m /= field_index) cycle
   1920         endif
   1921         if ( associated(var%bc(n)%field(m)%values) ) then
   1922           do j=var%jsc-halo,var%jec+halo
   1923             do i=var%isc-halo,var%iec+halo
   1924               var%bc(n)%field(m)%values(i,j) = sc_prev * var%bc(n)%field(m)%values(i,j) +&
   1925                   & scale * var_in%bc(n)%field(m)%values(i+i_off,j+j_off)
   1926             enddo
   1927           enddo
   1928         endif
   1929       enddo
   1930     enddo
   1931   end subroutine CT_increment_data_2d_2d

Page 69          Source Listing                  CT_INCREMENT_DATA_2D_2D
2021-06-01 08:55 Entry Points                    coupler_types.F90



ENTRY POINTS

  Name                                                     
                                                           
 coupler_types_mod_mp_ct_increment_data_2d_2d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ASSOCIATED                 Func   1921                                 scalar                    1921                              
 BC_INDEX                   Dummy  1839     I(4)            4           scalar   ARG,IN           1866,1867,1870,1872,1883,1884,1885
 CT_INCREMENT_DATA_2D_2D    Subr   1839                                          PRIV                                               
 EXCLUDE_FLUX_TYPE          Dummy  1840     CHAR                        scalar   ARG,IN           1909,1910                         
 FIELD_INDEX                Dummy  1839     I(4)            4           scalar   ARG,IN           1869,1870,1874,1918,1919          
 HALO                       Local  1859     I(4)            4           scalar                    1878,1879,1894,1896,1898,1900,1922
                                                                                                  ,1923                             
 HALO_SIZE                  Dummy  1839     I(4)            4           scalar   ARG,IN           1879                              
 I                          Local  1859     I(4)            4           scalar                    1923,1924,1925                    
 INCREMENT_BC               Local  1858     L(4)            4           scalar                    1908,1909,1910,1911,1912,1913,1914
                                                                                                  ,1915                             
 I_OFF                      Local  1859     I(4)            4           scalar                    1903,1925                         
 J                          Local  1859     I(4)            4           scalar                    1922,1924,1925                    
 J_OFF                      Local  1859     I(4)            4           scalar                    1904,1925                         
 M                          Local  1859     I(4)            4           scalar                    1917,1919,1921,1924,1925          
 N                          Local  1859     I(4)            4           scalar                    1907,1910,1912,1914,1917,1921,1924
                                                                                                  ,1925                             
 N1                         Local  1859     I(4)            4           scalar                    1881,1884,1888,1907               
 N2                         Local  1859     I(4)            4           scalar                    1882,1885,1888,1907               
 ONLY_FLUX_TYPE             Dummy  1840     CHAR                        scalar   ARG,IN           1911,1912                         
 PASS_THROUGH_ICE           Dummy  1840     L(4)            4           scalar   ARG,IN           1913,1914                         
 PRESENT                    Func   1862                                 scalar                    1862,1864,1866,1869,1874,1879,1883
                                                                                                  ,1909,1911,1913,1918              
 SCALE                      Local  1857     R(8)            8           scalar                    1861,1862,1925                    
 SCALE_FACTOR               Dummy  1840     R(8)            8           scalar   ARG,IN           1862                              
 SCALE_PREV                 Dummy  1840     R(8)            8           scalar   ARG,IN           1864                              
 SC_PREV                    Local  1857     R(8)            8           scalar                    1863,1864,1924                    
 TRIM                       Func   1872                                 scalar                    1872,1910,1912                    
 VAR                        Dummy  1839     COUPLER_2D_BC_TYPE                                                                      
                                                            120         scalar   ARG,INOUT        1890,1892,1898,1900,1903,1904,1910
                                                                                                  ,1912,1914,1921,1922,1923,1924    
 VAR_IN                     Dummy  1839     COUPLER_2D_BC_TYPE                                                                      
                                                            120         scalar   ARG,IN           1867,1870,1872,1882,1890,1892,1894
                                                                                                  ,1896,1903,1904,1917,1925         

Page 70          Source Listing                  CT_INCREMENT_DATA_2D_2D
2021-06-01 08:55                                 coupler_types.F90

   1932 
   1933 
   1934 !! @brief Increment data in all elements of one coupler_3d_bc_type
   1935 !!
   1936 !! Do a direct increment of the data in all elements of one coupler_3d_bc_type into another.  Both
   1937 !! must have the same array sizes.
   1938 !!
   1939 !! @throw FATAL, "bc_index is present and exceeds var_in%num_bcs."
   1940 !! @throw FATAL, "field_index is present and exceeds num_fields for var_in%bc(bc_incdx)%name"
   1941 !! @throw FATAL, "bc_index must be present if field_index is present."
   1942 !! @throw FATAL, "There is an i-direction computational domain size mismatch."
   1943 !! @throw FATAL, "There is an j-direction computational domain size mismatch."
   1944 !! @throw FATAL, "There is an k-direction computational domain size mismatch."
   1945 !! @throw FATAL, "Excessive i-direction halo size for the input structure."
   1946 !! @throw FATAL, "Excessive i-direction halo size for the input structure."
   1947 !! @throw FATAL, "Excessive k-direction halo size for the input structure."
   1948   subroutine CT_increment_data_3d_3d(var_in, var, halo_size, bc_index, field_index,&
   1949       & scale_factor, scale_prev, exclude_flux_type, only_flux_type, pass_through_ice)
   1950     type(coupler_3d_bc_type),   intent(in)    :: var_in  !< BC_type structure with the data to add to the other type
   1951     type(coupler_3d_bc_type),   intent(inout) :: var !< The BC_type structure whose fields are being incremented
   1952     integer,          optional, intent(in)    :: halo_size !< The extent of the halo to copy; 0 by default
   1953     integer,          optional, intent(in)    :: bc_index !< The index of the boundary condition
   1954 !! that is being copied
   1955     integer,          optional, intent(in)    :: field_index !< The index of the field in the
   1956 !! boundary condition that is being copied
   1957     real,             optional, intent(in)    :: scale_factor  !< A scaling factor for the data that is being added
   1958     real,             optional, intent(in)    :: scale_prev !< A scaling factor for the data that is already here
   1959     character(len=*), optional, intent(in)    :: exclude_flux_type !< A string describing which types
   1960 !! of fluxes to exclude from this increment.
   1961     character(len=*), optional, intent(in)    :: only_flux_type !< A string describing which types of
   1962 !! fluxes to include from this increment.
   1963     logical,          optional, intent(in)    :: pass_through_ice !< If true, only increment BCs whose
   1964 !! value of pass_through ice matches this
   1965 
   1966     real :: scale, sc_prev
   1967     logical :: increment_bc
   1968     integer :: i, j, k, m, n, n1, n2, halo, i_off, j_off, k_off
   1969 
   1970     scale = 1.0
   1971     if (present(scale_factor)) scale = scale_factor
   1972     sc_prev = 1.0
   1973     if (present(scale_prev)) sc_prev = scale_prev
   1974 
   1975     if (present(bc_index)) then
   1976       if (bc_index > var_in%num_bcs)&
   1977           & call mpp_error(FATAL, "CT_increment_data_3d_3d: bc_index is present and exceeds var_in%num_bcs.")
   1978       if (present(field_index)) then ; if (field_index > var_in%bc(bc_index)%num_fields)&
   1979           & call mpp_error(FATAL, "CT_increment_data_3d_3d: field_index is present and exceeds num_fields for" //&
   1980           & trim(var_in%bc(bc_index)%name) )
   1981       endif
   1982     elseif (present(field_index)) then
   1983       call mpp_error(FATAL, "CT_increment_data_3d_3d: bc_index must be present if field_index is present.")
   1984     endif
   1985 
   1986     halo = 0
   1987     if (present(halo_size)) halo = halo_size
   1988 

Page 71          Source Listing                  CT_INCREMENT_DATA_3D_3D
2021-06-01 08:55                                 coupler_types.F90

   1989     n1 = 1
   1990     n2 = var_in%num_bcs
   1991     if (present(bc_index)) then
   1992       n1 = bc_index
   1993       n2 = bc_index
   1994     endif
   1995 
   1996     if (n2 >= n1) then
   1997 ! A more consciencious implementation would include a more descriptive error messages.
   1998       if ((var_in%iec-var_in%isc) /= (var%iec-var%isc))&
   1999           & call mpp_error(FATAL, "CT_increment_data_3d: There is an i-direction computational domain size mismatch.")
   2000       if ((var_in%jec-var_in%jsc) /= (var%jec-var%jsc))&
   2001           & call mpp_error(FATAL, "CT_increment_data_3d: There is a j-direction computational domain size mismatch.")
   2002       if ((var_in%ke-var_in%ks) /= (var%ke-var%ks))&
   2003           & call mpp_error(FATAL, "CT_increment_data_3d: There is a k-direction computational domain size mismatch.")
   2004       if ((var_in%isc-var_in%isd < halo) .or. (var_in%ied-var_in%iec < halo))&
   2005           & call mpp_error(FATAL, "CT_increment_data_3d: Excessive i-direction halo size for the input structure.")
   2006       if ((var_in%jsc-var_in%jsd < halo) .or. (var_in%jed-var_in%jec < halo))&
   2007           & call mpp_error(FATAL, "CT_increment_data_3d: Excessive j-direction halo size for the input structure.")
   2008       if ((var%isc-var%isd < halo) .or. (var%ied-var%iec < halo))&
   2009           & call mpp_error(FATAL, "CT_increment_data_3d: Excessive i-direction halo size for the output structure.")
   2010       if ((var%jsc-var%jsd < halo) .or. (var%jed-var%jec < halo))&
   2011           & call mpp_error(FATAL, "CT_increment_data_3d: Excessive j-direction halo size for the output structure.")
   2012 
   2013       i_off = var_in%isc - var%isc
   2014       j_off = var_in%jsc - var%jsc
   2015       k_off = var_in%ks - var%ks
   2016     endif
   2017 
   2018     do n = n1, n2
   2019       increment_bc = .true.
   2020       if (increment_bc .and. present(exclude_flux_type))&
   2021           & increment_bc = .not.(trim(var%bc(n)%flux_type) == trim(exclude_flux_type))
   2022       if (increment_bc .and. present(only_flux_type))&
   2023           & increment_bc = (trim(var%bc(n)%flux_type) == trim(only_flux_type))
   2024       if (increment_bc .and. present(pass_through_ice))&
   2025           & increment_bc = (pass_through_ice .eqv. var%bc(n)%pass_through_ice)
   2026       if (.not.increment_bc) cycle
   2027 
   2028       do m = 1, var_in%bc(n)%num_fields
   2029         if (present(field_index)) then
   2030           if (m /= field_index) cycle
   2031         endif
   2032         if ( associated(var%bc(n)%field(m)%values) ) then
   2033           do k=var%ks,var%ke
   2034             do j=var%jsc-halo,var%jec+halo
   2035               do i=var%isc-halo,var%iec+halo
   2036                 var%bc(n)%field(m)%values(i,j,k) = sc_prev * var%bc(n)%field(m)%values(i,j,k) +&
   2037                     & scale * var_in%bc(n)%field(m)%values(i+i_off,j+j_off,k+k_off)
   2038               enddo
   2039             enddo
   2040           enddo
   2041         endif
   2042       enddo
   2043     enddo
   2044   end subroutine CT_increment_data_3d_3d

Page 72          Source Listing                  CT_INCREMENT_DATA_3D_3D
2021-06-01 08:55 Entry Points                    coupler_types.F90



ENTRY POINTS

  Name                                                     
                                                           
 coupler_types_mod_mp_ct_increment_data_3d_3d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ASSOCIATED                 Func   2032                                 scalar                    2032                              
 BC_INDEX                   Dummy  1948     I(4)            4           scalar   ARG,IN           1975,1976,1978,1980,1991,1992,1993
 CT_INCREMENT_DATA_3D_3D    Subr   1948                                          PRIV                                               
 EXCLUDE_FLUX_TYPE          Dummy  1949     CHAR                        scalar   ARG,IN           2020,2021                         
 FIELD_INDEX                Dummy  1948     I(4)            4           scalar   ARG,IN           1978,1982,2029,2030               
 HALO                       Local  1968     I(4)            4           scalar                    1986,1987,2004,2006,2008,2010,2034
                                                                                                  ,2035                             
 HALO_SIZE                  Dummy  1948     I(4)            4           scalar   ARG,IN           1987                              
 I                          Local  1968     I(4)            4           scalar                    2035,2036,2037                    
 INCREMENT_BC               Local  1967     L(4)            4           scalar                    2019,2020,2021,2022,2023,2024,2025
                                                                                                  ,2026                             
 I_OFF                      Local  1968     I(4)            4           scalar                    2013,2037                         
 J                          Local  1968     I(4)            4           scalar                    2034,2036,2037                    
 J_OFF                      Local  1968     I(4)            4           scalar                    2014,2037                         
 K                          Local  1968     I(4)            4           scalar                    2033,2036,2037                    
 K_OFF                      Local  1968     I(4)            4           scalar                    2015,2037                         
 M                          Local  1968     I(4)            4           scalar                    2028,2030,2032,2036,2037          
 N                          Local  1968     I(4)            4           scalar                    2018,2021,2023,2025,2028,2032,2036
                                                                                                  ,2037                             
 N1                         Local  1968     I(4)            4           scalar                    1989,1992,1996,2018               
 N2                         Local  1968     I(4)            4           scalar                    1990,1993,1996,2018               
 ONLY_FLUX_TYPE             Dummy  1949     CHAR                        scalar   ARG,IN           2022,2023                         
 PASS_THROUGH_ICE           Dummy  1949     L(4)            4           scalar   ARG,IN           2024,2025                         
 PRESENT                    Func   1971                                 scalar                    1971,1973,1975,1978,1982,1987,1991
                                                                                                  ,2020,2022,2024,2029              
 SCALE                      Local  1966     R(8)            8           scalar                    1970,1971,2037                    
 SCALE_FACTOR               Dummy  1949     R(8)            8           scalar   ARG,IN           1971                              
 SCALE_PREV                 Dummy  1949     R(8)            8           scalar   ARG,IN           1973                              
 SC_PREV                    Local  1966     R(8)            8           scalar                    1972,1973,2036                    
 TRIM                       Func   1980                                 scalar                    1980,2021,2023                    
 VAR                        Dummy  1948     COUPLER_3D_BC_TYPE                                                                      
                                                            128         scalar   ARG,INOUT        1998,2000,2002,2008,2010,2013,2014
                                                                                                  ,2015,2021,2023,2025,2032,2033,203
                                                                                                  4,2035,2036                       
 VAR_IN                     Dummy  1948     COUPLER_3D_BC_TYPE                                                                      
                                                            128         scalar   ARG,IN           1976,1978,1980,1990,1998,2000,2002
                                                                                                  ,2004,2006,2013,2014,2015,2028,203
                                                                                                  7                                 

Page 73          Source Listing                  CT_INCREMENT_DATA_3D_3D
2021-06-01 08:55                                 coupler_types.F90

   2045 
   2046 !! @brief Increment data in the elements of a coupler_2d_bc_type with weighted averages of elements of a
   2047 !! coupler_3d_bc_type
   2048 !!
   2049 !! Increments the data in the elements of a coupler_2d_bc_type with the weighed average of the
   2050 !! elements of a coupler_3d_bc_type. Both must have the same horizontal array sizes and the
   2051 !! normalized weight array must match the array sizes of the coupler_3d_bc_type.
   2052 !!
   2053 !! @throw FATAL, "bc_index is present and exceeds var_in%num_bcs."
   2054 !! @throw FATAL, "field_index is present and exceeds num_fields for var_in%bc(bc_incdx)%name"
   2055 !! @throw FATAL, "bc_index must be present if field_index is present."
   2056 !! @throw FATAL, "There is an i-direction computational domain size mismatch."
   2057 !! @throw FATAL, "There is an j-direction computational domain size mismatch."
   2058 !! @throw FATAL, "There is an k-direction computational domain size mismatch."
   2059 !! @throw FATAL, "Excessive i-direction halo size for the input structure."
   2060 !! @throw FATAL, "Excessive i-direction halo size for the input structure."
   2061 !! @throw FATAL, "weights array must be the i-size of a computational or data domain."
   2062 !! @throw FATAL, "weights array must be the j-size of a computational or data domain."
   2063   subroutine CT_increment_data_2d_3d(var_in, weights, var, halo_size, bc_index, field_index,&
   2064       & scale_factor, scale_prev, exclude_flux_type, only_flux_type, pass_through_ice)
   2065     type(coupler_3d_bc_type),   intent(in)    :: var_in  !< BC_type structure with the data to add to the other type
   2066     real, dimension(:,:,:),     intent(in)    :: weights !< An array of normalized weights for the 3d-data to
   2067 !! increment the 2d-data.  There is no renormalization,
   2068 !! so if the weights do not sum to 1 in the 3rd dimension
   2069 !! there may be adverse consequences!
   2070     type(coupler_2d_bc_type),   intent(inout) :: var !< The BC_type structure whose fields are being incremented
   2071     integer,          optional, intent(in)    :: halo_size !< The extent of the halo to copy; 0 by default
   2072     integer,          optional, intent(in)    :: bc_index  !< The index of the boundary condition
   2073 !! that is being copied
   2074     integer,          optional, intent(in)    :: field_index !< The index of the field in the
   2075 !! boundary condition that is being copied
   2076     real,             optional, intent(in)    :: scale_factor  !< A scaling factor for the data that is being added
   2077     real,             optional, intent(in)    :: scale_prev    !< A scaling factor for the data that is already here
   2078     character(len=*), optional, intent(in)    :: exclude_flux_type !< A string describing which types
   2079 !! of fluxes to exclude from this increment.
   2080     character(len=*), optional, intent(in)    :: only_flux_type    !< A string describing which types
   2081 !! of fluxes to include from this increment.
   2082     logical,          optional, intent(in)    :: pass_through_ice !< If true, only increment BCs whose
   2083 !! value of pass_through ice matches this
   2084 
   2085     real :: scale, sc_prev
   2086     logical :: increment_bc
   2087     integer :: i, j, k, m, n, n1, n2, halo
   2088     integer :: io1, jo1, iow, jow, kow  ! Offsets to account for different index conventions.
   2089 
   2090     scale = 1.0
   2091     if (present(scale_factor)) scale = scale_factor
   2092     sc_prev = 1.0
   2093     if (present(scale_prev)) sc_prev = scale_prev
   2094 
   2095     if (present(bc_index)) then
   2096       if (bc_index > var_in%num_bcs)&
   2097           & call mpp_error(FATAL, "CT_increment_data_2d_3d: bc_index is present and exceeds var_in%num_bcs.")
   2098       if (present(field_index)) then ; if (field_index > var_in%bc(bc_index)%num_fields)&
   2099           & call mpp_error(FATAL, "CT_increment_data_2d_3d: field_index is present and exceeds num_fields for" //&
   2100           & trim(var_in%bc(bc_index)%name) )
   2101       endif

Page 74          Source Listing                  CT_INCREMENT_DATA_2D_3D
2021-06-01 08:55                                 coupler_types.F90

   2102     elseif (present(field_index)) then
   2103       call mpp_error(FATAL, "CT_increment_data_2d_3d: bc_index must be present if field_index is present.")
   2104     endif
   2105 
   2106     halo = 0
   2107     if (present(halo_size)) halo = halo_size
   2108 
   2109     n1 = 1
   2110     n2 = var_in%num_bcs
   2111     if (present(bc_index)) then
   2112       n1 = bc_index
   2113       n2 = bc_index
   2114     endif
   2115 
   2116     if (n2 >= n1) then
   2117 ! A more consciencious implementation would include a more descriptive error messages.
   2118       if ((var_in%iec-var_in%isc) /= (var%iec-var%isc))&
   2119           & call mpp_error(FATAL, "CT_increment_data_2d_3d: There is an i-direction computational domain size mismatch.")
   2120       if ((var_in%jec-var_in%jsc) /= (var%jec-var%jsc))&
   2121           & call mpp_error(FATAL, "CT_increment_data_2d_3d: There is a j-direction computational domain size mismatch.")
   2122       if ((1+var_in%ke-var_in%ks) /= size(weights,3))&
   2123           & call mpp_error(FATAL, "CT_increment_data_2d_3d: There is a k-direction size mismatch with the weights array.")
   2124       if ((var_in%isc-var_in%isd < halo) .or. (var_in%ied-var_in%iec < halo))&
   2125           & call mpp_error(FATAL, "CT_increment_data_2d_3d: Excessive i-direction halo size for the input structure.")
   2126       if ((var_in%jsc-var_in%jsd < halo) .or. (var_in%jed-var_in%jec < halo))&
   2127           & call mpp_error(FATAL, "CT_increment_data_2d_3d: Excessive j-direction halo size for the input structure.")
   2128       if ((var%isc-var%isd < halo) .or. (var%ied-var%iec < halo))&
   2129           & call mpp_error(FATAL, "CT_increment_data_2d_3d: Excessive i-direction halo size for the output structure.")
   2130       if ((var%jsc-var%jsd < halo) .or. (var%jed-var%jec < halo))&
   2131           & call mpp_error(FATAL, "CT_increment_data_2d_3d: Excessive j-direction halo size for the output structure.")
   2132 
   2133       if ((1+var%iec-var%isc) == size(weights,1)) then
   2134         iow = 1 - var%isc
   2135       elseif ((1+var%ied-var%isd) == size(weights,1)) then
   2136         iow = 1 - var%isd
   2137       elseif ((1+var_in%ied-var_in%isd) == size(weights,1)) then
   2138         iow = 1 + (var_in%isc - var_in%isd) - var%isc
   2139       else
   2140         call mpp_error(FATAL, "CT_increment_data_2d_3d: weights array must be the i-size of a computational or data domain."
   2140 )
   2141       endif
   2142       if ((1+var%jec-var%jsc) == size(weights,2)) then
   2143         jow = 1 - var%jsc
   2144       elseif ((1+var%jed-var%jsd) == size(weights,2)) then
   2145         jow = 1 - var%jsd
   2146       elseif ((1+var_in%jed-var_in%jsd) == size(weights,2)) then
   2147         jow = 1 + (var_in%jsc - var_in%jsd) - var%jsc
   2148       else
   2149         call mpp_error(FATAL, "CT_increment_data_2d_3d: weights array must be the j-size of a computational or data domain."
   2149 )
   2150       endif
   2151 
   2152       io1 = var_in%isc - var%isc
   2153       jo1 = var_in%jsc - var%jsc
   2154       kow = 1 - var_in%ks
   2155     endif
   2156 

Page 75          Source Listing                  CT_INCREMENT_DATA_2D_3D
2021-06-01 08:55                                 coupler_types.F90

   2157     do n = n1, n2
   2158       increment_bc = .true.
   2159       if (increment_bc .and. present(exclude_flux_type))&
   2160           & increment_bc = .not.(trim(var_in%bc(n)%flux_type) == trim(exclude_flux_type))
   2161       if (increment_bc .and. present(only_flux_type))&
   2162           & increment_bc = (trim(var_in%bc(n)%flux_type) == trim(only_flux_type))
   2163       if (increment_bc .and. present(pass_through_ice))&
   2164           & increment_bc = (pass_through_ice .eqv. var_in%bc(n)%pass_through_ice)
   2165       if (.not.increment_bc) cycle
   2166 
   2167       do m = 1, var_in%bc(n)%num_fields
   2168         if (present(field_index)) then
   2169           if (m /= field_index) cycle
   2170         endif
   2171         if ( associated(var%bc(n)%field(m)%values) ) then
   2172           do k=var_in%ks,var_in%ke
   2173             do j=var%jsc-halo,var%jec+halo
   2174               do i=var%isc-halo,var%iec+halo
   2175                 var%bc(n)%field(m)%values(i,j) = sc_prev * var%bc(n)%field(m)%values(i,j) +&
   2176                     & (scale * weights(i+iow,j+jow,k+kow)) * var_in%bc(n)%field(m)%values(i+io1,j+io1,k)
   2177               enddo
   2178             enddo
   2179           enddo
   2180         endif
   2181       enddo
   2182     enddo
   2183   end subroutine CT_increment_data_2d_3d


ENTRY POINTS

  Name                                                     
                                                           
 coupler_types_mod_mp_ct_increment_data_2d_3d_             

Page 76          Source Listing                  CT_INCREMENT_DATA_2D_3D
2021-06-01 08:55 Symbol Table                    coupler_types.F90



SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ASSOCIATED                 Func   2171                                 scalar                    2171                              
 BC_INDEX                   Dummy  2063     I(4)            4           scalar   ARG,IN           2095,2096,2098,2100,2111,2112,2113
 CT_INCREMENT_DATA_2D_3D    Subr   2063                                          PRIV                                               
 EXCLUDE_FLUX_TYPE          Dummy  2064     CHAR                        scalar   ARG,IN           2159,2160                         
 FIELD_INDEX                Dummy  2063     I(4)            4           scalar   ARG,IN           2098,2102,2168,2169               
 HALO                       Local  2087     I(4)            4           scalar                    2106,2107,2124,2126,2128,2130,2173
                                                                                                  ,2174                             
 HALO_SIZE                  Dummy  2063     I(4)            4           scalar   ARG,IN           2107                              
 I                          Local  2087     I(4)            4           scalar                    2174,2175,2176                    
 INCREMENT_BC               Local  2086     L(4)            4           scalar                    2158,2159,2160,2161,2162,2163,2164
                                                                                                  ,2165                             
 IO1                        Local  2088     I(4)            4           scalar                    2152,2176                         
 IOW                        Local  2088     I(4)            4           scalar                    2134,2136,2138,2176               
 J                          Local  2087     I(4)            4           scalar                    2173,2175,2176                    
 JO1                        Local  2088     I(4)            4           scalar                    2153                              
 JOW                        Local  2088     I(4)            4           scalar                    2143,2145,2147,2176               
 K                          Local  2087     I(4)            4           scalar                    2172,2176                         
 KOW                        Local  2088     I(4)            4           scalar                    2154,2176                         
 M                          Local  2087     I(4)            4           scalar                    2167,2169,2171,2175,2176          
 N                          Local  2087     I(4)            4           scalar                    2157,2160,2162,2164,2167,2171,2175
                                                                                                  ,2176                             
 N1                         Local  2087     I(4)            4           scalar                    2109,2112,2116,2157               
 N2                         Local  2087     I(4)            4           scalar                    2110,2113,2116,2157               
 ONLY_FLUX_TYPE             Dummy  2064     CHAR                        scalar   ARG,IN           2161,2162                         
 PASS_THROUGH_ICE           Dummy  2064     L(4)            4           scalar   ARG,IN           2163,2164                         
 PRESENT                    Func   2091                                 scalar                    2091,2093,2095,2098,2102,2107,2111
                                                                                                  ,2159,2161,2163,2168              
 SCALE                      Local  2085     R(8)            8           scalar                    2090,2091,2176                    
 SCALE_FACTOR               Dummy  2064     R(8)            8           scalar   ARG,IN           2091                              
 SCALE_PREV                 Dummy  2064     R(8)            8           scalar   ARG,IN           2093                              
 SC_PREV                    Local  2085     R(8)            8           scalar                    2092,2093,2175                    
 SIZE                       Func   2122                                 scalar                    2122,2133,2135,2137,2142,2144,2146
 TRIM                       Func   2100                                 scalar                    2100,2160,2162                    
 VAR                        Dummy  2063     COUPLER_2D_BC_TYPE                                                                      
                                                            120         scalar   ARG,INOUT        2118,2120,2128,2130,2133,2134,2135
                                                                                                  ,2136,2138,2142,2143,2144,2145,214
                                                                                                  7,2152,2153,2171,2173,2174,2175   
 VAR_IN                     Dummy  2063     COUPLER_3D_BC_TYPE                                                                      
                                                            128         scalar   ARG,IN           2096,2098,2100,2110,2118,2120,2122
                                                                                                  ,2124,2126,2137,2138,2146,2147,215
                                                                                                  2,2153,2154,2160,2162,2164,2167,21
                                                                                                  72,2176                           
 WEIGHTS                    Dummy  2063     R(8)            8     3     1        ARG,IN           2122,2133,2135,2137,2142,2144,2146
                                                                                                  ,2176                             

Page 77          Source Listing                  CT_INCREMENT_DATA_2D_3D
2021-06-01 08:55                                 coupler_types.F90

   2184 
   2185 !> @brief Extract a 2d field from a coupler_2d_bc_type
   2186 !!
   2187 !! Extract a single 2-d field from a coupler_2d_bc_type into a two-dimensional array.
   2188 !!
   2189 !! @throw FATAL, "bc_index is present and exceeds var_in%num_bcs."
   2190 !! @throw FATAL, "field_index exceeds num_fields for var_in%bc(bc_incdx)%name"
   2191 !! @throw FATAL, "Excessive i-direction halo size for the input structure."
   2192 !! @throw FATAL, "Excessive j-direction halo size for the input structure."
   2193 !! @throw FATAL, "Disordered i-dimension index bound list"
   2194 !! @throw FATAL, "Disordered j-dimension index bound list"
   2195 !! @throw FATAL, "The declared i-dimension size of 'n' does not match the actual size of 'a'"
   2196 !! @throw FATAL, "The declared j-dimension size of 'n' does not match the actual size of 'a'"
   2197 !! @throw FATAL, "There is an i-direction computational domain size mismatch."
   2198 !! @throw FATAL, "There is an j-direction computational domain size mismatch."
   2199 !! @throw FATAL, "The target array with i-dimension size 'n' is too small to match the data of size 'd'"
   2200 !! @throw FATAL, "The target array with j-dimension size 'n' is too small to match the data of size 'd'"
   2201   subroutine CT_extract_data_2d(var_in, bc_index, field_index, array_out,&
   2202       & scale_factor, halo_size, idim, jdim)
   2203     type(coupler_2d_bc_type),   intent(in)    :: var_in    !< BC_type structure with the data to extract
   2204     integer,                    intent(in)    :: bc_index  !< The index of the boundary condition
   2205 !! that is being copied
   2206     integer,                    intent(in)    :: field_index !< The index of the field in the
   2207 !! boundary condition that is being copied
   2208     real, dimension(1:,1:),     intent(out)   :: array_out !< The recipient array for the field; its size
   2209 !! must match the size of the data being copied
   2210 !! unless idim and jdim are supplied.
   2211     real,             optional, intent(in)    :: scale_factor !< A scaling factor for the data that is being added
   2212     integer,          optional, intent(in)    :: halo_size !< The extent of the halo to copy; 0 by default
   2213     integer, dimension(4), optional, intent(in) :: idim    !< The data and computational domain extents of
   2214 !! the first dimension of the output array
   2215 !! in a non-decreasing list
   2216     integer, dimension(4), optional, intent(in) :: jdim    !< The data and computational domain extents of
   2217 !! the second dimension of the output array
   2218 !! in a non-decreasing list
   2219 
   2220     character(len=*), parameter :: error_header =&
   2221         & '==>Error from coupler_types_mod (CT_extract_data_2d):'
   2222     character(len=400)      :: error_msg
   2223 
   2224     real :: scale
   2225     integer :: i, j, halo, i_off, j_off
   2226 
   2227     if (bc_index <= 0) then
   2228       array_out(:,:) = 0.0
   2229       return
   2230     endif
   2231 
   2232     halo = 0
   2233     if (present(halo_size)) halo = halo_size
   2234     scale = 1.0
   2235     if (present(scale_factor)) scale = scale_factor
   2236 
   2237     if ((var_in%isc-var_in%isd < halo) .or. (var_in%ied-var_in%iec < halo))&
   2238         & call mpp_error(FATAL, trim(error_header)//" Excessive i-direction halo size for the input structure.")
   2239     if ((var_in%jsc-var_in%jsd < halo) .or. (var_in%jed-var_in%jec < halo))&
   2240         & call mpp_error(FATAL, trim(error_header)//" Excessive j-direction halo size for the input structure.")

Page 78          Source Listing                  CT_EXTRACT_DATA_2D
2021-06-01 08:55                                 coupler_types.F90

   2241 
   2242     if (bc_index > var_in%num_bcs)&
   2243         & call mpp_error(FATAL, trim(error_header)//" bc_index exceeds var_in%num_bcs.")
   2244     if (field_index > var_in%bc(bc_index)%num_fields)&
   2245         & call mpp_error(FATAL, trim(error_header)//" field_index exceeds num_fields for" //&
   2246         & trim(var_in%bc(bc_index)%name) )
   2247 
   2248 ! Do error checking on the i-dimension and determine the array offsets.
   2249     if (present(idim)) then
   2250       if ((idim(1) > idim(2)) .or. (idim(3) > idim(4))) then
   2251         write (error_msg, *) trim(error_header), ' Disordered i-dimension index bound list ', idim
   2252         call mpp_error(FATAL, trim(error_msg))
   2253       endif
   2254       if (size(array_out,1) /= (1+idim(4)-idim(1))) then
   2255         write (error_msg, *) trim(error_header), ' The declared i-dimension size of ',&
   2256             & (1+idim(4)-idim(1)), ' does not match the actual size of ', size(array_out,1)
   2257         call mpp_error(FATAL, trim(error_msg))
   2258       endif
   2259       if ((var_in%iec-var_in%isc) /= (idim(3)-idim(2)))&
   2260           & call mpp_error(FATAL, trim(error_header)//" There is an i-direction computational domain size mismatch.")
   2261       if ((idim(2)-idim(1) < halo) .or. (idim(4)-idim(3) < halo))&
   2262           & call mpp_error(FATAL, trim(error_header)//" Excessive i-direction halo size for the output array.")
   2263       if (size(array_out,1) < 2*halo + 1 + var_in%iec - var_in%isc) then
   2264         write (error_msg, *) trim(error_header), ' The target array with i-dimension size ',&
   2265             & (1+idim(4)-idim(1)), ' is too small to match the data of size ',&
   2266             & (2*halo + 1 + var_in%iec - var_in%isc)
   2267         call mpp_error(FATAL, trim(error_msg))
   2268       endif
   2269 
   2270       i_off = (1-idim(1)) + (idim(2)-var_in%isc)
   2271     else
   2272       if (size(array_out,1) < 2*halo + 1 + var_in%iec - var_in%isc) then
   2273         write (error_msg, *) trim(error_header), ' The target array with i-dimension size ',&
   2274             & size(array_out,1), ' does not match the data of size ',&
   2275             & (2*halo + 1 + var_in%iec - var_in%isc)
   2276         call mpp_error(FATAL, trim(error_msg))
   2277       endif
   2278       i_off = 1 - (var_in%isc-halo)
   2279     endif
   2280 
   2281 ! Do error checking on the j-dimension and determine the array offsets.
   2282     if (present(jdim)) then
   2283       if ((jdim(1) > jdim(2)) .or. (jdim(3) > jdim(4))) then
   2284         write (error_msg, *) trim(error_header), ' Disordered j-dimension index bound list ', jdim
   2285         call mpp_error(FATAL, trim(error_msg))
   2286       endif
   2287       if (size(array_out,2) /= (1+jdim(4)-jdim(1))) then
   2288         write (error_msg, *) trim(error_header), ' The declared j-dimension size of ',&
   2289             & (1+jdim(4)-jdim(1)), ' does not match the actual size of ', size(array_out,2)
   2290         call mpp_error(FATAL, trim(error_msg))
   2291       endif
   2292       if ((var_in%jec-var_in%jsc) /= (jdim(3)-jdim(2)))&
   2293           & call mpp_error(FATAL, trim(error_header)//" There is an j-direction computational domain size mismatch.")
   2294       if ((jdim(2)-jdim(1) < halo) .or. (jdim(4)-jdim(3) < halo))&
   2295           & call mpp_error(FATAL, trim(error_header)//" Excessive j-direction halo size for the output array.")
   2296       if (size(array_out,2) < 2*halo + 1 + var_in%jec - var_in%jsc) then
   2297         write (error_msg, *) trim(error_header), ' The target array with j-dimension size ',&

Page 79          Source Listing                  CT_EXTRACT_DATA_2D
2021-06-01 08:55                                 coupler_types.F90

   2298             & (1+jdim(4)-jdim(1)), ' is too small to match the data of size ',&
   2299             & (2*halo + 1 + var_in%jec - var_in%jsc)
   2300         call mpp_error(FATAL, trim(error_msg))
   2301       endif
   2302 
   2303       j_off = (1-jdim(1)) + (jdim(2)-var_in%jsc)
   2304     else
   2305       if (size(array_out,2) < 2*halo + 1 + var_in%jec - var_in%jsc) then
   2306         write (error_msg, *) trim(error_header), ' The target array with j-dimension size ',&
   2307             & size(array_out,2), ' does not match the data of size ',&
   2308             & (2*halo + 1 + var_in%jec - var_in%jsc)
   2309         call mpp_error(FATAL, trim(error_msg))
   2310       endif
   2311       j_off = 1 - (var_in%jsc-halo)
   2312     endif
   2313 
   2314     do j=var_in%jsc-halo,var_in%jec+halo
   2315       do i=var_in%isc-halo,var_in%iec+halo
   2316         array_out(i+i_off,j+j_off) = scale * var_in%bc(bc_index)%field(field_index)%values(i,j)
   2317       enddo
   2318     enddo
   2319   end subroutine CT_extract_data_2d


ENTRY POINTS

  Name                                                
                                                      
 coupler_types_mod_mp_ct_extract_data_2d_             

Page 80          Source Listing                  CT_EXTRACT_DATA_2D
2021-06-01 08:55 Symbol Table                    coupler_types.F90



SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ARRAY_OUT                  Dummy  2201     R(8)            8     2     1        ARG,OUT          2228,2254,2256,2263,2272,2274,2287
                                                                                                  ,2289,2296,2305,2307,2316         
 BC_INDEX                   Dummy  2201     I(4)            4           scalar   ARG,IN           2227,2242,2244,2246,2316          
 CT_EXTRACT_DATA_2D         Subr   2201                                          PRIV                                               
 ERROR_HEADER               Param  2220     CHAR            53          scalar                    2238,2240,2243,2245,2251,2255,2260
                                                                                                  ,2262,2264,2273,2284,2288,2293,229
                                                                                                  5,2297,2306                       
 ERROR_MSG                  Local  2222     CHAR            400         scalar                    2251,2252,2255,2257,2264,2267,2273
                                                                                                  ,2276,2284,2285,2288,2290,2297,230
                                                                                                  0,2306,2309                       
 FIELD_INDEX                Dummy  2201     I(4)            4           scalar   ARG,IN           2244,2316                         
 HALO                       Local  2225     I(4)            4           scalar                    2232,2233,2237,2239,2261,2263,2266
                                                                                                  ,2272,2275,2278,2294,2296,2299,230
                                                                                                  5,2308,2311,2314,2315             
 HALO_SIZE                  Dummy  2202     I(4)            4           scalar   ARG,IN           2233                              
 I                          Local  2225     I(4)            4           scalar                    2315,2316                         
 IDIM                       Dummy  2202     I(4)            4     1     4        ARG,IN           2249,2250,2251,2254,2256,2259,2261
                                                                                                  ,2265,2270                        
 I_OFF                      Local  2225     I(4)            4           scalar                    2270,2278,2316                    
 J                          Local  2225     I(4)            4           scalar                    2314,2316                         
 JDIM                       Dummy  2202     I(4)            4     1     4        ARG,IN           2282,2283,2284,2287,2289,2292,2294
                                                                                                  ,2298,2303                        
 J_OFF                      Local  2225     I(4)            4           scalar                    2303,2311,2316                    
 PRESENT                    Func   2233                                 scalar                    2233,2235,2249,2282               
 SCALE                      Local  2224     R(8)            8           scalar                    2234,2235,2316                    
 SCALE_FACTOR               Dummy  2202     R(8)            8           scalar   ARG,IN           2235                              
 SIZE                       Func   2254                                 scalar                    2254,2256,2263,2272,2274,2287,2289
                                                                                                  ,2296,2305,2307                   
 TRIM                       Func   2238                                 scalar                    2238,2240,2243,2245,2246,2251,2252
                                                                                                  ,2255,2257,2260,2262,2264,2267,227
                                                                                                  3,2276,2284,2285,2288,2290,2293,22
                                                                                                  95,2297,2300,2306,2309            
 VAR_IN                     Dummy  2201     COUPLER_2D_BC_TYPE                                                                      
                                                            120         scalar   ARG,IN           2237,2239,2242,2244,2246,2259,2263
                                                                                                  ,2266,2270,2272,2275,2278,2292,229
                                                                                                  6,2299,2303,2305,2308,2311,2314,23
                                                                                                  15,2316                           

Page 81          Source Listing                  CT_EXTRACT_DATA_2D
2021-06-01 08:55                                 coupler_types.F90

   2320 
   2321 !! @brief Extract a single k-level of a 3d field from a coupler_3d_bc_type
   2322 !!
   2323 !! Extract a single k-level of a 3-d field from a coupler_3d_bc_type into a two-dimensional array.
   2324 !!
   2325 !! @throw FATAL, "bc_index is present and exceeds var_in%num_bcs."
   2326 !! @throw FATAL, "field_index exceeds num_fields for var_in%bc(bc_incdx)%name"
   2327 !! @throw FATAL, "Excessive i-direction halo size for the input structure."
   2328 !! @throw FATAL, "Excessive j-direction halo size for the input structure."
   2329 !! @throw FATAL, "Disordered i-dimension index bound list"
   2330 !! @throw FATAL, "Disordered j-dimension index bound list"
   2331 !! @throw FATAL, "The declared i-dimension size of 'n' does not match the actual size of 'a'"
   2332 !! @throw FATAL, "The declared j-dimension size of 'n' does not match the actual size of 'a'"
   2333 !! @throw FATAL, "There is an i-direction computational domain size mismatch."
   2334 !! @throw FATAL, "There is an j-direction computational domain size mismatch."
   2335 !! @throw FATAL, "The target array with i-dimension size 'n' is too small to match the data of size 'd'"
   2336 !! @throw FATAL, "The target array with j-dimension size 'n' is too small to match the data of size 'd'"
   2337 !! @throw FATAL, "The extracted k-index of 'k' is outside of the valid range of 'ks' to 'ke'"
   2338   subroutine CT_extract_data_3d_2d(var_in, bc_index, field_index, k_in, array_out,&
   2339       & scale_factor, halo_size, idim, jdim)
   2340     type(coupler_3d_bc_type),   intent(in)    :: var_in    !< BC_type structure with the data to extract
   2341     integer,                    intent(in)    :: bc_index  !< The index of the boundary condition
   2342 !! that is being copied
   2343     integer,                    intent(in)    :: field_index !< The index of the field in the
   2344 !! boundary condition that is being copied
   2345     integer,                    intent(in)    :: k_in      !< The k-index to extract
   2346     real, dimension(1:,1:),     intent(out)   :: array_out !< The recipient array for the field; its size
   2347 !! must match the size of the data being copied
   2348 !! unless idim and jdim are supplied.
   2349     real,             optional, intent(in)    :: scale_factor !< A scaling factor for the data that is being added
   2350     integer,          optional, intent(in)    :: halo_size !< The extent of the halo to copy; 0 by default
   2351     integer, dimension(4), optional, intent(in) :: idim    !< The data and computational domain extents of
   2352 !! the first dimension of the output array
   2353 !! in a non-decreasing list
   2354     integer, dimension(4), optional, intent(in) :: jdim    !< The data and computational domain extents of
   2355 !! the second dimension of the output array
   2356 !! in a non-decreasing list
   2357     character(len=*), parameter :: error_header =&
   2358         & '==>Error from coupler_types_mod (CT_extract_data_3d_2d):'
   2359     character(len=400)      :: error_msg
   2360 
   2361     real :: scale
   2362     integer :: i, j, k, halo, i_off, j_off
   2363 
   2364     if (bc_index <= 0) then
   2365       array_out(:,:) = 0.0
   2366       return
   2367     endif
   2368 
   2369     halo = 0
   2370     if (present(halo_size)) halo = halo_size
   2371     scale = 1.0
   2372     if (present(scale_factor)) scale = scale_factor
   2373 
   2374     if ((var_in%isc-var_in%isd < halo) .or. (var_in%ied-var_in%iec < halo))&
   2375         & call mpp_error(FATAL, trim(error_header)//" Excessive i-direction halo size for the input structure.")
   2376     if ((var_in%jsc-var_in%jsd < halo) .or. (var_in%jed-var_in%jec < halo))&

Page 82          Source Listing                  CT_EXTRACT_DATA_3D_2D
2021-06-01 08:55                                 coupler_types.F90

   2377         & call mpp_error(FATAL, trim(error_header)//" Excessive j-direction halo size for the input structure.")
   2378 
   2379     if (bc_index > var_in%num_bcs)&
   2380         & call mpp_error(FATAL, trim(error_header)//" bc_index exceeds var_in%num_bcs.")
   2381     if (field_index > var_in%bc(bc_index)%num_fields)&
   2382         & call mpp_error(FATAL, trim(error_header)//" field_index exceeds num_fields for" //&
   2383         & trim(var_in%bc(bc_index)%name) )
   2384 
   2385 ! Do error checking on the i-dimension and determine the array offsets.
   2386     if (present(idim)) then
   2387       if ((idim(1) > idim(2)) .or. (idim(3) > idim(4))) then
   2388         write (error_msg, *) trim(error_header), ' Disordered i-dimension index bound list ', idim
   2389         call mpp_error(FATAL, trim(error_msg))
   2390       endif
   2391       if (size(array_out,1) /= (1+idim(4)-idim(1))) then
   2392         write (error_msg, *) trim(error_header), ' The declared i-dimension size of ',&
   2393             & (1+idim(4)-idim(1)), ' does not match the actual size of ', size(array_out,1)
   2394         call mpp_error(FATAL, trim(error_msg))
   2395       endif
   2396       if ((var_in%iec-var_in%isc) /= (idim(3)-idim(2)))&
   2397           & call mpp_error(FATAL, trim(error_header)//" There is an i-direction computational domain size mismatch.")
   2398       if ((idim(2)-idim(1) < halo) .or. (idim(4)-idim(3) < halo))&
   2399           & call mpp_error(FATAL, trim(error_header)//" Excessive i-direction halo size for the output array.")
   2400       if (size(array_out,1) < 2*halo + 1 + var_in%iec - var_in%isc) then
   2401         write (error_msg, *) trim(error_header), ' The target array with i-dimension size ',&
   2402             & (1+idim(4)-idim(1)), ' is too small to match the data of size ',&
   2403             & (2*halo + 1 + var_in%iec - var_in%isc)
   2404         call mpp_error(FATAL, trim(error_msg))
   2405       endif
   2406 
   2407       i_off = (1-idim(1)) + (idim(2)-var_in%isc)
   2408     else
   2409       if (size(array_out,1) < 2*halo + 1 + var_in%iec - var_in%isc) then
   2410         write (error_msg, *) trim(error_header), ' The target array with i-dimension size ',&
   2411             & size(array_out,1), ' does not match the data of size ',&
   2412             & (2*halo + 1 + var_in%iec - var_in%isc)
   2413         call mpp_error(FATAL, trim(error_msg))
   2414       endif
   2415       i_off = 1 - (var_in%isc-halo)
   2416     endif
   2417 
   2418 ! Do error checking on the j-dimension and determine the array offsets.
   2419     if (present(jdim)) then
   2420       if ((jdim(1) > jdim(2)) .or. (jdim(3) > jdim(4))) then
   2421         write (error_msg, *) trim(error_header), ' Disordered j-dimension index bound list ', jdim
   2422         call mpp_error(FATAL, trim(error_msg))
   2423       endif
   2424       if (size(array_out,2) /= (1+jdim(4)-jdim(1))) then
   2425         write (error_msg, *) trim(error_header), ' The declared j-dimension size of ',&
   2426             & (1+jdim(4)-jdim(1)), ' does not match the actual size of ', size(array_out,2)
   2427         call mpp_error(FATAL, trim(error_msg))
   2428       endif
   2429       if ((var_in%jec-var_in%jsc) /= (jdim(3)-jdim(2)))&
   2430           & call mpp_error(FATAL, trim(error_header)//" There is an j-direction computational domain size mismatch.")
   2431       if ((jdim(2)-jdim(1) < halo) .or. (jdim(4)-jdim(3) < halo))&
   2432           & call mpp_error(FATAL, trim(error_header)//" Excessive j-direction halo size for the output array.")
   2433       if (size(array_out,2) < 2*halo + 1 + var_in%jec - var_in%jsc) then

Page 83          Source Listing                  CT_EXTRACT_DATA_3D_2D
2021-06-01 08:55                                 coupler_types.F90

   2434         write (error_msg, *) trim(error_header), ' The target array with j-dimension size ',&
   2435             & (1+jdim(4)-jdim(1)), ' is too small to match the data of size ',&
   2436             & (2*halo + 1 + var_in%jec - var_in%jsc)
   2437         call mpp_error(FATAL, trim(error_msg))
   2438       endif
   2439 
   2440       j_off = (1-jdim(1)) + (jdim(2)-var_in%jsc)
   2441     else
   2442       if (size(array_out,2) < 2*halo + 1 + var_in%jec - var_in%jsc) then
   2443         write (error_msg, *) trim(error_header), ' The target array with j-dimension size ',&
   2444             & size(array_out,2), ' does not match the data of size ',&
   2445             & (2*halo + 1 + var_in%jec - var_in%jsc)
   2446         call mpp_error(FATAL, trim(error_msg))
   2447       endif
   2448       j_off = 1 - (var_in%jsc-halo)
   2449     endif
   2450 
   2451     if ((k_in > var_in%ke) .or. (k_in < var_in%ks)) then
   2452       write (error_msg, *) trim(error_header), ' The extracted k-index of ', k_in,&
   2453           & ' is outside of the valid range of ', var_in%ks, ' to ', var_in%ke
   2454       call mpp_error(FATAL, trim(error_msg))
   2455     endif
   2456 
   2457     do j=var_in%jsc-halo,var_in%jec+halo
   2458       do i=var_in%isc-halo,var_in%iec+halo
   2459         array_out(i+i_off,j+j_off) = scale * var_in%bc(bc_index)%field(field_index)%values(i,j,k_in)
   2460       enddo
   2461     enddo
   2462   end subroutine CT_extract_data_3d_2d

Page 84          Source Listing                  CT_EXTRACT_DATA_3D_2D
2021-06-01 08:55 Entry Points                    coupler_types.F90



ENTRY POINTS

  Name                                                   
                                                         
 coupler_types_mod_mp_ct_extract_data_3d_2d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ARRAY_OUT                  Dummy  2338     R(8)            8     2     1        ARG,OUT          2365,2391,2393,2400,2409,2411,2424
                                                                                                  ,2426,2433,2442,2444,2459         
 BC_INDEX                   Dummy  2338     I(4)            4           scalar   ARG,IN           2364,2379,2381,2383,2459          
 CT_EXTRACT_DATA_3D_2D      Subr   2338                                          PRIV                                               
 ERROR_HEADER               Param  2357     CHAR            56          scalar                    2375,2377,2380,2382,2388,2392,2397
                                                                                                  ,2399,2401,2410,2421,2425,2430,243
                                                                                                  2,2434,2443,2452                  
 ERROR_MSG                  Local  2359     CHAR            400         scalar                    2388,2389,2392,2394,2401,2404,2410
                                                                                                  ,2413,2421,2422,2425,2427,2434,243
                                                                                                  7,2443,2446,2452,2454             
 FIELD_INDEX                Dummy  2338     I(4)            4           scalar   ARG,IN           2381,2459                         
 HALO                       Local  2362     I(4)            4           scalar                    2369,2370,2374,2376,2398,2400,2403
                                                                                                  ,2409,2412,2415,2431,2433,2436,244
                                                                                                  2,2445,2448,2457,2458             
 HALO_SIZE                  Dummy  2339     I(4)            4           scalar   ARG,IN           2370                              
 I                          Local  2362     I(4)            4           scalar                    2458,2459                         
 IDIM                       Dummy  2339     I(4)            4     1     4        ARG,IN           2386,2387,2388,2391,2393,2396,2398
                                                                                                  ,2402,2407                        
 I_OFF                      Local  2362     I(4)            4           scalar                    2407,2415,2459                    
 J                          Local  2362     I(4)            4           scalar                    2457,2459                         
 JDIM                       Dummy  2339     I(4)            4     1     4        ARG,IN           2419,2420,2421,2424,2426,2429,2431
                                                                                                  ,2435,2440                        
 J_OFF                      Local  2362     I(4)            4           scalar                    2440,2448,2459                    
 K                          Local  2362     I(4)            4           scalar                                                      
 K_IN                       Dummy  2338     I(4)            4           scalar   ARG,IN           2451,2452,2459                    
 PRESENT                    Func   2370                                 scalar                    2370,2372,2386,2419               
 SCALE                      Local  2361     R(8)            8           scalar                    2371,2372,2459                    
 SCALE_FACTOR               Dummy  2339     R(8)            8           scalar   ARG,IN           2372                              
 SIZE                       Func   2391                                 scalar                    2391,2393,2400,2409,2411,2424,2426
                                                                                                  ,2433,2442,2444                   
 TRIM                       Func   2375                                 scalar                    2375,2377,2380,2382,2383,2388,2389
                                                                                                  ,2392,2394,2397,2399,2401,2404,241
                                                                                                  0,2413,2421,2422,2425,2427,2430,24
                                                                                                  32,2434,2437,2443,2446,2452,2454  
 VAR_IN                     Dummy  2338     COUPLER_3D_BC_TYPE                                                                      
                                                            128         scalar   ARG,IN           2374,2376,2379,2381,2383,2396,2400
                                                                                                  ,2403,2407,2409,2412,2415,2429,243
                                                                                                  3,2436,2440,2442,2445,2448,2451,24
                                                                                                  53,2457,2458,2459                 

Page 85          Source Listing                  CT_EXTRACT_DATA_3D_2D
2021-06-01 08:55                                 coupler_types.F90

   2463 
   2464 !> @brief Extract single 3d field from a coupler_3d_bc_type
   2465 !!
   2466 !! Extract a single 3-d field from a coupler_3d_bc_type into a three-dimensional array.
   2467 !!
   2468 !! @throw FATAL, "bc_index is present and exceeds var_in%num_bcs."
   2469 !! @throw FATAL, "field_index exceeds num_fields for var_in%bc(bc_incdx)%name"
   2470 !! @throw FATAL, "Excessive i-direction halo size for the input structure."
   2471 !! @throw FATAL, "Excessive j-direction halo size for the input structure."
   2472 !! @throw FATAL, "Disordered i-dimension index bound list"
   2473 !! @throw FATAL, "Disordered j-dimension index bound list"
   2474 !! @throw FATAL, "The declared i-dimension size of 'n' does not match the actual size of 'a'"
   2475 !! @throw FATAL, "The declared j-dimension size of 'n' does not match the actual size of 'a'"
   2476 !! @throw FATAL, "There is an i-direction computational domain size mismatch."
   2477 !! @throw FATAL, "There is an j-direction computational domain size mismatch."
   2478 !! @throw FATAL, "The target array with i-dimension size 'n' is too small to match the data of size 'd'"
   2479 !! @throw FATAL, "The target array with j-dimension size 'n' is too small to match the data of size 'd'"
   2480 !! @throw FATAL, "The target array with k-dimension size 'n' does not match the data of size 'd'"
   2481   subroutine CT_extract_data_3d(var_in, bc_index, field_index, array_out,&
   2482       & scale_factor, halo_size, idim, jdim)
   2483     type(coupler_3d_bc_type),   intent(in)    :: var_in    !< BC_type structure with the data to extract
   2484     integer,                    intent(in)    :: bc_index  !< The index of the boundary condition
   2485 !! that is being copied
   2486     integer,                    intent(in)    :: field_index !< The index of the field in the
   2487 !! boundary condition that is being copied
   2488     real, dimension(1:,1:,1:),  intent(out)   :: array_out !< The recipient array for the field; its size
   2489 !! must match the size of the data being copied
   2490 !! unless idim and jdim are supplied.
   2491     real,             optional, intent(in)    :: scale_factor !< A scaling factor for the data that is being added
   2492     integer,          optional, intent(in)    :: halo_size !< The extent of the halo to copy; 0 by default
   2493     integer, dimension(4), optional, intent(in) :: idim    !< The data and computational domain extents of
   2494 !! the first dimension of the output array
   2495 !! in a non-decreasing list
   2496     integer, dimension(4), optional, intent(in) :: jdim    !< The data and computational domain extents of
   2497 !! the second dimension of the output array
   2498 !! in a non-decreasing list
   2499 
   2500     character(len=*), parameter :: error_header =&
   2501         & '==>Error from coupler_types_mod (CT_extract_data_3d):'
   2502     character(len=400) :: error_msg
   2503 
   2504     real :: scale
   2505     integer :: i, j, k, halo, i_off, j_off, k_off
   2506 
   2507     if (bc_index <= 0) then
   2508       array_out(:,:,:) = 0.0
   2509       return
   2510     endif
   2511 
   2512     halo = 0
   2513     if (present(halo_size)) halo = halo_size
   2514     scale = 1.0
   2515     if (present(scale_factor)) scale = scale_factor
   2516 
   2517     if ((var_in%isc-var_in%isd < halo) .or. (var_in%ied-var_in%iec < halo))&
   2518         & call mpp_error(FATAL, trim(error_header)//" Excessive i-direction halo size for the input structure.")
   2519     if ((var_in%jsc-var_in%jsd < halo) .or. (var_in%jed-var_in%jec < halo))&

Page 86          Source Listing                  CT_EXTRACT_DATA_3D
2021-06-01 08:55                                 coupler_types.F90

   2520         & call mpp_error(FATAL, trim(error_header)//" Excessive j-direction halo size for the input structure.")
   2521 
   2522     if (bc_index > var_in%num_bcs)&
   2523         & call mpp_error(FATAL, trim(error_header)//" bc_index exceeds var_in%num_bcs.")
   2524     if (field_index > var_in%bc(bc_index)%num_fields)&
   2525         & call mpp_error(FATAL, trim(error_header)//" field_index exceeds num_fields for" //&
   2526         & trim(var_in%bc(bc_index)%name) )
   2527 
   2528 ! Do error checking on the i-dimension and determine the array offsets.
   2529     if (present(idim)) then
   2530       if ((idim(1) > idim(2)) .or. (idim(3) > idim(4))) then
   2531         write (error_msg, *) trim(error_header), ' Disordered i-dimension index bound list ', idim
   2532         call mpp_error(FATAL, trim(error_msg))
   2533       endif
   2534       if (size(array_out,1) /= (1+idim(4)-idim(1))) then
   2535         write (error_msg, *) trim(error_header), ' The declared i-dimension size of ',&
   2536             & (1+idim(4)-idim(1)), ' does not match the actual size of ', size(array_out,1)
   2537         call mpp_error(FATAL, trim(error_msg))
   2538       endif
   2539       if ((var_in%iec-var_in%isc) /= (idim(3)-idim(2)))&
   2540           & call mpp_error(FATAL, trim(error_header)//" There is an i-direction computational domain size mismatch.")
   2541       if ((idim(2)-idim(1) < halo) .or. (idim(4)-idim(3) < halo))&
   2542           & call mpp_error(FATAL, trim(error_header)//" Excessive i-direction halo size for the output array.")
   2543       if (size(array_out,1) < 2*halo + 1 + var_in%iec - var_in%isc) then
   2544         write (error_msg, *) trim(error_header), ' The target array with i-dimension size ',&
   2545             & (1+idim(4)-idim(1)), ' is too small to match the data of size ',&
   2546             & (2*halo + 1 + var_in%iec - var_in%isc)
   2547         call mpp_error(FATAL, trim(error_msg))
   2548       endif
   2549 
   2550       i_off = (1-idim(1)) + (idim(2)-var_in%isc)
   2551     else
   2552       if (size(array_out,1) < 2*halo + 1 + var_in%iec - var_in%isc) then
   2553         write (error_msg, *) trim(error_header), ' The target array with i-dimension size ',&
   2554             & size(array_out,1), ' does not match the data of size ',&
   2555             & (2*halo + 1 + var_in%iec - var_in%isc)
   2556         call mpp_error(FATAL, trim(error_msg))
   2557       endif
   2558       i_off = 1 - (var_in%isc-halo)
   2559     endif
   2560 
   2561 ! Do error checking on the j-dimension and determine the array offsets.
   2562     if (present(jdim)) then
   2563       if ((jdim(1) > jdim(2)) .or. (jdim(3) > jdim(4))) then
   2564         write (error_msg, *) trim(error_header), ' Disordered j-dimension index bound list ', jdim
   2565         call mpp_error(FATAL, trim(error_msg))
   2566       endif
   2567       if (size(array_out,2) /= (1+jdim(4)-jdim(1))) then
   2568         write (error_msg, *) trim(error_header), ' The declared j-dimension size of ',&
   2569             & (1+jdim(4)-jdim(1)), ' does not match the actual size of ', size(array_out,2)
   2570         call mpp_error(FATAL, trim(error_msg))
   2571       endif
   2572       if ((var_in%jec-var_in%jsc) /= (jdim(3)-jdim(2)))&
   2573           & call mpp_error(FATAL, trim(error_header)//" There is an j-direction computational domain size mismatch.")
   2574       if ((jdim(2)-jdim(1) < halo) .or. (jdim(4)-jdim(3) < halo))&
   2575           & call mpp_error(FATAL, trim(error_header)//" Excessive j-direction halo size for the output array.")
   2576       if (size(array_out,2) < 2*halo + 1 + var_in%jec - var_in%jsc) then

Page 87          Source Listing                  CT_EXTRACT_DATA_3D
2021-06-01 08:55                                 coupler_types.F90

   2577         write (error_msg, *) trim(error_header), ' The target array with j-dimension size ',&
   2578             & (1+jdim(4)-jdim(1)), ' is too small to match the data of size ',&
   2579             & (2*halo + 1 + var_in%jec - var_in%jsc)
   2580         call mpp_error(FATAL, trim(error_msg))
   2581       endif
   2582 
   2583       j_off = (1-jdim(1)) + (jdim(2)-var_in%jsc)
   2584     else
   2585       if (size(array_out,2) < 2*halo + 1 + var_in%jec - var_in%jsc) then
   2586         write (error_msg, *) trim(error_header), ' The target array with j-dimension size ',&
   2587             & size(array_out,2), ' does not match the data of size ',&
   2588             & (2*halo + 1 + var_in%jec - var_in%jsc)
   2589         call mpp_error(FATAL, trim(error_msg))
   2590       endif
   2591       j_off = 1 - (var_in%jsc-halo)
   2592     endif
   2593 
   2594     if (size(array_out,3) /= 1 + var_in%ke - var_in%ks) then
   2595       write (error_msg, *) trim(error_header), ' The target array with k-dimension size ',&
   2596           & size(array_out,3), ' does not match the data of size ',&
   2597           & (1 + var_in%ke - var_in%ks)
   2598       call mpp_error(FATAL, trim(error_msg))
   2599     endif
   2600     k_off = 1 - var_in%ks
   2601 
   2602     do k=var_in%ks,var_in%ke
   2603       do j=var_in%jsc-halo,var_in%jec+halo
   2604         do i=var_in%isc-halo,var_in%iec+halo
   2605           array_out(i+i_off,j+j_off,k+k_off) = scale * var_in%bc(bc_index)%field(field_index)%values(i,j,k)
   2606         enddo
   2607       enddo
   2608     enddo
   2609   end subroutine CT_extract_data_3d

Page 88          Source Listing                  CT_EXTRACT_DATA_3D
2021-06-01 08:55 Entry Points                    coupler_types.F90



ENTRY POINTS

  Name                                                
                                                      
 coupler_types_mod_mp_ct_extract_data_3d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ARRAY_OUT                  Dummy  2481     R(8)            8     3     1        ARG,OUT          2508,2534,2536,2543,2552,2554,2567
                                                                                                  ,2569,2576,2585,2587,2594,2596,260
                                                                                                  5                                 
 BC_INDEX                   Dummy  2481     I(4)            4           scalar   ARG,IN           2507,2522,2524,2526,2605          
 CT_EXTRACT_DATA_3D         Subr   2481                                          PRIV                                               
 ERROR_HEADER               Param  2500     CHAR            53          scalar                    2518,2520,2523,2525,2531,2535,2540
                                                                                                  ,2542,2544,2553,2564,2568,2573,257
                                                                                                  5,2577,2586,2595                  
 ERROR_MSG                  Local  2502     CHAR            400         scalar                    2531,2532,2535,2537,2544,2547,2553
                                                                                                  ,2556,2564,2565,2568,2570,2577,258
                                                                                                  0,2586,2589,2595,2598             
 FIELD_INDEX                Dummy  2481     I(4)            4           scalar   ARG,IN           2524,2605                         
 HALO                       Local  2505     I(4)            4           scalar                    2512,2513,2517,2519,2541,2543,2546
                                                                                                  ,2552,2555,2558,2574,2576,2579,258
                                                                                                  5,2588,2591,2603,2604             
 HALO_SIZE                  Dummy  2482     I(4)            4           scalar   ARG,IN           2513                              
 I                          Local  2505     I(4)            4           scalar                    2604,2605                         
 IDIM                       Dummy  2482     I(4)            4     1     4        ARG,IN           2529,2530,2531,2534,2536,2539,2541
                                                                                                  ,2545,2550                        
 I_OFF                      Local  2505     I(4)            4           scalar                    2550,2558,2605                    
 J                          Local  2505     I(4)            4           scalar                    2603,2605                         
 JDIM                       Dummy  2482     I(4)            4     1     4        ARG,IN           2562,2563,2564,2567,2569,2572,2574
                                                                                                  ,2578,2583                        
 J_OFF                      Local  2505     I(4)            4           scalar                    2583,2591,2605                    
 K                          Local  2505     I(4)            4           scalar                    2602,2605                         
 K_OFF                      Local  2505     I(4)            4           scalar                    2600,2605                         
 PRESENT                    Func   2513                                 scalar                    2513,2515,2529,2562               
 SCALE                      Local  2504     R(8)            8           scalar                    2514,2515,2605                    
 SCALE_FACTOR               Dummy  2482     R(8)            8           scalar   ARG,IN           2515                              
 SIZE                       Func   2534                                 scalar                    2534,2536,2543,2552,2554,2567,2569
                                                                                                  ,2576,2585,2587,2594,2596         
 TRIM                       Func   2518                                 scalar                    2518,2520,2523,2525,2526,2531,2532
                                                                                                  ,2535,2537,2540,2542,2544,2547,255
                                                                                                  3,2556,2564,2565,2568,2570,2573,25
                                                                                                  75,2577,2580,2586,2589,2595,2598  
 VAR_IN                     Dummy  2481     COUPLER_3D_BC_TYPE                                                                      
                                                            128         scalar   ARG,IN           2517,2519,2522,2524,2526,2539,2543
                                                                                                  ,2546,2550,2552,2555,2558,2572,257
                                                                                                  6,2579,2583,2585,2588,2591,2594,25
                                                                                                  97,2600,2602,2603,2604,2605       

Page 89          Source Listing                  CT_EXTRACT_DATA_3D
2021-06-01 08:55                                 coupler_types.F90

   2610 
   2611 !> @brief Set single 2d field in coupler_3d_bc_type
   2612 !!
   2613 !! Set a single 2-d field in a coupler_3d_bc_type from a two-dimensional array.
   2614 !!
   2615 !! @throw FATAL, "bc_index is present and exceeds var_in%num_bcs."
   2616 !! @throw FATAL, "field_index exceeds num_fields for var_in%bc(bc_incdx)%name"
   2617 !! @throw FATAL, "Excessive i-direction halo size for the input structure."
   2618 !! @throw FATAL, "Excessive j-direction halo size for the input structure."
   2619 !! @throw FATAL, "Disordered i-dimension index bound list"
   2620 !! @throw FATAL, "Disordered j-dimension index bound list"
   2621 !! @throw FATAL, "The declared i-dimension size of 'n' does not match the actual size of 'a'"
   2622 !! @throw FATAL, "The declared j-dimension size of 'n' does not match the actual size of 'a'"
   2623 !! @throw FATAL, "There is an i-direction computational domain size mismatch."
   2624 !! @throw FATAL, "There is an j-direction computational domain size mismatch."
   2625 !! @throw FATAL, "The target array with i-dimension size 'n' is too small to match the data of size 'd'"
   2626 !! @throw FATAL, "The target array with j-dimension size 'n' is too small to match the data of size 'd'"
   2627   subroutine CT_set_data_2d(array_in, bc_index, field_index, var,&
   2628       & scale_factor, halo_size, idim, jdim)
   2629     real, dimension(1:,1:),     intent(in)   :: array_in   !< The source array for the field; its size
   2630 !! must match the size of the data being copied
   2631 !! unless idim and jdim are supplied.
   2632     integer,                    intent(in)    :: bc_index  !< The index of the boundary condition
   2633 !! that is being copied
   2634     integer,                    intent(in)    :: field_index !< The index of the field in the
   2635 !! boundary condition that is being copied
   2636     type(coupler_2d_bc_type),   intent(inout) :: var       !< BC_type structure with the data to set
   2637     real,             optional, intent(in)    :: scale_factor !< A scaling factor for the data that is being added
   2638     integer,          optional, intent(in)    :: halo_size !< The extent of the halo to copy; 0 by default
   2639     integer, dimension(4), optional, intent(in) :: idim    !< The data and computational domain extents of
   2640 !! the first dimension of the output array
   2641 !! in a non-decreasing list
   2642     integer, dimension(4), optional, intent(in) :: jdim    !< The data and computational domain extents of
   2643 !! the second dimension of the output array
   2644 !! in a non-decreasing list
   2645     character(len=*), parameter :: error_header =&
   2646         & '==>Error from coupler_types_mod (CT_set_data_2d):'
   2647     character(len=400) :: error_msg
   2648 
   2649     real :: scale
   2650     integer :: i, j, halo, i_off, j_off
   2651 
   2652     if (bc_index <= 0) return
   2653 
   2654     halo = 0
   2655     if (present(halo_size)) halo = halo_size
   2656     scale = 1.0
   2657     if (present(scale_factor)) scale = scale_factor
   2658 
   2659     if ((var%isc-var%isd < halo) .or. (var%ied-var%iec < halo))&
   2660         & call mpp_error(FATAL, trim(error_header)//" Excessive i-direction halo size for the input structure.")
   2661     if ((var%jsc-var%jsd < halo) .or. (var%jed-var%jec < halo))&
   2662         & call mpp_error(FATAL, trim(error_header)//" Excessive j-direction halo size for the input structure.")
   2663 
   2664     if (bc_index > var%num_bcs) &
   2665         call mpp_error(FATAL, trim(error_header)//" bc_index exceeds var%num_bcs.")
   2666     if (field_index > var%bc(bc_index)%num_fields)&

Page 90          Source Listing                  CT_SET_DATA_2D
2021-06-01 08:55                                 coupler_types.F90

   2667         & call mpp_error(FATAL, trim(error_header)//" field_index exceeds num_fields for" //&
   2668         & trim(var%bc(bc_index)%name) )
   2669 
   2670 ! Do error checking on the i-dimension and determine the array offsets.
   2671     if (present(idim)) then
   2672       if ((idim(1) > idim(2)) .or. (idim(3) > idim(4))) then
   2673         write (error_msg, *) trim(error_header), ' Disordered i-dimension index bound list ', idim
   2674         call mpp_error(FATAL, trim(error_msg))
   2675       endif
   2676       if (size(array_in,1) /= (1+idim(4)-idim(1))) then
   2677         write (error_msg, *) trim(error_header), ' The declared i-dimension size of ',&
   2678             & (1+idim(4)-idim(1)), ' does not match the actual size of ', size(array_in,1)
   2679         call mpp_error(FATAL, trim(error_msg))
   2680       endif
   2681       if ((var%iec-var%isc) /= (idim(3)-idim(2)))&
   2682           & call mpp_error(FATAL, trim(error_header)//" There is an i-direction computational domain size mismatch.")
   2683       if ((idim(2)-idim(1) < halo) .or. (idim(4)-idim(3) < halo))&
   2684           & call mpp_error(FATAL, trim(error_header)//" Excessive i-direction halo size for the output array.")
   2685       if (size(array_in,1) < 2*halo + 1 + var%iec - var%isc) then
   2686         write (error_msg, *) trim(error_header), ' The target array with i-dimension size ',&
   2687             & (1+idim(4)-idim(1)), ' is too small to match the data of size ',&
   2688             & (2*halo + 1 + var%iec - var%isc)
   2689         call mpp_error(FATAL, trim(error_msg))
   2690       endif
   2691 
   2692       i_off = (1-idim(1)) + (idim(2)-var%isc)
   2693     else
   2694       if (size(array_in,1) < 2*halo + 1 + var%iec - var%isc) then
   2695         write (error_msg, *) trim(error_header), ' The target array with i-dimension size ',&
   2696             & size(array_in,1), ' does not match the data of size ',&
   2697             & (2*halo + 1 + var%iec - var%isc)
   2698         call mpp_error(FATAL, trim(error_msg))
   2699       endif
   2700       i_off = 1 - (var%isc-halo)
   2701     endif
   2702 
   2703 ! Do error checking on the j-dimension and determine the array offsets.
   2704     if (present(jdim)) then
   2705       if ((jdim(1) > jdim(2)) .or. (jdim(3) > jdim(4))) then
   2706         write (error_msg, *) trim(error_header), ' Disordered j-dimension index bound list ', jdim
   2707         call mpp_error(FATAL, trim(error_msg))
   2708       endif
   2709       if (size(array_in,2) /= (1+jdim(4)-jdim(1))) then
   2710         write (error_msg, *) trim(error_header), ' The declared j-dimension size of ',&
   2711             & (1+jdim(4)-jdim(1)), ' does not match the actual size of ', size(array_in,2)
   2712         call mpp_error(FATAL, trim(error_msg))
   2713       endif
   2714       if ((var%jec-var%jsc) /= (jdim(3)-jdim(2)))&
   2715           & call mpp_error(FATAL, trim(error_header)//" There is an j-direction computational domain size mismatch.")
   2716       if ((jdim(2)-jdim(1) < halo) .or. (jdim(4)-jdim(3) < halo))&
   2717           & call mpp_error(FATAL, trim(error_header)//" Excessive j-direction halo size for the output array.")
   2718       if (size(array_in,2) < 2*halo + 1 + var%jec - var%jsc) then
   2719         write (error_msg, *) trim(error_header), ' The target array with j-dimension size ',&
   2720             & (1+jdim(4)-jdim(1)), ' is too small to match the data of size ',&
   2721             & (2*halo + 1 + var%jec - var%jsc)
   2722         call mpp_error(FATAL, trim(error_msg))
   2723       endif

Page 91          Source Listing                  CT_SET_DATA_2D
2021-06-01 08:55                                 coupler_types.F90

   2724 
   2725       j_off = (1-jdim(1)) + (jdim(2)-var%jsc)
   2726     else
   2727       if (size(array_in,2) < 2*halo + 1 + var%jec - var%jsc) then
   2728         write (error_msg, *) trim(error_header), ' The target array with j-dimension size ',&
   2729             & size(array_in,2), ' does not match the data of size ',&
   2730             & (2*halo + 1 + var%jec - var%jsc)
   2731         call mpp_error(FATAL, trim(error_msg))
   2732       endif
   2733       j_off = 1 - (var%jsc-halo)
   2734     endif
   2735 
   2736     do j=var%jsc-halo,var%jec+halo
   2737       do i=var%isc-halo,var%iec+halo
   2738         var%bc(bc_index)%field(field_index)%values(i,j) = scale * array_in(i+i_off,j+j_off)
   2739       enddo
   2740     enddo
   2741   end subroutine CT_set_data_2d


ENTRY POINTS

  Name                                            
                                                  
 coupler_types_mod_mp_ct_set_data_2d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ARRAY_IN                   Dummy  2627     R(8)            8     2     1        ARG,IN           2676,2678,2685,2694,2696,2709,2711
                                                                                                  ,2718,2727,2729,2738              
 BC_INDEX                   Dummy  2627     I(4)            4           scalar   ARG,IN           2652,2664,2666,2668,2738          
 CT_SET_DATA_2D             Subr   2627                                          PRIV                                               
 ERROR_HEADER               Param  2645     CHAR            49          scalar                    2660,2662,2665,2667,2673,2677,2682
                                                                                                  ,2684,2686,2695,2706,2710,2715,271
                                                                                                  7,2719,2728                       
 ERROR_MSG                  Local  2647     CHAR            400         scalar                    2673,2674,2677,2679,2686,2689,2695
                                                                                                  ,2698,2706,2707,2710,2712,2719,272
                                                                                                  2,2728,2731                       
 FIELD_INDEX                Dummy  2627     I(4)            4           scalar   ARG,IN           2666,2738                         
 HALO                       Local  2650     I(4)            4           scalar                    2654,2655,2659,2661,2683,2685,2688
                                                                                                  ,2694,2697,2700,2716,2718,2721,272
                                                                                                  7,2730,2733,2736,2737             
 HALO_SIZE                  Dummy  2628     I(4)            4           scalar   ARG,IN           2655                              
 I                          Local  2650     I(4)            4           scalar                    2737,2738                         
 IDIM                       Dummy  2628     I(4)            4     1     4        ARG,IN           2671,2672,2673,2676,2678,2681,2683
                                                                                                  ,2687,2692                        
 I_OFF                      Local  2650     I(4)            4           scalar                    2692,2700,2738                    
 J                          Local  2650     I(4)            4           scalar                    2736,2738                         
 JDIM                       Dummy  2628     I(4)            4     1     4        ARG,IN           2704,2705,2706,2709,2711,2714,2716
                                                                                                  ,2720,2725                        
 J_OFF                      Local  2650     I(4)            4           scalar                    2725,2733,2738                    
 PRESENT                    Func   2655                                 scalar                    2655,2657,2671,2704               
 SCALE                      Local  2649     R(8)            8           scalar                    2656,2657,2738                    
 SCALE_FACTOR               Dummy  2628     R(8)            8           scalar   ARG,IN           2657                              

Page 92          Source Listing                  CT_SET_DATA_2D
2021-06-01 08:55 Symbol Table                    coupler_types.F90

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 SIZE                       Func   2676                                 scalar                    2676,2678,2685,2694,2696,2709,2711
                                                                                                  ,2718,2727,2729                   
 TRIM                       Func   2660                                 scalar                    2660,2662,2665,2667,2668,2673,2674
                                                                                                  ,2677,2679,2682,2684,2686,2689,269
                                                                                                  5,2698,2706,2707,2710,2712,2715,27
                                                                                                  17,2719,2722,2728,2731            
 VAR                        Dummy  2627     COUPLER_2D_BC_TYPE                                                                      
                                                            120         scalar   ARG,INOUT        2659,2661,2664,2666,2668,2681,2685
                                                                                                  ,2688,2692,2694,2697,2700,2714,271
                                                                                                  8,2721,2725,2727,2730,2733,2736,27
                                                                                                  37,2738                           

Page 93          Source Listing                  CT_SET_DATA_2D
2021-06-01 08:55                                 coupler_types.F90

   2742 
   2743 !> @brief Set one k-level of a single 3d field in a coupler_3d_bc_type
   2744 !!
   2745 !! This subroutine sets a one k-level of a single 3-d field in a coupler_3d_bc_type from a
   2746 !! two-dimensional array.
   2747 !!
   2748 !! @throw FATAL, "bc_index is present and exceeds var_in%num_bcs."
   2749 !! @throw FATAL, "field_index exceeds num_fields for var_in%bc(bc_incdx)%name"
   2750 !! @throw FATAL, "Excessive i-direction halo size for the input structure."
   2751 !! @throw FATAL, "Excessive j-direction halo size for the input structure."
   2752 !! @throw FATAL, "Disordered i-dimension index bound list"
   2753 !! @throw FATAL, "Disordered j-dimension index bound list"
   2754 !! @throw FATAL, "The declared i-dimension size of 'n' does not match the actual size of 'a'"
   2755 !! @throw FATAL, "The declared j-dimension size of 'n' does not match the actual size of 'a'"
   2756 !! @throw FATAL, "There is an i-direction computational domain size mismatch."
   2757 !! @throw FATAL, "There is an j-direction computational domain size mismatch."
   2758 !! @throw FATAL, "The target array with i-dimension size 'n' is too small to match the data of size 'd'"
   2759 !! @throw FATAL, "The target array with j-dimension size 'n' is too small to match the data of size 'd'"
   2760 !! @throw FATAL, "The k-index of 'k' is outside of the valid range of 'ks' to 'ke'"
   2761   subroutine CT_set_data_2d_3d(array_in, bc_index, field_index, k_out, var,&
   2762       & scale_factor, halo_size, idim, jdim)
   2763     real, dimension(1:,1:),     intent(in)    :: array_in  !< The source array for the field; its size
   2764 !! must match the size of the data being copied
   2765 !! unless idim and jdim are supplied.
   2766     integer,                    intent(in)    :: bc_index  !< The index of the boundary condition
   2767 !! that is being copied
   2768     integer,                    intent(in)    :: field_index !< The index of the field in the
   2769 !! boundary condition that is being copied
   2770     integer,                    intent(in)    :: k_out     !< The k-index to set
   2771     type(coupler_3d_bc_type),   intent(inout) :: var       !< BC_type structure with the data to be set
   2772     real,             optional, intent(in)    :: scale_factor !< A scaling factor for the data that is being added
   2773     integer,          optional, intent(in)    :: halo_size !< The extent of the halo to copy; 0 by default
   2774     integer, dimension(4), optional, intent(in) :: idim    !< The data and computational domain extents of
   2775 !! the first dimension of the output array
   2776 !! in a non-decreasing list
   2777     integer, dimension(4), optional, intent(in) :: jdim    !< The data and computational domain extents of
   2778 !! the second dimension of the output array
   2779 !! in a non-decreasing list
   2780 
   2781     character(len=*), parameter :: error_header =&
   2782         & '==>Error from coupler_types_mod (CT_set_data_3d_2d):'
   2783     character(len=400)      :: error_msg
   2784 
   2785     real :: scale
   2786     integer :: i, j, halo, i_off, j_off
   2787 
   2788     if (bc_index <= 0) return
   2789 
   2790     halo = 0
   2791     if (present(halo_size)) halo = halo_size
   2792     scale = 1.0
   2793     if (present(scale_factor)) scale = scale_factor
   2794 
   2795     if ((var%isc-var%isd < halo) .or. (var%ied-var%iec < halo))&
   2796         & call mpp_error(FATAL, trim(error_header)//" Excessive i-direction halo size for the input structure.")
   2797     if ((var%jsc-var%jsd < halo) .or. (var%jed-var%jec < halo))&
   2798         & call mpp_error(FATAL, trim(error_header)//" Excessive j-direction halo size for the input structure.")

Page 94          Source Listing                  CT_SET_DATA_2D_3D
2021-06-01 08:55                                 coupler_types.F90

   2799 
   2800     if (bc_index > var%num_bcs)&
   2801         & call mpp_error(FATAL, trim(error_header)//" bc_index exceeds var%num_bcs.")
   2802     if (field_index > var%bc(bc_index)%num_fields)&
   2803         & call mpp_error(FATAL, trim(error_header)//" field_index exceeds num_fields for" //&
   2804         & trim(var%bc(bc_index)%name) )
   2805 
   2806 ! Do error checking on the i-dimension and determine the array offsets.
   2807     if (present(idim)) then
   2808       if ((idim(1) > idim(2)) .or. (idim(3) > idim(4))) then
   2809         write (error_msg, *) trim(error_header), ' Disordered i-dimension index bound list ', idim
   2810         call mpp_error(FATAL, trim(error_msg))
   2811       endif
   2812       if (size(array_in,1) /= (1+idim(4)-idim(1))) then
   2813         write (error_msg, *) trim(error_header), ' The declared i-dimension size of ',&
   2814             & (1+idim(4)-idim(1)), ' does not match the actual size of ', size(array_in,1)
   2815         call mpp_error(FATAL, trim(error_msg))
   2816       endif
   2817       if ((var%iec-var%isc) /= (idim(3)-idim(2)))&
   2818           & call mpp_error(FATAL, trim(error_header)//" There is an i-direction computational domain size mismatch.")
   2819       if ((idim(2)-idim(1) < halo) .or. (idim(4)-idim(3) < halo))&
   2820           & call mpp_error(FATAL, trim(error_header)//" Excessive i-direction halo size for the output array.")
   2821       if (size(array_in,1) < 2*halo + 1 + var%iec - var%isc) then
   2822         write (error_msg, *) trim(error_header), ' The target array with i-dimension size ',&
   2823             & (1+idim(4)-idim(1)), ' is too small to match the data of size ',&
   2824             & (2*halo + 1 + var%iec - var%isc)
   2825         call mpp_error(FATAL, trim(error_msg))
   2826       endif
   2827 
   2828       i_off = (1-idim(1)) + (idim(2)-var%isc)
   2829     else
   2830       if (size(array_in,1) < 2*halo + 1 + var%iec - var%isc) then
   2831         write (error_msg, *) trim(error_header), ' The target array with i-dimension size ',&
   2832             & size(array_in,1), ' does not match the data of size ',&
   2833             & (2*halo + 1 + var%iec - var%isc)
   2834         call mpp_error(FATAL, trim(error_msg))
   2835       endif
   2836       i_off = 1 - (var%isc-halo)
   2837     endif
   2838 
   2839 ! Do error checking on the j-dimension and determine the array offsets.
   2840     if (present(jdim)) then
   2841       if ((jdim(1) > jdim(2)) .or. (jdim(3) > jdim(4))) then
   2842         write (error_msg, *) trim(error_header), ' Disordered j-dimension index bound list ', jdim
   2843         call mpp_error(FATAL, trim(error_msg))
   2844       endif
   2845       if (size(array_in,2) /= (1+jdim(4)-jdim(1))) then
   2846         write (error_msg, *) trim(error_header), ' The declared j-dimension size of ',&
   2847             & (1+jdim(4)-jdim(1)), ' does not match the actual size of ', size(array_in,2)
   2848         call mpp_error(FATAL, trim(error_msg))
   2849       endif
   2850       if ((var%jec-var%jsc) /= (jdim(3)-jdim(2)))&
   2851           & call mpp_error(FATAL, trim(error_header)//" There is an j-direction computational domain size mismatch.")
   2852       if ((jdim(2)-jdim(1) < halo) .or. (jdim(4)-jdim(3) < halo))&
   2853           & call mpp_error(FATAL, trim(error_header)//" Excessive j-direction halo size for the output array.")
   2854       if (size(array_in,2) < 2*halo + 1 + var%jec - var%jsc) then
   2855         write (error_msg, *) trim(error_header), ' The target array with j-dimension size ',&

Page 95          Source Listing                  CT_SET_DATA_2D_3D
2021-06-01 08:55                                 coupler_types.F90

   2856             & (1+jdim(4)-jdim(1)), ' is too small to match the data of size ',&
   2857             & (2*halo + 1 + var%jec - var%jsc)
   2858         call mpp_error(FATAL, trim(error_msg))
   2859       endif
   2860 
   2861       j_off = (1-jdim(1)) + (jdim(2)-var%jsc)
   2862     else
   2863       if (size(array_in,2) < 2*halo + 1 + var%jec - var%jsc) then
   2864         write (error_msg, *) trim(error_header), ' The target array with j-dimension size ',&
   2865             & size(array_in,2), ' does not match the data of size ',&
   2866             & (2*halo + 1 + var%jec - var%jsc)
   2867         call mpp_error(FATAL, trim(error_msg))
   2868       endif
   2869       j_off = 1 - (var%jsc-halo)
   2870     endif
   2871 
   2872     if ((k_out > var%ke) .or. (k_out < var%ks)) then
   2873       write (error_msg, *) trim(error_header), ' The k-index of ', k_out,&
   2874           & ' is outside of the valid range of ', var%ks, ' to ', var%ke
   2875       call mpp_error(FATAL, trim(error_msg))
   2876     endif
   2877 
   2878     do j=var%jsc-halo,var%jec+halo
   2879       do i=var%isc-halo,var%iec+halo
   2880         var%bc(bc_index)%field(field_index)%values(i,j,k_out) = scale * array_in(i+i_off,j+j_off)
   2881       enddo
   2882     enddo
   2883   end subroutine CT_set_data_2d_3d

Page 96          Source Listing                  CT_SET_DATA_2D_3D
2021-06-01 08:55 Entry Points                    coupler_types.F90



ENTRY POINTS

  Name                                               
                                                     
 coupler_types_mod_mp_ct_set_data_2d_3d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ARRAY_IN                   Dummy  2761     R(8)            8     2     1        ARG,IN           2812,2814,2821,2830,2832,2845,2847
                                                                                                  ,2854,2863,2865,2880              
 BC_INDEX                   Dummy  2761     I(4)            4           scalar   ARG,IN           2788,2800,2802,2804,2880          
 CT_SET_DATA_2D_3D          Subr   2761                                          PRIV                                               
 ERROR_HEADER               Param  2781     CHAR            52          scalar                    2796,2798,2801,2803,2809,2813,2818
                                                                                                  ,2820,2822,2831,2842,2846,2851,285
                                                                                                  3,2855,2864,2873                  
 ERROR_MSG                  Local  2783     CHAR            400         scalar                    2809,2810,2813,2815,2822,2825,2831
                                                                                                  ,2834,2842,2843,2846,2848,2855,285
                                                                                                  8,2864,2867,2873,2875             
 FIELD_INDEX                Dummy  2761     I(4)            4           scalar   ARG,IN           2802,2880                         
 HALO                       Local  2786     I(4)            4           scalar                    2790,2791,2795,2797,2819,2821,2824
                                                                                                  ,2830,2833,2836,2852,2854,2857,286
                                                                                                  3,2866,2869,2878,2879             
 HALO_SIZE                  Dummy  2762     I(4)            4           scalar   ARG,IN           2791                              
 I                          Local  2786     I(4)            4           scalar                    2879,2880                         
 IDIM                       Dummy  2762     I(4)            4     1     4        ARG,IN           2807,2808,2809,2812,2814,2817,2819
                                                                                                  ,2823,2828                        
 I_OFF                      Local  2786     I(4)            4           scalar                    2828,2836,2880                    
 J                          Local  2786     I(4)            4           scalar                    2878,2880                         
 JDIM                       Dummy  2762     I(4)            4     1     4        ARG,IN           2840,2841,2842,2845,2847,2850,2852
                                                                                                  ,2856,2861                        
 J_OFF                      Local  2786     I(4)            4           scalar                    2861,2869,2880                    
 K_OUT                      Dummy  2761     I(4)            4           scalar   ARG,IN           2872,2873,2880                    
 PRESENT                    Func   2791                                 scalar                    2791,2793,2807,2840               
 SCALE                      Local  2785     R(8)            8           scalar                    2792,2793,2880                    
 SCALE_FACTOR               Dummy  2762     R(8)            8           scalar   ARG,IN           2793                              
 SIZE                       Func   2812                                 scalar                    2812,2814,2821,2830,2832,2845,2847
                                                                                                  ,2854,2863,2865                   
 TRIM                       Func   2796                                 scalar                    2796,2798,2801,2803,2804,2809,2810
                                                                                                  ,2813,2815,2818,2820,2822,2825,283
                                                                                                  1,2834,2842,2843,2846,2848,2851,28
                                                                                                  53,2855,2858,2864,2867,2873,2875  
 VAR                        Dummy  2761     COUPLER_3D_BC_TYPE                                                                      
                                                            128         scalar   ARG,INOUT        2795,2797,2800,2802,2804,2817,2821
                                                                                                  ,2824,2828,2830,2833,2836,2850,285
                                                                                                  4,2857,2861,2863,2866,2869,2872,28
                                                                                                  74,2878,2879,2880                 

Page 97          Source Listing                  CT_SET_DATA_2D_3D
2021-06-01 08:55                                 coupler_types.F90

   2884 
   2885 !> @brief Set a single 3d field in a coupler_3d_bc_type
   2886 !!
   2887 !! This subroutine sets a single 3-d field in a coupler_3d_bc_type from a three-dimensional array.
   2888 !!
   2889 !! @throw FATAL, "bc_index is present and exceeds var_in%num_bcs."
   2890 !! @throw FATAL, "field_index exceeds num_fields for var_in%bc(bc_incdx)%name"
   2891 !! @throw FATAL, "Excessive i-direction halo size for the input structure."
   2892 !! @throw FATAL, "Excessive j-direction halo size for the input structure."
   2893 !! @throw FATAL, "Disordered i-dimension index bound list"
   2894 !! @throw FATAL, "Disordered j-dimension index bound list"
   2895 !! @throw FATAL, "The declared i-dimension size of 'n' does not match the actual size of 'a'"
   2896 !! @throw FATAL, "The declared j-dimension size of 'n' does not match the actual size of 'a'"
   2897 !! @throw FATAL, "There is an i-direction computational domain size mismatch."
   2898 !! @throw FATAL, "There is an j-direction computational domain size mismatch."
   2899 !! @throw FATAL, "The target array with i-dimension size 'n' is too small to match the data of size 'd'"
   2900 !! @throw FATAL, "The target array with j-dimension size 'n' is too small to match the data of size 'd'"
   2901 !! @throw FATAL, "The target array with K-dimension size 'n' is too small to match the data of size 'd'"
   2902   subroutine CT_set_data_3d(array_in, bc_index, field_index, var,&
   2903       & scale_factor, halo_size, idim, jdim)
   2904     real, dimension(1:,1:,1:),  intent(in)    :: array_in  !< The source array for the field; its size
   2905 !! must match the size of the data being copied
   2906 !! unless idim and jdim are supplied.
   2907     integer,                    intent(in)    :: bc_index  !< The index of the boundary condition
   2908 !! that is being copied
   2909     integer,                    intent(in)    :: field_index !< The index of the field in the
   2910 !! boundary condition that is being copied
   2911     type(coupler_3d_bc_type),   intent(inout) :: var       !< BC_type structure with the data to be set
   2912     real,             optional, intent(in)    :: scale_factor !< A scaling factor for the data that is being added
   2913     integer,          optional, intent(in)    :: halo_size !< The extent of the halo to copy; 0 by default
   2914     integer, dimension(4), optional, intent(in) :: idim    !< The data and computational domain extents of
   2915 !! the first dimension of the output array
   2916 !! in a non-decreasing list
   2917     integer, dimension(4), optional, intent(in) :: jdim    !< The data and computational domain extents of
   2918 !! the second dimension of the output array
   2919 !! in a non-decreasing list
   2920 
   2921     character(len=*), parameter :: error_header =&
   2922         & '==>Error from coupler_types_mod (CT_set_data_3d):'
   2923     character(len=400) :: error_msg
   2924 
   2925     real :: scale
   2926     integer :: i, j, k, halo, i_off, j_off, k_off
   2927 
   2928     if (bc_index <= 0) return
   2929 
   2930     halo = 0
   2931     if (present(halo_size)) halo = halo_size
   2932     scale = 1.0
   2933     if (present(scale_factor)) scale = scale_factor
   2934 
   2935     if ((var%isc-var%isd < halo) .or. (var%ied-var%iec < halo))&
   2936         & call mpp_error(FATAL, trim(error_header)//" Excessive i-direction halo size for the input structure.")
   2937     if ((var%jsc-var%jsd < halo) .or. (var%jed-var%jec < halo))&
   2938         & call mpp_error(FATAL, trim(error_header)//" Excessive j-direction halo size for the input structure.")
   2939 
   2940     if (bc_index > var%num_bcs)&

Page 98          Source Listing                  CT_SET_DATA_3D
2021-06-01 08:55                                 coupler_types.F90

   2941         & call mpp_error(FATAL, trim(error_header)//" bc_index exceeds var%num_bcs.")
   2942     if (field_index > var%bc(bc_index)%num_fields)&
   2943         & call mpp_error(FATAL, trim(error_header)//" field_index exceeds num_fields for" //&
   2944         & trim(var%bc(bc_index)%name) )
   2945 
   2946 ! Do error checking on the i-dimension and determine the array offsets.
   2947     if (present(idim)) then
   2948       if ((idim(1) > idim(2)) .or. (idim(3) > idim(4))) then
   2949         write (error_msg, *) trim(error_header), ' Disordered i-dimension index bound list ', idim
   2950         call mpp_error(FATAL, trim(error_msg))
   2951       endif
   2952       if (size(array_in,1) /= (1+idim(4)-idim(1))) then
   2953         write (error_msg, *) trim(error_header), ' The declared i-dimension size of ',&
   2954             & (1+idim(4)-idim(1)), ' does not match the actual size of ', size(array_in,1)
   2955         call mpp_error(FATAL, trim(error_msg))
   2956       endif
   2957       if ((var%iec-var%isc) /= (idim(3)-idim(2)))&
   2958           & call mpp_error(FATAL, trim(error_header)//" There is an i-direction computational domain size mismatch.")
   2959       if ((idim(2)-idim(1) < halo) .or. (idim(4)-idim(3) < halo))&
   2960           & call mpp_error(FATAL, trim(error_header)//" Excessive i-direction halo size for the output array.")
   2961       if (size(array_in,1) < 2*halo + 1 + var%iec - var%isc) then
   2962         write (error_msg, *) trim(error_header), ' The target array with i-dimension size ',&
   2963             & (1+idim(4)-idim(1)), ' is too small to match the data of size ',&
   2964             & (2*halo + 1 + var%iec - var%isc)
   2965         call mpp_error(FATAL, trim(error_msg))
   2966       endif
   2967 
   2968       i_off = (1-idim(1)) + (idim(2)-var%isc)
   2969     else
   2970       if (size(array_in,1) < 2*halo + 1 + var%iec - var%isc) then
   2971         write (error_msg, *) trim(error_header), ' The target array with i-dimension size ',&
   2972             & size(array_in,1), ' does not match the data of size ',&
   2973             & (2*halo + 1 + var%iec - var%isc)
   2974         call mpp_error(FATAL, trim(error_msg))
   2975       endif
   2976       i_off = 1 - (var%isc-halo)
   2977     endif
   2978 
   2979 ! Do error checking on the j-dimension and determine the array offsets.
   2980     if (present(jdim)) then
   2981       if ((jdim(1) > jdim(2)) .or. (jdim(3) > jdim(4))) then
   2982         write (error_msg, *) trim(error_header), ' Disordered j-dimension index bound list ', jdim
   2983         call mpp_error(FATAL, trim(error_msg))
   2984       endif
   2985       if (size(array_in,2) /= (1+jdim(4)-jdim(1))) then
   2986         write (error_msg, *) trim(error_header), ' The declared j-dimension size of ',&
   2987             & (1+jdim(4)-jdim(1)), ' does not match the actual size of ', size(array_in,2)
   2988         call mpp_error(FATAL, trim(error_msg))
   2989       endif
   2990       if ((var%jec-var%jsc) /= (jdim(3)-jdim(2)))&
   2991           & call mpp_error(FATAL, trim(error_header)//" There is an j-direction computational domain size mismatch.")
   2992       if ((jdim(2)-jdim(1) < halo) .or. (jdim(4)-jdim(3) < halo))&
   2993           & call mpp_error(FATAL, trim(error_header)//" Excessive j-direction halo size for the output array.")
   2994       if (size(array_in,2) < 2*halo + 1 + var%jec - var%jsc) then
   2995         write (error_msg, *) trim(error_header), ' The target array with j-dimension size ',&
   2996             & (1+jdim(4)-jdim(1)), ' is too small to match the data of size ',&
   2997             & (2*halo + 1 + var%jec - var%jsc)

Page 99          Source Listing                  CT_SET_DATA_3D
2021-06-01 08:55                                 coupler_types.F90

   2998         call mpp_error(FATAL, trim(error_msg))
   2999       endif
   3000 
   3001       j_off = (1-jdim(1)) + (jdim(2)-var%jsc)
   3002     else
   3003       if (size(array_in,2) < 2*halo + 1 + var%jec - var%jsc) then
   3004         write (error_msg, *) trim(error_header), ' The target array with j-dimension size ',&
   3005             & size(array_in,2), ' does not match the data of size ',&
   3006             & (2*halo + 1 + var%jec - var%jsc)
   3007         call mpp_error(FATAL, trim(error_msg))
   3008       endif
   3009       j_off = 1 - (var%jsc-halo)
   3010     endif
   3011 
   3012     if (size(array_in,3) /= 1 + var%ke - var%ks) then
   3013       write (error_msg, *) trim(error_header), ' The target array with k-dimension size ',&
   3014           & size(array_in,3), ' does not match the data of size ',&
   3015           & (1 + var%ke - var%ks)
   3016       call mpp_error(FATAL, trim(error_msg))
   3017     endif
   3018     k_off = 1 - var%ks
   3019 
   3020     do k=var%ks,var%ke
   3021       do j=var%jsc-halo,var%jec+halo
   3022         do i=var%isc-halo,var%iec+halo
   3023           var%bc(bc_index)%field(field_index)%values(i,j,k) = scale * array_in(i+i_off,j+j_off,k+k_off)
   3024         enddo
   3025       enddo
   3026     enddo
   3027   end subroutine CT_set_data_3d

Page 100         Source Listing                  CT_SET_DATA_3D
2021-06-01 08:55 Entry Points                    coupler_types.F90



ENTRY POINTS

  Name                                            
                                                  
 coupler_types_mod_mp_ct_set_data_3d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ARRAY_IN                   Dummy  2902     R(8)            8     3     1        ARG,IN           2952,2954,2961,2970,2972,2985,2987
                                                                                                  ,2994,3003,3005,3012,3014,3023    
 BC_INDEX                   Dummy  2902     I(4)            4           scalar   ARG,IN           2928,2940,2942,2944,3023          
 CT_SET_DATA_3D             Subr   2902                                          PRIV                                               
 ERROR_HEADER               Param  2921     CHAR            49          scalar                    2936,2938,2941,2943,2949,2953,2958
                                                                                                  ,2960,2962,2971,2982,2986,2991,299
                                                                                                  3,2995,3004,3013                  
 ERROR_MSG                  Local  2923     CHAR            400         scalar                    2949,2950,2953,2955,2962,2965,2971
                                                                                                  ,2974,2982,2983,2986,2988,2995,299
                                                                                                  8,3004,3007,3013,3016             
 FIELD_INDEX                Dummy  2902     I(4)            4           scalar   ARG,IN           2942,3023                         
 HALO                       Local  2926     I(4)            4           scalar                    2930,2931,2935,2937,2959,2961,2964
                                                                                                  ,2970,2973,2976,2992,2994,2997,300
                                                                                                  3,3006,3009,3021,3022             
 HALO_SIZE                  Dummy  2903     I(4)            4           scalar   ARG,IN           2931                              
 I                          Local  2926     I(4)            4           scalar                    3022,3023                         
 IDIM                       Dummy  2903     I(4)            4     1     4        ARG,IN           2947,2948,2949,2952,2954,2957,2959
                                                                                                  ,2963,2968                        
 I_OFF                      Local  2926     I(4)            4           scalar                    2968,2976,3023                    
 J                          Local  2926     I(4)            4           scalar                    3021,3023                         
 JDIM                       Dummy  2903     I(4)            4     1     4        ARG,IN           2980,2981,2982,2985,2987,2990,2992
                                                                                                  ,2996,3001                        
 J_OFF                      Local  2926     I(4)            4           scalar                    3001,3009,3023                    
 K                          Local  2926     I(4)            4           scalar                    3020,3023                         
 K_OFF                      Local  2926     I(4)            4           scalar                    3018,3023                         
 PRESENT                    Func   2931                                 scalar                    2931,2933,2947,2980               
 SCALE                      Local  2925     R(8)            8           scalar                    2932,2933,3023                    
 SCALE_FACTOR               Dummy  2903     R(8)            8           scalar   ARG,IN           2933                              
 SIZE                       Func   2952                                 scalar                    2952,2954,2961,2970,2972,2985,2987
                                                                                                  ,2994,3003,3005,3012,3014         
 TRIM                       Func   2936                                 scalar                    2936,2938,2941,2943,2944,2949,2950
                                                                                                  ,2953,2955,2958,2960,2962,2965,297
                                                                                                  1,2974,2982,2983,2986,2988,2991,29
                                                                                                  93,2995,2998,3004,3007,3013,3016  
 VAR                        Dummy  2902     COUPLER_3D_BC_TYPE                                                                      
                                                            128         scalar   ARG,INOUT        2935,2937,2940,2942,2944,2957,2961
                                                                                                  ,2964,2968,2970,2973,2976,2990,299
                                                                                                  4,2997,3001,3003,3006,3009,3012,30
                                                                                                  15,3018,3020,3021,3022,3023       

Page 101         Source Listing                  CT_SET_DATA_3D
2021-06-01 08:55                                 coupler_types.F90

   3028 
   3029 
   3030 !! @brief Register the diagnostics of a coupler_2d_bc_type
   3031 !!
   3032 !! @throw FATAL, "axes has less than 2 elements"
   3033   subroutine CT_set_diags_2d(var, diag_name, axes, time)
   3034     type(coupler_2d_bc_type), intent(inout) :: var  !< BC_type structure for which to register diagnostics
   3035     character(len=*),         intent(in)    :: diag_name !< name for diagnostic file--if blank, then don't register the fiel
   3035 ds
   3036     integer, dimension(:),    intent(in)    :: axes !< array of axes identifiers for diagnostic variable registration
   3037     type(time_type),          intent(in)    :: time !< model time variable for registering diagnostic field
   3038 
   3039     integer :: m, n
   3040 
   3041     if (diag_name == ' ') return
   3042 
   3043     if (size(axes) < 2) then
   3044       call mpp_error(FATAL, '==>Error from coupler_types_mod' //&
   3045           & '(coupler_types_set_diags_3d): axes has less than 2 elements')
   3046     endif
   3047 
   3048     do n = 1, var%num_bcs
   3049       do m = 1, var%bc(n)%num_fields
   3050         var%bc(n)%field(m)%id_diag = register_diag_field(diag_name,&
   3051             & var%bc(n)%field(m)%name, axes(1:2), Time,&
   3052             & var%bc(n)%field(m)%long_name, var%bc(n)%field(m)%units)
   3053       enddo
   3054     enddo
   3055   end subroutine CT_set_diags_2d

Page 102         Source Listing                  CT_SET_DIAGS_2D
2021-06-01 08:55 Entry Points                    coupler_types.F90



ENTRY POINTS

  Name                                             
                                                   
 coupler_types_mod_mp_ct_set_diags_2d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 AXES                       Dummy  3033     I(4)            4     1     1        ARG,IN           3043,3051                         
 CT_SET_DIAGS_2D            Subr   3033                                          PRIV             385,455,524                       
 DIAG_NAME                  Dummy  3033     CHAR                        scalar   ARG,IN           3041,3050                         
 M                          Local  3039     I(4)            4           scalar                    3049,3050,3051,3052               
 N                          Local  3039     I(4)            4           scalar                    3048,3049,3050,3051,3052          
 REGISTER_DIAG_FIELD        Local  3050                                 scalar   PRIV             36,3050,3077                      
 REGISTER_DIAG_FIELD_ARRAY  Func   3050     I(4)            4           scalar   PRIV             3050,3077                         
 SIZE                       Func   3043                                 scalar                    3043                              
 TIME                       Dummy  3033     TIME_TYPE       16          scalar   ARG,IN           3051                              
 VAR                        Dummy  3033     COUPLER_2D_BC_TYPE                                                                      
                                                            120         scalar   ARG,INOUT        3048,3049,3050,3051,3052          


TYPE COMPONENTS/COMMON VARIABLES

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 COUPLER_2D_VALUES_TYPE.ID_DIAG                                                                                            ...
                            I(4)            4     152            scalar                    3050,3095,3096                     

Page 103         Source Listing                  CT_SET_DIAGS_2D
2021-06-01 08:55                                 coupler_types.F90

   3056 
   3057 !> @brief Register the diagnostics of a coupler_3d_bc_type.
   3058 !!
   3059 !! @throw FATAL, "axes has less than 3 elements"
   3060   subroutine CT_set_diags_3d(var, diag_name, axes, time)
   3061     type(coupler_3d_bc_type), intent(inout) :: var  !< BC_type structure for which to register diagnostics
   3062     character(len=*),         intent(in)    :: diag_name !< name for diagnostic file--if blank, then don't register the fiel
   3062 ds
   3063     integer, dimension(:),    intent(in)    :: axes !< array of axes identifiers for diagnostic variable registration
   3064     type(time_type),          intent(in)    :: time !< model time variable for registering diagnostic field
   3065 
   3066     integer :: m, n
   3067 
   3068     if (diag_name == ' ') return
   3069 
   3070     if (size(axes) < 3) then
   3071       call mpp_error(FATAL, '==>Error from coupler_types_mod' //&
   3072           & '(coupler_types_set_diags_3d): axes has less than 3 elements')
   3073     endif
   3074 
   3075     do n = 1, var%num_bcs
   3076       do m = 1, var%bc(n)%num_fields
   3077         var%bc(n)%field(m)%id_diag = register_diag_field(diag_name,&
   3078             & var%bc(n)%field(m)%name, axes(1:3), Time,&
   3079             & var%bc(n)%field(m)%long_name, var%bc(n)%field(m)%units )
   3080       enddo
   3081     enddo
   3082   end subroutine CT_set_diags_3d

Page 104         Source Listing                  CT_SET_DIAGS_3D
2021-06-01 08:55 Entry Points                    coupler_types.F90



ENTRY POINTS

  Name                                             
                                                   
 coupler_types_mod_mp_ct_set_diags_3d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 AXES                       Dummy  3060     I(4)            4     1     1        ARG,IN           3070,3078                         
 CT_SET_DIAGS_3D            Subr   3060                                          PRIV             421,490,559                       
 DIAG_NAME                  Dummy  3060     CHAR                        scalar   ARG,IN           3068,3077                         
 M                          Local  3066     I(4)            4           scalar                    3076,3077,3078,3079               
 N                          Local  3066     I(4)            4           scalar                    3075,3076,3077,3078,3079          
 SIZE                       Func   3070                                 scalar                    3070                              
 TIME                       Dummy  3060     TIME_TYPE       16          scalar   ARG,IN           3078                              
 VAR                        Dummy  3060     COUPLER_3D_BC_TYPE                                                                      
                                                            128         scalar   ARG,INOUT        3075,3076,3077,3078,3079          


TYPE COMPONENTS/COMMON VARIABLES

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 COUPLER_3D_VALUES_TYPE.ID_DIAG                                                                                            ...
                            I(4)            4     176            scalar                    3077,3112,3113                     

Page 105         Source Listing                  CT_SET_DIAGS_3D
2021-06-01 08:55                                 coupler_types.F90

   3083 
   3084 
   3085 !> @brief Write out all diagnostics of elements of a coupler_2d_bc_type
   3086   subroutine CT_send_data_2d(var, Time)
   3087     type(coupler_2d_bc_type), intent(in) :: var  !< BC_type structure with the diagnostics to write
   3088     type(time_type),          intent(in) :: time !< The current model time
   3089 
   3090     integer :: m, n
   3091     logical :: used
   3092 
   3093     do n = 1, var%num_bcs
   3094       do m = 1, var%bc(n)%num_fields
   3095         if (var%bc(n)%field(m)%id_diag > 0) then
   3096           used = send_data(var%bc(n)%field(m)%id_diag, var%bc(n)%field(m)%values, Time)
   3097         endif
   3098       enddo
   3099     enddo
   3100   end subroutine CT_send_data_2d


ENTRY POINTS

  Name                                             
                                                   
 coupler_types_mod_mp_ct_send_data_2d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 CT_SEND_DATA_2D            Subr   3086                                          PRIV                                               
 M                          Local  3090     I(4)            4           scalar                    3094,3095,3096                    
 N                          Local  3090     I(4)            4           scalar                    3093,3094,3095,3096               
 SEND_DATA                  Local  3096                                 scalar   PRIV             36,3096,3113                      
 SEND_DATA_2D               Func   3096     L(4)            4           scalar   PRIV             3096                              
 TIME                       Dummy  3086     TIME_TYPE       16          scalar   ARG,IN           3096                              
 USED                       Local  3091     L(4)            4           scalar                    3096                              
 VAR                        Dummy  3086     COUPLER_2D_BC_TYPE                                                                      
                                                            120         scalar   ARG,IN           3093,3094,3095,3096               

Page 106         Source Listing                  CT_SEND_DATA_2D
2021-06-01 08:55                                 coupler_types.F90

   3101 
   3102 !> @brief Write out all diagnostics of elements of a coupler_3d_bc_type
   3103   subroutine CT_send_data_3d(var, Time)
   3104     type(coupler_3d_bc_type), intent(in) :: var  !< BC_type structure with the diagnostics to write
   3105     type(time_type),          intent(in) :: time !< The current model time
   3106 
   3107     integer :: m, n
   3108     logical :: used
   3109 
   3110     do n = 1, var%num_bcs
   3111       do m = 1, var%bc(n)%num_fields
   3112         if (var%bc(n)%field(m)%id_diag > 0) then
   3113           used = send_data(var%bc(n)%field(m)%id_diag, var%bc(n)%field(m)%values, Time)
   3114         endif
   3115       enddo
   3116     enddo
   3117   end subroutine CT_send_data_3d


ENTRY POINTS

  Name                                             
                                                   
 coupler_types_mod_mp_ct_send_data_3d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 CT_SEND_DATA_3D            Subr   3103                                          PRIV                                               
 M                          Local  3107     I(4)            4           scalar                    3111,3112,3113                    
 N                          Local  3107     I(4)            4           scalar                    3110,3111,3112,3113               
 SEND_DATA_3D               Func   3113     L(4)            4           scalar   PRIV             3113                              
 TIME                       Dummy  3103     TIME_TYPE       16          scalar   ARG,IN           3113                              
 USED                       Local  3108     L(4)            4           scalar                    3113                              
 VAR                        Dummy  3103     COUPLER_3D_BC_TYPE                                                                      
                                                            128         scalar   ARG,IN           3110,3111,3112,3113               

Page 107         Source Listing                  CT_SEND_DATA_3D
2021-06-01 08:55                                 coupler_types.F90

   3118 
   3119 !! @brief Register the fields in a coupler_2d_bc_type to be saved in restart files
   3120 !! This subroutine registers the fields in a coupler_2d_bc_type to be saved in restart files
   3121 !! specified in the field table.
   3122   subroutine CT_register_restarts_2d(var, bc_rest_files, num_rest_files, mpp_domain, to_read, ocean_restart, directory)
   3123     type(coupler_2d_bc_type), intent(inout) :: var  !< BC_type structure to be registered for restarts
   3124     type(FmsNetcdfDomainFile_t),  dimension(:), pointer  :: bc_rest_files !< Structures describing the restart files
   3125     integer,                  intent(out) :: num_rest_files !< The number of restart files to use
   3126     type(domain2D),           intent(in)  :: mpp_domain     !< The FMS domain to use for this registration call
   3127     logical,                  intent(in)  :: to_read        !< Flag indicating if reading/writing a file
   3128     logical,         optional,intent(in)  :: ocean_restart  !< If true, use the ocean restart file name.
   3129     character(len=*),optional,intent(in)  :: directory      !< Directory where to open the file
   3130 
   3131     character(len=80), dimension(max(1,var%num_bcs)) :: rest_file_names
   3132     character(len=80) :: file_nm
   3133     logical :: ocn_rest
   3134     integer :: f, n, m
   3135 
   3136     character(len=20), allocatable, dimension(:)             :: dim_names !< Array of dimension names
   3137     character(len=20)                          :: io_type   !< flag indicating io type: "read" "overwrite"
   3138     logical, dimension(max(1,var%num_bcs))     :: file_is_open !< flag indicating if file is open
   3139     character(len=20)                          :: dir       !< Directory where to open the file
   3140 
   3141     ocn_rest = .true.
   3142     if (present(ocean_restart)) ocn_rest = ocean_restart
   3143 
   3144     if (present(directory)) dir = trim(directory)
   3145 
   3146     if (to_read) then
   3147         io_type = "read"
   3148         if (.not. present(directory)) dir = "INPUT/"
   3149     else
   3150         io_type = "overwrite"
   3151         if (.not. present(directory)) dir = "RESTART/"
   3152     endif
   3153 
   3154 ! Determine the number and names of the restart files
   3155     num_rest_files = 0
   3156     do n = 1, var%num_bcs
   3157       if (var%bc(n)%num_fields <= 0) cycle
   3158       file_nm = trim(var%bc(n)%ice_restart_file)
   3159       if (ocn_rest) file_nm = trim(var%bc(n)%ocean_restart_file)
   3160       do f = 1, num_rest_files
   3161         if (trim(file_nm) == trim(rest_file_names(f))) exit
   3162       enddo
   3163       if (f>num_rest_files) then
   3164         num_rest_files = num_rest_files + 1
   3165         rest_file_names(f) = trim(file_nm)
   3166       endif
   3167     enddo
   3168 
   3169     if (num_rest_files == 0) return
   3170 
   3171     allocate(bc_rest_files(num_rest_files))
   3172 
   3173 !< Open the files
   3174     do n = 1, num_rest_files

Page 108         Source Listing                  CT_REGISTER_RESTARTS_2D
2021-06-01 08:55                                 coupler_types.F90

   3175         file_is_open(n) = open_file(bc_rest_files(n), trim(dir)//rest_file_names(n), io_type, mpp_domain, is_restart=.true.)
   3176         if (file_is_open(n)) then
   3177              call register_axis_wrapper(bc_rest_files(n), to_read=to_read)
   3178         endif
   3179     enddo
   3180 
   3181 ! Register the fields with the restart files
   3182     do n = 1, var%num_bcs
   3183       if (var%bc(n)%num_fields <= 0) cycle
   3184 
   3185       file_nm = trim(var%bc(n)%ice_restart_file)
   3186       if (ocn_rest) file_nm = trim(var%bc(n)%ocean_restart_file)
   3187       do f = 1, num_rest_files
   3188         if (trim(file_nm) == trim(rest_file_names(f))) exit
   3189       enddo
   3190 
   3191       var%bc(n)%fms2_io_rest_type => bc_rest_files(f)
   3192 
   3193       do m = 1, var%bc(n)%num_fields
   3194          if (file_is_open(f)) then
   3195             if( to_read .and. variable_exists(bc_rest_files(f), var%bc(n)%field(m)%name)) then
   3196 !< If reading get the dimension names from the file
   3197                 allocate(dim_names(get_variable_num_dimensions(bc_rest_files(f), var%bc(n)%field(m)%name)))
   3198                 call get_variable_dimension_names(bc_rest_files(f), &
   3199                 & var%bc(n)%field(m)%name, dim_names)
   3200             else
   3201 !< If writing use dummy dimension names
   3202                 allocate(dim_names(3))
   3203                 dim_names(1) = "xaxis_1"
   3204                 dim_names(2) = "yaxis_1"
   3205                 dim_names(3) = "Time"
   3206             endif !< to_read
   3207 
   3208             call register_restart_field(bc_rest_files(f),&
   3209             & var%bc(n)%field(m)%name, var%bc(n)%field(m)%values, dim_names, &
   3210             & is_optional=var%bc(n)%field(m)%may_init )
   3211 
   3212             deallocate(dim_names)
   3213          endif !< If file_is_open
   3214       enddo !< num_fields
   3215     enddo !< num_bcs
   3216 
   3217   end subroutine CT_register_restarts_2d

Page 109         Source Listing                  CT_REGISTER_RESTARTS_2D
2021-06-01 08:55 Entry Points                    coupler_types.F90



ENTRY POINTS

  Name                                                     
                                                           
 coupler_types_mod_mp_ct_register_restarts_2d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 BC_REST_FILES              Dummy  3122     RECORD          2040  1     1        ARG,PTR,TGT      3171,3175,3177,3191,3195,3197,3198
                                                                                 INOUT            ,3208                             
 CT_REGISTER_RESTARTS_2D    Subr   3122                                          PRIV                                               
 DIM_NAMES                  Local  3136     CHAR            20    1     1        ALC              3197,3199,3202,3203,3204,3205,3209
                                                                                                  ,3212                             
 DIR                        Local  3139     CHAR            20          scalar                    3144,3148,3151,3175               
 DIRECTORY                  Dummy  3122     CHAR                        scalar   ARG,IN           3144,3148,3151                    
 F                          Local  3134     I(4)            4           scalar                    3160,3161,3163,3165,3187,3188,3191
                                                                                                  ,3194,3195,3197,3198,3208         
 FILE_IS_OPEN               Local  3138     L(4)            4     1     0                         3175,3176,3194                    
 FILE_NM                    Local  3132     CHAR            80          scalar                    3158,3159,3161,3165,3185,3186,3188
 FMSNETCDFDOMAINFILE_T      Type   3124                                 scalar                    27,118,166,3124,3221,3274,3307,341
                                                                                                  3                                 
 GET_VARIABLE_DIMENSION_NAM                                                                                                         
 ES                         Subr   3198                                          PRIV             31,3198,3494                      
 GET_VARIABLE_NUM_DIMENSION                                                                                                         
 S                          Func   3197     I(4)            4           scalar   PRIV             32,3197,3493                      
 IO_TYPE                    Local  3137     CHAR            20          scalar                    3147,3150,3175                    
 M                          Local  3134     I(4)            4           scalar                    3193,3195,3197,3199,3209,3210     
 MAX                        Func   3131                                 scalar                    3131,3138                         
 MPP_DOMAIN                 Dummy  3122     DOMAIN2D        752         scalar   ARG,IN           3175                              
 N                          Local  3134     I(4)            4           scalar                    3156,3157,3158,3159,3174,3175,3176
                                                                                                  ,3177,3182,3183,3185,3186,3191,319
                                                                                                  3,3195,3197,3199,3209,3210        
 NUM_REST_FILES             Dummy  3122     I(4)            4           scalar   ARG,OUT          3155,3160,3163,3164,3169,3171,3174
                                                                                                  ,3187                             
 OCEAN_RESTART              Dummy  3122     L(4)            4           scalar   ARG,IN           3142                              
 OCN_REST                   Local  3133     L(4)            4           scalar                    3141,3142,3159,3186               
 OPEN_DOMAIN_FILE           Func   3175     L(4)            4           scalar   PRIV             3175,3466                         
 OPEN_FILE                  Local  3175                                 scalar   PRIV             27,3175,3466                      
 PRESENT                    Func   3142                                 scalar                    3142,3144,3148,3151               
 REGISTER_DOMAIN_RESTART_VA                                                                                                         
 RIABLE_2D                  Subr   3208                                          PRIV             3208                              
 REGISTER_RESTART_FIELD     Local  3208                                 scalar   PRIV             27,3208,3505                      
 REST_FILE_NAMES            Local  3131     CHAR            80    1     0                         3161,3165,3175,3188               
 TO_READ                    Dummy  3122     L(4)            4           scalar   ARG,IN           3146,3177,3195                    
 TRIM                       Func   3144                                 scalar                    3144,3158,3159,3161,3165,3175,3185
                                                                                                  ,3186,3188                        
 VAR                        Dummy  3122     COUPLER_2D_BC_TYPE                                                                      
                                                            120         scalar   ARG,INOUT        3131,3138,3156,3157,3158,3159,3182
                                                                                                  ,3183,3185,3186,3191,3193,3195,319
                                                                                                  7,3199,3209,3210                  
 VARIABLE_EXISTS            Func   3195     L(4)            4           scalar   PRIV             28,3195,3239,3491,3631,3767       


Page 110         Source Listing                  CT_REGISTER_RESTARTS_2D
2021-06-01 08:55 Symbol Table                    coupler_types.F90

TYPE COMPONENTS/COMMON VARIABLES

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 COUPLER_2D_FIELD_TYPE.FMS2_IO_REST_TYPE                                                                                   ...
                            FMSNETCDFDOMAINFILE_T                                                                             
                                            2040  800            scalar   PTR              3191,3630,3631                     

Page 111         Source Listing                  CT_REGISTER_RESTARTS_2D
2021-06-01 08:55                                 coupler_types.F90

   3218 
   3219 !< If reading a restart, register the dimensions that are in the file
   3220   subroutine register_axis_wrapper_read(fileobj)
   3221     type(FmsNetcdfDomainFile_t), intent(inout) :: fileobj !< Domain decomposed fileobj
   3222 
   3223     character(len=20), dimension(:), allocatable :: file_dim_names !< Array of dimension names
   3224     integer :: i !< No description
   3225     integer :: dim_size !< Size of the dimension
   3226     integer :: ndims !< Number of dimensions in the file
   3227     logical :: is_domain_decomposed !< Flag indication if domain decomposed
   3228     character(len=1) :: buffer !< string buffer
   3229 
   3230     ndims = get_num_dimensions(fileobj)
   3231     allocate(file_dim_names(ndims))
   3232 
   3233     call get_dimension_names(fileobj, file_dim_names)
   3234 
   3235     do i = 1, ndims
   3236        is_domain_decomposed = .false.
   3237 
   3238 !< Check if the dimension is also a variable
   3239        if (variable_exists(fileobj, file_dim_names(i))) then
   3240 
   3241 !< If the variable exists look for the "cartesian_axis" or "axis" variable attribute
   3242           if (variable_att_exists(fileobj, file_dim_names(i), "axis")) then
   3243               call get_variable_attribute(fileobj, file_dim_names(i), "axis", buffer)
   3244 
   3245 !< If the attribute exists and it is "x" or "y" register it as a domain decomposed dimension
   3246               if (lowercase(buffer) .eq. "x" .or. lowercase(buffer) .eq. "y" ) then
   3247                   is_domain_decomposed = .true.
   3248                   call register_axis(fileobj, file_dim_names(i), buffer)
   3249               endif
   3250 
   3251           else if (variable_att_exists(fileobj, file_dim_names(i), "cartesian_axis")) then
   3252               call get_variable_attribute(fileobj, file_dim_names(i), "cartesian_axis", buffer)
   3253 
   3254 !< If the attribute exists and it "x" or "y" register it as a domain decomposed dimension
   3255               if (lowercase(buffer) .eq. "x" .or. lowercase(buffer) .eq. "y" ) then
   3256                   is_domain_decomposed = .true.
   3257                   call register_axis(fileobj, file_dim_names(i), buffer)
   3258               endif
   3259 
   3260           endif !< If variable attribute exists
   3261        endif !< If variable exists
   3262 
   3263        if (.not. is_domain_decomposed) then
   3264           call get_dimension_size(fileobj, file_dim_names(i), dim_size)
   3265           call register_axis(fileobj, file_dim_names(i), dim_size)
   3266        endif
   3267 
   3268     end do
   3269 
   3270   end subroutine register_axis_wrapper_read

Page 112         Source Listing                  REGISTER_AXIS_WRAPPER_READ
2021-06-01 08:55 Entry Points                    coupler_types.F90



ENTRY POINTS

  Name                                                        
                                                              
 coupler_types_mod_mp_register_axis_wrapper_read_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 BUFFER                     Local  3228     CHAR            1           scalar                    3243,3246,3248,3252,3255,3257     
 DIM_SIZE                   Local  3225     I(4)            4           scalar                    3264,3265                         
 FILEOBJ                    Dummy  3220     FMSNETCDFDOMAINFILE_T                                                                   
                                                            2040        scalar   ARG,INOUT        3230,3233,3239,3242,3243,3248,3251
                                                                                                  ,3252,3257,3264,3265              
 FILE_DIM_NAMES             Local  3223     CHAR            20    1     1        ALC              3231,3233,3239,3242,3243,3248,3251
                                                                                                  ,3252,3257,3264,3265              
 GET_DIMENSION_NAMES        Subr   3233                                          PRIV             30,3233                           
 GET_DIMENSION_SIZE         Subr   3264                                          PRIV             30,3264                           
 GET_NUM_DIMENSIONS         Func   3230     I(4)            4           scalar   PRIV             29,3230                           
 GET_VARIABLE_ATTRIBUTE     Local  3243                                 scalar   PRIV             30,3243,3252                      
 GET_VARIABLE_ATTRIBUTE_0D  Subr   3243                                          PRIV             3243,3252                         
 I                          Local  3224     I(4)            4           scalar                    3235,3239,3242,3243,3248,3251,3252
                                                                                                  ,3257,3264,3265                   
 IS_DOMAIN_DECOMPOSED       Local  3227     L(4)            4           scalar                    3236,3247,3256,3263               
 LOWERCASE                  Func   3246     CHAR                        scalar   TGT,PRIV         26,3246,3255                      
 NDIMS                      Local  3226     I(4)            4           scalar                    3230,3231,3235                    
 NETCDF_ADD_DIMENSION       Subr   3265                                          PRIV             3265,3288,3293,3294               
 REGISTER_AXIS              Local  3248                                 scalar   PRIV             28,3248,3257,3265,3282,3283,3288,3
                                                                                                  293,3294                          
 REGISTER_AXIS_WRAPPER_READ Subr   3220                                                           3312                              
 REGISTER_DOMAIN_DECOMPOSED                                                                                                         
 _DIMENSION                 Subr   3248                                          PRIV             3248,3257,3282,3283               
 VARIABLE_ATT_EXISTS        Func   3242     L(4)            4           scalar   PRIV             29,3242,3251                      

Page 113         Source Listing                  REGISTER_AXIS_WRAPPER_READ
2021-06-01 08:55                                 coupler_types.F90

   3271 
   3272 !< If writting a restart, register the variables with dummy axis names
   3273   subroutine register_axis_wrapper_write(fileobj, nz)
   3274     type(FmsNetcdfDomainFile_t), intent(inout) :: fileobj !< Domain decomposed fileobj
   3275     integer, intent(in), optional :: nz !< length of the z dimension
   3276 
   3277     character(len=20) :: dim_names(4) !< Array of dimension names
   3278 
   3279     dim_names(1) = "xaxis_1"
   3280     dim_names(2) = "yaxis_1"
   3281 
   3282     call register_axis(fileobj, dim_names(1), "x")
   3283     call register_axis(fileobj, dim_names(2), "y")
   3284 
   3285 !< If nz is present register a zaxis
   3286     if (.not. present(nz)) then
   3287        dim_names(3) = "Time"
   3288        call register_axis(fileobj, dim_names(3), unlimited)
   3289     else
   3290        dim_names(3) = "zaxis_1"
   3291        dim_names(4) = "Time"
   3292 
   3293        call register_axis(fileobj, dim_names(3), nz)
   3294        call register_axis(fileobj, dim_names(4), unlimited)
   3295     endif !< if (.not. present(nz))
   3296 
   3297 !< Add the dimension names as variable so that the combiner can work correctly
   3298     call register_field(fileobj, dim_names(1), "double", (/dim_names(1)/))
   3299     call register_variable_attribute(fileobj, dim_names(1), "axis", "X", str_len=1)
   3300 
   3301     call register_field(fileobj, dim_names(2), "double", (/dim_names(2)/))
   3302     call register_variable_attribute(fileobj, dim_names(2), "axis", "Y", str_len=1)
   3303 
   3304   end subroutine register_axis_wrapper_write

Page 114         Source Listing                  REGISTER_AXIS_WRAPPER_WRITE
2021-06-01 08:55 Entry Points                    coupler_types.F90



ENTRY POINTS

  Name                                                         
                                                               
 coupler_types_mod_mp_register_axis_wrapper_write_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 DIM_NAMES                  Local  3277     CHAR            20    1     4                         3279,3280,3282,3283,3287,3288,3290
                                                                                                  ,3291,3293,3294,3298,3299,3301,330
                                                                                                  2                                 
 FILEOBJ                    Dummy  3273     FMSNETCDFDOMAINFILE_T                                                                   
                                                            2040        scalar   ARG,INOUT        3282,3283,3288,3293,3294,3298,3299
                                                                                                  ,3301,3302                        
 NZ                         Dummy  3273     I(4)            4           scalar   ARG,IN           3286,3293                         
 PRESENT                    Func   3286                                 scalar                    3286                              
 REGISTER_AXIS_WRAPPER_WRIT                                                                                                         
 E                          Subr   3273                                                           3314                              
 REGISTER_DOMAIN_VARIABLE   Subr   3298                                          PRIV             3298,3301                         
 REGISTER_FIELD             Local  3298                                 scalar   PRIV             29,3298,3301                      
 REGISTER_VARIABLE_ATTRIBUT                                                                                                         
 E                          Local  3299                                 scalar   PRIV             31,3299,3302                      
 REGISTER_VARIABLE_ATTRIBUT                                                                                                         
 E_0D                       Subr   3299                                          PRIV             3299,3302                         
 UNLIMITED                  Param  3288     I(4)            4           scalar   PRIV             28,3288,3294                      

Page 115         Source Listing                  REGISTER_AXIS_WRAPPER_WRITE
2021-06-01 08:55                                 coupler_types.F90

   3305 
   3306   subroutine register_axis_wrapper(fileobj, to_read, nz)
   3307     type(FmsNetcdfDomainFile_t), intent(inout) :: fileobj !< Domain decomposed fileobj
   3308     logical, intent(in) :: to_read !< Flag indicating if reading file
   3309     integer, intent(in), optional :: nz !< length of the z dimension
   3310 
   3311     if (to_read) then
   3312         call register_axis_wrapper_read(fileobj)
   3313     else
   3314         call register_axis_wrapper_write(fileobj, nz)
   3315     endif
   3316 
   3317   end subroutine


ENTRY POINTS

  Name                                                   
                                                         
 coupler_types_mod_mp_register_axis_wrapper_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 FILEOBJ                    Dummy  3306     FMSNETCDFDOMAINFILE_T                                                                   
                                                            2040        scalar   ARG,INOUT        3312,3314                         
 NZ                         Dummy  3306     I(4)            4           scalar   ARG,IN           3314                              
 REGISTER_AXIS_WRAPPER      Subr   3306                                                           3177,3470,3472                    
 TO_READ                    Dummy  3306     L(4)            4           scalar   ARG,IN           3311                              

Page 116         Source Listing                  REGISTER_AXIS_WRAPPER
2021-06-01 08:55                                 coupler_types.F90

   3318 
   3319 !! @brief Register the fields in a coupler_2d_bc_type to be saved in restart files
   3320 !!
   3321 !! This subroutine registers the fields in a coupler_2d_bc_type to be saved in restart files
   3322 !! specified in the field table.
   3323   subroutine mpp_io_CT_register_restarts_2d(var, bc_rest_files, num_rest_files, mpp_domain, ocean_restart)
   3324     type(coupler_2d_bc_type), intent(inout) :: var  !< BC_type structure to be registered for restarts
   3325     type(restart_file_type),  dimension(:), pointer :: bc_rest_files !< Structures describing the restart files
   3326     integer,                  intent(out) :: num_rest_files !< The number of restart files to use
   3327     type(domain2D),           intent(in)  :: mpp_domain     !< The FMS domain to use for this registration call
   3328     logical,        optional, intent(in)  :: ocean_restart  !< If true, use the ocean restart file name.
   3329 
   3330     character(len=80), dimension(max(1,var%num_bcs)) :: rest_file_names
   3331     character(len=80) :: file_nm
   3332     logical :: ocn_rest
   3333     integer :: f, n, m
   3334 
   3335     ocn_rest = .true.
   3336     if (present(ocean_restart)) ocn_rest = ocean_restart
   3337 
   3338 ! Determine the number and names of the restart files
   3339     num_rest_files = 0
   3340     do n = 1, var%num_bcs
   3341       if (var%bc(n)%num_fields <= 0) cycle
   3342       file_nm = trim(var%bc(n)%ice_restart_file)
   3343       if (ocn_rest) file_nm = trim(var%bc(n)%ocean_restart_file)
   3344       do f = 1, num_rest_files
   3345         if (trim(file_nm) == trim(rest_file_names(f))) exit
   3346       enddo
   3347       if (f>num_rest_files) then
   3348         num_rest_files = num_rest_files + 1
   3349         rest_file_names(f) = trim(file_nm)
   3350       endif
   3351     enddo
   3352 
   3353     if (num_rest_files == 0) return
   3354 
   3355 ! Register the fields with the restart files
   3356     allocate(bc_rest_files(num_rest_files))
   3357     do n = 1, var%num_bcs
   3358       if (var%bc(n)%num_fields <= 0) cycle
   3359 
   3360       file_nm = trim(var%bc(n)%ice_restart_file)
   3361       if (ocn_rest) file_nm = trim(var%bc(n)%ocean_restart_file)
   3362       do f = 1, num_rest_files
   3363         if (trim(file_nm) == trim(rest_file_names(f))) exit
   3364       enddo
   3365 
   3366       var%bc(n)%rest_type => bc_rest_files(f)
   3367       do m = 1, var%bc(n)%num_fields
   3368         var%bc(n)%field(m)%id_rest = fms_io_register_restart_field(bc_rest_files(f),&
   3369             & rest_file_names(f), var%bc(n)%field(m)%name, var%bc(n)%field(m)%values,&
   3370             & mpp_domain, mandatory=.not.var%bc(n)%field(m)%may_init )
   3371       enddo
   3372     enddo
   3373   end subroutine mpp_io_CT_register_restarts_2d

Page 117         Source Listing                  MPP_IO_CT_REGISTER_RESTARTS_2D
2021-06-01 08:55 Entry Points                    coupler_types.F90



ENTRY POINTS

  Name                                                            
                                                                  
 coupler_types_mod_mp_mpp_io_ct_register_restarts_2d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 BC_REST_FILES              Dummy  3323     RECORD          1376  1     1        ARG,PTR,TGT      3356,3366,3368                    
                                                                                 INOUT                                              
 F                          Local  3333     I(4)            4           scalar                    3344,3345,3347,3349,3362,3363,3366
                                                                                                  ,3368,3369                        
 FILE_NM                    Local  3331     CHAR            80          scalar                    3342,3343,3345,3349,3360,3361,3363
 FMS_IO_REGISTER_RESTART_FI                                                                                                         
 ELD                        Local  3368                                 scalar   PRIV             3368,3401,3563,3595               
 M                          Local  3333     I(4)            4           scalar                    3367,3368,3369,3370               
 MAX                        Func   3330                                 scalar                    3330                              
 MPP_DOMAIN                 Dummy  3323     DOMAIN2D        752         scalar   ARG,IN           3370                              
 MPP_IO_CT_REGISTER_RESTART                                                                                                         
 S_2D                       Subr   3323                                          PRIV                                               
 N                          Local  3333     I(4)            4           scalar                    3340,3341,3342,3343,3357,3358,3360
                                                                                                  ,3361,3366,3367,3368,3369,3370    
 NUM_REST_FILES             Dummy  3323     I(4)            4           scalar   ARG,OUT          3339,3344,3347,3348,3353,3356,3362
 OCEAN_RESTART              Dummy  3323     L(4)            4           scalar   ARG,IN           3336                              
 OCN_REST                   Local  3332     L(4)            4           scalar                    3335,3336,3343,3361               
 PRESENT                    Func   3336                                 scalar                    3336                              
 REGISTER_RESTART_FIELD_R2D Func   3368     I(4)            4           scalar   PRIV             3368,3401                         
 RESTART_FILE_TYPE          Type   3325                                 scalar                    33,116,164,3325,3382,3521,3576    
 REST_FILE_NAMES            Local  3330     CHAR            80    1     0                         3345,3349,3363,3369               
 TRIM                       Func   3342                                 scalar                    3342,3343,3345,3349,3360,3361,3363
 VAR                        Dummy  3323     COUPLER_2D_BC_TYPE                                                                      
                                                            120         scalar   ARG,INOUT        3330,3340,3341,3342,3343,3357,3358
                                                                                                  ,3360,3361,3366,3367,3368,3369,337
                                                                                                  0                                 


TYPE COMPONENTS/COMMON VARIABLES

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 COUPLER_2D_FIELD_TYPE.REST_TYPE                                                                                           ...
                            RESTART_FILE_TYPE                                                                                 
                                            1376  792            scalar   PTR              3366,3397,3696,3698,3700           
 COUPLER_2D_VALUES_TYPE.ID_REST                                                                                            ...
                            I(4)            4     412            scalar                    3368,3401,3695,3696,3698,3700      

Page 118         Source Listing                  MPP_IO_CT_REGISTER_RESTARTS_2D
2021-06-01 08:55                                 coupler_types.F90

   3374 
   3375 !! @brief Register the fields in a coupler_2d_bc_type to be saved to restart files
   3376 !!
   3377 !! This subroutine  registers the  fields in  a coupler_2d_bc_type  to be  saved in  the specified
   3378 !! restart file.
   3379   subroutine mpp_io_CT_register_restarts_to_file_2d(var, file_name, rest_file, mpp_domain, varname_prefix)
   3380     type(coupler_2d_bc_type), intent(inout) :: var  !< BC_type structure to be registered for restarts
   3381     character(len=*),         intent(in)    :: file_name !< The name of the restart file
   3382     type(restart_file_type),  pointer       :: rest_file !< A (possibly associated) structure describing the restart file
   3383     type(domain2D),           intent(in)    :: mpp_domain !< The FMS domain to use for this registration call
   3384     character(len=*), optional, intent(in)  :: varname_prefix !< A prefix for the variable name
   3385 !! in the restart file, intended to allow
   3386 !! multiple BC_type variables to use the
   3387 !! same restart files.
   3388 
   3389     character(len=128) :: var_name
   3390     integer :: n, m
   3391 
   3392 ! Register the fields with the restart file
   3393     if (.not.associated(rest_file)) allocate(rest_file)
   3394     do n = 1, var%num_bcs
   3395       if (var%bc(n)%num_fields <= 0) cycle
   3396 
   3397       var%bc(n)%rest_type => rest_file
   3398       do m = 1, var%bc(n)%num_fields
   3399         var_name = trim(var%bc(n)%field(m)%name)
   3400         if (present(varname_prefix)) var_name = trim(varname_prefix)//trim(var_name)
   3401         var%bc(n)%field(m)%id_rest = fms_io_register_restart_field(rest_file,&
   3402             & file_name, var_name, var%bc(n)%field(m)%values,&
   3403             & mpp_domain, mandatory=.not.var%bc(n)%field(m)%may_init )
   3404       enddo
   3405     enddo
   3406   end subroutine mpp_io_CT_register_restarts_to_file_2d

Page 119         Source Listing                  MPP_IO_CT_REGISTER_RESTARTS_TO_FILE_2D
2021-06-01 08:55 Entry Points                    coupler_types.F90



ENTRY POINTS

  Name                                                                    
                                                                          
 coupler_types_mod_mp_mpp_io_ct_register_restarts_to_file_2d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ASSOCIATED                 Func   3393                                 scalar                    3393                              
 FILE_NAME                  Dummy  3379     CHAR                        scalar   ARG,IN           3402                              
 M                          Local  3390     I(4)            4           scalar                    3398,3399,3401,3402,3403          
 MPP_DOMAIN                 Dummy  3379     DOMAIN2D        752         scalar   ARG,IN           3403                              
 MPP_IO_CT_REGISTER_RESTART                                                                                                         
 S_TO_FILE_2D               Subr   3379                                          PRIV                                               
 N                          Local  3390     I(4)            4           scalar                    3394,3395,3397,3398,3399,3401,3402
                                                                                                  ,3403                             
 PRESENT                    Func   3400                                 scalar                    3400                              
 REST_FILE                  Dummy  3379     RESTART_FILE_TYPE                                                                       
                                                            1376        scalar   ARG,PTR,TGT      3393,3397,3401                    
                                                                                 INOUT                                              
 TRIM                       Func   3399                                 scalar                    3399,3400                         
 VAR                        Dummy  3379     COUPLER_2D_BC_TYPE                                                                      
                                                            120         scalar   ARG,INOUT        3394,3395,3397,3398,3399,3401,3402
                                                                                                  ,3403                             
 VARNAME_PREFIX             Dummy  3379     CHAR                        scalar   ARG,IN           3400                              
 VAR_NAME                   Local  3389     CHAR            128         scalar                    3399,3400,3402                    

Page 120         Source Listing                  MPP_IO_CT_REGISTER_RESTARTS_TO_FILE_2D
2021-06-01 08:55                                 coupler_types.F90

   3407 
   3408 !! @brief Register the fields in a coupler_3d_bc_type to be saved in restart files
   3409 !! This subroutine registers the fields in a coupler_2d_bc_type to be saved in restart files
   3410 !! specified in the field table.
   3411   subroutine CT_register_restarts_3d(var, bc_rest_files, num_rest_files, mpp_domain, to_read, ocean_restart, directory)
   3412     type(coupler_3d_bc_type), intent(inout) :: var  !< BC_type structure to be registered for restarts
   3413     type(FmsNetcdfDomainFile_t),  dimension(:), pointer  :: bc_rest_files !< Structures describing the restart files
   3414     integer,                  intent(out) :: num_rest_files !< The number of restart files to use
   3415     type(domain2D),           intent(in)  :: mpp_domain     !< The FMS domain to use for this registration call
   3416     logical,                  intent(in)  :: to_read        !< Flag indicating if reading/writing a file
   3417     logical,         optional,intent(in)  :: ocean_restart  !< If true, use the ocean restart file name.
   3418     character(len=*),optional,intent(in)  :: directory      !< Directory where to open the file
   3419 
   3420     character(len=80), dimension(max(1,var%num_bcs)) :: rest_file_names
   3421     character(len=80) :: file_nm
   3422     logical :: ocn_rest
   3423     integer :: f, n, m
   3424 
   3425     character(len=20), allocatable, dimension(:) :: dim_names !< Array of dimension names
   3426     character(len=20)                          :: io_type   !< flag indicating io type: "read" "overwrite"
   3427     logical, dimension(max(1,var%num_bcs))     :: file_is_open !< Flag indicating if file is open
   3428     character(len=20)                          :: dir       !< Directory where to open the file
   3429     integer                                    :: nz        !< Length of the z direction of each file
   3430 
   3431     ocn_rest = .true.
   3432     if (present(ocean_restart)) ocn_rest = ocean_restart
   3433 
   3434     if (present(directory)) dir = trim(directory)
   3435 
   3436     if (to_read) then
   3437         io_type = "read"
   3438         if (.not. present(directory)) dir = "INPUT/"
   3439     else
   3440         io_type = "overwrite"
   3441         if (.not. present(directory)) dir = "RESTART/"
   3442     endif
   3443 
   3444     nz = var%ke - var%ks + 1 !< NOTE: This assumes that the z dimension is the same for every variable
   3445 ! Determine the number and names of the restart files
   3446     num_rest_files = 0
   3447     do n = 1, var%num_bcs
   3448       if (var%bc(n)%num_fields <= 0) cycle
   3449       file_nm = trim(var%bc(n)%ice_restart_file)
   3450       if (ocn_rest) file_nm = trim(var%bc(n)%ocean_restart_file)
   3451       do f = 1, num_rest_files
   3452         if (trim(file_nm) == trim(rest_file_names(f))) exit
   3453       enddo
   3454       if (f>num_rest_files) then
   3455         num_rest_files = num_rest_files + 1
   3456         rest_file_names(f) = trim(file_nm)
   3457       endif
   3458     enddo
   3459 
   3460     if (num_rest_files == 0) return
   3461 
   3462     allocate(bc_rest_files(num_rest_files))
   3463 

Page 121         Source Listing                  CT_REGISTER_RESTARTS_3D
2021-06-01 08:55                                 coupler_types.F90

   3464 !< Open the files
   3465     do n = 1, num_rest_files
   3466         file_is_open(n) = open_file(bc_rest_files(n), trim(dir)//rest_file_names(n), io_type, mpp_domain, is_restart=.true.)
   3467         if (file_is_open(n)) then
   3468 
   3469              if (to_read) then
   3470                 call register_axis_wrapper(bc_rest_files(n), to_read=to_read)
   3471              else
   3472                 call register_axis_wrapper(bc_rest_files(n), to_read=to_read, nz=nz)
   3473              endif
   3474         endif
   3475     enddo
   3476 
   3477 ! Register the fields with the restart files
   3478     do n = 1, var%num_bcs
   3479       if (var%bc(n)%num_fields <= 0) cycle
   3480 
   3481       file_nm = trim(var%bc(n)%ice_restart_file)
   3482       if (ocn_rest) file_nm = trim(var%bc(n)%ocean_restart_file)
   3483       do f = 1, num_rest_files
   3484         if (trim(file_nm) == trim(rest_file_names(f))) exit
   3485       enddo
   3486 
   3487       var%bc(n)%fms2_io_rest_type => bc_rest_files(f)
   3488 
   3489       do m = 1, var%bc(n)%num_fields
   3490          if (file_is_open(f)) then
   3491             if( to_read .and. variable_exists(bc_rest_files(f), var%bc(n)%field(m)%name)) then
   3492 !< If reading get the dimension names from the file
   3493                 allocate(dim_names(get_variable_num_dimensions(bc_rest_files(f), var%bc(n)%field(m)%name)))
   3494                 call get_variable_dimension_names(bc_rest_files(f), &
   3495                 & var%bc(n)%field(m)%name, dim_names)
   3496             else
   3497 !< If writing use dummy dimension names
   3498                 allocate(dim_names(4))
   3499                 dim_names(1) = "xaxis_1"
   3500                 dim_names(2) = "yaxis_1"
   3501                 dim_names(3) = "zaxis_1"
   3502                 dim_names(4) = "Time"
   3503             endif !< to_read
   3504 
   3505             call register_restart_field(bc_rest_files(f),&
   3506                  & var%bc(n)%field(m)%name, var%bc(n)%field(m)%values, dim_names, &
   3507                  & is_optional=var%bc(n)%field(m)%may_init )
   3508             deallocate(dim_names)
   3509          endif !< If file_is_open
   3510       enddo !< num_fields
   3511     enddo !< num_bcs
   3512 
   3513   end subroutine CT_register_restarts_3d

Page 122         Source Listing                  CT_REGISTER_RESTARTS_3D
2021-06-01 08:55 Entry Points                    coupler_types.F90



ENTRY POINTS

  Name                                                     
                                                           
 coupler_types_mod_mp_ct_register_restarts_3d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 BC_REST_FILES              Dummy  3411     RECORD          2040  1     1        ARG,PTR,TGT      3462,3466,3470,3472,3487,3491,3493
                                                                                 INOUT            ,3494,3505                        
 CT_REGISTER_RESTARTS_3D    Subr   3411                                          PRIV                                               
 DIM_NAMES                  Local  3425     CHAR            20    1     1        ALC              3493,3495,3498,3499,3500,3501,3502
                                                                                                  ,3506,3508                        
 DIR                        Local  3428     CHAR            20          scalar                    3434,3438,3441,3466               
 DIRECTORY                  Dummy  3411     CHAR                        scalar   ARG,IN           3434,3438,3441                    
 F                          Local  3423     I(4)            4           scalar                    3451,3452,3454,3456,3483,3484,3487
                                                                                                  ,3490,3491,3493,3494,3505         
 FILE_IS_OPEN               Local  3427     L(4)            4     1     0                         3466,3467,3490                    
 FILE_NM                    Local  3421     CHAR            80          scalar                    3449,3450,3452,3456,3481,3482,3484
 IO_TYPE                    Local  3426     CHAR            20          scalar                    3437,3440,3466                    
 M                          Local  3423     I(4)            4           scalar                    3489,3491,3493,3495,3506,3507     
 MAX                        Func   3420                                 scalar                    3420,3427                         
 MPP_DOMAIN                 Dummy  3411     DOMAIN2D        752         scalar   ARG,IN           3466                              
 N                          Local  3423     I(4)            4           scalar                    3447,3448,3449,3450,3465,3466,3467
                                                                                                  ,3470,3472,3478,3479,3481,3482,348
                                                                                                  7,3489,3491,3493,3495,3506,3507   
 NUM_REST_FILES             Dummy  3411     I(4)            4           scalar   ARG,OUT          3446,3451,3454,3455,3460,3462,3465
                                                                                                  ,3483                             
 NZ                         Local  3429     I(4)            4           scalar                    3444,3472                         
 OCEAN_RESTART              Dummy  3411     L(4)            4           scalar   ARG,IN           3432                              
 OCN_REST                   Local  3422     L(4)            4           scalar                    3431,3432,3450,3482               
 PRESENT                    Func   3432                                 scalar                    3432,3434,3438,3441               
 REGISTER_DOMAIN_RESTART_VA                                                                                                         
 RIABLE_3D                  Subr   3505                                          PRIV             3505                              
 REST_FILE_NAMES            Local  3420     CHAR            80    1     0                         3452,3456,3466,3484               
 TO_READ                    Dummy  3411     L(4)            4           scalar   ARG,IN           3436,3469,3470,3472,3491          
 TRIM                       Func   3434                                 scalar                    3434,3449,3450,3452,3456,3466,3481
                                                                                                  ,3482,3484                        
 VAR                        Dummy  3411     COUPLER_3D_BC_TYPE                                                                      
                                                            128         scalar   ARG,INOUT        3420,3427,3444,3447,3448,3449,3450
                                                                                                  ,3478,3479,3481,3482,3487,3489,349
                                                                                                  1,3493,3495,3506,3507             



Page 123         Source Listing                  CT_REGISTER_RESTARTS_3D
2021-06-01 08:55 Symbol Table                    coupler_types.F90

TYPE COMPONENTS/COMMON VARIABLES

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 COUPLER_3D_FIELD_TYPE.FMS2_IO_REST_TYPE                                                                                   ...
                            FMSNETCDFDOMAINFILE_T                                                                             
                                            2040  800            scalar   PTR              3487,3766,3767                     

Page 124         Source Listing                  CT_REGISTER_RESTARTS_3D
2021-06-01 08:55                                 coupler_types.F90

   3514 
   3515 !! @brief Register the fields in a coupler_3d_bc_type to be saved to restart files
   3516 !!
   3517 !! This subroutine registers the fields in a coupler_3d_bc_type to be saved in restart files
   3518 !! specified in the field table.
   3519   subroutine mpp_io_CT_register_restarts_3d(var, bc_rest_files, num_rest_files, mpp_domain, ocean_restart)
   3520     type(coupler_3d_bc_type), intent(inout) :: var  !< BC_type structure to be registered for restarts
   3521     type(restart_file_type),  dimension(:), pointer :: bc_rest_files !< Structures describing the restart files
   3522     integer,                  intent(out)   :: num_rest_files !< The number of restart files to use
   3523     type(domain2D),           intent(in)    :: mpp_domain     !< The FMS domain to use for this registration call
   3524     logical,        optional, intent(in)    :: ocean_restart  !< If true, use the ocean restart file name.
   3525 
   3526     character(len=80), dimension(max(1,var%num_bcs)) :: rest_file_names
   3527     character(len=80) :: file_nm
   3528     logical :: ocn_rest
   3529     integer :: f, n, m, id_restart
   3530 
   3531     ocn_rest = .true.
   3532     if (present(ocean_restart)) ocn_rest = ocean_restart
   3533 
   3534 ! Determine the number and names of the restart files
   3535     num_rest_files = 0
   3536     do n = 1, var%num_bcs
   3537       if (var%bc(n)%num_fields <= 0) cycle
   3538       file_nm = trim(var%bc(n)%ice_restart_file)
   3539       if (ocn_rest) file_nm = trim(var%bc(n)%ocean_restart_file)
   3540       do f = 1, num_rest_files
   3541         if (trim(file_nm) == trim(rest_file_names(f))) exit
   3542       enddo
   3543       if (f>num_rest_files) then
   3544         num_rest_files = num_rest_files + 1
   3545         rest_file_names(f) = trim(file_nm)
   3546       endif
   3547     enddo
   3548 
   3549     if (num_rest_files == 0) return
   3550 
   3551 ! Register the fields with the restart files
   3552     allocate(bc_rest_files(num_rest_files))
   3553     do n = 1, var%num_bcs
   3554       if (var%bc(n)%num_fields <= 0) cycle
   3555       file_nm = trim(var%bc(n)%ice_restart_file)
   3556       if (ocn_rest) file_nm = trim(var%bc(n)%ocean_restart_file)
   3557       do f = 1, num_rest_files
   3558         if (trim(file_nm) == trim(rest_file_names(f))) exit
   3559       enddo
   3560 
   3561       var%bc(n)%rest_type => bc_rest_files(f)
   3562       do m = 1, var%bc(n)%num_fields
   3563         var%bc(n)%field(m)%id_rest = fms_io_register_restart_field(bc_rest_files(f),&
   3564             & rest_file_names(f), var%bc(n)%field(m)%name, var%bc(n)%field(m)%values,&
   3565             & mpp_domain, mandatory=.not.var%bc(n)%field(m)%may_init )
   3566       enddo
   3567     enddo
   3568   end subroutine mpp_io_CT_register_restarts_3d

Page 125         Source Listing                  MPP_IO_CT_REGISTER_RESTARTS_3D
2021-06-01 08:55 Entry Points                    coupler_types.F90



ENTRY POINTS

  Name                                                            
                                                                  
 coupler_types_mod_mp_mpp_io_ct_register_restarts_3d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 BC_REST_FILES              Dummy  3519     RECORD          1376  1     1        ARG,PTR,TGT      3552,3561,3563                    
                                                                                 INOUT                                              
 F                          Local  3529     I(4)            4           scalar                    3540,3541,3543,3545,3557,3558,3561
                                                                                                  ,3563,3564                        
 FILE_NM                    Local  3527     CHAR            80          scalar                    3538,3539,3541,3545,3555,3556,3558
 ID_RESTART                 Local  3529     I(4)            4           scalar                                                      
 M                          Local  3529     I(4)            4           scalar                    3562,3563,3564,3565               
 MAX                        Func   3526                                 scalar                    3526                              
 MPP_DOMAIN                 Dummy  3519     DOMAIN2D        752         scalar   ARG,IN           3565                              
 MPP_IO_CT_REGISTER_RESTART                                                                                                         
 S_3D                       Subr   3519                                          PRIV                                               
 N                          Local  3529     I(4)            4           scalar                    3536,3537,3538,3539,3553,3554,3555
                                                                                                  ,3556,3561,3562,3563,3564,3565    
 NUM_REST_FILES             Dummy  3519     I(4)            4           scalar   ARG,OUT          3535,3540,3543,3544,3549,3552,3557
 OCEAN_RESTART              Dummy  3519     L(4)            4           scalar   ARG,IN           3532                              
 OCN_REST                   Local  3528     L(4)            4           scalar                    3531,3532,3539,3556               
 PRESENT                    Func   3532                                 scalar                    3532                              
 REGISTER_RESTART_FIELD_R3D Func   3563     I(4)            4           scalar   PRIV             3563,3595                         
 REST_FILE_NAMES            Local  3526     CHAR            80    1     0                         3541,3545,3558,3564               
 TRIM                       Func   3538                                 scalar                    3538,3539,3541,3545,3555,3556,3558
 VAR                        Dummy  3519     COUPLER_3D_BC_TYPE                                                                      
                                                            128         scalar   ARG,INOUT        3526,3536,3537,3538,3539,3553,3554
                                                                                                  ,3555,3556,3561,3562,3563,3564,356
                                                                                                  5                                 


TYPE COMPONENTS/COMMON VARIABLES

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 COUPLER_3D_FIELD_TYPE.REST_TYPE                                                                                           ...
                            RESTART_FILE_TYPE                                                                                 
                                            1376  792            scalar   PTR              3561,3591,3833,3835,3837           
 COUPLER_3D_VALUES_TYPE.ID_REST                                                                                            ...
                            I(4)            4     436            scalar                    3563,3595,3832,3833,3835,3837      

Page 126         Source Listing                  MPP_IO_CT_REGISTER_RESTARTS_3D
2021-06-01 08:55                                 coupler_types.F90

   3569 
   3570 !> @brief Register the fields in a coupler_3d_bc_type to be saved to restart files
   3571 !!
   3572 !! Registers the fields in a coupler_3d_bc_type to be saved in the specified restart file.
   3573   subroutine mpp_io_CT_register_restarts_to_file_3d(var, file_name, rest_file, mpp_domain, varname_prefix)
   3574     type(coupler_3d_bc_type), intent(inout) :: var  !< BC_type structure to be registered for restarts
   3575     character(len=*),         intent(in)  :: file_name !< The name of the restart file
   3576     type(restart_file_type),  pointer     :: rest_file !< A (possibly associated) structure describing the restart file
   3577     type(domain2D),           intent(in)  :: mpp_domain !< The FMS domain to use for this registration call
   3578     character(len=*), optional, intent(in)  :: varname_prefix !< A prefix for the variable name
   3579 !! in the restart file, intended to allow
   3580 !! multiple BC_type variables to use the
   3581 !! same restart files.
   3582 
   3583     character(len=128) :: var_name
   3584     integer :: n, m
   3585 
   3586 ! Register the fields with the restart file
   3587     if (.not.associated(rest_file)) allocate(rest_file)
   3588     do n = 1, var%num_bcs
   3589       if (var%bc(n)%num_fields <= 0) cycle
   3590 
   3591       var%bc(n)%rest_type => rest_file
   3592       do m = 1, var%bc(n)%num_fields
   3593         var_name = trim(var%bc(n)%field(m)%name)
   3594         if (present(varname_prefix)) var_name = trim(varname_prefix)//trim(var_name)
   3595         var%bc(n)%field(m)%id_rest = fms_io_register_restart_field(rest_file,&
   3596             & file_name, var_name, var%bc(n)%field(m)%values,&
   3597             & mpp_domain, mandatory=.not.var%bc(n)%field(m)%may_init )
   3598       enddo
   3599     enddo
   3600   end subroutine mpp_io_CT_register_restarts_to_file_3d

Page 127         Source Listing                  MPP_IO_CT_REGISTER_RESTARTS_TO_FILE_3D
2021-06-01 08:55 Entry Points                    coupler_types.F90



ENTRY POINTS

  Name                                                                    
                                                                          
 coupler_types_mod_mp_mpp_io_ct_register_restarts_to_file_3d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ASSOCIATED                 Func   3587                                 scalar                    3587                              
 FILE_NAME                  Dummy  3573     CHAR                        scalar   ARG,IN           3596                              
 M                          Local  3584     I(4)            4           scalar                    3592,3593,3595,3596,3597          
 MPP_DOMAIN                 Dummy  3573     DOMAIN2D        752         scalar   ARG,IN           3597                              
 MPP_IO_CT_REGISTER_RESTART                                                                                                         
 S_TO_FILE_3D               Subr   3573                                          PRIV                                               
 N                          Local  3584     I(4)            4           scalar                    3588,3589,3591,3592,3593,3595,3596
                                                                                                  ,3597                             
 PRESENT                    Func   3594                                 scalar                    3594                              
 REST_FILE                  Dummy  3573     RESTART_FILE_TYPE                                                                       
                                                            1376        scalar   ARG,PTR,TGT      3587,3591,3595                    
                                                                                 INOUT                                              
 TRIM                       Func   3593                                 scalar                    3593,3594                         
 VAR                        Dummy  3573     COUPLER_3D_BC_TYPE                                                                      
                                                            128         scalar   ARG,INOUT        3588,3589,3591,3592,3593,3595,3596
                                                                                                  ,3597                             
 VARNAME_PREFIX             Dummy  3573     CHAR                        scalar   ARG,IN           3594                              
 VAR_NAME                   Local  3583     CHAR            128         scalar                    3593,3594,3596                    

Page 128         Source Listing                  MPP_IO_CT_REGISTER_RESTARTS_TO_FILE_3D
2021-06-01 08:55                                 coupler_types.F90

   3601 
   3602   subroutine CT_restore_state_2d(var, use_fms2_io, directory, all_or_nothing, all_required, test_by_field)
   3603     type(coupler_2d_bc_type), intent(inout) :: var  !< BC_type structure to restore from restart files
   3604     character(len=*), optional, intent(in)  :: directory !< A directory where the restart files should
   3605 !! be found.  The default for FMS is 'INPUT'.
   3606     logical,        optional, intent(in)    :: all_or_nothing !< If true and there are non-mandatory
   3607 !! restart fields, it is still an error if some
   3608 !! fields are read successfully but others are not.
   3609     logical,        optional, intent(in)    :: all_required !< If true, all fields must be successfully
   3610 !! read from the restart file, even if they were
   3611 !! registered as not mandatory.
   3612     logical,        optional, intent(in)    :: test_by_field !< If true, all or none of the variables
   3613 !! in a single field must be read successfully.
   3614     logical,        intent(in)    :: use_fms2_io !< This is just to distinguish the interfaces
   3615 
   3616     integer :: n, m, num_fld
   3617     character(len=80) :: unset_varname
   3618     logical :: any_set, all_set, all_var_set, any_var_set, var_set
   3619 
   3620     any_set = .false.
   3621     all_set = .true.
   3622     num_fld = 0
   3623     unset_varname = ""
   3624 
   3625     do n = 1, var%num_bcs
   3626       any_var_set = .false.
   3627       all_var_set = .true.
   3628       do m = 1, var%bc(n)%num_fields
   3629         var_set = .false.
   3630         if (check_if_open(var%bc(n)%fms2_io_rest_type)) then
   3631             var_set = variable_exists(var%bc(n)%fms2_io_rest_type, var%bc(n)%field(m)%name)
   3632         endif
   3633 
   3634         if (.not.var_set) unset_varname = trim(var%bc(n)%field(m)%name)
   3635         if (var_set) any_set = .true.
   3636         if (all_set) all_set = var_set
   3637         if (var_set) any_var_set = .true.
   3638         if (all_var_set) all_var_set = var_set
   3639       enddo
   3640 
   3641       num_fld = num_fld + var%bc(n)%num_fields
   3642       if ((var%bc(n)%num_fields > 0) .and. present(test_by_field)) then
   3643         if (test_by_field .and. (all_var_set .neqv. any_var_set)) call mpp_error(FATAL,&
   3644             & "CT_restore_state_2d: test_by_field is true, and "//&
   3645             & trim(unset_varname)//" was not read but some other fields in "//&
   3646             & trim(trim(var%bc(n)%name))//" were.")
   3647       endif
   3648     enddo
   3649 
   3650     if ((num_fld > 0) .and. present(all_or_nothing)) then
   3651       if (all_or_nothing .and. (all_set .neqv. any_set)) call mpp_error(FATAL,&
   3652           & "CT_restore_state_2d: all_or_nothing is true, and "//&
   3653           & trim(unset_varname)//" was not read but some other fields were.")
   3654     endif
   3655 
   3656     if (present(all_required)) then
   3657       if (all_required .and. .not.all_set) then

Page 129         Source Listing                  CT_RESTORE_STATE_2D
2021-06-01 08:55                                 coupler_types.F90

   3658         call mpp_error(FATAL, "CT_restore_state_2d: all_required is true, but "//&
   3659             & trim(unset_varname)//" was not read from its restart file.")
   3660       endif
   3661     endif
   3662   end subroutine CT_restore_state_2d


ENTRY POINTS

  Name                                                 
                                                       
 coupler_types_mod_mp_ct_restore_state_2d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ALL_OR_NOTHING             Dummy  3602     L(4)            4           scalar   ARG,IN           3650,3651                         
 ALL_REQUIRED               Dummy  3602     L(4)            4           scalar   ARG,IN           3656,3657                         
 ALL_SET                    Local  3618     L(4)            4           scalar                    3621,3636,3651,3657               
 ALL_VAR_SET                Local  3618     L(4)            4           scalar                    3627,3638,3643                    
 ANY_SET                    Local  3618     L(4)            4           scalar                    3620,3635,3651                    
 ANY_VAR_SET                Local  3618     L(4)            4           scalar                    3626,3637,3643                    
 CHECK_IF_OPEN              Func   3630     L(4)            4           scalar   PRIV             28,3630,3766                      
 CT_RESTORE_STATE_2D        Subr   3602                                          PRIV                                               
 DIRECTORY                  Dummy  3602     CHAR                        scalar   ARG,IN                                             
 M                          Local  3616     I(4)            4           scalar                    3628,3631,3634                    
 N                          Local  3616     I(4)            4           scalar                    3625,3628,3630,3631,3634,3641,3642
                                                                                                  ,3646                             
 NUM_FLD                    Local  3616     I(4)            4           scalar                    3622,3641,3650                    
 PRESENT                    Func   3642                                 scalar                    3642,3650,3656                    
 TEST_BY_FIELD              Dummy  3602     L(4)            4           scalar   ARG,IN           3642,3643                         
 TRIM                       Func   3634                                 scalar                    3634,3645,3646,3653,3659          
 UNSET_VARNAME              Local  3617     CHAR            80          scalar                    3623,3634,3645,3653,3659          
 USE_FMS2_IO                Dummy  3602     L(4)            4           scalar   ARG,IN                                             
 VAR                        Dummy  3602     COUPLER_2D_BC_TYPE                                                                      
                                                            120         scalar   ARG,INOUT        3625,3628,3630,3631,3634,3641,3642
                                                                                                  ,3646                             
 VAR_SET                    Local  3618     L(4)            4           scalar                    3629,3631,3634,3635,3636,3637,3638

Page 130         Source Listing                  CT_RESTORE_STATE_2D
2021-06-01 08:55                                 coupler_types.F90

   3663 
   3664 !> @brief Reads in fields from restart files into a coupler_2d_bc_type
   3665 !!
   3666 !! This subroutine reads in the fields in a coupler_2d_bc_type that have been saved in restart
   3667 !! files.
   3668   subroutine mpp_io_CT_restore_state_2d(var, directory, all_or_nothing, all_required, test_by_field)
   3669     type(coupler_2d_bc_type), intent(inout) :: var  !< BC_type structure to restore from restart files
   3670     character(len=*), optional, intent(in)  :: directory !< A directory where the restart files should
   3671 !! be found.  The default for FMS is 'INPUT'.
   3672     logical,        optional, intent(in)    :: all_or_nothing !< If true and there are non-mandatory
   3673 !! restart fields, it is still an error if some
   3674 !! fields are read successfully but others are not.
   3675     logical,        optional, intent(in)    :: all_required !< If true, all fields must be successfully
   3676 !! read from the restart file, even if they were
   3677 !! registered as not mandatory.
   3678     logical,        optional, intent(in)    :: test_by_field !< If true, all or none of the variables
   3679 !! in a single field must be read successfully.
   3680 
   3681     integer :: n, m, num_fld
   3682     character(len=80) :: unset_varname
   3683     logical :: any_set, all_set, all_var_set, any_var_set, var_set
   3684 
   3685     any_set = .false.
   3686     all_set = .true.
   3687     num_fld = 0
   3688     unset_varname = ""
   3689 
   3690     do n = 1, var%num_bcs
   3691       any_var_set = .false.
   3692       all_var_set = .true.
   3693       do m = 1, var%bc(n)%num_fields
   3694         var_set = .false.
   3695         if (var%bc(n)%field(m)%id_rest > 0) then
   3696           var_set = query_initialized(var%bc(n)%rest_type, var%bc(n)%field(m)%id_rest)
   3697           if (.not.var_set) then
   3698             call restore_state(var%bc(n)%rest_type, var%bc(n)%field(m)%id_rest,&
   3699                 & directory=directory, nonfatal_missing_files=.true.)
   3700             var_set = query_initialized(var%bc(n)%rest_type, var%bc(n)%field(m)%id_rest)
   3701           endif
   3702         endif
   3703 
   3704         if (.not.var_set) unset_varname = trim(var%bc(n)%field(m)%name)
   3705         if (var_set) any_set = .true.
   3706         if (all_set) all_set = var_set
   3707         if (var_set) any_var_set = .true.
   3708         if (all_var_set) all_var_set = var_set
   3709       enddo
   3710 
   3711       num_fld = num_fld + var%bc(n)%num_fields
   3712       if ((var%bc(n)%num_fields > 0) .and. present(test_by_field)) then
   3713         if (test_by_field .and. (all_var_set .neqv. any_var_set)) call mpp_error(FATAL,&
   3714             & "mpp_io_CT_restore_state_2d: test_by_field is true, and "//&
   3715             & trim(unset_varname)//" was not read but some other fields in "//&
   3716             & trim(trim(var%bc(n)%name))//" were.")
   3717       endif
   3718     enddo
   3719 

Page 131         Source Listing                  MPP_IO_CT_RESTORE_STATE_2D
2021-06-01 08:55                                 coupler_types.F90

   3720     if ((num_fld > 0) .and. present(all_or_nothing)) then
   3721       if (all_or_nothing .and. (all_set .neqv. any_set)) call mpp_error(FATAL,&
   3722           & "mpp_io_CT_restore_state_2d: all_or_nothing is true, and "//&
   3723           & trim(unset_varname)//" was not read but some other fields were.")
   3724     endif
   3725 
   3726     if (present(all_required)) then
   3727       if (all_required .and. .not.all_set) then
   3728         call mpp_error(FATAL, "mpp_io_CT_restore_state_2d: all_required is true, but "//&
   3729             & trim(unset_varname)//" was not read from its restart file.")
   3730       endif
   3731     endif
   3732   end subroutine mpp_io_CT_restore_state_2d


ENTRY POINTS

  Name                                                        
                                                              
 coupler_types_mod_mp_mpp_io_ct_restore_state_2d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ALL_OR_NOTHING             Dummy  3668     L(4)            4           scalar   ARG,IN           3720,3721                         
 ALL_REQUIRED               Dummy  3668     L(4)            4           scalar   ARG,IN           3726,3727                         
 ALL_SET                    Local  3683     L(4)            4           scalar                    3686,3706,3721,3727               
 ALL_VAR_SET                Local  3683     L(4)            4           scalar                    3692,3708,3713                    
 ANY_SET                    Local  3683     L(4)            4           scalar                    3685,3705,3721                    
 ANY_VAR_SET                Local  3683     L(4)            4           scalar                    3691,3707,3713                    
 DIRECTORY                  Dummy  3668     CHAR                        scalar   ARG,IN           3699                              
 M                          Local  3681     I(4)            4           scalar                    3693,3695,3696,3698,3700,3704     
 MPP_IO_CT_RESTORE_STATE_2D Subr   3668                                          PRIV                                               
 N                          Local  3681     I(4)            4           scalar                    3690,3693,3695,3696,3698,3700,3704
                                                                                                  ,3711,3712,3716                   
 NUM_FLD                    Local  3681     I(4)            4           scalar                    3687,3711,3720                    
 PRESENT                    Func   3712                                 scalar                    3712,3720,3726                    
 QUERY_INITIALIZED          Local  3696                                 scalar   PRIV             34,3696,3700,3833,3837            
 QUERY_INITIALIZED_ID       Func   3696     L(4)            4           scalar   PRIV             3696,3700,3833,3837               
 RESTORE_STATE              Local  3698                                 scalar   PRIV             34,3698,3835                      
 RESTORE_STATE_ONE_FIELD    Subr   3698                                          PRIV             3698,3835                         
 TEST_BY_FIELD              Dummy  3668     L(4)            4           scalar   ARG,IN           3712,3713                         
 TRIM                       Func   3704                                 scalar                    3704,3715,3716,3723,3729          
 UNSET_VARNAME              Local  3682     CHAR            80          scalar                    3688,3704,3715,3723,3729          
 VAR                        Dummy  3668     COUPLER_2D_BC_TYPE                                                                      
                                                            120         scalar   ARG,INOUT        3690,3693,3695,3696,3698,3700,3704
                                                                                                  ,3711,3712,3716                   
 VAR_SET                    Local  3683     L(4)            4           scalar                    3694,3696,3697,3700,3704,3705,3706
                                                                                                  ,3707,3708                        

Page 132         Source Listing                  MPP_IO_CT_RESTORE_STATE_2D
2021-06-01 08:55                                 coupler_types.F90

   3733 
   3734 !> @brief Read in fields from restart files into a coupler_3d_bc_type
   3735 !!
   3736 !! This subroutine reads in the fields in a coupler_3d_bc_type that have been saved in restart
   3737 !! files.
   3738   subroutine CT_restore_state_3d(var, use_fms2_io, directory, all_or_nothing, all_required, test_by_field)
   3739     type(coupler_3d_bc_type), intent(inout) :: var  !< BC_type structure to restore from restart files
   3740     character(len=*), optional, intent(in)  :: directory !< A directory where the restart files should
   3741 !! be found.  The default for FMS is 'INPUT'.
   3742     logical,        intent(in)              :: use_fms2_io !< This is just to distinguish the interfaces
   3743     logical,        optional, intent(in)    :: all_or_nothing !< If true and there are non-mandatory
   3744 !! restart fields, it is still an error if some
   3745 !! fields are read successfully but others are not.
   3746     logical,        optional, intent(in)    :: all_required !< If true, all fields must be successfully
   3747 !! read from the restart file, even if they were
   3748 !! registered as not mandatory.
   3749     logical,        optional, intent(in)    :: test_by_field !< If true, all or none of the variables
   3750 !! in a single field must be read successfully.
   3751 
   3752     integer :: n, m, num_fld
   3753     character(len=80) :: unset_varname
   3754     logical :: any_set, all_set, all_var_set, any_var_set, var_set
   3755 
   3756     any_set = .false.
   3757     all_set = .true.
   3758     num_fld = 0
   3759     unset_varname = ""
   3760 
   3761     do n = 1, var%num_bcs
   3762       any_var_set = .false.
   3763       all_var_set = .true.
   3764       do m = 1, var%bc(n)%num_fields
   3765         var_set = .false.
   3766         if (check_if_open(var%bc(n)%fms2_io_rest_type)) then
   3767             var_set = variable_exists(var%bc(n)%fms2_io_rest_type, var%bc(n)%field(m)%name)
   3768         endif
   3769 
   3770         if (.not.var_set) unset_varname = trim(var%bc(n)%field(m)%name)
   3771 
   3772         if (var_set) any_set = .true.
   3773         if (all_set) all_set = var_set
   3774         if (var_set) any_var_set = .true.
   3775         if (all_var_set) all_var_set = var_set
   3776       enddo
   3777 
   3778       num_fld = num_fld + var%bc(n)%num_fields
   3779       if ((var%bc(n)%num_fields > 0) .and. present(test_by_field)) then
   3780         if (test_by_field .and. (all_var_set .neqv. any_var_set)) call mpp_error(FATAL,&
   3781             & "CT_restore_state_3d: test_by_field is true, and "//&
   3782             & trim(unset_varname)//" was not read but some other fields in "//&
   3783             & trim(trim(var%bc(n)%name))//" were.")
   3784       endif
   3785     enddo
   3786 
   3787     if ((num_fld > 0) .and. present(all_or_nothing)) then
   3788       if (all_or_nothing .and. (all_set .neqv. any_set)) call mpp_error(FATAL,&
   3789           & "CT_restore_state_3d: all_or_nothing is true, and "//&

Page 133         Source Listing                  CT_RESTORE_STATE_3D
2021-06-01 08:55                                 coupler_types.F90

   3790           & trim(unset_varname)//" was not read but some other fields were.")
   3791     endif
   3792 
   3793     if (present(all_required)) then
   3794       if (all_required .and. .not.all_set) then
   3795         call mpp_error(FATAL, "CT_restore_state_3d: all_required is true, but "//&
   3796             & trim(unset_varname)//" was not read from its restart file.")
   3797       endif
   3798     endif
   3799   end subroutine CT_restore_state_3d


ENTRY POINTS

  Name                                                 
                                                       
 coupler_types_mod_mp_ct_restore_state_3d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ALL_OR_NOTHING             Dummy  3738     L(4)            4           scalar   ARG,IN           3787,3788                         
 ALL_REQUIRED               Dummy  3738     L(4)            4           scalar   ARG,IN           3793,3794                         
 ALL_SET                    Local  3754     L(4)            4           scalar                    3757,3773,3788,3794               
 ALL_VAR_SET                Local  3754     L(4)            4           scalar                    3763,3775,3780                    
 ANY_SET                    Local  3754     L(4)            4           scalar                    3756,3772,3788                    
 ANY_VAR_SET                Local  3754     L(4)            4           scalar                    3762,3774,3780                    
 CT_RESTORE_STATE_3D        Subr   3738                                          PRIV                                               
 DIRECTORY                  Dummy  3738     CHAR                        scalar   ARG,IN                                             
 M                          Local  3752     I(4)            4           scalar                    3764,3767,3770                    
 N                          Local  3752     I(4)            4           scalar                    3761,3764,3766,3767,3770,3778,3779
                                                                                                  ,3783                             
 NUM_FLD                    Local  3752     I(4)            4           scalar                    3758,3778,3787                    
 PRESENT                    Func   3779                                 scalar                    3779,3787,3793                    
 TEST_BY_FIELD              Dummy  3738     L(4)            4           scalar   ARG,IN           3779,3780                         
 TRIM                       Func   3770                                 scalar                    3770,3782,3783,3790,3796          
 UNSET_VARNAME              Local  3753     CHAR            80          scalar                    3759,3770,3782,3790,3796          
 USE_FMS2_IO                Dummy  3738     L(4)            4           scalar   ARG,IN                                             
 VAR                        Dummy  3738     COUPLER_3D_BC_TYPE                                                                      
                                                            128         scalar   ARG,INOUT        3761,3764,3766,3767,3770,3778,3779
                                                                                                  ,3783                             
 VAR_SET                    Local  3754     L(4)            4           scalar                    3765,3767,3770,3772,3773,3774,3775

Page 134         Source Listing                  CT_RESTORE_STATE_3D
2021-06-01 08:55                                 coupler_types.F90

   3800 
   3801 !> @brief Read in fields from restart files into a coupler_3d_bc_type
   3802 !!
   3803 !! This subroutine reads in the fields in a coupler_3d_bc_type that have been saved in restart
   3804 !! files.
   3805   subroutine mpp_io_CT_restore_state_3d(var, directory, all_or_nothing, all_required, test_by_field)
   3806     type(coupler_3d_bc_type), intent(inout) :: var  !< BC_type structure to restore from restart files
   3807     character(len=*), optional, intent(in)  :: directory !< A directory where the restart files should
   3808 !! be found.  The default for FMS is 'INPUT'.
   3809     logical,        optional, intent(in)    :: all_or_nothing !< If true and there are non-mandatory
   3810 !! restart fields, it is still an error if some
   3811 !! fields are read successfully but others are not.
   3812     logical,        optional, intent(in)    :: all_required !< If true, all fields must be successfully
   3813 !! read from the restart file, even if they were
   3814 !! registered as not mandatory.
   3815     logical,        optional, intent(in)    :: test_by_field !< If true, all or none of the variables
   3816 !! in a single field must be read successfully.
   3817 
   3818     integer :: n, m, num_fld
   3819     character(len=80) :: unset_varname
   3820     logical :: any_set, all_set, all_var_set, any_var_set, var_set
   3821 
   3822     any_set = .false.
   3823     all_set = .true.
   3824     num_fld = 0
   3825     unset_varname = ""
   3826 
   3827     do n = 1, var%num_bcs
   3828       any_var_set = .false.
   3829       all_var_set = .true.
   3830       do m = 1, var%bc(n)%num_fields
   3831         var_set = .false.
   3832         if (var%bc(n)%field(m)%id_rest > 0) then
   3833           var_set = query_initialized(var%bc(n)%rest_type, var%bc(n)%field(m)%id_rest)
   3834           if (.not.var_set) then
   3835             call restore_state(var%bc(n)%rest_type, var%bc(n)%field(m)%id_rest,&
   3836                 & directory=directory, nonfatal_missing_files=.true.)
   3837             var_set = query_initialized(var%bc(n)%rest_type, var%bc(n)%field(m)%id_rest)
   3838           endif
   3839         endif
   3840 
   3841         if (.not.var_set) unset_varname = trim(var%bc(n)%field(m)%name)
   3842 
   3843         if (var_set) any_set = .true.
   3844         if (all_set) all_set = var_set
   3845         if (var_set) any_var_set = .true.
   3846         if (all_var_set) all_var_set = var_set
   3847       enddo
   3848 
   3849       num_fld = num_fld + var%bc(n)%num_fields
   3850       if ((var%bc(n)%num_fields > 0) .and. present(test_by_field)) then
   3851         if (test_by_field .and. (all_var_set .neqv. any_var_set)) call mpp_error(FATAL,&
   3852             & "mpp_io_CT_restore_state_3d: test_by_field is true, and "//&
   3853             & trim(unset_varname)//" was not read but some other fields in "//&
   3854             & trim(trim(var%bc(n)%name))//" were.")
   3855       endif
   3856     enddo

Page 135         Source Listing                  MPP_IO_CT_RESTORE_STATE_3D
2021-06-01 08:55                                 coupler_types.F90

   3857 
   3858     if ((num_fld > 0) .and. present(all_or_nothing)) then
   3859       if (all_or_nothing .and. (all_set .neqv. any_set)) call mpp_error(FATAL,&
   3860           & "mpp_io_CT_restore_state_3d: all_or_nothing is true, and "//&
   3861           & trim(unset_varname)//" was not read but some other fields were.")
   3862     endif
   3863 
   3864     if (present(all_required)) then
   3865       if (all_required .and. .not.all_set) then
   3866         call mpp_error(FATAL, "mpp_io_CT_restore_state_3d: all_required is true, but "//&
   3867             & trim(unset_varname)//" was not read from its restart file.")
   3868       endif
   3869     endif
   3870   end subroutine mpp_io_CT_restore_state_3d


ENTRY POINTS

  Name                                                        
                                                              
 coupler_types_mod_mp_mpp_io_ct_restore_state_3d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ALL_OR_NOTHING             Dummy  3805     L(4)            4           scalar   ARG,IN           3858,3859                         
 ALL_REQUIRED               Dummy  3805     L(4)            4           scalar   ARG,IN           3864,3865                         
 ALL_SET                    Local  3820     L(4)            4           scalar                    3823,3844,3859,3865               
 ALL_VAR_SET                Local  3820     L(4)            4           scalar                    3829,3846,3851                    
 ANY_SET                    Local  3820     L(4)            4           scalar                    3822,3843,3859                    
 ANY_VAR_SET                Local  3820     L(4)            4           scalar                    3828,3845,3851                    
 DIRECTORY                  Dummy  3805     CHAR                        scalar   ARG,IN           3836                              
 M                          Local  3818     I(4)            4           scalar                    3830,3832,3833,3835,3837,3841     
 MPP_IO_CT_RESTORE_STATE_3D Subr   3805                                          PRIV                                               
 N                          Local  3818     I(4)            4           scalar                    3827,3830,3832,3833,3835,3837,3841
                                                                                                  ,3849,3850,3854                   
 NUM_FLD                    Local  3818     I(4)            4           scalar                    3824,3849,3858                    
 PRESENT                    Func   3850                                 scalar                    3850,3858,3864                    
 TEST_BY_FIELD              Dummy  3805     L(4)            4           scalar   ARG,IN           3850,3851                         
 TRIM                       Func   3841                                 scalar                    3841,3853,3854,3861,3867          
 UNSET_VARNAME              Local  3819     CHAR            80          scalar                    3825,3841,3853,3861,3867          
 VAR                        Dummy  3805     COUPLER_3D_BC_TYPE                                                                      
                                                            128         scalar   ARG,INOUT        3827,3830,3832,3833,3835,3837,3841
                                                                                                  ,3849,3850,3854                   
 VAR_SET                    Local  3820     L(4)            4           scalar                    3831,3833,3834,3837,3841,3843,3844
                                                                                                  ,3845,3846                        

Page 136         Source Listing                  MPP_IO_CT_RESTORE_STATE_3D
2021-06-01 08:55                                 coupler_types.F90

   3871 
   3872 
   3873 !> @brief Potentially override the values in a coupler_2d_bc_type
   3874   subroutine CT_data_override_2d(gridname, var, Time)
   3875     character(len=3),         intent(in)    :: gridname !< 3-character long model grid ID
   3876     type(coupler_2d_bc_type), intent(inout) :: var  !< BC_type structure to override
   3877     type(time_type),          intent(in)    :: time !< The current model time
   3878 
   3879     integer :: m, n
   3880 
   3881     do n = 1, var%num_bcs
   3882       do m = 1, var%bc(n)%num_fields
   3883         call data_override(gridname, var%bc(n)%field(m)%name, var%bc(n)%field(m)%values, Time)
   3884       enddo
   3885     enddo
   3886   end subroutine CT_data_override_2d


ENTRY POINTS

  Name                                                 
                                                       
 coupler_types_mod_mp_ct_data_override_2d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 CT_DATA_OVERRIDE_2D        Subr   3874                                          PRIV                                               
 DATA_OVERRIDE              Local  3883                                 scalar   PRIV             37,3883,3898                      
 DATA_OVERRIDE_2D           Subr   3883                                          PRIV             3883                              
 GRIDNAME                   Dummy  3874     CHAR            3           scalar   ARG,IN           3883                              
 M                          Local  3879     I(4)            4           scalar                    3882,3883                         
 N                          Local  3879     I(4)            4           scalar                    3881,3882,3883                    
 TIME                       Dummy  3874     TIME_TYPE       16          scalar   ARG,IN           3883                              
 VAR                        Dummy  3874     COUPLER_2D_BC_TYPE                                                                      
                                                            120         scalar   ARG,INOUT        3881,3882,3883                    

Page 137         Source Listing                  CT_DATA_OVERRIDE_2D
2021-06-01 08:55                                 coupler_types.F90

   3887 
   3888 !> @brief Potentially override the values in a coupler_3d_bc_type
   3889   subroutine CT_data_override_3d(gridname, var, Time)
   3890     character(len=3),         intent(in)    :: gridname !< 3-character long model grid ID
   3891     type(coupler_3d_bc_type), intent(inout) :: var  !< BC_type structure to override
   3892     type(time_type),          intent(in)    :: time !< The current model time
   3893 
   3894     integer :: m, n
   3895 
   3896     do n = 1, var%num_bcs
   3897       do m = 1, var%bc(n)%num_fields
   3898         call data_override(gridname, var%bc(n)%field(m)%name, var%bc(n)%field(m)%values, Time)
   3899       enddo
   3900     enddo
   3901   end subroutine CT_data_override_3d


ENTRY POINTS

  Name                                                 
                                                       
 coupler_types_mod_mp_ct_data_override_3d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 CT_DATA_OVERRIDE_3D        Subr   3889                                          PRIV                                               
 DATA_OVERRIDE_3D           Subr   3898                                          PRIV             3898                              
 GRIDNAME                   Dummy  3889     CHAR            3           scalar   ARG,IN           3898                              
 M                          Local  3894     I(4)            4           scalar                    3897,3898                         
 N                          Local  3894     I(4)            4           scalar                    3896,3897,3898                    
 TIME                       Dummy  3889     TIME_TYPE       16          scalar   ARG,IN           3898                              
 VAR                        Dummy  3889     COUPLER_3D_BC_TYPE                                                                      
                                                            128         scalar   ARG,INOUT        3896,3897,3898                    

Page 138         Source Listing                  CT_DATA_OVERRIDE_3D
2021-06-01 08:55                                 coupler_types.F90

   3902 
   3903 
   3904 !> @brief Write out checksums for the elements of a coupler_2d_bc_type
   3905   subroutine CT_write_chksums_2d(var, outunit, name_lead)
   3906     type(coupler_2d_bc_type),   intent(in) :: var  !< BC_type structure for which to register diagnostics
   3907     integer,                    intent(in) :: outunit !< The index of a open output file
   3908     character(len=*), optional, intent(in) :: name_lead !< An optional prefix for the variable names
   3909 
   3910     character(len=120) :: var_name
   3911     integer :: m, n
   3912 
   3913     do n = 1, var%num_bcs
   3914       do m = 1, var%bc(n)%num_fields
   3915         if (present(name_lead)) then
   3916           var_name = trim(name_lead)//trim(var%bc(n)%field(m)%name)
   3917         else
   3918           var_name = trim(var%bc(n)%field(m)%name)
   3919         endif
   3920         write(outunit, '("   CHECKSUM:: ",A40," = ",Z20)') trim(var_name),&
   3921             & mpp_chksum(var%bc(n)%field(m)%values(var%isc:var%iec,var%jsc:var%jec) )
   3922       enddo
   3923     enddo
   3924   end subroutine CT_write_chksums_2d


ENTRY POINTS

  Name                                                 
                                                       
 coupler_types_mod_mp_ct_write_chksums_2d_             

Page 139         Source Listing                  CT_WRITE_CHKSUMS_2D
2021-06-01 08:55 Symbol Table                    coupler_types.F90



SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 CT_WRITE_CHKSUMS_2D        Subr   3905                                          PRIV                                               
 M                          Local  3911     I(4)            4           scalar                    3914,3916,3918,3921               
 MPP_CHKSUM                 Local  3921                                 scalar   PRIV             39,3921,3943                      
 MPP_CHKSUM_R8_2D           Func   3921     I(8)            8           scalar   PRIV             3921                              
 N                          Local  3911     I(4)            4           scalar                    3913,3914,3916,3918,3921          
 NAME_LEAD                  Dummy  3905     CHAR                        scalar   ARG,IN           3915,3916                         
 OUTUNIT                    Dummy  3905     I(4)            4           scalar   ARG,IN           3920                              
 PRESENT                    Func   3915                                 scalar                    3915                              
 TRIM                       Func   3916                                 scalar                    3916,3918,3920                    
 VAR                        Dummy  3905     COUPLER_2D_BC_TYPE                                                                      
                                                            120         scalar   ARG,IN           3913,3914,3916,3918,3921          
 VAR_NAME                   Local  3910     CHAR            120         scalar                    3916,3918,3920                    

Page 140         Source Listing                  CT_WRITE_CHKSUMS_2D
2021-06-01 08:55                                 coupler_types.F90

   3925 
   3926 !> @brief Write out checksums for the elements of a coupler_3d_bc_type
   3927   subroutine CT_write_chksums_3d(var, outunit, name_lead)
   3928     type(coupler_3d_bc_type),   intent(in) :: var  !< BC_type structure for which to register diagnostics
   3929     integer,                    intent(in) :: outunit !< The index of a open output file
   3930     character(len=*), optional, intent(in) :: name_lead !< An optional prefix for the variable names
   3931 
   3932     character(len=120) :: var_name
   3933     integer :: m, n
   3934 
   3935     do n = 1, var%num_bcs
   3936       do m = 1, var%bc(n)%num_fields
   3937         if (present(name_lead)) then
   3938           var_name = trim(name_lead)//trim(var%bc(n)%field(m)%name)
   3939         else
   3940           var_name = trim(var%bc(n)%field(m)%name)
   3941         endif
   3942         write(outunit, '("   CHECKSUM:: ",A40," = ",Z20)') var_name,&
   3943             & mpp_chksum(var%bc(n)%field(m)%values(var%isc:var%iec,var%jsc:var%jec,:) )
   3944       enddo
   3945     enddo
   3946   end subroutine CT_write_chksums_3d


ENTRY POINTS

  Name                                                 
                                                       
 coupler_types_mod_mp_ct_write_chksums_3d_             

Page 141         Source Listing                  CT_WRITE_CHKSUMS_3D
2021-06-01 08:55 Symbol Table                    coupler_types.F90



SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 CT_WRITE_CHKSUMS_3D        Subr   3927                                          PRIV                                               
 M                          Local  3933     I(4)            4           scalar                    3936,3938,3940,3943               
 MPP_CHKSUM_R8_3D           Func   3943     I(8)            8           scalar   PRIV             3943                              
 N                          Local  3933     I(4)            4           scalar                    3935,3936,3938,3940,3943          
 NAME_LEAD                  Dummy  3927     CHAR                        scalar   ARG,IN           3937,3938                         
 OUTUNIT                    Dummy  3927     I(4)            4           scalar   ARG,IN           3942                              
 PRESENT                    Func   3937                                 scalar                    3937                              
 TRIM                       Func   3938                                 scalar                    3938,3940                         
 VAR                        Dummy  3927     COUPLER_3D_BC_TYPE                                                                      
                                                            128         scalar   ARG,IN           3935,3936,3938,3940,3943          
 VAR_NAME                   Local  3932     CHAR            120         scalar                    3938,3940,3942                    

Page 142         Source Listing                  CT_WRITE_CHKSUMS_3D
2021-06-01 08:55                                 coupler_types.F90

   3947 
   3948 
   3949 !> @brief Indicate whether a coupler_1d_bc_type has been initialized.
   3950 !! @return Logical
   3951   logical function CT_initialized_1d(var)
   3952     type(coupler_1d_bc_type), intent(in) :: var  !< BC_type structure to be deconstructed
   3953 
   3954     CT_initialized_1d = var%set
   3955   end function CT_initialized_1d


ENTRY POINTS

  Name                                               
                                                     
 coupler_types_mod_mp_ct_initialized_1d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 CT_INITIALIZED_1D          Func   3951     L(4)            4           scalar   PRIV             3954                              
 VAR                        Dummy  3951     COUPLER_1D_BC_TYPE                                                                      
                                                            88          scalar   ARG,IN           3954                              

Page 143         Source Listing                  CT_INITIALIZED_1D
2021-06-01 08:55                                 coupler_types.F90

   3956 
   3957 !> @brief Indicate whether a coupler_2d_bc_type has been initialized.
   3958 !! @return Logical
   3959   logical function CT_initialized_2d(var)
   3960     type(coupler_2d_bc_type), intent(in) :: var  !< BC_type structure to be deconstructed
   3961 
   3962     CT_initialized_2d = var%set
   3963   end function CT_initialized_2d


ENTRY POINTS

  Name                                               
                                                     
 coupler_types_mod_mp_ct_initialized_2d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 CT_INITIALIZED_2D          Func   3959     L(4)            4           scalar   PRIV             3962                              
 VAR                        Dummy  3959     COUPLER_2D_BC_TYPE                                                                      
                                                            120         scalar   ARG,IN           3962                              

Page 144         Source Listing                  CT_INITIALIZED_2D
2021-06-01 08:55                                 coupler_types.F90

   3964 
   3965 !> @brief Indicate whether a coupler_3d_bc_type has been initialized.
   3966 !! @return Logical
   3967   logical function CT_initialized_3d(var)
   3968     type(coupler_3d_bc_type), intent(in) :: var  !< BC_type structure to be deconstructed
   3969 
   3970     CT_initialized_3d = var%set
   3971   end function CT_initialized_3d


ENTRY POINTS

  Name                                               
                                                     
 coupler_types_mod_mp_ct_initialized_3d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 CT_INITIALIZED_3D          Func   3967     L(4)            4           scalar   PRIV             3970                              
 VAR                        Dummy  3967     COUPLER_3D_BC_TYPE                                                                      
                                                            128         scalar   ARG,IN           3970                              

Page 145         Source Listing                  CT_INITIALIZED_3D
2021-06-01 08:55                                 coupler_types.F90

   3972 
   3973 !> @brief Deallocate all data associated with a coupler_1d_bc_type
   3974   subroutine CT_destructor_1d(var)
   3975     type(coupler_1d_bc_type), intent(inout) :: var  !< BC_type structure to be deconstructed
   3976 
   3977     integer :: m, n
   3978 
   3979     if (var%num_bcs > 0) then
   3980       do n = 1, var%num_bcs
   3981         do m = 1, var%bc(n)%num_fields
   3982           deallocate ( var%bc(n)%field(m)%values )
   3983         enddo
   3984         deallocate ( var%bc(n)%field )
   3985       enddo
   3986       deallocate ( var%bc )
   3987     endif
   3988 
   3989     var%num_bcs = 0
   3990     var%set = .false.
   3991   end subroutine CT_destructor_1d


ENTRY POINTS

  Name                                              
                                                    
 coupler_types_mod_mp_ct_destructor_1d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 CT_DESTRUCTOR_1D           Subr   3974                                          PRIV                                               
 M                          Local  3977     I(4)            4           scalar                    3981,3982                         
 N                          Local  3977     I(4)            4           scalar                    3980,3981,3982,3984               
 VAR                        Dummy  3974     COUPLER_1D_BC_TYPE                                                                      
                                                            88          scalar   ARG,INOUT        3979,3980,3981,3982,3984,3986,3989
                                                                                                  ,3990                             


TYPE COMPONENTS/COMMON VARIABLES

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 COUPLER_1D_VALUES_TYPE.VALUES                                                                                             ...
                            R(8)            8     48       1     1        PTR              3982                               

Page 146         Source Listing                  CT_DESTRUCTOR_1D
2021-06-01 08:55                                 coupler_types.F90

   3992 
   3993 !> @brief Deallocate all data associated with a coupler_2d_bc_type
   3994   subroutine CT_destructor_2d(var)
   3995     type(coupler_2d_bc_type), intent(inout) :: var  !< BC_type structure to be deconstructed
   3996 
   3997     integer :: m, n
   3998 
   3999     if (var%num_bcs > 0) then
   4000       do n = 1, var%num_bcs
   4001         do m = 1, var%bc(n)%num_fields
   4002           deallocate ( var%bc(n)%field(m)%values )
   4003         enddo
   4004         deallocate ( var%bc(n)%field )
   4005       enddo
   4006       deallocate ( var%bc )
   4007     endif
   4008 
   4009     var%num_bcs = 0
   4010     var%set = .false.
   4011   end subroutine CT_destructor_2d


ENTRY POINTS

  Name                                              
                                                    
 coupler_types_mod_mp_ct_destructor_2d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 CT_DESTRUCTOR_2D           Subr   3994                                          PRIV                                               
 M                          Local  3997     I(4)            4           scalar                    4001,4002                         
 N                          Local  3997     I(4)            4           scalar                    4000,4001,4002,4004               
 VAR                        Dummy  3994     COUPLER_2D_BC_TYPE                                                                      
                                                            120         scalar   ARG,INOUT        3999,4000,4001,4002,4004,4006,4009
                                                                                                  ,4010                             

Page 147         Source Listing                  CT_DESTRUCTOR_2D
2021-06-01 08:55                                 coupler_types.F90

   4012 
   4013 !> @brief Deallocate all data associated with a coupler_3d_bc_type
   4014   subroutine CT_destructor_3d(var)
   4015     type(coupler_3d_bc_type), intent(inout) :: var  !< BC_type structure to be deconstructed
   4016 
   4017     integer :: m, n
   4018 
   4019     if (var%num_bcs > 0) then
   4020       do n = 1, var%num_bcs
   4021         do m = 1, var%bc(n)%num_fields
   4022           deallocate ( var%bc(n)%field(m)%values )
   4023         enddo
   4024         deallocate ( var%bc(n)%field )
   4025       enddo
   4026       deallocate ( var%bc )
   4027     endif
   4028 
   4029     var%num_bcs = 0
   4030     var%set = .false.
   4031   end subroutine CT_destructor_3d


ENTRY POINTS

  Name                                              
                                                    
 coupler_types_mod_mp_ct_destructor_3d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 CT_DESTRUCTOR_3D           Subr   4014                                          PRIV                                               
 M                          Local  4017     I(4)            4           scalar                    4021,4022                         
 N                          Local  4017     I(4)            4           scalar                    4020,4021,4022,4024               
 VAR                        Dummy  4014     COUPLER_3D_BC_TYPE                                                                      
                                                            128         scalar   ARG,INOUT        4019,4020,4021,4022,4024,4026,4029
                                                                                                  ,4030                             

Page 148         Source Listing                  CT_DESTRUCTOR_3D
2021-06-01 08:55                                 coupler_types.F90

   4032 end module coupler_types_mod


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 COUPLER_1D_FIELD_TYPE      Type   196                      808         scalar                    211,215                           
 COUPLER_1D_VALUES_TYPE     Type   183                      392         scalar                    194,199                           
 COUPLER_2D_FIELD_TYPE      Type   153                      832         scalar                    172,176                           
 COUPLER_2D_VALUES_TYPE     Type   137                      424         scalar                    151,156                           
 COUPLER_3D_FIELD_TYPE      Type   105                      832         scalar                    124,128                           
 COUPLER_3D_VALUES_TYPE     Type   89                       448         scalar                    103,108                           
 COUPLER_TYPES_INIT         Subr   74                                                             74                                
 COUPLER_TYPES_MOD          Module 25                                                                                               
 COUPLER_TYPE_COPY          Local  241                                  scalar                    75                                
 COUPLER_TYPE_COPY_1D_2D    Subr   242                                                            83                                
 COUPLER_TYPE_COPY_1D_3D    Subr   242                                                            84                                
 COUPLER_TYPE_COPY_DATA     Local  255                                  scalar                    79                                
 COUPLER_TYPE_DATA_OVERRIDE Local  303                                  scalar                    76                                
 COUPLER_TYPE_DESTRUCTOR    Local  329                                  scalar                    80                                
 COUPLER_TYPE_EXTRACT_DATA  Local  278                                  scalar                    81                                
 COUPLER_TYPE_INCREMENT_DAT                                                                                                         
 A                          Local  273                                  scalar                    78                                
 COUPLER_TYPE_INITIALIZED   Local  324                                  scalar                    80                                
 COUPLER_TYPE_REDISTRIBUTE_                                                                                                         
 DATA                       Local  261                                  scalar                    79                                
 COUPLER_TYPE_REGISTER_REST                                                                                                         
 ARTS                       Local  309                                  scalar                    77                                
 COUPLER_TYPE_RESCALE_DATA  Local  266                                  scalar                    78                                
 COUPLER_TYPE_RESTORE_STATE Local  318                                  scalar                    77                                
 COUPLER_TYPE_SEND_DATA     Local  298                                  scalar                    76                                
 COUPLER_TYPE_SET_DATA      Local  283                                  scalar                    81                                
 COUPLER_TYPE_SET_DIAGS     Local  288                                  scalar                    75                                
 COUPLER_TYPE_SPAWN         Local  248                                  scalar                    75                                
 COUPLER_TYPE_WRITE_CHKSUMS Local  293                                  scalar                    76                                
 CT_INITIALIZED_1D@0        Local  3951     L(4)            4           scalar                                                      
 CT_INITIALIZED_2D@0        Local  3959     L(4)            4           scalar                                                      
 CT_INITIALIZED_3D@0        Local  3967     L(4)            4           scalar                                                      
 DATA_OVERRIDE_MOD          Module 37                                                             37                                
 DIAG_MANAGER_MOD           Module 36                                                             36                                
 FMS2_IO_MOD                Module 27                                                             27,28,29,30,31,32                 
 FMS_IO_MOD                 Module 33                                                             33,34                             
 FMS_MOD                    Module 26                                                             26                                
 IND_ALPHA                  Local  227      I(4)            4           scalar                    227                               
 IND_CSURF                  Local  228      I(4)            4           scalar                    228                               
 IND_DELTAP                 Local  231      I(4)            4           scalar                    231                               
 IND_DEPOSITION             Local  234      I(4)            4           scalar                    234                               
 IND_FLUX                   Local  230      I(4)            4           scalar                    230                               
 IND_FLUX0                  Local  233      I(4)            4           scalar                    233                               
 IND_KW                     Local  232      I(4)            4           scalar                    232                               
 IND_PCAIR                  Local  224      I(4)            4           scalar                    224                               
 IND_PSURF                  Local  226      I(4)            4           scalar                    226                               
 IND_RUNOFF                 Local  235      I(4)            4           scalar                    235                               
 IND_SC_NO                  Local  229      I(4)            4           scalar                    229                               
 IND_U10                    Local  225      I(4)            4           scalar                    225                               
 MPP_DOMAINS_MOD            Module 38                                                             38                                

Page 149         Source Listing                  CT_DESTRUCTOR_3D
2021-06-01 08:55 Symbol Table                    coupler_types.F90

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 MPP_MOD                    Module 39                                                             39                                
 TIME_MANAGER_MOD           Module 35                                                             35                                


TYPE COMPONENTS/COMMON VARIABLES

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 COUPLER_1D_FIELD_TYPE.FLAG L(4)            4     456      1     1        PTR                                                 
 COUPLER_1D_FIELD_TYPE.PARAM                                                                                               ...
                            R(8)            8     384      1     1        PTR                                                 
 COUPLER_1D_VALUES_TYPE.ID_DIAG                                                                                            ...
                            I(4)            4     128            scalar                                                       
 COUPLER_1D_VALUES_TYPE.OVERRIDE                                                                                           ...
                            L(4)            4     124            scalar                                                       
 COUPLER_2D_FIELD_TYPE.FLAG L(4)            4     456      1     1        PTR                                                 
 COUPLER_2D_FIELD_TYPE.PARAM                                                                                               ...
                            R(8)            8     384      1     1        PTR                                                 
 COUPLER_2D_VALUES_TYPE.OVERRIDE                                                                                           ...
                            L(4)            4     148            scalar                                                       
 COUPLER_3D_FIELD_TYPE.FLAG L(4)            4     456      1     1        PTR                                                 
 COUPLER_3D_FIELD_TYPE.PARAM                                                                                               ...
                            R(8)            8     384      1     1        PTR                                                 
 COUPLER_3D_VALUES_TYPE.OVERRIDE                                                                                           ...
                            L(4)            4     172            scalar                                                       

Page 150         Source Listing                  CT_DESTRUCTOR_3D
2021-06-01 08:55 Subprograms/Common Blocks       coupler_types.F90



SUBPROGRAMS/COMMON BLOCKS

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 COUPLER_TYPES_INIT         Subr   336                                                                                              
 COUPLER_TYPES_MOD          Module 25                                                                                               
 COUPLER_TYPE_COPY_1D_2D    Subr   357                                                                                              
 COUPLER_TYPE_COPY_1D_3D    Subr   392                                                                                              
 COUPLER_TYPE_COPY_2D_2D    Subr   427                                           PRIV                                               
 COUPLER_TYPE_COPY_2D_3D    Subr   461                                           PRIV                                               
 COUPLER_TYPE_COPY_3D_2D    Subr   496                                           PRIV                                               
 COUPLER_TYPE_COPY_3D_3D    Subr   530                                           PRIV                                               
 CT_COPY_DATA_2D            Subr   1168                                          PRIV                                               
 CT_COPY_DATA_2D_3D         Subr   1364                                          PRIV                                               
 CT_COPY_DATA_3D            Subr   1263                                          PRIV                                               
 CT_DATA_OVERRIDE_2D        Subr   3874                                          PRIV                                               
 CT_DATA_OVERRIDE_3D        Subr   3889                                          PRIV                                               
 CT_DESTRUCTOR_1D           Subr   3974                                          PRIV                                               
 CT_DESTRUCTOR_2D           Subr   3994                                          PRIV                                               
 CT_DESTRUCTOR_3D           Subr   4014                                          PRIV                                               
 CT_EXTRACT_DATA_2D         Subr   2201                                          PRIV                                               
 CT_EXTRACT_DATA_3D         Subr   2481                                          PRIV                                               
 CT_EXTRACT_DATA_3D_2D      Subr   2338                                          PRIV                                               
 CT_INCREMENT_DATA_2D_2D    Subr   1839                                          PRIV                                               
 CT_INCREMENT_DATA_2D_3D    Subr   2063                                          PRIV                                               
 CT_INCREMENT_DATA_3D_3D    Subr   1948                                          PRIV                                               
 CT_INITIALIZED_1D          Func   3951     L(4)            4           scalar   PRIV             3954                              
 CT_INITIALIZED_2D          Func   3959     L(4)            4           scalar   PRIV             3962                              
 CT_INITIALIZED_3D          Func   3967     L(4)            4           scalar   PRIV             3970                              
 CT_REDISTRIBUTE_DATA_2D    Subr   1464                                          PRIV                                               
 CT_REDISTRIBUTE_DATA_3D    Subr   1554                                          PRIV                                               
 CT_REGISTER_RESTARTS_2D    Subr   3122                                          PRIV                                               
 CT_REGISTER_RESTARTS_3D    Subr   3411                                          PRIV                                               
 CT_RESCALE_DATA_2D         Subr   1646                                          PRIV                                               
 CT_RESCALE_DATA_3D         Subr   1736                                          PRIV                                               
 CT_RESTORE_STATE_2D        Subr   3602                                          PRIV                                               
 CT_RESTORE_STATE_3D        Subr   3738                                          PRIV                                               
 CT_SEND_DATA_2D            Subr   3086                                          PRIV                                               
 CT_SEND_DATA_3D            Subr   3103                                          PRIV                                               
 CT_SET_DATA_2D             Subr   2627                                          PRIV                                               
 CT_SET_DATA_2D_3D          Subr   2761                                          PRIV                                               
 CT_SET_DATA_3D             Subr   2902                                          PRIV                                               
 CT_SET_DIAGS_2D            Subr   3033                                          PRIV             385,455,524                       
 CT_SET_DIAGS_3D            Subr   3060                                          PRIV             421,490,559                       
 CT_SPAWN_1D_2D             Subr   572                                           PRIV             382                               
 CT_SPAWN_1D_3D             Subr   667                                           PRIV             418                               
 CT_SPAWN_2D_2D             Subr   771                                           PRIV             452                               
 CT_SPAWN_2D_3D             Subr   866                                           PRIV             487                               
 CT_SPAWN_3D_2D             Subr   968                                           PRIV             521                               
 CT_SPAWN_3D_3D             Subr   1063                                          PRIV             556                               
 CT_WRITE_CHKSUMS_2D        Subr   3905                                          PRIV                                               
 CT_WRITE_CHKSUMS_3D        Subr   3927                                          PRIV                                               
 MPP_IO_CT_REGISTER_RESTART                                                                                                         
 S_2D                       Subr   3323                                          PRIV                                               
 MPP_IO_CT_REGISTER_RESTART                                                                                                         

Page 151         Source Listing                  CT_DESTRUCTOR_3D
2021-06-01 08:55 Subprograms/Common Blocks       coupler_types.F90

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 S_3D                       Subr   3519                                          PRIV                                               
 MPP_IO_CT_REGISTER_RESTART                                                                                                         
 S_TO_FILE_2D               Subr   3379                                          PRIV                                               
 MPP_IO_CT_REGISTER_RESTART                                                                                                         
 S_TO_FILE_3D               Subr   3573                                          PRIV                                               
 MPP_IO_CT_RESTORE_STATE_2D Subr   3668                                          PRIV                                               
 MPP_IO_CT_RESTORE_STATE_3D Subr   3805                                          PRIV                                               
 REGISTER_AXIS_WRAPPER      Subr   3306                                                           3177,3470,3472                    
 REGISTER_AXIS_WRAPPER_READ Subr   3220                                                           3312                              
 REGISTER_AXIS_WRAPPER_WRIT                                                                                                         
 E                          Subr   3273                                                           3314                              

COMPILER OPTIONS BEING USED

       -align noall                          -align nonone
       -align nocommons                      -align nodcommons
       -align noqcommons                     -align nozcommons
       -align records                        -align nosequence
       -align norec1byte                     -align norec2byte
       -align norec4byte                     -align norec8byte
       -align norec16byte                    -align norec32byte
       -align norec64byte                    -align noarray8byte
       -align noarray16byte                  -align noarray32byte
       -align noarray64byte                  -align noarray128byte
       -align noarray256byte                 -altparam
       -assume accuracy_sensitive            -assume nobscc
       -assume nobuffered_io                 -assume nobuffered_stdout
       -assume byterecl                      -assume nocontiguous_assumed_shape
       -assume nocontiguous_pointer          -assume cc_omp
       -assume nocstring                     -assume nodummy_aliases
       -assume nofpe_summary                 -assume noieee_fpe_flags
       -assume nominus0                      -assume noold_boz
       -assume old_complex_align             -assume old_unit_star
       -assume old_inquire_recl              -assume old_ldout_format
       -assume old_ldout_zero                -assume noold_logical_assign
       -assume noold_logical_ldio            -assume old_maxminloc
       -assume old_xor                       -assume noprotect_allocates
       -assume protect_constants             -assume noprotect_parens
       -assume split_common                  -assume source_include
       -assume nostd_intent_in               -assume std_minus0_rounding
       -assume nostd_mod_proc_name           -assume std_value
       -assume realloc_lhs                   -assume underscore
       -assume no2underscores                -assume norecursion
       -auto                            no   -auto_scalar
  no   -bintext                              -ccdefault default
       -check noarg_temp_created             -check noassume
       -check nobounds                       -check nocontiguous
       -check noformat                       -check nooutput_conversion
       -check nooverflow                     -check nopointers
       -check noshape                        -check nostack
       -check nouninitialized                -check noudio_iostat
       -coarray-num-procs 0             no   -coarray-config-file
       -convert native                       -cross_reference
       -D __INTEL_COMPILER=1910              -D __INTEL_COMPILER_UPDATE=0
       -D __unix__                           -D __unix

Page 152         Source Listing                  CT_DESTRUCTOR_3D
2021-06-01 08:55                                 coupler_types.F90

       -D __linux__                          -D __linux
       -D __gnu_linux__                      -D unix
       -D linux                              -D __ELF__
       -D __x86_64                           -D __x86_64__
       -D __amd64                            -D __amd64__
       -D __INTEL_COMPILER_BUILD_DATE=20191121       -D _OPENMP=201611
       -D __INTEL_OFFLOAD                    -D __MMX__
       -D __SSE__                            -D __SSE_MATH__
       -D __SSE2__                           -D __SSE2_MATH__
       -D __pentium4                         -D __pentium4__
       -D __tune_pentium4__                  -D PACKAGE_NAME='"GFDL FMS Library"'
       -D PACKAGE_TARNAME='"FMS"'            -D PACKAGE_VERSION='"2021.02.0"'
       -D PACKAGE_STRING='"GFDL FMS Library 2021.02.0"'       -D PACKAGE_BUGREPORT='"gfdl.climate.model.info@noaa.gov"'
       -D PACKAGE_URL='"https://www.gfdl.noaa.gov/fms"'       -D PACKAGE='"FMS"'
       -D VERSION='"2021.02.0"'              -D STDC_HEADERS=1
       -D HAVE_SYS_TYPES_H=1                 -D HAVE_SYS_STAT_H=1
       -D HAVE_STDLIB_H=1                    -D HAVE_STRING_H=1
       -D HAVE_MEMORY_H=1                    -D HAVE_STRINGS_H=1
       -D HAVE_INTTYPES_H=1                  -D HAVE_STDINT_H=1
       -D HAVE_UNISTD_H=1                    -D HAVE_DLFCN_H=1
       -D LT_OBJDIR='".libs/"'               -D HAVE_MPI_H=1
       -D HAVE_NETCDF_H=1                    -D HAVE_SCHED_GETAFFINITY=1
       -D HAVE_MOD_MPI=1                     -D HAVE_MOD_NETCDF=1
       -D HAVE_CRAY_POINTER=1                -D HAVE_QUAD_PRECISION=1
       -D HAVE_INTERNAL_NML=1                -D use_netCDF=1
       -D use_libMPI=1                       -D INTERNAL_FILE_NML
       -double_size 64                  no   -d_lines
  no   -Qdyncom                              -error_limit 30
  no   -f66                             no   -f77rtl
  no   -fast                                 -fpscomp nofilesfromcmd
       -fpscomp nogeneral                    -fpscomp noioformat
       -fpscomp noldio_spacing               -fpscomp nologicals
  no   -fpconstant                           -fpe3
       -fprm nearest                         -ftz
       -fp_model noprecise                   -fp_model fast
       -fp_model nostrict                    -fp_model nosource
       -fp_model nodouble                    -fp_model noextended
       -fp_model novery_fast                 -fp_model noexcept
       -fp_model nono_except                 -fp_modbits nofp_contract
       -fp_modbits nono_fp_contract          -fp_modbits nofenv_access
       -fp_modbits nono_fenv_access          -fp_modbits nocx_limited_range
       -fp_modbits nono_cx_limited_range       -fp_modbits noprec_div
       -fp_modbits nono_prec_div             -fp_modbits noprec_sqrt
       -fp_modbits nono_prec_sqrt            -fp_modbits ftz
       -fp_modbits nono_ftz                  -fp_modbits nointrin_limited_range
       -fp_modbits nono_intrin_limited_range       -fp_modbits notrunc_compares
       -fp_modbits nono_trunc_compares       -fp_modbits noieee_nan_compares
       -fp_modbits nono_ieee_nan_compares       -fp_modbits honor_f32_conversion
       -fp_modbits nono_honor_f32_conversion       -fp_modbits honor_f64_conversion
       -fp_modbits nono_honor_f64_conversion       -fp_modbits nono_x87_copy
       -fp_modbits nono_no_x87_copy          -fp_modbits noexception_semantics
       -fp_modbits nono_exception_semantics       -fp_modbits noprecise_libm_functions
       -fp_modbits nono_precise_libm_functions       -heap_arrays 0
  no   -threadprivate_compat                 -free
       -g2                                   -iface nomixed_str_len_arg
       -iface nono_mixed_str_len_arg         -init noarrays
       -init nohuge                          -init noinfinity

Page 153         Source Listing                  CT_DESTRUCTOR_3D
2021-06-01 08:55                                 coupler_types.F90

       -init nominus_huge                    -init nominus_infinity
       -init nominus_tiny                    -init nonan
       -init nosnan                          -init notiny
       -init nozero                     no   -intconstant
       -integer_size 32                 no   -mixed_str_len_arg
       -module ../.mods                      -names lowercase
  no   -noinclude                       no   -o
       -offload-build=host                   -openmp
       -openmp-simd                          -openmp-offload
       -O0                              no   -pad_source
       -real_size 64                    no   -recursive
       -reentrancy threaded                  -vec=simd
       -show nofullpath                      -show noinclude
       -show map                             -show options
  no   -syntax_only                     no   -threadcom
  no   -U                               no   -vms
       -w noall                              -w nonone
       -w noalignments                       -w nodeclarations
       -w noexternals                        -w nogeneral
       -w noignore_bounds                    -w noignore_loc
       -w nointerfaces                       -w noshape
       -w notruncated_source                 -w nouncalled
       -w nouninitialized                    -w nounused
       -w nousage                       no   -wrap-margins

       -includepath : /opt/netcdf/4.6.1/INTEL/include/,/opt/intel/2020/compilers_and_libraries/linux/pstl/include/,
           /opt/intel/2020/compilers_and_libraries_2020.0.166/linux/compiler/include/,.f90,./.f90,./.f90,../include/.f90,
           ./.f90,/opt/netcdf/4.6.1/INTEL/include/.f90,/opt/intel/2020/compilers_and_libraries/linux/mpi/intel64/include/.f90,
           /opt/intel/2020/compilers_and_libraries/linux/mpi/intel64/include/.f90,/opt/intel/2020/compilers_and_libraries/linux/ipp/include/.f90,
           /opt/intel/2020/compilers_and_libraries/linux/mkl/include/.f90,/opt/intel/2020/compilers_and_libraries/linux/pstl/include/.f90,
           /opt/intel/2020/compilers_and_libraries/linux/tbb/include/.f90,/opt/intel/2020/compilers_and_libraries/linux/daal/include/.f90,
           /opt/intel/2020/compilers_and_libraries_2020.0.166/linux/compiler/include/intel64/.f90,/opt/intel/2020/compilers_and_libraries_2020.0.166/linux/compiler/include/icc/.f90,
           /opt/intel/2020/compilers_and_libraries_2020.0.166/linux/compiler/include/.f90,/usr/local/include/.f90,
           /usr/lib/gcc/x86_64-redhat-linux/4.8.5/include/.f90,/usr/include/.f90,/usr/include/.f90,/usr/include/.f90
       -list filename : coupler_types.lst
  no   -o

COMPILER: Intel(R) Fortran 19.1-1555
