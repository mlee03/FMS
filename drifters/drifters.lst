Page 1           Source Listing                  DRIFTERS_NEW
2021-06-01 08:54                                 /tmp/ifortnTzKWl.i90

      1 # 1 "drifters.F90"
      2 !***********************************************************************
      3 !*                   GNU Lesser General Public License
      4 !*
      5 !* This file is part of the GFDL Flexible Modeling System (FMS).
      6 !*
      7 !* FMS is free software: you can redistribute it and/or modify it under
      8 !* the terms of the GNU Lesser General Public License as published by
      9 !* the Free Software Foundation, either version 3 of the License, or (at
     10 !* your option) any later version.
     11 !*
     12 !* FMS is distributed in the hope that it will be useful, but WITHOUT
     13 !* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
     14 !* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
     15 !* for more details.
     16 !*
     17 !* You should have received a copy of the GNU Lesser General Public
     18 !* License along with FMS.  If not, see <http://www.gnu.org/licenses/>.
     19 !***********************************************************************
     20 !FDOC_TAG_GFDL fdoc.pl generated xml skeleton
     21 
     22 # 1 "./fms_switches.h" 1 
     23 !***********************************************************************
     24 !*                   GNU Lesser General Public License
     25 !*
     26 !* This file is part of the GFDL Flexible Modeling System (FMS).
     27 !*
     28 !* FMS is free software: you can redistribute it and/or modify it under
     29 !* the terms of the GNU Lesser General Public License as published by
     30 !* the Free Software Foundation, either version 3 of the License, or (at
     31 !* your option) any later version.
     32 !*
     33 !* FMS is distributed in the hope that it will be useful, but WITHOUT
     34 !* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
     35 !* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
     36 !* for more details.
     37 !*
     38 !* You should have received a copy of the GNU Lesser General Public
     39 !* License along with FMS.  If not, see <http://www.gnu.org/licenses/>.
     40 !***********************************************************************
     41 # 22
     42 
     43 
     44 !DEC$ MESSAGE:'Compiling in MPI mode (with or without MPP) '
     45 
     46 # 22 "drifters.F90" 2 
     47 
     48 
     49 !> @file
     50 !! @brief <TT>Drifters_mod</TT>is a module designed to advect a set of particles, in parallel or
     51 !!   sequentially, given an prescribed velocity field.
     52 !! @author Alexander Pletzer
     53 !! @email gfdl.climate.model.info@noaa.gov
     54 !!
     55 !! @details Drifters are idealized point particles with positions that evolve in time according
     56 !! to a prescribed velocity field, starting from some initial conditions. Drifters have
     57 !! no mass, no energy, no size, and no friction and therefore have no impact on the

Page 2           Source Listing                  DRIFTERS_NEW
2021-06-01 08:54                                 drifters.F90

     58 !! dynamics of the underlying system. The only feature that distinguishes a drifter
     59 !! from another is its trajectory. This makes drifters ideal for tracking pollution
     60 !! clouds and probing fields (e.g. temperature, salinity) along ocean currents, to name
     61 !! a few applications.
     62 !! Drifters can mimic real experiments such as the Argo floats
     63 !! http://www.metoffice.com/research/ocean/argo/ukfloats.html.
     64 !!
     65 !! When run in parallel, on a 2d decomposed domain, <TT>drifters_mod</TT> will handle all the
     66 !! bookkeeping and communication transparently for the user. This involves adding/removing
     67 !! drifters as they enter/leave a processor element (PE) domain. Note that the number of drifters
     68 !! can vary greatly both between PE domains and within a PE domain in the course of a simulation; the drifters'
     69 !! module will also manage dynamically the memory for the user.
     70 !!
     71 !! There are a number of basic assumptions which could make the drifters' module
     72 !! ill-suited for some tasks. First and foremost, it is assumed that the motion of
     73 !! drifters is not erratic but follows deterministic trajectories. Furthermore,
     74 !! drifters should not cross both compute and data domain boundaries within less
     75 !! than a time step. This limitation is imposed by the Runge-Kutta integration
     76 !! scheme, which must be able to complete, within a time step, a trajectory
     77 !! calculation that starts inside the compute domain and ends inside the data domain. Therefore, the drifters,
     78 !! as they are presently modelled, are unlikely to work for very fast objects.
     79 !! This constraint also puts a upper limit to the domain decomposition, although
     80 !! it can often be remedied by increasing the number of ghost nodes.
     81 !!
     82 !! Another fundamental assumption is that the (e.g. velocity) fields are structured,
     83 !! on a per PE domain basis. There is no support for locally nested or unstrucured
     84 !! meshes. Meshes need not be smooth and continuous across PE domains, however.
     85 module drifters_mod
     86 ! <CONTACT EMAIL="Alexander.Pletzer@noaa.gov">
     87 !   Alexander Pletzer
     88 ! </CONTACT>
     89 ! <REVIEWER EMAIL="">
     90 !
     91 ! </REVIEWER>
     92 ! <HISTORY SRC="http://www.gfdl.noaa.gov/fms-cgi-bin/cvsweb.cgi/FMS/"/>
     93 ! <OVERVIEW>
     94 !
     95 ! </OVERVIEW>
     96 ! <TT>Drifters_mod</TT>is a module designed to advect a set of particles, in parallel or
     97 ! sequentially, given an prescribed velocity field.
     98 !
     99 ! <DESCRIPTION>
    100 ! Drifters are idealized point particles with positions that evolve in time according
    101 ! to a prescribed velocity field, starting from some initial conditions. Drifters have
    102 ! no mass, no energy, no size, and no friction and therefore have no impact on the
    103 ! dynamics of the underlying system. The only feature that distinguishes a drifter
    104 ! from another is its trajectory. This makes drifters ideal for tracking pollution
    105 ! clouds and probing fields (e.g. temperature, salinity) along ocean currents, to name
    106 ! a few applications.
    107 ! Drifters can mimic real experiments such as the Argo floats
    108 ! http://www.metoffice.com/research/ocean/argo/ukfloats.html.
    109 !
    110 ! When run in parallel, on a 2d decomposed domain, <TT>drifters_mod</TT> will handle all the
    111 ! bookkeeping and communication transparently for the user. This involves adding/removing
    112 ! drifters as they enter/leave a processor element (PE) domain. Note that the number of drifters
    113 ! can vary greatly both between PE domains and within a PE domain in the course of a simulation; the drifters'
    114 ! module will also manage dynamically the memory for the user.

Page 3           Source Listing                  DRIFTERS_NEW
2021-06-01 08:54                                 drifters.F90

    115 !
    116 ! There are a number of basic assumptions which could make the drifters' module
    117 ! ill-suited for some tasks. First and foremost, it is assumed that the motion of
    118 ! drifters is not erratic but follows deterministic trajectories. Furthermore,
    119 ! drifters should not cross both compute and data domain boundaries within less
    120 ! than a time step. This limitation is imposed by the Runge-Kutta integration
    121 ! scheme, which must be able to complete, within a time step, a trajectory
    122 ! calculation that starts inside the compute domain and ends inside the data domain. Therefore, the drifters,
    123 ! as they are presently modelled, are unlikely to work for very fast objects.
    124 ! This constraint also puts a upper limit to the domain decomposition, although
    125 ! it can often be remedied by increasing the number of ghost nodes.
    126 !
    127 ! Another fundamental assumption is that the (e.g. velocity) fields are structured,
    128 ! on a per PE domain basis. There is no support for locally nested or unstrucured
    129 ! meshes. Meshes need not be smooth and continuous across PE domains, however.
    130 ! </DESCRIPTION>
    131 !
    132 
    133 ! <INFO>
    134 
    135 !   <REFERENCE>            </REFERENCE>
    136 !   <COMPILER NAME="">     </COMPILER>
    137 !   <PRECOMP FLAG="">      </PRECOMP>
    138 !   <LOADER FLAG="">       </LOADER>
    139 !   <TESTPROGRAM NAME="">  </TESTPROGRAM>
    140 !   <BUG>                  </BUG>
    141 !   <NOTE>
    142 !     See NOTE above.
    143 !   </NOTE>
    144 !   <FUTURE>               </FUTURE>
    145 
    146 ! </INFO>
    147 
    148 # 131
    149 
    150 
    151 ! parallel code
    152   use mpp_mod        , only : mpp_pe, mpp_npes
    153   use mpp_domains_mod, only : domain2d
    154 
    155 
    156 
    157 
    158 
    159 
    160 
    161   use drifters_core_mod,  only: drifters_core_type, drifters_core_new, drifters_core_del, assignment(=)
    162 
    163   use drifters_input_mod, only: drifters_input_type, drifters_input_new, drifters_input_del, assignment(=)
    164 
    165   use drifters_io_mod,    only: drifters_io_type, drifters_io_new, drifters_io_del, drifters_io_set_time_units, &
    166                                 drifters_io_set_position_names, drifters_io_set_position_units, &
    167                                 drifters_io_set_field_names, drifters_io_set_field_units, drifters_io_write
    168 
    169   use drifters_comm_mod,  only: drifters_comm_type, drifters_comm_new, drifters_comm_del, drifters_comm_set_pe_neighbors, &
    170                                 drifters_comm_set_domain, drifters_comm_gather, drifters_comm_update
    171 

Page 4           Source Listing                  DRIFTERS_NEW
2021-06-01 08:54                                 drifters.F90

    172   use cloud_interpolator_mod, only: cld_ntrp_linear_cell_interp, cld_ntrp_locate_cell, cld_ntrp_get_cell_values
    173   implicit none
    174   private
    175 
    176   public :: drifters_type, assignment(=), drifters_push, drifters_compute_k, drifters_set_field
    177   public :: drifters_new, drifters_del, drifters_set_domain, drifters_set_pe_neighbors
    178   public :: drifters_set_v_axes, drifters_set_domain_bounds, drifters_positions2lonlat
    179   public :: drifters_print_checksums, drifters_save, drifters_write_restart, drifters_distribute
    180 
    181   integer, parameter, private :: MAX_STR_LEN = 128
    182 ! Include variable "version" to be written to log file.
    183 # 1 "../include/file_version.h" 1 
    184 ! -*-f90-*-
    185 !***********************************************************************
    186 !*                   GNU Lesser General Public License
    187 !*
    188 !* This file is part of the GFDL Flexible Modeling System (FMS).
    189 !*
    190 !* FMS is free software: you can redistribute it and/or modify it under
    191 !* the terms of the GNU Lesser General Public License as published by
    192 !* the Free Software Foundation, either version 3 of the License, or (at
    193 !* your option) any later version.
    194 !*
    195 !* FMS is distributed in the hope that it will be useful, but WITHOUT
    196 !* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
    197 !* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
    198 !* for more details.
    199 !*
    200 !* You should have received a copy of the GNU Lesser General Public
    201 !* License along with FMS.  If not, see <http://www.gnu.org/licenses/>.
    202 !***********************************************************************
    203 
    204 # 23
    205 
    206   character(len=*), parameter :: version = 'unknown'
    207 
    208 # 166 "drifters.F90" 2 
    209   real :: DRFT_EMPTY_ARRAY(0)
    210 
    211 !> @brief Be sure to update drifters_new, drifters_del and drifters_copy_new
    212 !!   when adding members
    213   type drifters_type
    214 ! Be sure to update drifters_new, drifters_del and drifters_copy_new
    215 ! when adding members
    216      type(drifters_core_type)  :: core
    217      type(drifters_input_type) :: input
    218      type(drifters_io_type)    :: io
    219      type(drifters_comm_type)  :: comm
    220      real    :: dt             !< total dt, over a complete step
    221      real    :: time
    222 ! fields
    223      real, allocatable :: fields(:,:)
    224 ! velocity field axes
    225      real, allocatable :: xu(:) !< velocity field axes
    226      real, allocatable :: yu(:) !< velocity field axes
    227      real, allocatable :: zu(:) !< velocity field axes
    228      real, allocatable :: xv(:) !< velocity field axes

Page 5           Source Listing                  DRIFTERS_NEW
2021-06-01 08:54                                 drifters.F90

    229      real, allocatable :: yv(:) !< velocity field axes
    230      real, allocatable :: zv(:) !< velocity field axes
    231      real, allocatable :: xw(:) !< velocity field axes
    232      real, allocatable :: yw(:) !< velocity field axes
    233      real, allocatable :: zw(:) !< velocity field axes
    234 ! Runge Kutta coefficients holding intermediate results (positions)
    235      real, allocatable :: temp_pos(:,:) !< Runge Kutta coefficients holding
    236 !! intermediate results (positions)
    237      real, allocatable :: rk4_k1(:,:) !< Runge Kutta coefficients holding
    238 !! intermediate results (positions)
    239      real, allocatable :: rk4_k2(:,:) !< Runge Kutta coefficients holding
    240 !! intermediate results (positions)
    241      real, allocatable :: rk4_k3(:,:) !< Runge Kutta coefficients holding
    242 !! intermediate results (positions)
    243      real, allocatable :: rk4_k4(:,:) !< Runge Kutta coefficients holding
    244 !! intermediate results (positions)
    245 ! store filenames for convenience
    246      character(len=MAX_STR_LEN) :: input_file !< store filenames for convenience
    247      character(len=MAX_STR_LEN) :: output_file !< store filenames for convenience
    248 ! Runge Kutta stuff
    249      integer :: rk4_step !< Runge Kutta stuff
    250      logical :: rk4_completed !< Runge Kutta stuff
    251      integer :: nx, ny
    252      logical, allocatable   :: remove(:)
    253   end type drifters_type
    254 
    255   interface assignment(=)
    256      module procedure drifters_copy_new
    257   end interface
    258 
    259   interface drifters_push
    260     module procedure drifters_push_2
    261     module procedure drifters_push_3
    262   end interface
    263 
    264   interface drifters_compute_k
    265      module procedure drifters_computek2d
    266      module procedure drifters_computek3d
    267   end interface
    268 
    269   interface drifters_set_field
    270     module procedure drifters_set_field_2d
    271     module procedure drifters_set_field_3d
    272   end interface
    273 
    274 
    275 
    276 contains
    277 
    278 !============================================================================
    279 ! <SUBROUTINE NAME="drifters_new">
    280 !  <OVERVIEW>
    281 !  Constructor.
    282 !  </OVERVIEW>
    283 !  <DESCRIPTION>
    284 ! Will read positions stored in the netCDF file <TT>input_file</TT>.
    285 ! The trajectories will be saved in files <TT>output_file.PE</TT>,

Page 6           Source Listing                  DRIFTERS_NEW
2021-06-01 08:54                                 drifters.F90

    286 ! one file per PE domain.
    287 !  </DESCRIPTION>
    288 !  <TEMPLATE>
    289 !   call   drifters_new(self, input_file, output_file, ermesg)
    290 !
    291 !  </TEMPLATE>
    292 !  <INOUT NAME="self" TYPE="drifters_type" DIM="SCALAR" UNITS="" DEFAULT="">
    293 !   Opaque data structure.
    294 !  </INOUT>
    295 !  <IN NAME="input_file" TYPE="character" DIM="SCALAR" UNITS="" DEFAULT="">
    296 !     NetCDF input file name containing initial positions.
    297 !  </IN>
    298 !  <IN NAME="output_file" TYPE="character" DIM="SCALAR" UNITS="" DEFAULT="">
    299 !     NetCDF output file. Will contain trajectory positions and interpolated fields.
    300 !  </IN>
    301 !  <OUT NAME="ermesg" TYPE="character" DIM="SCALAR" UNITS="" DEFAULT="">
    302 !     Error message (if any).
    303 !  </OUT>
    304 ! </SUBROUTINE>
    305 !
    306 !> @brief Will read positions stored in the netCDF file <TT>input_file</TT>.
    307 !!   The trajectories will be saved in files <TT>output_file.PE</TT>,
    308 !!   one file per PE domain.
    309   subroutine drifters_new(self, input_file, output_file, ermesg)
    310 
    311     type(drifters_type) :: self !< Opaque data structure.
    312     character(len=*), intent(in)  :: input_file !< NetCDF input file name containing initial positions.
    313     character(len=*), intent(in)  :: output_file !< NetCDF output file. Will contain trajectory
    314 !! positions and interpolated fields.
    315     character(len=*), intent(out) :: ermesg !< Error message (if any).
    316 
    317     integer nd, nf, npdim, i
    318     character(len=6) :: pe_str
    319 
    320     ermesg = ''
    321 
    322     self%input_file  = input_file
    323     self%output_file = output_file
    324 
    325     call drifters_input_new(self%input, input_file, ermesg)
    326     if(ermesg/='') return
    327 
    328 ! number of dimensions
    329     nd = size(self%input%velocity_names)
    330 ! estimate for the max number of particles (will resize if exceeded)
    331     npdim = int(1.3*size(self%input%positions, 2))
    332     call drifters_core_new(self%core, nd=nd, npdim=npdim, ermesg=ermesg)
    333     if(ermesg/='') return
    334 
    335 ! number of fields
    336     nf = size(self%input%field_names)
    337 
    338 ! one output file per PE
    339     pe_str = '    '
    340     write(pe_str, '(i6)') mpp_pe()
    341     pe_str = adjustr(pe_str)
    342     do i = 1, 5

Page 7           Source Listing                  DRIFTERS_NEW
2021-06-01 08:54                                 drifters.F90

    343        if(pe_str(i:i)==' ') pe_str(i:i)='0'
    344     enddo
    345     call drifters_io_new(self%io, output_file//'.'//pe_str, nd, nf, ermesg)
    346     if(ermesg/='') return
    347 
    348     call drifters_comm_new(self%comm)
    349     if(ermesg/='') return
    350 
    351 ! Set meta data
    352     call drifters_io_set_time_units(self%io, name=self%input%time_units, &
    353          & ermesg=ermesg)
    354 
    355     call drifters_io_set_position_names(self%io, names=self%input%position_names, &
    356          & ermesg=ermesg)
    357     if(ermesg/='') return
    358     call drifters_io_set_position_units(self%io, names=self%input%position_units, &
    359          & ermesg=ermesg)
    360     if(ermesg/='') return
    361 
    362     call drifters_io_set_field_names(self%io, names=self%input%field_names, &
    363          & ermesg=ermesg)
    364     if(ermesg/='') return
    365     call drifters_io_set_field_units(self%io, names=self%input%field_units, &
    366          & ermesg=ermesg)
    367     if(ermesg/='') return
    368 
    369     self%dt   = -1
    370     self%time = -1
    371     self%rk4_step = 0
    372     self%nx       = 0
    373     self%ny       = 0
    374     self%rk4_completed = .FALSE.
    375 
    376     allocate(self%rk4_k1(self%core%nd, self%core%npdim))
    377     self%rk4_k1 = -huge(1.)
    378     allocate(self%rk4_k2(self%core%nd, self%core%npdim))
    379     self%rk4_k2 = -huge(1.)
    380     allocate(self%rk4_k3(self%core%nd, self%core%npdim))
    381     self%rk4_k3 = -huge(1.)
    382     allocate(self%rk4_k4(self%core%nd, self%core%npdim))
    383     self%rk4_k4 = -huge(1.)
    384     allocate(self%remove(self%core%npdim))
    385     self%remove = .FALSE.
    386     allocate(self%temp_pos(nd, self%core%npdim))
    387     self%temp_pos = -huge(1.)
    388 
    389     allocate(self%fields(nf, self%core%npdim))
    390     self%fields = -huge(1.)
    391 
    392   end subroutine drifters_new

Page 8           Source Listing                  DRIFTERS_NEW
2021-06-01 08:54 Entry Points                    drifters.F90



ENTRY POINTS

  Name                                     
                                           
 drifters_mod_mp_drifters_new_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ADJUSTR                    Func   341                                  scalar                    341                               
 DRIFTERS_COMM_NEW          Subr   348                                           PRIV             169,348                           
 DRIFTERS_CORE_NEW          Subr   332                                           PRIV             161,332                           
 DRIFTERS_INPUT_NEW         Subr   325                                           PRIV             163,325                           
 DRIFTERS_IO_NEW            Subr   345                                           PRIV             165,345                           
 DRIFTERS_IO_SET_FIELD_NAME                                                                                                         
 S                          Subr   362                                           PRIV             167,362                           
 DRIFTERS_IO_SET_FIELD_UNIT                                                                                                         
 S                          Subr   365                                           PRIV             167,365                           
 DRIFTERS_IO_SET_POSITION_N                                                                                                         
 AMES                       Subr   355                                           PRIV             166,355                           
 DRIFTERS_IO_SET_POSITION_U                                                                                                         
 NITS                       Subr   358                                           PRIV             166,358                           
 DRIFTERS_IO_SET_TIME_UNITS Subr   352                                           PRIV             165,352                           
 DRIFTERS_NEW               Subr   309                                                                                              
 DRIFTERS_TYPE              Type   311                      2880        scalar                    176,253,311,416,475,476,617,687,72
                                                                                                  6,882,1016,1073,1168,1267,1307,139
                                                                                                  6,1482,1628,1835,1940,2025,2136,21
                                                                                                  77                                
 ERMESG                     Dummy  309      CHAR                        scalar   ARG,OUT          320,325,326,332,333,345,346,349,35
                                                                                                  3,356,357,359,360,363,364,366,367 
 HUGE                       Func   377                                  scalar                    377,379,381,383,387,390           
 I                          Local  317      I(4)            4           scalar                    342,343                           
 INPUT_FILE                 Dummy  309      CHAR                        scalar   ARG,IN           322,325                           
 INT                        Func   331                                  scalar                    331                               
 MPP_PE                     Func   340      I(4)            4           scalar   PRIV             152,340,2148,2153                 
 ND                         Local  317      I(4)            4           scalar                    329,332,345,386                   
 NF                         Local  317      I(4)            4           scalar                    336,345,389                       
 NPDIM                      Local  317      I(4)            4           scalar                    331,332                           
 OUTPUT_FILE                Dummy  309      CHAR                        scalar   ARG,IN           323,345                           
 PE_STR                     Local  318      CHAR            6           scalar                    339,340,341,343,345               
 SELF                       Dummy  309      DRIFTERS_TYPE   2880        scalar   ARG,INOUT        322,323,325,329,331,332,336,345,34
                                                                                                  8,352,355,358,362,365,369,370,371,
                                                                                                  372,373,374,376,377,378,379,380,38
                                                                                                  1,382,383,384,385,386,387,389,390 
 SIZE                       Func   329                                  scalar                    329,331,336                       



Page 9           Source Listing                  DRIFTERS_NEW
2021-06-01 08:54 Symbol Table                    drifters.F90

TYPE COMPONENTS/COMMON VARIABLES

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 DRIFTERS_CORE_TYPE.ND      I(4)            4     8              scalar                    376,378,380,382,741,898,1085,1086, 
                                                                                           1181,1182,1277,1314,2040,2155,2186 
                                                                                           ,2191,2196,2201                    
 DRIFTERS_CORE_TYPE.NPDIM   I(4)            4     16             scalar                    376,378,380,382,384,386,389,810,82 
                                                                                           3,971,984,1109,1210,2186,2191,2196 
                                                                                           ,2201,2207,2214                    
 DRIFTERS_INPUT_TYPE.FIELD_NAMES                                                                                           ...
                            CHAR            128   144      1     1        ALC              336,362,739,896,1108,1209,1273     
 DRIFTERS_INPUT_TYPE.FIELD_UNITS                                                                                           ...
                            CHAR            128   216      1     1        ALC              365                                
 DRIFTERS_INPUT_TYPE.POSITIONS                                                                                             ...
                            R(8)            8     360      2     1        ALC              331,1320,1322,1323,1328            
 DRIFTERS_INPUT_TYPE.POSITION_NAMES                                                                                        ...
                            CHAR            128   0        1     1        ALC              355                                
 DRIFTERS_INPUT_TYPE.POSITION_UNITS                                                                                        ...
                            CHAR            128   72       1     1        ALC              358                                
 DRIFTERS_INPUT_TYPE.TIME_UNITS                                                                                            ...
                            CHAR            128   528            scalar                    352                                
 DRIFTERS_INPUT_TYPE.VELOCITY_NAMES                                                                                        ...
                            CHAR            128   288      1     1        ALC              329,2213                           
 DRIFTERS_TYPE.COMM         DRIFTERS_COMM_TYPE                                                                                
                                            144   1152           scalar                    348,444,489,636,637,638,639,641,64 
                                                                                           2,643,644,646,647,648,649,653,654, 
                                                                                           693,807,811,816,968,972,977,1026,1 
                                                                                           029,1030,1034,1037,1038,1324,1325, 
                                                                                           1445,1514,1516,1521,1523,1667,1669 
                                                                                           ,1674,1676,1952,1958               
 DRIFTERS_TYPE.CORE         DRIFTERS_CORE_TYPE                                                                                
                                            192   0              scalar                    332,376,378,380,382,384,386,389,43 
                                                                                           8,486,738,741,755,761,774,782,797, 
                                                                                           810,816,818,823,831,837,895,898,91 
                                                                                           2,919,933,942,958,971,977,979,984, 
                                                                                           992,999,1024,1085,1086,1105,1109,1 
                                                                                           113,1114,1118,1120,1124,1181,1182, 
                                                                                           1206,1210,1214,1215,1219,1221,1225 
                                                                                           ,1228,1232,1274,1277,1278,1314,132 
                                                                                           7,1328,1329,1419,1437,1445,1498,15 
                                                                                           11,1646,1664,1683,2040,2155,2156,2 
                                                                                           157,2184,2186,2189,2191,2194,2196, 
                                                                                           2199,2201,2205,2207,2211,2214      
 DRIFTERS_TYPE.DT           R(8)            8     1296           scalar                    369,491,821,982,1560,1584,1721,175 
                                                                                           2,1783                             
 DRIFTERS_TYPE.FIELDS       R(8)            8     1312     2     1        ALC              389,390,421,494,495,496,1105,1107, 
                                                                                           1109,1110,1130,1206,1208,1210,1211 
                                                                                           ,1236,1279                         
 DRIFTERS_TYPE.INPUT        DRIFTERS_INPUT_TYPE                                                                               
                                            912   192            scalar                    325,329,331,336,352,355,358,362,36 
                                                                                           5,440,487,739,896,1108,1209,1273,1 
                                                                                           320,1322,1323,1328,1445,2213       
 DRIFTERS_TYPE.INPUT_FILE   CHAR            128   2536           scalar                    322                                
 DRIFTERS_TYPE.IO           DRIFTERS_IO_TYPE                                                                                  
                                            48    1104           scalar                    345,352,355,358,362,365,442,488,12 
                                                                                           77                                 

Page 10          Source Listing                  DRIFTERS_NEW
2021-06-01 08:54 Symbol Table                    drifters.F90

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 DRIFTERS_TYPE.NX           I(4)            4     2800           scalar                    372,535,812,973,1854,1872,1890     
 DRIFTERS_TYPE.NY           I(4)            4     2804           scalar                    373,536,812,973,1860,1878,1896     
 DRIFTERS_TYPE.OUTPUT_FILE  CHAR            128   2664           scalar                    323                                
 DRIFTERS_TYPE.REMOVE       L(4)            4     2808     1     1        ALC              384,385,436,538,539,817,828,978,98 
                                                                                           9,1540,1548,1564,1572,1694,1702,17 
                                                                                           11,1725,1733,1742,1758,1766,1774,2 
                                                                                           205,2206,2207,2208                 
 DRIFTERS_TYPE.RK4_COMPLETED                                                                                               ...
                            L(4)            4     2796           scalar                    374,534,764,785,840,922,945,1002   
 DRIFTERS_TYPE.RK4_K1       R(8)            8     2152     2     1        ALC              376,377,432,520,521,528,759,761,79 
                                                                                           8,835,837,917,919,959,997,999,2158 
                                                                                           ,2184,2185,2186,2187               
 DRIFTERS_TYPE.RK4_K2       R(8)            8     2248     2     1        ALC              378,379,433,522,523,529,772,774,79 
                                                                                           8,931,933,959,2159,2189,2190,2191, 
                                                                                           2192                               
 DRIFTERS_TYPE.RK4_K3       R(8)            8     2344     2     1        ALC              380,381,434,524,525,530,780,782,79 
                                                                                           8,940,942,959,2160,2194,2195,2196, 
                                                                                           2197                               
 DRIFTERS_TYPE.RK4_K4       R(8)            8     2440     2     1        ALC              382,383,435,526,527,531,793,798,95 
                                                                                           4,959,2161,2199,2200,2201,2202     
 DRIFTERS_TYPE.RK4_STEP     I(4)            4     2792           scalar                    371,533,746,763,784,839,903,921,94 
                                                                                           4,1001,1090,1186                   
 DRIFTERS_TYPE.TEMP_POS     R(8)            8     2056     2     1        ALC              386,387,431,517,518,519,761,768,77 
                                                                                           4,776,782,789,797,802,816,837,919, 
                                                                                           926,933,935,942,949,958,963,977,99 
                                                                                           9,2211,2212,2214,2215              
 DRIFTERS_TYPE.TIME         R(8)            8     1304           scalar                    370,492,821,982,1277,2165,2166,216 
                                                                                           7,2168,2169,2170                   

Page 11          Source Listing                  DRIFTERS_NEW
2021-06-01 08:54                                 drifters.F90

    393 
    394 !============================================================================
    395 ! <SUBROUTINE NAME="drifters_del">
    396 !  <OVERVIEW>
    397 !   Destructor.
    398 !  </OVERVIEW>
    399 !  <DESCRIPTION>
    400 !   Call this to reclaim memory.
    401 !  </DESCRIPTION>
    402 !  <TEMPLATE>
    403 !   call   drifters_del(self, ermesg)
    404 !
    405 !  </TEMPLATE>
    406 !  <INOUT NAME="self" TYPE="drifters_type" DIM="SCALAR" UNITS="" DEFAULT="">
    407 !   Opaque data structure.
    408 !  </INOUT>
    409 !  <OUT NAME="ermesg" TYPE="character" DIM="SCALAR" UNITS="" DEFAULT="">
    410 !   Error message (if any).
    411 !  </OUT>
    412 ! </SUBROUTINE>
    413 !
    414 !> @brief Destructor, Call this to reclaim memory.
    415   subroutine drifters_del(self, ermesg)
    416     type(drifters_type) :: self !< Opaque data structure.
    417     character(len=*), intent(out) :: ermesg !< Error message (if any).
    418 
    419     integer flag
    420     ermesg = ''
    421     deallocate(self%fields, stat=flag)
    422     deallocate(self%xu, stat=flag)
    423     deallocate(self%yu, stat=flag)
    424     deallocate(self%zu, stat=flag)
    425     deallocate(self%xv, stat=flag)
    426     deallocate(self%yv, stat=flag)
    427     deallocate(self%zv, stat=flag)
    428     deallocate(self%xw, stat=flag)
    429     deallocate(self%yw, stat=flag)
    430     deallocate(self%zw, stat=flag)
    431     deallocate(self%temp_pos, stat=flag)
    432     deallocate(self%rk4_k1, stat=flag)
    433     deallocate(self%rk4_k2, stat=flag)
    434     deallocate(self%rk4_k3, stat=flag)
    435     deallocate(self%rk4_k4, stat=flag)
    436     deallocate(self%remove, stat=flag)
    437 
    438     call drifters_core_del(self%core, ermesg)
    439     if(ermesg/='') return
    440     call drifters_input_del(self%input, ermesg)
    441     if(ermesg/='') return
    442     call drifters_io_del(self%io, ermesg)
    443     if(ermesg/='') return
    444     call drifters_comm_del(self%comm)
    445     if(ermesg/='') return
    446 
    447   end subroutine drifters_del

Page 12          Source Listing                  DRIFTERS_DEL
2021-06-01 08:54 Entry Points                    drifters.F90



ENTRY POINTS

  Name                                     
                                           
 drifters_mod_mp_drifters_del_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 DRIFTERS_COMM_DEL          Subr   444                                           PRIV             169,444                           
 DRIFTERS_CORE_DEL          Subr   438                                           PRIV             161,438                           
 DRIFTERS_DEL               Subr   415                                                                                              
 DRIFTERS_INPUT_DEL         Subr   440                                           PRIV             163,440                           
 DRIFTERS_IO_DEL            Subr   442                                           PRIV             165,442                           
 ERMESG                     Dummy  415      CHAR                        scalar   ARG,OUT          420,438,439,440,441,442,443,445   
 FLAG                       Local  419      I(4)            4           scalar                    421,422,423,424,425,426,427,428,42
                                                                                                  9,430,431,432,433,434,435,436     
 SELF                       Dummy  415      DRIFTERS_TYPE   2880        scalar   ARG,INOUT        421,422,423,424,425,426,427,428,42
                                                                                                  9,430,431,432,433,434,435,436,438,
                                                                                                  440,442,444                       


TYPE COMPONENTS/COMMON VARIABLES

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 DRIFTERS_TYPE.XU           R(8)            8     1408     1     1        ALC              422,498,501,1539,1544,1693,1698,18 
                                                                                           51,1852,1853,1948,1952             
 DRIFTERS_TYPE.XV           R(8)            8     1624     1     1        ALC              425,504,507,1563,1568,1724,1729,18 
                                                                                           69,1870,1871,1953,1958             
 DRIFTERS_TYPE.XW           R(8)            8     1840     1     1        ALC              428,510,513,1757,1762,1887,1888,18 
                                                                                           89,1957                            
 DRIFTERS_TYPE.YU           R(8)            8     1480     1     1        ALC              423,499,502,1547,1552,1701,1706,18 
                                                                                           57,1858,1859,1948,1952             
 DRIFTERS_TYPE.YV           R(8)            8     1696     1     1        ALC              426,505,508,1571,1576,1732,1737,18 
                                                                                           75,1876,1877,1953,1958             
 DRIFTERS_TYPE.YW           R(8)            8     1912     1     1        ALC              429,511,514,1765,1770,1893,1894,18 
                                                                                           95,1957                            
 DRIFTERS_TYPE.ZU           R(8)            8     1552     1     1        ALC              424,500,503,1710,1715,1863,1864,18 
                                                                                           65                                 
 DRIFTERS_TYPE.ZV           R(8)            8     1768     1     1        ALC              427,506,509,1741,1746,1881,1882,18 
                                                                                           83                                 
 DRIFTERS_TYPE.ZW           R(8)            8     1984     1     1        ALC              430,512,515,1773,1778,1899,1900,19 
                                                                                           01                                 

Page 13          Source Listing                  DRIFTERS_DEL
2021-06-01 08:54                                 drifters.F90

    448 
    449 !============================================================================
    450 ! <SUBROUTINE NAME="drifters_copy_new">
    451 !  <OVERVIEW>
    452 !   Copy constructor.
    453 !  </OVERVIEW>
    454 !  <DESCRIPTION>
    455 !   Copy a drifter state into a new state. Note: this will not open new files; this will
    456 !   copy all members into a new container.
    457 !  </DESCRIPTION>
    458 !  <TEMPLATE>
    459 !   call   drifters_copy_new(new_instance, old_instance)
    460 !
    461 !  </TEMPLATE>
    462 !  <INOUT NAME="new_instance" TYPE="drifters_type" DIM="SCALAR" UNITS="" DEFAULT="">
    463 !   New data structure.
    464 !  </INOUT>
    465 !  <IN NAME="old_instance" TYPE="drifters_type" DIM="SCALAR" UNITS="" DEFAULT="">
    466 !   Old data structure.
    467 !  </IN>
    468 ! </SUBROUTINE>
    469 !
    470 !============================================================================
    471 !> @brief Copy a drifter state into a new state. Note: this will not open new files; this will
    472 !!   copy all members into a new container.
    473   subroutine drifters_copy_new(new_instance, old_instance)
    474 
    475     type(drifters_type), intent(in)    :: old_instance !< Old data structure.
    476     type(drifters_type), intent(inout) :: new_instance !< New data structure.
    477 
    478     character(len=MAX_STR_LEN) :: ermesg
    479 
    480     ermesg = ''
    481 
    482 ! make sure new_instance is empty
    483     call drifters_del(new_instance, ermesg)
    484     if(ermesg/='') return
    485 
    486     new_instance%core  = old_instance%core
    487     new_instance%input = old_instance%input
    488     new_instance%io    = old_instance%io
    489     new_instance%comm  = old_instance%comm
    490 
    491      new_instance%dt     = old_instance%dt
    492      new_instance%time   = old_instance%time
    493 
    494      allocate(new_instance%fields( size(old_instance%fields, 1), &
    495           &                        size(old_instance%fields, 2) ))
    496      new_instance%fields = old_instance%fields
    497 
    498      allocate(new_instance%xu( size(old_instance%xu) ))
    499      allocate(new_instance%yu( size(old_instance%yu) ))
    500      allocate(new_instance%zu( size(old_instance%zu) ))
    501      new_instance%xu = old_instance%xu
    502      new_instance%yu = old_instance%yu
    503      new_instance%zu = old_instance%zu
    504      allocate(new_instance%xv( size(old_instance%xv) ))

Page 14          Source Listing                  DRIFTERS_COPY_NEW
2021-06-01 08:54                                 drifters.F90

    505      allocate(new_instance%yv( size(old_instance%yv) ))
    506      allocate(new_instance%zv( size(old_instance%zv) ))
    507      new_instance%xv = old_instance%xv
    508      new_instance%yv = old_instance%yv
    509      new_instance%zv = old_instance%zv
    510      allocate(new_instance%xw( size(old_instance%xw) ))
    511      allocate(new_instance%yw( size(old_instance%yw) ))
    512      allocate(new_instance%zw( size(old_instance%zw) ))
    513      new_instance%xw = old_instance%xw
    514      new_instance%yw = old_instance%yw
    515      new_instance%zw = old_instance%zw
    516 
    517      allocate(new_instance%temp_pos( size(old_instance%temp_pos,1), &
    518           &                          size(old_instance%temp_pos,2) ))
    519      new_instance%temp_pos = old_instance%temp_pos
    520      allocate(new_instance%rk4_k1( size(old_instance%rk4_k1,1), &
    521           &                        size(old_instance%rk4_k1,2) ))
    522      allocate(new_instance%rk4_k2( size(old_instance%rk4_k2,1), &
    523           &                        size(old_instance%rk4_k2,2) ))
    524      allocate(new_instance%rk4_k3( size(old_instance%rk4_k3,1), &
    525           &                        size(old_instance%rk4_k3,2) ))
    526      allocate(new_instance%rk4_k4( size(old_instance%rk4_k4,1), &
    527           &                        size(old_instance%rk4_k4,2) ))
    528      new_instance%rk4_k1 = old_instance%rk4_k1
    529      new_instance%rk4_k2 = old_instance%rk4_k2
    530      new_instance%rk4_k3 = old_instance%rk4_k3
    531      new_instance%rk4_k4 = old_instance%rk4_k4
    532 
    533      new_instance%rk4_step = old_instance%rk4_step
    534      new_instance%rk4_completed = old_instance%rk4_completed
    535      new_instance%nx = old_instance%nx
    536      new_instance%ny = old_instance%ny
    537 
    538      allocate(new_instance%remove(size(old_instance%remove)))
    539      new_instance%remove = old_instance%remove
    540 
    541 
    542   end subroutine drifters_copy_new

Page 15          Source Listing                  DRIFTERS_COPY_NEW
2021-06-01 08:54 Entry Points                    drifters.F90



ENTRY POINTS

  Name                                          
                                                
 drifters_mod_mp_drifters_copy_new_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 DRIFTERS_COPY_NEW          Subr   473                                           PRIV                                               
 DRIFTERS_CORE_COPY_NEW     Subr   486                                           PRIV             486                               
 DRIFTERS_DEL               Subr   483                                                            177,483                           
 DRIFTERS_INPUT_COPY_NEW    Subr   487                                           PRIV             487                               
 ERMESG                     Local  478      CHAR            128         scalar                    480,483,484                       
 MAX_STR_LEN                Param  478      I(4)            4           scalar   PRIV             181,246,247,478                   
 NEW_INSTANCE               Dummy  473      DRIFTERS_TYPE   2880        scalar   ARG,INOUT        483,486,487,488,489,491,492,494,49
                                                                                                  6,498,499,500,501,502,503,504,505,
                                                                                                  506,507,508,509,510,511,512,513,51
                                                                                                  4,515,517,519,520,522,524,526,528,
                                                                                                  529,530,531,533,534,535,536,538,53
                                                                                                  9                                 
 OLD_INSTANCE               Dummy  473      DRIFTERS_TYPE   2880        scalar   ARG,IN           486,487,488,489,491,492,494,495,49
                                                                                                  6,498,499,500,501,502,503,504,505,
                                                                                                  506,507,508,509,510,511,512,513,51
                                                                                                  4,515,517,518,519,520,521,522,523,
                                                                                                  524,525,526,527,528,529,530,531,53
                                                                                                  3,534,535,536,538,539             
 SIZE                       Func   494                                  scalar                    494,495,498,499,500,504,505,506,51
                                                                                                  0,511,512,517,518,520,521,522,523,
                                                                                                  524,525,526,527,538               

Page 16          Source Listing                  DRIFTERS_COPY_NEW
2021-06-01 08:54                                 drifters.F90

    543 
    544 !============================================================================
    545 ! <SUBROUTINE NAME="drifters_set_domain">
    546 !  <OVERVIEW>
    547 !   Set the compute, data, and global domain boundaries.
    548 !  </OVERVIEW>
    549 !  <DESCRIPTION>
    550 !   The data domain extends beyond the compute domain and is shared between
    551 !   two or more PE domains. A particle crossing the compute domain boundary
    552 !   will trigger a communication with one or more neighboring domains. A particle
    553 !   leaving the data domain will be removed from the list of particles.
    554 !  </DESCRIPTION>
    555 !  <TEMPLATE>
    556 !   call   drifters_set_domain(self, &
    557 !     & xmin_comp, xmax_comp, ymin_comp, ymax_comp, &
    558 !     & xmin_data, xmax_data, ymin_data, ymax_data, &
    559 !     & xmin_glob, xmax_glob, ymin_glob, ymax_glob, &
    560 !     & ermesg)
    561 !
    562 !  </TEMPLATE>
    563 !  <INOUT NAME="self" TYPE="drifters_type" DIM="SCALAR" UNITS="" DEFAULT="">
    564 !   Opaque data structure.
    565 !  </INOUT>
    566 !  <IN NAME="xmin_comp" TYPE="real" DIM="SCALAR" UNITS="" DEFAULT="">
    567 !   Min of longitude-like axis on compute domain.
    568 !  </IN>
    569 !  <IN NAME="xmax_comp" TYPE="real" DIM="SCALAR" UNITS="" DEFAULT="">
    570 !   Max of longitude-like axis on compute domain.
    571 !  </IN>
    572 !  <IN NAME="ymin_comp" TYPE="real" DIM="SCALAR" UNITS="" DEFAULT="">
    573 !   Min of latitude-like axis on compute domain.
    574 !  </IN>
    575 !  <IN NAME="ymax_comp" TYPE="real" DIM="SCALAR" UNITS="" DEFAULT="">
    576 !   Max of latitude-like axis on compute domain.
    577 !  </IN>
    578 !  <IN NAME="xmin_data" TYPE="real" DIM="SCALAR" UNITS="" DEFAULT="">
    579 !   Min of longitude-like axis on data domain.
    580 !  </IN>
    581 !  <IN NAME="xmax_data" TYPE="real" DIM="SCALAR" UNITS="" DEFAULT="">
    582 !   Max of longitude-like axis on data domain.
    583 !  </IN>
    584 !  <IN NAME="ymin_data" TYPE="real" DIM="SCALAR" UNITS="" DEFAULT="">
    585 !   Min of latitude-like axis on data domain.
    586 !  </IN>
    587 !  <IN NAME="ymax_data" TYPE="real" DIM="SCALAR" UNITS="" DEFAULT="">
    588 !   Max of latitude-like axis on data domain.
    589 !  </IN>
    590 !  <IN NAME="xmin_glob" TYPE="real" DIM="SCALAR" UNITS="" DEFAULT="">
    591 !   Min of longitude-like axis on global domain.
    592 !  </IN>
    593 !  <IN NAME="xmax_glob" TYPE="real" DIM="SCALAR" UNITS="" DEFAULT="">
    594 !   Max of longitude-like axis on global domain.
    595 !  </IN>
    596 !  <IN NAME="ymin_glob" TYPE="real" DIM="SCALAR" UNITS="" DEFAULT="">
    597 !   Min of latitude-like axis on global domain.
    598 !  </IN>
    599 !  <IN NAME="ymax_glob" TYPE="real" DIM="SCALAR" UNITS="" DEFAULT="">

Page 17          Source Listing                  DRIFTERS_COPY_NEW
2021-06-01 08:54                                 drifters.F90

    600 !   Max of latitude-like axis on global domain.
    601 !  </IN>
    602 !  <OUT NAME="ermesg" TYPE="character" DIM="SCALAR" UNITS="" DEFAULT="">
    603 !   Error message (if any).
    604 !  </OUT>
    605 ! </SUBROUTINE>
    606 !
    607 !> @brief Set the compute, data, and global domain boundaries.
    608 !! @details The data domain extends beyond the compute domain and is shared between
    609 !!   two or more PE domains. A particle crossing the compute domain boundary
    610 !!   will trigger a communication with one or more neighboring domains. A particle
    611 !!   leaving the data domain will be removed from the list of particles.
    612   subroutine drifters_set_domain(self, &
    613        & xmin_comp, xmax_comp, ymin_comp, ymax_comp, &
    614        & xmin_data, xmax_data, ymin_data, ymax_data, &
    615        & xmin_glob, xmax_glob, ymin_glob, ymax_glob, &
    616        & ermesg)
    617     type(drifters_type) :: self !< Opaque data structure.
    618 ! compute domain boundaries
    619     real, optional, intent(in) :: xmin_comp !< Min of longitude-like axis on compute domain.
    620     real, optional, intent(in) :: xmax_comp !< Max of longitude-like axis on compute domain.
    621     real, optional, intent(in) :: ymin_comp !< Min of latitude-like axis on compute domain.
    622     real, optional, intent(in) :: ymax_comp !< Max of latitude-like axis on compute domain.
    623 ! data domain boundaries
    624     real, optional, intent(in) :: xmin_data !< Min of longitude-like axis on data domain.
    625     real, optional, intent(in) :: xmax_data !< Max of longitude-like axis on data domain.
    626     real, optional, intent(in) :: ymin_data !< Min of latitude-like axis on data domain.
    627     real, optional, intent(in) :: ymax_data !< Max of latitude-like axis on data domain.
    628 ! global boundaries (only specify those if domain is periodic)
    629     real, optional, intent(in) :: xmin_glob !< Min of longitude-like axis on global domain.
    630     real, optional, intent(in) :: xmax_glob !< Max of longitude-like axis on global domain.
    631     real, optional, intent(in) :: ymin_glob !< Min of latitude-like axis on global domain.
    632     real, optional, intent(in) :: ymax_glob !< Max of latitude-like axis on global domain.
    633     character(len=*), intent(out) :: ermesg !< Error message (if any).
    634 
    635     ermesg = ''
    636     if(present(xmin_comp)) self%comm%xcmin = xmin_comp
    637     if(present(xmax_comp)) self%comm%xcmax = xmax_comp
    638     if(present(ymin_comp)) self%comm%ycmin = ymin_comp
    639     if(present(ymax_comp)) self%comm%ycmax = ymax_comp
    640 
    641     if(present(xmin_data)) self%comm%xdmin = xmin_data
    642     if(present(xmax_data)) self%comm%xdmax = xmax_data
    643     if(present(ymin_data)) self%comm%ydmin = ymin_data
    644     if(present(ymax_data)) self%comm%ydmax = ymax_data
    645 
    646     if(present(xmin_glob)) self%comm%xgmin = xmin_glob
    647     if(present(xmax_glob)) self%comm%xgmax = xmax_glob
    648     if(present(ymin_glob)) self%comm%ygmin = ymin_glob
    649     if(present(ymax_glob)) self%comm%ygmax = ymax_glob
    650 
    651 ! Note: the presence of both xgmin/xgmax will automatically set the
    652 ! periodicity flag
    653     if(present(xmin_glob) .and. present(xmax_glob)) self%comm%xperiodic = .TRUE.
    654     if(present(ymin_glob) .and. present(ymax_glob)) self%comm%yperiodic = .TRUE.
    655 
    656   end subroutine drifters_set_domain

Page 18          Source Listing                  DRIFTERS_SET_DOMAIN
2021-06-01 08:54 Entry Points                    drifters.F90



ENTRY POINTS

  Name                                            
                                                  
 drifters_mod_mp_drifters_set_domain_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 DRIFTERS_SET_DOMAIN        Subr   612                                                                                              
 ERMESG                     Dummy  616      CHAR                        scalar   ARG,OUT          635                               
 PRESENT                    Func   636                                  scalar                    636,637,638,639,641,642,643,644,64
                                                                                                  6,647,648,649,653,654             
 SELF                       Dummy  612      DRIFTERS_TYPE   2880        scalar   ARG,INOUT        636,637,638,639,641,642,643,644,64
                                                                                                  6,647,648,649,653,654             
 XMAX_COMP                  Dummy  613      R(8)            8           scalar   ARG,IN           637                               
 XMAX_DATA                  Dummy  614      R(8)            8           scalar   ARG,IN           642                               
 XMAX_GLOB                  Dummy  615      R(8)            8           scalar   ARG,IN           647,653                           
 XMIN_COMP                  Dummy  613      R(8)            8           scalar   ARG,IN           636                               
 XMIN_DATA                  Dummy  614      R(8)            8           scalar   ARG,IN           641                               
 XMIN_GLOB                  Dummy  615      R(8)            8           scalar   ARG,IN           646,653                           
 YMAX_COMP                  Dummy  613      R(8)            8           scalar   ARG,IN           639                               
 YMAX_DATA                  Dummy  614      R(8)            8           scalar   ARG,IN           644                               
 YMAX_GLOB                  Dummy  615      R(8)            8           scalar   ARG,IN           649,654                           
 YMIN_COMP                  Dummy  613      R(8)            8           scalar   ARG,IN           638                               
 YMIN_DATA                  Dummy  614      R(8)            8           scalar   ARG,IN           643                               
 YMIN_GLOB                  Dummy  615      R(8)            8           scalar   ARG,IN           648,654                           


TYPE COMPONENTS/COMMON VARIABLES

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 DRIFTERS_COMM_TYPE.XCMAX   R(8)            8     8              scalar                    637                                
 DRIFTERS_COMM_TYPE.XCMIN   R(8)            8     0              scalar                    636                                
 DRIFTERS_COMM_TYPE.XDMAX   R(8)            8     40             scalar                    642,1324                           
 DRIFTERS_COMM_TYPE.XDMIN   R(8)            8     32             scalar                    641,1324                           
 DRIFTERS_COMM_TYPE.XGMAX   R(8)            8     72             scalar                    647,1030,1516,1669                 
 DRIFTERS_COMM_TYPE.XGMIN   R(8)            8     64             scalar                    646,1029,1030,1516,1669            
 DRIFTERS_COMM_TYPE.XPERIODIC                                                                                              ...
                            L(4)            4     96             scalar                    653,1026,1514,1667                 
 DRIFTERS_COMM_TYPE.YCMAX   R(8)            8     24             scalar                    639                                
 DRIFTERS_COMM_TYPE.YCMIN   R(8)            8     16             scalar                    638                                
 DRIFTERS_COMM_TYPE.YDMAX   R(8)            8     56             scalar                    644,1325                           
 DRIFTERS_COMM_TYPE.YDMIN   R(8)            8     48             scalar                    643,1325                           
 DRIFTERS_COMM_TYPE.YGMAX   R(8)            8     88             scalar                    649,1038,1523,1676                 
 DRIFTERS_COMM_TYPE.YGMIN   R(8)            8     80             scalar                    648,1037,1038,1523,1676            
 DRIFTERS_COMM_TYPE.YPERIODIC                                                                                              ...
                            L(4)            4     100            scalar                    654,1034,1521,1674                 

Page 19          Source Listing                  DRIFTERS_SET_DOMAIN
2021-06-01 08:54                                 drifters.F90

    657 
    658 !============================================================================
    659 ! <SUBROUTINE NAME="drifters_set_pe_neighbors">
    660 !  <OVERVIEW>
    661 !   Given an MPP based deomposition, set the PE numbers that are adjacent to this
    662 !   processor.
    663 !  </OVERVIEW>
    664 !  <DESCRIPTION>
    665 !   This will allow several PEs to track the trajectories of particles in the
    666 !   buffer regions.
    667 !  </DESCRIPTION>
    668 !  <TEMPLATE>
    669 !   call   drifters_set_pe_neighbors(self, domain, ermesg)
    670 !
    671 !  </TEMPLATE>
    672 !  <INOUT NAME="self" TYPE="drifters_type" DIM="SCALAR" UNITS="" DEFAULT="">
    673 !   Opaque data structure.
    674 !  </INOUT>
    675 !  <INOUT NAME="domain" TYPE="" DIM="SCALAR" UNITS="" DEFAULT="">
    676 !   MPP domain.
    677 !  </INOUT>
    678 !  <OUT NAME="ermesg" TYPE="character" DIM="SCALAR" UNITS="" DEFAULT="">
    679 !   Error message (if any).
    680 !  </OUT>
    681 ! </SUBROUTINE>
    682 !
    683 !> @brief Given an MPP based deomposition, set the PE numbers that are adjacent to this
    684 !!   processor.
    685   subroutine drifters_set_pe_neighbors(self, domain, ermesg)
    686 
    687     type(drifters_type) :: self !< Opaque data structure.
    688     type(domain2d)      :: domain !< MPP domain.
    689     character(len=*), intent(out) :: ermesg !< Error message (if any).
    690 
    691     ermesg = ''
    692 
    693     call drifters_comm_set_pe_neighbors(self%comm, domain)
    694 
    695   end subroutine drifters_set_pe_neighbors

Page 20          Source Listing                  DRIFTERS_SET_PE_NEIGHBORS
2021-06-01 08:54 Entry Points                    drifters.F90



ENTRY POINTS

  Name                                                  
                                                        
 drifters_mod_mp_drifters_set_pe_neighbors_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 DOMAIN                     Dummy  685      DOMAIN2D        752         scalar   ARG,INOUT        693                               
 DOMAIN2D                   Type   688                                  scalar   PRIV             153,688,1941                      
 DRIFTERS_COMM_SET_PE_NEIGH                                                                                                         
 BORS                       Subr   693                                           PRIV             169,693                           
 DRIFTERS_SET_PE_NEIGHBORS  Subr   685                                                                                              
 ERMESG                     Dummy  685      CHAR                        scalar   ARG,OUT          691                               
 SELF                       Dummy  685      DRIFTERS_TYPE   2880        scalar   ARG,INOUT        693                               

Page 21          Source Listing                  DRIFTERS_SET_PE_NEIGHBORS
2021-06-01 08:54                                 drifters.F90

    696 
    697 !============================================================================
    698 
    699 
    700 # 1 "./drifters_push.h" 1 
    701 ! -*-f90-*-
    702 !***********************************************************************
    703 !*                   GNU Lesser General Public License
    704 !*
    705 !* This file is part of the GFDL Flexible Modeling System (FMS).
    706 !*
    707 !* FMS is free software: you can redistribute it and/or modify it under
    708 !* the terms of the GNU Lesser General Public License as published by
    709 !* the Free Software Foundation, either version 3 of the License, or (at
    710 !* your option) any later version.
    711 !*
    712 !* FMS is distributed in the hope that it will be useful, but WITHOUT
    713 !* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
    714 !* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
    715 !* for more details.
    716 !*
    717 !* You should have received a copy of the GNU Lesser General Public
    718 !* License along with FMS.  If not, see <http://www.gnu.org/licenses/>.
    719 !***********************************************************************
    720 !============================================================================
    721 subroutine drifters_push_2(self, u, v, &
    722 # 24
    723 
    724   & ermesg)
    725 
    726   type(drifters_type) :: self
    727 
    728   real, intent(in)    :: u(:,:)
    729   real, intent(in)    :: v(:,:)
    730 
    731 # 36
    732 
    733   character(len=*), intent(out) :: ermesg
    734 
    735   integer i, np, nf, max_add_remove
    736 
    737   ermesg = ''
    738   np = self%core%np
    739   nf = size(self%input%field_names)
    740 
    741   if(self%core%nd /= 2) then
    742      ermesg = 'drifters_push: wrong number of dimensions'
    743      return
    744   endif
    745 
    746   select case(self%rk4_step)
    747 
    748   case (0)
    749 
    750 ! only invoked at the first step
    751 
    752      call drifters_reset_rk4(self, ermesg=ermesg)

Page 22          Source Listing                  DRIFTERS_PUSH_2
2021-06-01 08:54                                 ./drifters_push.h

    753 
    754 
    755      call drifters_compute_k(self, self%core%positions, &
    756           & u=u, v=v, &
    757 # 63
    758 
    759           & k=self%rk4_k1, ermesg=ermesg)
    760 
    761      self%temp_pos(:,1:np) = self%core%positions(:,1:np) + 0.5*self%rk4_k1(:,1:np)
    762 
    763      self%rk4_step = 1
    764      self%rk4_completed = .FALSE.
    765 
    766   case (1)
    767 
    768      call drifters_compute_k(self, self%temp_pos, &
    769           & u=u, v=v, &
    770 # 77
    771 
    772           & k=self%rk4_k2, ermesg=ermesg)
    773 
    774      self%temp_pos(:,1:np) = self%core%positions(:,1:np) + 0.5*self%rk4_k2(:,1:np)
    775 
    776      call drifters_compute_k(self, self%temp_pos, &
    777           & u=u, v=v, &
    778 # 86
    779 
    780           & k=self%rk4_k3, ermesg=ermesg)
    781 
    782      self%temp_pos(:,1:np) = self%core%positions(:,1:np) +     self%rk4_k3(:,1:np)
    783 
    784      self%rk4_step = 2
    785      self%rk4_completed = .FALSE.
    786 
    787   case (2)
    788 
    789      call drifters_compute_k(self, self%temp_pos, &
    790           & u=u, v=v, &
    791 # 100
    792 
    793           & k=self%rk4_k4, ermesg=ermesg)
    794 
    795 ! This completes the RK4 steps
    796      do i = 1, np
    797         self%temp_pos(:,i) = self%core%positions(:,i) + &
    798              & (self%rk4_k1(:,i) + 2*self%rk4_k2(:,i) + 2*self%rk4_k3(:,i) + self%rk4_k4(:,i))/6.
    799      enddo
    800 
    801 ! correct for periodic domain, if necessary
    802      call drifters_modulo(self, self%temp_pos, ermesg=ermesg)
    803 
    804 ! estimate of max number of particles to add/remove
    805 ! this may need to be adjusted over time...
    806 ! [mpp_npes() is a macro for mpp_npes()]
    807      if(self%comm%pe_end < 0) self%comm%pe_end = mpp_npes() - 1
    808      max_add_remove = &
    809       &  max(  10, &

Page 23          Source Listing                  DRIFTERS_PUSH_2
2021-06-01 08:54                                 ./drifters_push.h

    810       &  int(0.2*self%core%npdim/ &
    811       &     (self%comm%pe_end-self%comm%pe_beg+1)), &
    812       &  int(np * 2*(self%nx+self%ny)/real(self%nx*self%ny)) &
    813       &  )
    814 
    815 ! copy/move drifters across domain boundaries, if necessary
    816      call drifters_comm_update(self%comm, self%core, self%temp_pos(:,1:np), &
    817           & remove=self%remove(1:np), max_add_remove=max_add_remove)
    818      np = self%core%np
    819 
    820 ! update time
    821      self%time = self%time + self%dt
    822 
    823      if(self%core%npdim < self%core%np) self%core%npdim = int(1.2 * self%core%np)
    824 
    825 ! resize local arrays if necessary
    826      call drifters_reset_rk4(self, ermesg=ermesg)
    827 
    828      self%remove = .FALSE. ! by definition no drifters outside data domain
    829 
    830 ! prepare for next step...
    831      call drifters_compute_k(self, self%core%positions, &
    832           & u=u, v=v, &
    833 # 143
    834 
    835           & k=self%rk4_k1, ermesg=ermesg)
    836 
    837      self%temp_pos(:, 1:np) = self%core%positions(:, 1:np) + 0.5*self%rk4_k1(:, 1:np)
    838 
    839      self%rk4_step = 1
    840      self%rk4_completed = .TRUE.
    841 
    842   case default
    843      ermesg = 'drifters_push: invalid rk4_step'
    844 
    845   end select
    846 
    847 end subroutine drifters_push_2

Page 24          Source Listing                  DRIFTERS_PUSH_2
2021-06-01 08:54 Entry Points                    ./drifters_push.h



ENTRY POINTS

  Name                                        
                                              
 drifters_mod_mp_drifters_push_2_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 DRIFTERS_COMM_UPDATE       Subr   816                                           PRIV             170,816,977                       
 DRIFTERS_COMPUTE_K         Local  755                                  scalar                    176,755,768,776,789,831,912,926,93
                                                                                                  5,949,992                         
 DRIFTERS_PUSH_2            Subr   721                                           PRIV                                               
 ERMESG                     Dummy  724      CHAR                        scalar   ARG,OUT          737,742,752,759,772,780,793,802,82
                                                                                                  6,835,843                         
 I                          Local  735      I(4)            4           scalar                    796,797,798                       
 INT                        Func   810                                  scalar                    810,812,823                       
 MAX                        Func   809                                  scalar                    809                               
 MAX_ADD_REMOVE             Local  735      I(4)            4           scalar                    808,817                           
 MPP_NPES                   Func   807      I(4)            4           scalar   PRIV             152,807,968                       
 NF                         Local  735      I(4)            4           scalar                    739                               
 NP                         Local  735      I(4)            4           scalar                    738,761,774,782,796,812,816,817,81
                                                                                                  8,837                             
 REAL                       Func   812                                  scalar                    812                               
 SELF                       Dummy  721      DRIFTERS_TYPE   2880        scalar   ARG,INOUT        738,739,741,746,752,755,759,761,76
                                                                                                  3,764,768,772,774,776,780,782,784,
                                                                                                  785,789,793,797,798,802,807,810,81
                                                                                                  1,812,816,817,818,821,823,826,828,
                                                                                                  831,835,837,839,840               
 SIZE                       Func   739                                  scalar                    739                               
 U                          Dummy  721      R(8)            8     2     1        ARG,IN           756,769,777,790,832               
 V                          Dummy  721      R(8)            8     2     1        ARG,IN           756,769,777,790,832               


TYPE COMPONENTS/COMMON VARIABLES

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 DRIFTERS_COMM_TYPE.PE_BEG  I(4)            4     136            scalar                    811,972                            
 DRIFTERS_COMM_TYPE.PE_END  I(4)            4     140            scalar                    807,811,968,972                    
 DRIFTERS_CORE_TYPE.NP      I(4)            4     12             scalar                    738,818,823,895,979,984,1024,1105, 
                                                                                           1113,1206,1214,1274,1327,1328,1329 
                                                                                           ,1419,1498,1511,1646,1664,1683,215 
                                                                                           6,2184,2189,2194,2199,2205,2211    
 DRIFTERS_CORE_TYPE.POSITIONS                                                                                              ...
                            R(8)            8     96       2     1        ALC              755,761,774,782,797,831,837,912,91 
                                                                                           9,933,942,958,992,999,1114,1118,11 
                                                                                           20,1124,1215,1219,1221,1225,1228,1 
                                                                                           232,1278,1328,1437,2157            

Page 25          Source Listing                  DRIFTERS_PUSH_2
2021-06-01 08:54                                 ./drifters_push.h

    848 # 658 "drifters.F90" 2 
    849 
    850 
    851 
    852 !============================================================================
    853 
    854 
    855 # 1 "./drifters_push.h" 1 
    856 ! -*-f90-*-
    857 !***********************************************************************
    858 !*                   GNU Lesser General Public License
    859 !*
    860 !* This file is part of the GFDL Flexible Modeling System (FMS).
    861 !*
    862 !* FMS is free software: you can redistribute it and/or modify it under
    863 !* the terms of the GNU Lesser General Public License as published by
    864 !* the Free Software Foundation, either version 3 of the License, or (at
    865 !* your option) any later version.
    866 !*
    867 !* FMS is distributed in the hope that it will be useful, but WITHOUT
    868 !* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
    869 !* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
    870 !* for more details.
    871 !*
    872 !* You should have received a copy of the GNU Lesser General Public
    873 !* License along with FMS.  If not, see <http://www.gnu.org/licenses/>.
    874 !***********************************************************************
    875 !============================================================================
    876 subroutine drifters_push_3(self, u, v, &
    877 
    878   & w, &
    879 
    880   & ermesg)
    881 
    882   type(drifters_type) :: self
    883 # 31
    884 
    885 
    886   real, intent(in)    :: u(:,:,:)
    887   real, intent(in)    :: v(:,:,:)
    888   real, intent(in)    :: w(:,:,:)
    889 
    890   character(len=*), intent(out) :: ermesg
    891 
    892   integer i, np, nf, max_add_remove
    893 
    894   ermesg = ''
    895   np = self%core%np
    896   nf = size(self%input%field_names)
    897 
    898   if(self%core%nd /= 3) then
    899      ermesg = 'drifters_push: wrong number of dimensions'
    900      return
    901   endif
    902 
    903   select case(self%rk4_step)
    904 

Page 26          Source Listing                  DRIFTERS_PUSH_3
2021-06-01 08:54                                 ./drifters_push.h

    905   case (0)
    906 
    907 ! only invoked at the first step
    908 
    909      call drifters_reset_rk4(self, ermesg=ermesg)
    910 
    911 
    912      call drifters_compute_k(self, self%core%positions, &
    913           & u=u, v=v, &
    914 
    915           & w=w, &
    916 
    917           & k=self%rk4_k1, ermesg=ermesg)
    918 
    919      self%temp_pos(:,1:np) = self%core%positions(:,1:np) + 0.5*self%rk4_k1(:,1:np)
    920 
    921      self%rk4_step = 1
    922      self%rk4_completed = .FALSE.
    923 
    924   case (1)
    925 
    926      call drifters_compute_k(self, self%temp_pos, &
    927           & u=u, v=v, &
    928 
    929           & w=w, &
    930 
    931           & k=self%rk4_k2, ermesg=ermesg)
    932 
    933      self%temp_pos(:,1:np) = self%core%positions(:,1:np) + 0.5*self%rk4_k2(:,1:np)
    934 
    935      call drifters_compute_k(self, self%temp_pos, &
    936           & u=u, v=v, &
    937 
    938           & w=w, &
    939 
    940           & k=self%rk4_k3, ermesg=ermesg)
    941 
    942      self%temp_pos(:,1:np) = self%core%positions(:,1:np) +     self%rk4_k3(:,1:np)
    943 
    944      self%rk4_step = 2
    945      self%rk4_completed = .FALSE.
    946 
    947   case (2)
    948 
    949      call drifters_compute_k(self, self%temp_pos, &
    950           & u=u, v=v, &
    951 
    952           & w=w, &
    953 
    954           & k=self%rk4_k4, ermesg=ermesg)
    955 
    956 ! This completes the RK4 steps
    957      do i = 1, np
    958         self%temp_pos(:,i) = self%core%positions(:,i) + &
    959              & (self%rk4_k1(:,i) + 2*self%rk4_k2(:,i) + 2*self%rk4_k3(:,i) + self%rk4_k4(:,i))/6.
    960      enddo
    961 

Page 27          Source Listing                  DRIFTERS_PUSH_3
2021-06-01 08:54                                 ./drifters_push.h

    962 ! correct for periodic domain, if necessary
    963      call drifters_modulo(self, self%temp_pos, ermesg=ermesg)
    964 
    965 ! estimate of max number of particles to add/remove
    966 ! this may need to be adjusted over time...
    967 ! [mpp_npes() is a macro for mpp_npes()]
    968      if(self%comm%pe_end < 0) self%comm%pe_end = mpp_npes() - 1
    969      max_add_remove = &
    970       &  max(  10, &
    971       &  int(0.2*self%core%npdim/ &
    972       &     (self%comm%pe_end-self%comm%pe_beg+1)), &
    973       &  int(np * 2*(self%nx+self%ny)/real(self%nx*self%ny)) &
    974       &  )
    975 
    976 ! copy/move drifters across domain boundaries, if necessary
    977      call drifters_comm_update(self%comm, self%core, self%temp_pos(:,1:np), &
    978           & remove=self%remove(1:np), max_add_remove=max_add_remove)
    979      np = self%core%np
    980 
    981 ! update time
    982      self%time = self%time + self%dt
    983 
    984      if(self%core%npdim < self%core%np) self%core%npdim = int(1.2 * self%core%np)
    985 
    986 ! resize local arrays if necessary
    987      call drifters_reset_rk4(self, ermesg=ermesg)
    988 
    989      self%remove = .FALSE. ! by definition no drifters outside data domain
    990 
    991 ! prepare for next step...
    992      call drifters_compute_k(self, self%core%positions, &
    993           & u=u, v=v, &
    994 
    995           & w=w, &
    996 
    997           & k=self%rk4_k1, ermesg=ermesg)
    998 
    999      self%temp_pos(:, 1:np) = self%core%positions(:, 1:np) + 0.5*self%rk4_k1(:, 1:np)
   1000 
   1001      self%rk4_step = 1
   1002      self%rk4_completed = .TRUE.
   1003 
   1004   case default
   1005      ermesg = 'drifters_push: invalid rk4_step'
   1006 
   1007   end select
   1008 
   1009 end subroutine drifters_push_3

Page 28          Source Listing                  DRIFTERS_PUSH_3
2021-06-01 08:54 Entry Points                    ./drifters_push.h



ENTRY POINTS

  Name                                        
                                              
 drifters_mod_mp_drifters_push_3_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 DRIFTERS_PUSH_3            Subr   876                                           PRIV                                               
 ERMESG                     Dummy  880      CHAR                        scalar   ARG,OUT          894,899,909,917,931,940,954,963,98
                                                                                                  7,997,1005                        
 I                          Local  892      I(4)            4           scalar                    957,958,959                       
 INT                        Func   971                                  scalar                    971,973,984                       
 MAX                        Func   970                                  scalar                    970                               
 MAX_ADD_REMOVE             Local  892      I(4)            4           scalar                    969,978                           
 NF                         Local  892      I(4)            4           scalar                    896                               
 NP                         Local  892      I(4)            4           scalar                    895,919,933,942,957,973,977,978,97
                                                                                                  9,999                             
 REAL                       Func   973                                  scalar                    973                               
 SELF                       Dummy  876      DRIFTERS_TYPE   2880        scalar   ARG,INOUT        895,896,898,903,909,912,917,919,92
                                                                                                  1,922,926,931,933,935,940,942,944,
                                                                                                  945,949,954,958,959,963,968,971,97
                                                                                                  2,973,977,978,979,982,984,987,989,
                                                                                                  992,997,999,1001,1002             
 SIZE                       Func   896                                  scalar                    896                               
 U                          Dummy  876      R(8)            8     3     1        ARG,IN           913,927,936,950,993               
 V                          Dummy  876      R(8)            8     3     1        ARG,IN           913,927,936,950,993               
 W                          Dummy  878      R(8)            8     3     1        ARG,IN           915,929,938,952,995               

Page 29          Source Listing                  DRIFTERS_PUSH_3
2021-06-01 08:54                                 ./drifters_push.h

   1010 # 665 "drifters.F90" 2 
   1011 
   1012 
   1013 
   1014 !============================================================================
   1015   subroutine drifters_modulo(self, positions, ermesg)
   1016     type(drifters_type) :: self
   1017     real, intent(inout) :: positions(:,:)
   1018     character(len=*), intent(out) :: ermesg
   1019 
   1020     integer ip, np
   1021     real x, y
   1022 
   1023     ermesg = ''
   1024     np = self%core%np
   1025 
   1026     if(self%comm%xperiodic) then
   1027        do ip = 1, np
   1028           x = positions(1, ip)
   1029           positions(1, ip) = self%comm%xgmin + &
   1030                & modulo(x - self%comm%xgmin, self%comm%xgmax-self%comm%xgmin)
   1031        enddo
   1032     endif
   1033 
   1034     if(self%comm%yperiodic) then
   1035        do ip = 1, np
   1036           y = positions(2, ip)
   1037           positions(2, ip) = self%comm%ygmin + &
   1038                & modulo(y - self%comm%ygmin, self%comm%ygmax-self%comm%ygmin)
   1039        enddo
   1040     endif
   1041 
   1042   end subroutine drifters_modulo

Page 30          Source Listing                  DRIFTERS_MODULO
2021-06-01 08:54 Entry Points                    drifters.F90



ENTRY POINTS

  Name                                        
                                              
 drifters_mod_mp_drifters_modulo_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 DRIFTERS_MODULO            Subr   1015                                                           802,963                           
 ERMESG                     Dummy  1015     CHAR                        scalar   ARG,OUT          1023                              
 IP                         Local  1020     I(4)            4           scalar                    1027,1028,1029,1035,1036,1037     
 MODULO                     Func   1030                                 scalar                    1030,1038                         
 NP                         Local  1020     I(4)            4           scalar                    1024,1027,1035                    
 POSITIONS                  Dummy  1015     R(8)            8     2     1        ARG,INOUT        1028,1029,1036,1037               
 SELF                       Dummy  1015     DRIFTERS_TYPE   2880        scalar   ARG,INOUT        1024,1026,1029,1030,1034,1037,1038
 X                          Local  1021     R(8)            8           scalar                    1028,1030                         
 Y                          Local  1021     R(8)            8           scalar                    1036,1038                         

Page 31          Source Listing                  DRIFTERS_MODULO
2021-06-01 08:54                                 drifters.F90

   1043 
   1044 !============================================================================
   1045 
   1046 
   1047 # 1 "./drifters_set_field.h" 1 
   1048 ! -*-f90-*-
   1049 !***********************************************************************
   1050 !*                   GNU Lesser General Public License
   1051 !*
   1052 !* This file is part of the GFDL Flexible Modeling System (FMS).
   1053 !*
   1054 !* FMS is free software: you can redistribute it and/or modify it under
   1055 !* the terms of the GNU Lesser General Public License as published by
   1056 !* the Free Software Foundation, either version 3 of the License, or (at
   1057 !* your option) any later version.
   1058 !*
   1059 !* FMS is distributed in the hope that it will be useful, but WITHOUT
   1060 !* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
   1061 !* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
   1062 !* for more details.
   1063 !*
   1064 !* You should have received a copy of the GNU Lesser General Public
   1065 !* License along with FMS.  If not, see <http://www.gnu.org/licenses/>.
   1066 !***********************************************************************
   1067 
   1068 subroutine drifters_set_field_2d(self, index_field, x, y, &
   1069 # 24
   1070 
   1071      & data, ermesg)
   1072   use cloud_interpolator_mod
   1073   type(drifters_type) :: self
   1074 ! field index must be consistent with field_names from input file
   1075   integer, intent(in) :: index_field
   1076   real, intent(in)    :: x(:)
   1077   real, intent(in)    :: y(:)
   1078 
   1079   real, intent(in)    :: data(:,:)
   1080 
   1081 # 38
   1082 
   1083   character(len=*), intent(out) :: ermesg
   1084 
   1085   integer i, j, ip, ier, ij(self%core%nd), nsizes(self%core%nd), nf
   1086   real fvals(2**self%core%nd), ts(self%core%nd)
   1087 
   1088   ermesg = ''
   1089 ! only interpolate field if RK step is complete
   1090   if(self%rk4_step > 1) return
   1091 
   1092 ! interpolate onto new positions
   1093   nsizes(1) = size(x)
   1094   nsizes(2) = size(y)
   1095 # 53
   1096 
   1097 
   1098   if(nsizes(1) /= size(data, 1) .or. nsizes(2) /= size(data, 2)) then
   1099      ermesg = 'drifters_set_field_XXX: ERROR size mismatch between data and x or y'

Page 32          Source Listing                  DRIFTERS_SET_FIELD_2D
2021-06-01 08:54                                 ./drifters_set_field.h

   1100      return
   1101   end if
   1102 # 64
   1103 
   1104 
   1105   if(size(self%fields, 2) < self%core%np) then
   1106 ! resize
   1107      deallocate(self%fields, stat=ier)
   1108      nf = size(self%input%field_names)
   1109      allocate(self%fields(nf, self%core%npdim))
   1110      self%fields = -huge(1.)
   1111   endif
   1112 
   1113   do ip = 1, self%core%np
   1114      call cld_ntrp_locate_cell(x, self%core%positions(1,ip), i, ier)
   1115      ij(1) = i
   1116 # 81
   1117 
   1118      ts(1) = (self%core%positions(1,ip) - x(i))/(x(i+1) - x(i))
   1119 
   1120      call cld_ntrp_locate_cell(y, self%core%positions(2,ip), j, ier)
   1121      ij(2) = j
   1122 # 90
   1123 
   1124      ts(2) = (self%core%positions(2,ip) - y(j))/(y(j+1) - y(j))
   1125 
   1126 # 102
   1127 
   1128 
   1129      call cld_ntrp_get_cell_values(nsizes, reshape((data), (/size((data))/) ), ij, fvals, ier)
   1130      call cld_ntrp_linear_cell_interp(fvals, ts, self%fields(index_field, ip), ier)
   1131   enddo
   1132 
   1133 end subroutine drifters_set_field_2d

Page 33          Source Listing                  DRIFTERS_SET_FIELD_2D
2021-06-01 08:54 Entry Points                    ./drifters_set_field.h



ENTRY POINTS

  Name                                              
                                                    
 drifters_mod_mp_drifters_set_field_2d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 CLD_NTRP_GET_CELL_VALUES   Subr   1129                                          PRIV             172,1129,1235,1558,1582,1719,1750,
                                                                                                  1781,2080,2093                    
 CLD_NTRP_LINEAR_CELL_INTER                                                                                                         
 P                          Subr   1130                                          PRIV             172,1130,1236,1559,1583,1720,1751,
                                                                                                  1782,2084,2097                    
 CLD_NTRP_LOCATE_CELL       Subr   1114                                          PRIV             172,1114,1120,1215,1221,1228,1539,
                                                                                                  1547,1563,1571,1693,1701,1710,1724
                                                                                                  ,1732,1741,1757,1765,1773,2075,207
                                                                                                  7,2088,2090                       
 CLOUD_INTERPOLATOR_MOD     Module 1072                                                           1072                              
 DATA                       Dummy  1071     R(8)            8     2     1        ARG,IN           1098,1129                         
 DRIFTERS_SET_FIELD_2D      Subr   1068                                          PRIV                                               
 ERMESG                     Dummy  1071     CHAR                        scalar   ARG,OUT          1088,1099                         
 FVALS                      Local  1086     R(8)            8     1     0        TGT              1129,1130                         
 HUGE                       Func   1110                                 scalar                    1110                              
 I                          Local  1085     I(4)            4           scalar                    1114,1115,1118                    
 IER                        Local  1085     I(4)            4           scalar                    1107,1114,1120,1129,1130          
 IJ                         Local  1085     I(4)            4     1     0        TGT              1115,1121,1129                    
 INDEX_FIELD                Dummy  1068     I(4)            4           scalar   ARG,IN           1130                              
 IP                         Local  1085     I(4)            4           scalar                    1113,1114,1118,1120,1124,1130     
 J                          Local  1085     I(4)            4           scalar                    1120,1121,1124                    
 NF                         Local  1085     I(4)            4           scalar                    1108,1109                         
 NSIZES                     Local  1085     I(4)            4     1     0        TGT              1093,1094,1098,1129               
 RESHAPE                    Func   1129                                 scalar                    1129                              
 SELF                       Dummy  1068     DRIFTERS_TYPE   2880        scalar   ARG,INOUT        1085,1086,1090,1105,1107,1108,1109
                                                                                                  ,1110,1113,1114,1118,1120,1124,113
                                                                                                  0                                 
 SIZE                       Func   1093                                 scalar                    1093,1094,1098,1105,1108,1129     
 TS                         Local  1086     R(8)            8     1     0        TGT              1118,1124,1130                    
 X                          Dummy  1068     R(8)            8     1     1        ARG,IN           1093,1114,1118                    
 Y                          Dummy  1068     R(8)            8     1     1        ARG,IN           1094,1120,1124                    

Page 34          Source Listing                  DRIFTERS_SET_FIELD_2D
2021-06-01 08:54                                 ./drifters_set_field.h

   1134 # 702 "drifters.F90" 2 
   1135 
   1136 
   1137 
   1138 !============================================================================
   1139 
   1140 
   1141 # 1 "./drifters_set_field.h" 1 
   1142 ! -*-f90-*-
   1143 !***********************************************************************
   1144 !*                   GNU Lesser General Public License
   1145 !*
   1146 !* This file is part of the GFDL Flexible Modeling System (FMS).
   1147 !*
   1148 !* FMS is free software: you can redistribute it and/or modify it under
   1149 !* the terms of the GNU Lesser General Public License as published by
   1150 !* the Free Software Foundation, either version 3 of the License, or (at
   1151 !* your option) any later version.
   1152 !*
   1153 !* FMS is distributed in the hope that it will be useful, but WITHOUT
   1154 !* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
   1155 !* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
   1156 !* for more details.
   1157 !*
   1158 !* You should have received a copy of the GNU Lesser General Public
   1159 !* License along with FMS.  If not, see <http://www.gnu.org/licenses/>.
   1160 !***********************************************************************
   1161 
   1162 subroutine drifters_set_field_3d(self, index_field, x, y, &
   1163 
   1164      & z, &
   1165 
   1166      & data, ermesg)
   1167   use cloud_interpolator_mod
   1168   type(drifters_type) :: self
   1169 ! field index must be consistent with field_names from input file
   1170   integer, intent(in) :: index_field
   1171   real, intent(in)    :: x(:)
   1172   real, intent(in)    :: y(:)
   1173 # 34
   1174 
   1175 
   1176   real, intent(in)    :: z(:)
   1177   real, intent(in)    :: data(:,:,:)
   1178 
   1179   character(len=*), intent(out) :: ermesg
   1180 
   1181   integer i, j, ip, ier, ij(self%core%nd), nsizes(self%core%nd), nf
   1182   real fvals(2**self%core%nd), ts(self%core%nd)
   1183 
   1184   ermesg = ''
   1185 ! only interpolate field if RK step is complete
   1186   if(self%rk4_step > 1) return
   1187 
   1188 ! interpolate onto new positions
   1189   nsizes(1) = size(x)
   1190   nsizes(2) = size(y)

Page 35          Source Listing                  DRIFTERS_SET_FIELD_3D
2021-06-01 08:54                                 ./drifters_set_field.h

   1191 
   1192   nsizes(3) = size(z)
   1193 
   1194 
   1195   if(nsizes(1) /= size(data, 1) .or. nsizes(2) /= size(data, 2)) then
   1196      ermesg = 'drifters_set_field_XXX: ERROR size mismatch between data and x or y'
   1197      return
   1198   end if
   1199 
   1200   if(nsizes(3) /= size(data, 3)) then
   1201      ermesg = 'drifters_set_field_XXX: ERROR size mismatch between data and z'
   1202      return
   1203   endif
   1204 
   1205 
   1206   if(size(self%fields, 2) < self%core%np) then
   1207 ! resize
   1208      deallocate(self%fields, stat=ier)
   1209      nf = size(self%input%field_names)
   1210      allocate(self%fields(nf, self%core%npdim))
   1211      self%fields = -huge(1.)
   1212   endif
   1213 
   1214   do ip = 1, self%core%np
   1215      call cld_ntrp_locate_cell(x, self%core%positions(1,ip), i, ier)
   1216      ij(1) = i
   1217 # 81
   1218 
   1219      ts(1) = (self%core%positions(1,ip) - x(i))/(x(i+1) - x(i))
   1220 
   1221      call cld_ntrp_locate_cell(y, self%core%positions(2,ip), j, ier)
   1222      ij(2) = j
   1223 # 90
   1224 
   1225      ts(2) = (self%core%positions(2,ip) - y(j))/(y(j+1) - y(j))
   1226 
   1227 
   1228      call cld_ntrp_locate_cell(z, self%core%positions(3,ip), j, ier)
   1229      ij(3) = j
   1230 # 100
   1231 
   1232      ts(3) = (self%core%positions(3,ip) - z(j))/(z(j+1) - z(j))
   1233 
   1234 
   1235      call cld_ntrp_get_cell_values(nsizes, reshape((data), (/size((data))/) ), ij, fvals, ier)
   1236      call cld_ntrp_linear_cell_interp(fvals, ts, self%fields(index_field, ip), ier)
   1237   enddo
   1238 
   1239 end subroutine drifters_set_field_3d

Page 36          Source Listing                  DRIFTERS_SET_FIELD_3D
2021-06-01 08:54 Entry Points                    ./drifters_set_field.h



ENTRY POINTS

  Name                                              
                                                    
 drifters_mod_mp_drifters_set_field_3d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 CLOUD_INTERPOLATOR_MOD     Module 1167                                                           1167                              
 DATA                       Dummy  1166     R(8)            8     3     1        ARG,IN           1195,1200,1235                    
 DRIFTERS_SET_FIELD_3D      Subr   1162                                          PRIV                                               
 ERMESG                     Dummy  1166     CHAR                        scalar   ARG,OUT          1184,1196,1201                    
 FVALS                      Local  1182     R(8)            8     1     0        TGT              1235,1236                         
 HUGE                       Func   1211                                 scalar                    1211                              
 I                          Local  1181     I(4)            4           scalar                    1215,1216,1219                    
 IER                        Local  1181     I(4)            4           scalar                    1208,1215,1221,1228,1235,1236     
 IJ                         Local  1181     I(4)            4     1     0        TGT              1216,1222,1229,1235               
 INDEX_FIELD                Dummy  1162     I(4)            4           scalar   ARG,IN           1236                              
 IP                         Local  1181     I(4)            4           scalar                    1214,1215,1219,1221,1225,1228,1232
                                                                                                  ,1236                             
 J                          Local  1181     I(4)            4           scalar                    1221,1222,1225,1228,1229,1232     
 NF                         Local  1181     I(4)            4           scalar                    1209,1210                         
 NSIZES                     Local  1181     I(4)            4     1     0        TGT              1189,1190,1192,1195,1200,1235     
 RESHAPE                    Func   1235                                 scalar                    1235                              
 SELF                       Dummy  1162     DRIFTERS_TYPE   2880        scalar   ARG,INOUT        1181,1182,1186,1206,1208,1209,1210
                                                                                                  ,1211,1214,1215,1219,1221,1225,122
                                                                                                  8,1232,1236                       
 SIZE                       Func   1189                                 scalar                    1189,1190,1192,1195,1200,1206,1209
                                                                                                  ,1235                             
 TS                         Local  1182     R(8)            8     1     0        TGT              1219,1225,1232,1236               
 X                          Dummy  1162     R(8)            8     1     1        ARG,IN           1189,1215,1219                    
 Y                          Dummy  1162     R(8)            8     1     1        ARG,IN           1190,1221,1225                    
 Z                          Dummy  1164     R(8)            8     1     1        ARG,IN           1192,1228,1232                    

Page 37          Source Listing                  DRIFTERS_SET_FIELD_3D
2021-06-01 08:54                                 ./drifters_set_field.h

   1240 # 709 "drifters.F90" 2 
   1241 
   1242 
   1243 !============================================================================
   1244 ! <SUBROUTINE NAME="drifters_save">
   1245 !  <OVERVIEW>
   1246 !   Append new positions to NetCDF file.
   1247 !  </OVERVIEW>
   1248 !  <DESCRIPTION>
   1249 !   Use this method to append the new trajectory positions and the interpolated
   1250 !   probe fields to a netCDF file.
   1251 !  </DESCRIPTION>
   1252 !  <TEMPLATE>
   1253 !   call   drifters_save(self, ermesg)
   1254 !
   1255 !  </TEMPLATE>
   1256 !  <INOUT NAME="self" TYPE="drifters_type" DIM="SCALAR" UNITS="" DEFAULT="">
   1257 !   Opaque daata structure.
   1258 !  </INOUT>
   1259 !  <OUT NAME="ermesg" TYPE="character" DIM="SCALAR" UNITS="" DEFAULT="">
   1260 !   Error message (if any).
   1261 !  </OUT>
   1262 ! </SUBROUTINE>
   1263 !
   1264 !> @brief Use this method to append the new trajectory positions and the interpolated
   1265 !!   probe fields to a netCDF file.
   1266   subroutine drifters_save(self, ermesg)
   1267     type(drifters_type) :: self !< Opaque daata structure.
   1268     character(len=*), intent(out) :: ermesg !< Error message (if any).
   1269 
   1270     integer nf, np
   1271 
   1272     ermesg = ''
   1273     nf = size(self%input%field_names)
   1274     np = self%core%np
   1275 
   1276 ! save to disk
   1277     call drifters_io_write(self%io, self%time, np, self%core%nd, nf, &
   1278          & self%core%ids, self%core%positions, &
   1279          & fields=self%fields(:,1:np), ermesg=ermesg)
   1280 
   1281   end subroutine drifters_save

Page 38          Source Listing                  DRIFTERS_SAVE
2021-06-01 08:54 Entry Points                    drifters.F90



ENTRY POINTS

  Name                                      
                                            
 drifters_mod_mp_drifters_save_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 DRIFTERS_IO_WRITE          Subr   1277                                          PRIV             167,1277                          
 DRIFTERS_SAVE              Subr   1266                                                                                             
 ERMESG                     Dummy  1266     CHAR                        scalar   ARG,OUT          1272,1279                         
 NF                         Local  1270     I(4)            4           scalar                    1273,1277                         
 NP                         Local  1270     I(4)            4           scalar                    1274,1277,1279                    
 SELF                       Dummy  1266     DRIFTERS_TYPE   2880        scalar   ARG,INOUT        1273,1274,1277,1278,1279          
 SIZE                       Func   1273                                 scalar                    1273                              


TYPE COMPONENTS/COMMON VARIABLES

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 DRIFTERS_CORE_TYPE.IDS     I(4)            4     24       1     1        ALC              1278,1329                          

Page 39          Source Listing                  DRIFTERS_SAVE
2021-06-01 08:54                                 drifters.F90

   1282 !============================================================================
   1283 ! <SUBROUTINE NAME="drifters_distribute">
   1284 !  <OVERVIEW>
   1285 !   Distribute particles across PEs.
   1286 !  </OVERVIEW>
   1287 !  <DESCRIPTION>
   1288 !   Use this method after setting the domain boundaries
   1289 !   (<TT>drifters_set_domain</TT>) to spread the particles across PE
   1290 !   domains.
   1291 !  </DESCRIPTION>
   1292 !  <TEMPLATE>
   1293 !   call   drifters_distribute(self, ermesg)
   1294 !
   1295 !  </TEMPLATE>
   1296 !  <INOUT NAME="self" TYPE="drifters_type" DIM="SCALAR" UNITS="" DEFAULT="">
   1297 !    Opaque handle.
   1298 !  </INOUT>
   1299 !  <OUT NAME="ermesg" TYPE="character" DIM="SCALAR" UNITS="" DEFAULT="">
   1300 !    Error message (if any).
   1301 !  </OUT>
   1302 ! </SUBROUTINE>
   1303 !
   1304 !> @brief Use this method after setting the domain boundaries
   1305 !!   (<TT>drifters_set_domain</TT>) to spread the particles across PE
   1306   subroutine drifters_distribute(self, ermesg)
   1307     type(drifters_type) :: self !< Opaque handle.
   1308     character(len=*), intent(out) :: ermesg !< Error message (if any).
   1309 
   1310     real x, y
   1311     integer i, nptot, nd
   1312 
   1313     ermesg = ''
   1314     nd = self%core%nd
   1315     if(nd < 2) then
   1316        ermesg = 'drifters_distribute: dimension must be >=2'
   1317        return
   1318     endif
   1319 
   1320     nptot = size(self%input%positions, 2)
   1321     do i = 1, nptot
   1322        x = self%input%positions(1,i)
   1323        y = self%input%positions(2,i)
   1324        if(x >= self%comm%xdmin .and. x <= self%comm%xdmax .and. &
   1325         & y >= self%comm%ydmin .and. y <= self%comm%ydmax) then
   1326 
   1327           self%core%np = self%core%np + 1
   1328           self%core%positions(1:nd, self%core%np) = self%input%positions(1:nd, i)
   1329           self%core%ids(self%core%np)             = i
   1330 
   1331        endif
   1332     enddo
   1333 
   1334   end subroutine drifters_distribute

Page 40          Source Listing                  DRIFTERS_DISTRIBUTE
2021-06-01 08:54 Entry Points                    drifters.F90



ENTRY POINTS

  Name                                            
                                                  
 drifters_mod_mp_drifters_distribute_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 DRIFTERS_DISTRIBUTE        Subr   1306                                                                                             
 ERMESG                     Dummy  1306     CHAR                        scalar   ARG,OUT          1313,1316                         
 I                          Local  1311     I(4)            4           scalar                    1321,1322,1323,1328,1329          
 ND                         Local  1311     I(4)            4           scalar                    1314,1315,1328                    
 NPTOT                      Local  1311     I(4)            4           scalar                    1320,1321                         
 SELF                       Dummy  1306     DRIFTERS_TYPE   2880        scalar   ARG,INOUT        1314,1320,1322,1323,1324,1325,1327
                                                                                                  ,1328,1329                        
 SIZE                       Func   1320                                 scalar                    1320                              
 X                          Local  1310     R(8)            8           scalar                    1322,1324                         
 Y                          Local  1310     R(8)            8           scalar                    1323,1325                         

Page 41          Source Listing                  DRIFTERS_DISTRIBUTE
2021-06-01 08:54                                 drifters.F90

   1335 
   1336 !============================================================================
   1337 ! <SUBROUTINE NAME="drifters_write_restart">
   1338 !  <OVERVIEW>
   1339 !   Write restart file.
   1340 !  </OVERVIEW>
   1341 !  <DESCRIPTION>
   1342 !   Gather all the particle positions distributed across PE domains on root PE
   1343 !   and save the data in netCDF file.
   1344 !  </DESCRIPTION>
   1345 !  <TEMPLATE>
   1346 !   call   drifters_write_restart(self, filename, &
   1347 !     & x1, y1, geolon1, &
   1348 !     & x2, y2, geolat2, &
   1349 !     & root, mycomm, ermesg)
   1350 !
   1351 !  </TEMPLATE>
   1352 !  <INOUT NAME="self" TYPE="drifters_type" DIM="SCALAR" UNITS="" DEFAULT="">
   1353 !    Opaque data structure.
   1354 !  </INOUT>
   1355 !  <IN NAME="filename" TYPE="character" DIM="SCALAR" UNITS="" DEFAULT="">
   1356 !    Restart file name.
   1357 !  </IN>
   1358 !  <IN NAME="x1" TYPE="real" DIM="" UNITS="" DEFAULT="">
   1359 !    Pseudo-longitude axis supporting longitudes.
   1360 !  </IN>
   1361 !  <INOUT NAME="y1" TYPE="" DIM="" UNITS="" DEFAULT="">
   1362 !    Pseudo-latitude axis supporting longitudes.
   1363 !  </INOUT>
   1364 !  <INOUT NAME="geolon1" TYPE="" DIM="" UNITS="" DEFAULT="">
   1365 !    Longitude array (x1, y1).
   1366 !  </INOUT>
   1367 !  <IN NAME="x2" TYPE="real" DIM="" UNITS="" DEFAULT="">
   1368 !    Pseudo-longitude axis supporting latitudes.
   1369 !  </IN>
   1370 !  <INOUT NAME="y2" TYPE="" DIM="" UNITS="" DEFAULT="">
   1371 !   Pseudo-latitude axis supporting latitudes.
   1372 !  </INOUT>
   1373 !  <INOUT NAME="geolat2" TYPE="" DIM="" UNITS="" DEFAULT="">
   1374 !   Latitudes array (x2, y2)
   1375 !  </INOUT>
   1376 !  <IN NAME="root" TYPE="integer" DIM="SCALAR" UNITS="" DEFAULT="">
   1377 !   Root PE.
   1378 !  </IN>
   1379 !  <IN NAME="mycomm" TYPE="integer" DIM="SCALAR" UNITS="" DEFAULT="">
   1380 !   MPI communicator.
   1381 !  </IN>
   1382 !  <OUT NAME="ermesg" TYPE="character" DIM="SCALAR" UNITS="" DEFAULT="">
   1383 !   Error message (if any).
   1384 !  </OUT>
   1385 ! </SUBROUTINE>
   1386 !
   1387 !> @brief Write restart file. Gather all the particle positions distributed
   1388 !!   across PE domains on root PE and save the data in netCDF file.
   1389   subroutine drifters_write_restart(self, filename, &
   1390        & x1, y1, geolon1, &
   1391        & x2, y2, geolat2, &

Page 42          Source Listing                  DRIFTERS_WRITE_RESTART
2021-06-01 08:54                                 drifters.F90

   1392        & root, mycomm, ermesg)
   1393 ! gather all positions and ids and save the result in
   1394 ! self%input data structure on PE "root", then write restart file
   1395 
   1396     type(drifters_type) :: self !< Opaque data structure.
   1397     character(len=*), intent(in)  :: filename !< Restart file name.
   1398 
   1399 ! if these optional arguments are passed, the positions will
   1400 ! mapped to lon/lat degrees and saved in the file.
   1401     real, intent(in), optional    :: x1(:) !< Pseudo-longitude axis supporting longitudes.
   1402     real, intent(in), optional    :: y1(:) !< Pseudo-latitude axis supporting longitudes.
   1403     real, intent(in), optional    :: geolon1(:,:) !< Longitude array (x1, y1).
   1404     real, intent(in), optional    :: x2(:) !< Pseudo-longitude axis supporting latitudes.
   1405     real, intent(in), optional    :: y2(:) !< Pseudo-latitude axis supporting latitudes.
   1406     real, intent(in), optional    :: geolat2(:,:) !< Latitudes array (x2, y2)
   1407 
   1408 
   1409     integer, intent(in), optional :: root    !< root pe
   1410     integer, intent(in), optional :: mycomm  !< MPI communicator
   1411     character(len=*), intent(out) :: ermesg !< Error message (if any).
   1412 
   1413     integer :: np
   1414     logical :: do_save_lonlat
   1415     real, allocatable    ::  lons(:), lats(:)
   1416 
   1417     ermesg = ''
   1418 
   1419     np = self%core%np
   1420 
   1421     allocate(lons(np), lats(np))
   1422     lons = -huge(1.)
   1423     lats = -huge(1.)
   1424 
   1425 ! get lon/lat if asking for
   1426     if(present(x1) .and. present(y1) .and. present(geolon1) .and. &
   1427          & present(x2) .and. present(y2) .and. present(geolat2)) then
   1428        do_save_lonlat = .TRUE.
   1429     else
   1430        do_save_lonlat = .FALSE.
   1431     endif
   1432 
   1433     if(do_save_lonlat) then
   1434 
   1435 ! Interpolate positions onto geo longitudes/latitudes
   1436        call drifters_positions2lonlat(self,   &
   1437             & positions=self%core%positions(:,1:np), &
   1438             & x1=x1, y1=y1, geolon1=geolon1,         &
   1439             & x2=x2, y2=y2, geolat2=geolat2,         &
   1440             & lons=lons, lats=lats, ermesg=ermesg)
   1441        if(ermesg/='') return ! problems, bail off
   1442 
   1443     endif
   1444 
   1445     call drifters_comm_gather(self%comm, self%core, self%input, &
   1446          & lons, lats, do_save_lonlat, &
   1447          & filename, &
   1448          & root, mycomm)

Page 43          Source Listing                  DRIFTERS_WRITE_RESTART
2021-06-01 08:54                                 drifters.F90

   1449 
   1450   end subroutine drifters_write_restart


ENTRY POINTS

  Name                                               
                                                     
 drifters_mod_mp_drifters_write_restart_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 DO_SAVE_LONLAT             Local  1414     L(4)            4           scalar                    1428,1430,1433,1446               
 DRIFTERS_COMM_GATHER       Subr   1445                                          PRIV             170,1445                          
 DRIFTERS_POSITIONS2LONLAT  Subr   1436                                                           178,1436                          
 DRIFTERS_WRITE_RESTART     Subr   1389                                                                                             
 ERMESG                     Dummy  1392     CHAR                        scalar   ARG,OUT          1417,1440,1441                    
 FILENAME                   Dummy  1389     CHAR                        scalar   ARG,IN           1447                              
 GEOLAT2                    Dummy  1391     R(8)            8     2     1        ARG,IN           1427,1439                         
 GEOLON1                    Dummy  1390     R(8)            8     2     1        ARG,IN           1426,1438                         
 HUGE                       Func   1422                                 scalar                    1422,1423                         
 LATS                       Local  1415     R(8)            8     1     1        ALC              1421,1423,1440,1446               
 LONS                       Local  1415     R(8)            8     1     1        ALC              1421,1422,1440,1446               
 MYCOMM                     Dummy  1392     I(4)            4           scalar   ARG,IN           1448                              
 NP                         Local  1413     I(4)            4           scalar                    1419,1421,1437                    
 PRESENT                    Func   1426                                 scalar                    1426,1427                         
 ROOT                       Dummy  1392     I(4)            4           scalar   ARG,IN           1448                              
 SELF                       Dummy  1389     DRIFTERS_TYPE   2880        scalar   ARG,INOUT        1419,1436,1437,1445               
 X1                         Dummy  1390     R(8)            8     1     1        ARG,IN           1426,1438                         
 X2                         Dummy  1391     R(8)            8     1     1        ARG,IN           1427,1439                         
 Y1                         Dummy  1390     R(8)            8     1     1        ARG,IN           1426,1438                         
 Y2                         Dummy  1391     R(8)            8     1     1        ARG,IN           1427,1439                         

Page 44          Source Listing                  DRIFTERS_WRITE_RESTART
2021-06-01 08:54                                 drifters.F90

   1451 
   1452 !============================================================================
   1453 
   1454 
   1455 # 1 "./drifters_compute_k.h" 1 
   1456 ! -*-f90-*-
   1457 !***********************************************************************
   1458 !*                   GNU Lesser General Public License
   1459 !*
   1460 !* This file is part of the GFDL Flexible Modeling System (FMS).
   1461 !*
   1462 !* FMS is free software: you can redistribute it and/or modify it under
   1463 !* the terms of the GNU Lesser General Public License as published by
   1464 !* the Free Software Foundation, either version 3 of the License, or (at
   1465 !* your option) any later version.
   1466 !*
   1467 !* FMS is distributed in the hope that it will be useful, but WITHOUT
   1468 !* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
   1469 !* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
   1470 !* for more details.
   1471 !*
   1472 !* You should have received a copy of the GNU Lesser General Public
   1473 !* License along with FMS.  If not, see <http://www.gnu.org/licenses/>.
   1474 !***********************************************************************
   1475 
   1476 subroutine drifters_computek2d(self, positions, u, v, &
   1477 # 24
   1478 
   1479      & k, ermesg)
   1480 
   1481   use cloud_interpolator_mod
   1482   type(drifters_type) :: self
   1483   real, intent(in)    :: positions(:,:)
   1484 
   1485   real, intent(in)    :: u(:,:)
   1486   real, intent(in)    :: v(:,:)
   1487 
   1488 # 38
   1489 
   1490   real, intent(out)   :: k(:,:)
   1491   character(len=*), intent(out) :: ermesg
   1492 
   1493   integer, parameter :: nd = 2 ! number of dims
   1494   integer i, ip, np, ij(nd), ier, nsizes_u(nd), nsizes_v(nd)
   1495 # 46
   1496 
   1497   real fvals(2**nd), ts(nd)
   1498   real pos(nd, self%core%np)
   1499 
   1500   ermesg = ''
   1501 
   1502   nsizes_u(1) = size(u, 1)
   1503   nsizes_u(2) = size(u, 2)
   1504 
   1505   nsizes_v(1) = size(v, 1)
   1506   nsizes_v(2) = size(v, 2)
   1507 

Page 45          Source Listing                  DRIFTERS_COMPUTEK2D
2021-06-01 08:54                                 ./drifters_compute_k.h

   1508 # 64
   1509 
   1510 
   1511   np = self%core%np
   1512 
   1513 ! correct for periodicity
   1514   if(self%comm%xperiodic) then
   1515      do ip = 1, np
   1516         pos(1,ip) = self%comm%xgmin + modulo(positions(1,ip)-self%comm%xgmin, self%comm%xgmax-self%comm%xgmin)
   1517      enddo
   1518   else
   1519      pos(1,:) = positions(1,1:np)
   1520   endif
   1521   if(self%comm%yperiodic) then
   1522      do ip = 1, np
   1523         pos(2,ip) = self%comm%ygmin + modulo(positions(2,ip)-self%comm%ygmin, self%comm%ygmax-self%comm%ygmin)
   1524      enddo
   1525   else
   1526      pos(2,:) = positions(2,1:np)
   1527   endif
   1528 
   1529 # 86
   1530 
   1531 
   1532   do ip = 1, np
   1533 
   1534 ! iterate over particles
   1535 
   1536      k(:, ip) = huge(1.)
   1537 
   1538 ! u-component...
   1539      call cld_ntrp_locate_cell(self%xu, pos(1,ip), i, ier)
   1540      if(i==-1) self%remove(ip) = .TRUE.
   1541 # 101
   1542 
   1543      i = max(1, i)
   1544      ts(1) = (pos(1,ip) - self%xu(i))/(self%xu(i+1)-self%xu(i))
   1545      ij(1) = i
   1546 
   1547      call cld_ntrp_locate_cell(self%yu, pos(2,ip), i, ier)
   1548      if(i==-1) self%remove(ip) = .TRUE.
   1549 # 112
   1550 
   1551      i = max(1, i)
   1552      ts(2) = (pos(2,ip) - self%yu(i))/(self%yu(i+1)-self%yu(i))
   1553      ij(2) = i
   1554 
   1555 # 128
   1556 
   1557 
   1558      call cld_ntrp_get_cell_values(nsizes_u, reshape((u), (/size((u))/) ), ij, fvals, ier)
   1559      call cld_ntrp_linear_cell_interp(fvals, ts, k(1, ip), ier)
   1560      k(1, ip) = self%dt * k(1, ip)
   1561 
   1562 ! v-component...
   1563      call cld_ntrp_locate_cell(self%xv, pos(1,ip), i, ier)
   1564      if(i==-1) self%remove(ip) = .TRUE.

Page 46          Source Listing                  DRIFTERS_COMPUTEK2D
2021-06-01 08:54                                 ./drifters_compute_k.h

   1565 # 141
   1566 
   1567      i = max(1, i)
   1568      ts(1) = (pos(1,ip) - self%xv(i))/(self%xv(i+1)-self%xv(i))
   1569      ij(1) = i
   1570 
   1571      call cld_ntrp_locate_cell(self%yv, pos(2,ip), i, ier)
   1572      if(i==-1) self%remove(ip) = .TRUE.
   1573 # 152
   1574 
   1575      i = max(1, i)
   1576      ts(2) = (pos(2,ip) - self%yv(i))/(self%yv(i+1)-self%yv(i))
   1577      ij(2) = i
   1578 
   1579 # 168
   1580 
   1581 
   1582      call cld_ntrp_get_cell_values(nsizes_v, reshape((v), (/size((v))/) ), ij, fvals, ier)
   1583      call cld_ntrp_linear_cell_interp(fvals, ts, k(2, ip), ier)
   1584      k(2, ip) = self%dt * k(2, ip)
   1585 
   1586 
   1587 # 213
   1588 
   1589 
   1590   enddo
   1591 
   1592 end subroutine drifters_computek2d

Page 47          Source Listing                  DRIFTERS_COMPUTEK2D
2021-06-01 08:54 Entry Points                    ./drifters_compute_k.h



ENTRY POINTS

  Name                                            
                                                  
 drifters_mod_mp_drifters_computek2d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 CLOUD_INTERPOLATOR_MOD     Module 1481                                                           1481                              
 DRIFTERS_COMPUTEK2D        Subr   1476                                          PRIV             755,768,776,789,831               
 ERMESG                     Dummy  1479     CHAR                        scalar   ARG,OUT          1500                              
 FVALS                      Local  1497     R(8)            8     1     4        TGT              1558,1559,1582,1583               
 HUGE                       Func   1536                                 scalar                    1536                              
 I                          Local  1494     I(4)            4           scalar                    1539,1540,1543,1544,1545,1547,1548
                                                                                                  ,1551,1552,1553,1563,1564,1567,156
                                                                                                  8,1569,1571,1572,1575,1576,1577   
 IER                        Local  1494     I(4)            4           scalar                    1539,1547,1558,1559,1563,1571,1582
                                                                                                  ,1583                             
 IJ                         Local  1494     I(4)            4     1     2        TGT              1545,1553,1558,1569,1577,1582     
 IP                         Local  1494     I(4)            4           scalar                    1515,1516,1522,1523,1532,1536,1539
                                                                                                  ,1540,1544,1547,1548,1552,1559,156
                                                                                                  0,1563,1564,1568,1571,1572,1576,15
                                                                                                  83,1584                           
 K                          Dummy  1479     R(8)            8     2     1        ARG,OUT          1536,1559,1560,1583,1584          
 MAX                        Func   1543                                 scalar                    1543,1551,1567,1575               
 MODULO                     Func   1516                                 scalar                    1516,1523                         
 ND                         Param  1493     I(4)            4           scalar                    1494,1497,1498                    
 NP                         Local  1494     I(4)            4           scalar                    1511,1515,1519,1522,1526,1532     
 NSIZES_U                   Local  1494     I(4)            4     1     2        TGT              1502,1503,1558                    
 NSIZES_V                   Local  1494     I(4)            4     1     2        TGT              1505,1506,1582                    
 POS                        Local  1498     R(8)            8     2     0                         1516,1519,1523,1526,1539,1544,1547
                                                                                                  ,1552,1563,1568,1571,1576         
 POSITIONS                  Dummy  1476     R(8)            8     2     1        ARG,IN           1516,1519,1523,1526               
 RESHAPE                    Func   1558                                 scalar                    1558,1582                         
 SELF                       Dummy  1476     DRIFTERS_TYPE   2880        scalar   ARG,INOUT        1498,1511,1514,1516,1521,1523,1539
                                                                                                  ,1540,1544,1547,1548,1552,1560,156
                                                                                                  3,1564,1568,1571,1572,1576,1584   
 SIZE                       Func   1502                                 scalar                    1502,1503,1505,1506,1558,1582     
 TS                         Local  1497     R(8)            8     1     2        TGT              1544,1552,1559,1568,1576,1583     
 U                          Dummy  1476     R(8)            8     2     1        ARG,IN           1502,1503,1558                    
 V                          Dummy  1476     R(8)            8     2     1        ARG,IN           1505,1506,1582                    

Page 48          Source Listing                  DRIFTERS_COMPUTEK2D
2021-06-01 08:54                                 ./drifters_compute_k.h

   1593 # 924 "drifters.F90" 2 
   1594 
   1595 
   1596 
   1597 !============================================================================
   1598 
   1599 
   1600 # 1 "./drifters_compute_k.h" 1 
   1601 ! -*-f90-*-
   1602 !***********************************************************************
   1603 !*                   GNU Lesser General Public License
   1604 !*
   1605 !* This file is part of the GFDL Flexible Modeling System (FMS).
   1606 !*
   1607 !* FMS is free software: you can redistribute it and/or modify it under
   1608 !* the terms of the GNU Lesser General Public License as published by
   1609 !* the Free Software Foundation, either version 3 of the License, or (at
   1610 !* your option) any later version.
   1611 !*
   1612 !* FMS is distributed in the hope that it will be useful, but WITHOUT
   1613 !* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
   1614 !* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
   1615 !* for more details.
   1616 !*
   1617 !* You should have received a copy of the GNU Lesser General Public
   1618 !* License along with FMS.  If not, see <http://www.gnu.org/licenses/>.
   1619 !***********************************************************************
   1620 
   1621 subroutine drifters_computek3d(self, positions, u, v, &
   1622 
   1623      & w, &
   1624 
   1625      & k, ermesg)
   1626 
   1627   use cloud_interpolator_mod
   1628   type(drifters_type) :: self
   1629   real, intent(in)    :: positions(:,:)
   1630 # 33
   1631 
   1632 
   1633   real, intent(in)    :: u(:,:,:)
   1634   real, intent(in)    :: v(:,:,:)
   1635   real, intent(in)    :: w(:,:,:)
   1636 
   1637   real, intent(out)   :: k(:,:)
   1638   character(len=*), intent(out) :: ermesg
   1639 
   1640   integer, parameter :: nd = 3 ! number of dims
   1641   integer i, ip, np, ij(nd), ier, nsizes_u(nd), nsizes_v(nd)
   1642 
   1643   integer nsizes_w(nd)
   1644 
   1645   real fvals(2**nd), ts(nd)
   1646   real pos(nd, self%core%np)
   1647 
   1648   ermesg = ''
   1649 

Page 49          Source Listing                  DRIFTERS_COMPUTEK3D
2021-06-01 08:54                                 ./drifters_compute_k.h

   1650   nsizes_u(1) = size(u, 1)
   1651   nsizes_u(2) = size(u, 2)
   1652 
   1653   nsizes_v(1) = size(v, 1)
   1654   nsizes_v(2) = size(v, 2)
   1655 
   1656 
   1657   nsizes_u(3) = size(u, 3)
   1658   nsizes_v(3) = size(v, 3)
   1659   nsizes_w(1) = size(w, 1)
   1660   nsizes_w(2) = size(w, 2)
   1661   nsizes_w(3) = size(w, 3)
   1662 
   1663 
   1664   np = self%core%np
   1665 
   1666 ! correct for periodicity
   1667   if(self%comm%xperiodic) then
   1668      do ip = 1, np
   1669         pos(1,ip) = self%comm%xgmin + modulo(positions(1,ip)-self%comm%xgmin, self%comm%xgmax-self%comm%xgmin)
   1670      enddo
   1671   else
   1672      pos(1,:) = positions(1,1:np)
   1673   endif
   1674   if(self%comm%yperiodic) then
   1675      do ip = 1, np
   1676         pos(2,ip) = self%comm%ygmin + modulo(positions(2,ip)-self%comm%ygmin, self%comm%ygmax-self%comm%ygmin)
   1677      enddo
   1678   else
   1679      pos(2,:) = positions(2,1:np)
   1680   endif
   1681 
   1682 
   1683   pos(3,:) = positions(3,1:self%core%np)
   1684 
   1685 
   1686   do ip = 1, np
   1687 
   1688 ! iterate over particles
   1689 
   1690      k(:, ip) = huge(1.)
   1691 
   1692 ! u-component...
   1693      call cld_ntrp_locate_cell(self%xu, pos(1,ip), i, ier)
   1694      if(i==-1) self%remove(ip) = .TRUE.
   1695 # 101
   1696 
   1697      i = max(1, i)
   1698      ts(1) = (pos(1,ip) - self%xu(i))/(self%xu(i+1)-self%xu(i))
   1699      ij(1) = i
   1700 
   1701      call cld_ntrp_locate_cell(self%yu, pos(2,ip), i, ier)
   1702      if(i==-1) self%remove(ip) = .TRUE.
   1703 # 112
   1704 
   1705      i = max(1, i)
   1706      ts(2) = (pos(2,ip) - self%yu(i))/(self%yu(i+1)-self%yu(i))

Page 50          Source Listing                  DRIFTERS_COMPUTEK3D
2021-06-01 08:54                                 ./drifters_compute_k.h

   1707      ij(2) = i
   1708 
   1709 
   1710      call cld_ntrp_locate_cell(self%zu, pos(3,ip), i, ier)
   1711      if(i==-1) self%remove(ip) = .TRUE.
   1712 # 124
   1713 
   1714      i = max(1, i)
   1715      ts(3) = (pos(3,ip) - self%zu(i))/(self%zu(i+1)-self%zu(i))
   1716      ij(3) = i
   1717 
   1718 
   1719      call cld_ntrp_get_cell_values(nsizes_u, reshape((u), (/size((u))/) ), ij, fvals, ier)
   1720      call cld_ntrp_linear_cell_interp(fvals, ts, k(1, ip), ier)
   1721      k(1, ip) = self%dt * k(1, ip)
   1722 
   1723 ! v-component...
   1724      call cld_ntrp_locate_cell(self%xv, pos(1,ip), i, ier)
   1725      if(i==-1) self%remove(ip) = .TRUE.
   1726 # 141
   1727 
   1728      i = max(1, i)
   1729      ts(1) = (pos(1,ip) - self%xv(i))/(self%xv(i+1)-self%xv(i))
   1730      ij(1) = i
   1731 
   1732      call cld_ntrp_locate_cell(self%yv, pos(2,ip), i, ier)
   1733      if(i==-1) self%remove(ip) = .TRUE.
   1734 # 152
   1735 
   1736      i = max(1, i)
   1737      ts(2) = (pos(2,ip) - self%yv(i))/(self%yv(i+1)-self%yv(i))
   1738      ij(2) = i
   1739 
   1740 
   1741      call cld_ntrp_locate_cell(self%zv, pos(3,ip), i, ier)
   1742      if(i==-1) self%remove(ip) = .TRUE.
   1743 # 164
   1744 
   1745      i = max(1, i)
   1746      ts(3) = (pos(3,ip) - self%zv(i))/(self%zv(i+1)-self%zv(i))
   1747      ij(3) = i
   1748 
   1749 
   1750      call cld_ntrp_get_cell_values(nsizes_v, reshape((v), (/size((v))/) ), ij, fvals, ier)
   1751      call cld_ntrp_linear_cell_interp(fvals, ts, k(2, ip), ier)
   1752      k(2, ip) = self%dt * k(2, ip)
   1753 
   1754 
   1755 
   1756 ! w-component...
   1757      call cld_ntrp_locate_cell(self%xw, pos(1,ip), i, ier)
   1758      if(i==-1) self%remove(ip) = .TRUE.
   1759 # 183
   1760 
   1761      i = max(1, i)
   1762      ts(1) = (pos(1,ip) - self%xw(i))/(self%xw(i+1)-self%xw(i))
   1763      ij(1) = i

Page 51          Source Listing                  DRIFTERS_COMPUTEK3D
2021-06-01 08:54                                 ./drifters_compute_k.h

   1764 
   1765      call cld_ntrp_locate_cell(self%yw, pos(2,ip), i, ier)
   1766      if(i==-1) self%remove(ip) = .TRUE.
   1767 # 194
   1768 
   1769      i = max(1, i)
   1770      ts(2) = (pos(2,ip) - self%yw(i))/(self%yw(i+1)-self%yw(i))
   1771      ij(2) = i
   1772 
   1773      call cld_ntrp_locate_cell(self%zw, pos(3,ip), i, ier)
   1774      if(i==-1) self%remove(ip) = .TRUE.
   1775 # 205
   1776 
   1777      i = max(1, i)
   1778      ts(3) = (pos(3,ip) - self%zw(i))/(self%zw(i+1)-self%zw(i))
   1779      ij(3) = i
   1780 
   1781      call cld_ntrp_get_cell_values(nsizes_w, reshape((w), (/size((w))/) ), ij, fvals, ier)
   1782      call cld_ntrp_linear_cell_interp(fvals, ts, k(3, ip), ier)
   1783      k(3, ip) = self%dt * k(3, ip)
   1784 
   1785 
   1786   enddo
   1787 
   1788 end subroutine drifters_computek3d


ENTRY POINTS

  Name                                            
                                                  
 drifters_mod_mp_drifters_computek3d_             

Page 52          Source Listing                  DRIFTERS_COMPUTEK3D
2021-06-01 08:54 Symbol Table                    ./drifters_compute_k.h



SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 CLOUD_INTERPOLATOR_MOD     Module 1627                                                           1627                              
 DRIFTERS_COMPUTEK3D        Subr   1621                                          PRIV             912,926,935,949,992               
 ERMESG                     Dummy  1625     CHAR                        scalar   ARG,OUT          1648                              
 FVALS                      Local  1645     R(8)            8     1     8        TGT              1719,1720,1750,1751,1781,1782     
 HUGE                       Func   1690                                 scalar                    1690                              
 I                          Local  1641     I(4)            4           scalar                    1693,1694,1697,1698,1699,1701,1702
                                                                                                  ,1705,1706,1707,1710,1711,1714,171
                                                                                                  5,1716,1724,1725,1728,1729,1730,17
                                                                                                  32,1733,1736,1737,1738,1741,1742,1
                                                                                                  745,1746,1747,1757,1758,1761,1762,
                                                                                                  1763,1765,1766,1769,1770,1771,1773
                                                                                                  ,1774,1777,1778,1779              
 IER                        Local  1641     I(4)            4           scalar                    1693,1701,1710,1719,1720,1724,1732
                                                                                                  ,1741,1750,1751,1757,1765,1773,178
                                                                                                  1,1782                            
 IJ                         Local  1641     I(4)            4     1     3        TGT              1699,1707,1716,1719,1730,1738,1747
                                                                                                  ,1750,1763,1771,1779,1781         
 IP                         Local  1641     I(4)            4           scalar                    1668,1669,1675,1676,1686,1690,1693
                                                                                                  ,1694,1698,1701,1702,1706,1710,171
                                                                                                  1,1715,1720,1721,1724,1725,1729,17
                                                                                                  32,1733,1737,1741,1742,1746,1751,1
                                                                                                  752,1757,1758,1762,1765,1766,1770,
                                                                                                  1773,1774,1778,1782,1783          
 K                          Dummy  1625     R(8)            8     2     1        ARG,OUT          1690,1720,1721,1751,1752,1782,1783
 MAX                        Func   1697                                 scalar                    1697,1705,1714,1728,1736,1745,1761
                                                                                                  ,1769,1777                        
 MODULO                     Func   1669                                 scalar                    1669,1676                         
 ND                         Param  1640     I(4)            4           scalar                    1641,1643,1645,1646               
 NP                         Local  1641     I(4)            4           scalar                    1664,1668,1672,1675,1679,1686     
 NSIZES_U                   Local  1641     I(4)            4     1     3        TGT              1650,1651,1657,1719               
 NSIZES_V                   Local  1641     I(4)            4     1     3        TGT              1653,1654,1658,1750               
 NSIZES_W                   Local  1643     I(4)            4     1     3        TGT              1659,1660,1661,1781               
 POS                        Local  1646     R(8)            8     2     0                         1669,1672,1676,1679,1683,1693,1698
                                                                                                  ,1701,1706,1710,1715,1724,1729,173
                                                                                                  2,1737,1741,1746,1757,1762,1765,17
                                                                                                  70,1773,1778                      
 POSITIONS                  Dummy  1621     R(8)            8     2     1        ARG,IN           1669,1672,1676,1679,1683          
 RESHAPE                    Func   1719                                 scalar                    1719,1750,1781                    
 SELF                       Dummy  1621     DRIFTERS_TYPE   2880        scalar   ARG,INOUT        1646,1664,1667,1669,1674,1676,1683
                                                                                                  ,1693,1694,1698,1701,1702,1706,171
                                                                                                  0,1711,1715,1721,1724,1725,1729,17
                                                                                                  32,1733,1737,1741,1742,1746,1752,1
                                                                                                  757,1758,1762,1765,1766,1770,1773,
                                                                                                  1774,1778,1783                    
 SIZE                       Func   1650                                 scalar                    1650,1651,1653,1654,1657,1658,1659
                                                                                                  ,1660,1661,1719,1750,1781         
 TS                         Local  1645     R(8)            8     1     3        TGT              1698,1706,1715,1720,1729,1737,1746
                                                                                                  ,1751,1762,1770,1778,1782         
 U                          Dummy  1621     R(8)            8     3     1        ARG,IN           1650,1651,1657,1719               
 V                          Dummy  1621     R(8)            8     3     1        ARG,IN           1653,1654,1658,1750               
 W                          Dummy  1623     R(8)            8     3     1        ARG,IN           1659,1660,1661,1781               

Page 53          Source Listing                  DRIFTERS_COMPUTEK3D
2021-06-01 08:54                                 ./drifters_compute_k.h

   1789 # 931 "drifters.F90" 2 
   1790 
   1791 
   1792 
   1793 
   1794 !============================================================================
   1795 ! <SUBROUTINE NAME="drifters_set_v_axes">
   1796 !  <OVERVIEW>
   1797 !   Set velocity field axes.
   1798 !  </OVERVIEW>
   1799 !  <DESCRIPTION>
   1800 !  Velocity axis components may be located on different grids or cell faces. For instance, zonal (u)
   1801 !  and meridional (v) velcity components are staggered by half a cell size in Arakawa's C and D grids.
   1802 !  This call will set individual axes for each components do as to allow interpolation of the velocity
   1803 !  field on arbitrary positions.
   1804 !  </DESCRIPTION>
   1805 !  <TEMPLATE>
   1806 !   call   drifters_set_v_axes(self, component, x, y, z, ermesg)
   1807 !
   1808 !  </TEMPLATE>
   1809 !  <INOUT NAME="self" TYPE="drifters_type" DIM="SCALAR" UNITS="" DEFAULT="">
   1810 !  Opaque data structure.
   1811 !  </INOUT>
   1812 !  <IN NAME="component" TYPE="character" DIM="SCALAR" UNITS="" DEFAULT="">
   1813 !  Velocity component: either 'u', 'v', or 'w'.
   1814 !  </IN>
   1815 !  <IN NAME="x" TYPE="real" DIM="" UNITS="" DEFAULT="">
   1816 !  X-axis.
   1817 !  </IN>
   1818 !  <INOUT NAME="y" TYPE="" DIM="" UNITS="" DEFAULT="">
   1819 !  Y-axis.
   1820 !  </INOUT>
   1821 !  <INOUT NAME="z" TYPE="" DIM="" UNITS="" DEFAULT="">
   1822 !  Z-axis.
   1823 !  </INOUT>
   1824 !  <OUT NAME="ermesg" TYPE="character" DIM="SCALAR" UNITS="" DEFAULT="">
   1825 !  Error message (if any).
   1826 !  </OUT>
   1827 ! </SUBROUTINE>
   1828 !
   1829 !> @brief Set velocity field axes.
   1830 !! @details Velocity axis components may be located on different grids or cell faces. For instance, zonal (u)
   1831 !!  and meridional (v) velcity components are staggered by half a cell size in Arakawa's C and D grids.
   1832 !!  This call will set individual axes for each components do as to allow interpolation of the velocity
   1833 !!  field on arbitrary positions.
   1834   subroutine drifters_set_v_axes(self, component, x, y, z, ermesg)
   1835     type(drifters_type) :: self !< Opaque data structure.
   1836     character(len=*), intent(in)  :: component !< Velocity component: either 'u', 'v', or 'w'.
   1837     real, intent(in)              :: x(:) !< X-axis.
   1838     real, intent(in)              :: y(:) !< Y-axis.
   1839     real, intent(in)              :: z(:) !< Z-axis.
   1840     character(len=*), intent(out) :: ermesg !< Error message (if any).
   1841 
   1842     integer ier, nx, ny, nz
   1843 
   1844     ermesg = ''
   1845     nx = size(x)

Page 54          Source Listing                  DRIFTERS_SET_V_AXES
2021-06-01 08:54                                 drifters.F90

   1846     ny = size(y)
   1847     nz = size(z)
   1848     select case (component(1:1))
   1849        case ('u', 'U')
   1850           if(nx > 0) then
   1851              deallocate(self%xu, stat=ier)
   1852              allocate(self%xu(nx))
   1853              self%xu = x
   1854              self%nx = max(self%nx, size(x))
   1855           endif
   1856           if(ny > 0) then
   1857              deallocate(self%yu, stat=ier)
   1858              allocate(self%yu(ny))
   1859              self%yu = y
   1860              self%ny = max(self%ny, size(y))
   1861           endif
   1862           if(nz > 0) then
   1863              deallocate(self%zu, stat=ier)
   1864              allocate(self%zu(nz))
   1865              self%zu = z
   1866           endif
   1867       case ('v', 'V')
   1868           if(nx > 0) then
   1869              deallocate(self%xv, stat=ier)
   1870              allocate(self%xv(nx))
   1871              self%xv = x
   1872              self%nx = max(self%nx, size(x))
   1873           endif
   1874           if(ny > 0) then
   1875              deallocate(self%yv, stat=ier)
   1876              allocate(self%yv(ny))
   1877              self%yv = y
   1878              self%ny = max(self%ny, size(y))
   1879           endif
   1880           if(nz > 0) then
   1881              deallocate(self%zv, stat=ier)
   1882              allocate(self%zv(nz))
   1883              self%zv = z
   1884           endif
   1885       case ('w', 'W')
   1886           if(nx > 0) then
   1887              deallocate(self%xw, stat=ier)
   1888              allocate(self%xw(nx))
   1889              self%xw = x
   1890              self%nx = max(self%nx, size(x))
   1891           endif
   1892           if(ny > 0) then
   1893              deallocate(self%yw, stat=ier)
   1894              allocate(self%yw(ny))
   1895              self%yw = y
   1896              self%ny = max(self%ny, size(y))
   1897           endif
   1898           if(nz > 0) then
   1899              deallocate(self%zw, stat=ier)
   1900              allocate(self%zw(nz))
   1901              self%zw = z
   1902           endif

Page 55          Source Listing                  DRIFTERS_SET_V_AXES
2021-06-01 08:54                                 drifters.F90

   1903       case default
   1904          ermesg = 'drifters_set_v_axes: ERROR component must be "u", "v" or "w"'
   1905     end select
   1906   end subroutine drifters_set_v_axes


ENTRY POINTS

  Name                                            
                                                  
 drifters_mod_mp_drifters_set_v_axes_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 COMPONENT                  Dummy  1834     CHAR                        scalar   ARG,IN           1848                              
 DRIFTERS_SET_V_AXES        Subr   1834                                                                                             
 ERMESG                     Dummy  1834     CHAR                        scalar   ARG,OUT          1844,1904                         
 IER                        Local  1842     I(4)            4           scalar                    1851,1857,1863,1869,1875,1881,1887
                                                                                                  ,1893,1899                        
 MAX                        Func   1854                                 scalar                    1854,1860,1872,1878,1890,1896     
 NX                         Local  1842     I(4)            4           scalar                    1845,1850,1852,1868,1870,1886,1888
 NY                         Local  1842     I(4)            4           scalar                    1846,1856,1858,1874,1876,1892,1894
 NZ                         Local  1842     I(4)            4           scalar                    1847,1862,1864,1880,1882,1898,1900
 SELF                       Dummy  1834     DRIFTERS_TYPE   2880        scalar   ARG,INOUT        1851,1852,1853,1854,1857,1858,1859
                                                                                                  ,1860,1863,1864,1865,1869,1870,187
                                                                                                  1,1872,1875,1876,1877,1878,1881,18
                                                                                                  82,1883,1887,1888,1889,1890,1893,1
                                                                                                  894,1895,1896,1899,1900,1901      
 SIZE                       Func   1845                                 scalar                    1845,1846,1847,1854,1860,1872,1878
                                                                                                  ,1890,1896                        
 X                          Dummy  1834     R(8)            8     1     1        ARG,IN           1845,1853,1854,1871,1872,1889,1890
 Y                          Dummy  1834     R(8)            8     1     1        ARG,IN           1846,1859,1860,1877,1878,1895,1896
 Z                          Dummy  1834     R(8)            8     1     1        ARG,IN           1847,1865,1883,1901               

Page 56          Source Listing                  DRIFTERS_SET_V_AXES
2021-06-01 08:54                                 drifters.F90

   1907 
   1908 !============================================================================
   1909 ! <SUBROUTINE NAME="drifters_set_domain_bounds">
   1910 !  <OVERVIEW>
   1911 !  Set boundaries of "data" and "compute" domains
   1912 !  </OVERVIEW>
   1913 !  <DESCRIPTION>
   1914 !  Each particle will be tracked sol long is it is located in the data domain.
   1915 !  </DESCRIPTION>
   1916 !  <TEMPLATE>
   1917 !   call   drifters_set_domain_bounds(self, domain, backoff_x, backoff_y, ermesg)
   1918 !
   1919 !  </TEMPLATE>
   1920 !  <INOUT NAME="self" TYPE="drifters_type" DIM="SCALAR" UNITS="" DEFAULT="">
   1921 !  Opaque data structure.
   1922 !  </INOUT>
   1923 !  <INOUT NAME="domain" TYPE="" DIM="SCALAR" UNITS="" DEFAULT="">
   1924 !  Instance of Domain2D (see mpp_domain)
   1925 !  </INOUT>
   1926 !  <IN NAME="backoff_x" TYPE="integer" DIM="SCALAR" UNITS="" DEFAULT="">
   1927 !  Data domain is reduced (if backoff_x > 0) by backoff_x nodes at east and west boundaries.
   1928 !  </IN>
   1929 !  <IN NAME="backoff_y" TYPE="integer" DIM="SCALAR" UNITS="" DEFAULT="">
   1930 !  Data domain is reduced (if backoff_y > 0) by backoff_y nodes at north and south boundaries.
   1931 !  </IN>
   1932 !  <OUT NAME="ermesg" TYPE="character" DIM="SCALAR" UNITS="" DEFAULT="">
   1933 !  Error message (if any).
   1934 !  </OUT>
   1935 ! </SUBROUTINE>
   1936 !
   1937 !> @brief Set boundaries of "data" and "compute" domains
   1938 !! @details Each particle will be tracked sol long is it is located in the data domain.
   1939   subroutine drifters_set_domain_bounds(self, domain, backoff_x, backoff_y, ermesg)
   1940     type(drifters_type) :: self !< Opaque data structure.
   1941     type(domain2d)      :: domain !< Instance of Domain2D (see mpp_domain)
   1942     integer, intent(in) ::  backoff_x !< particles leaves domain when crossing ied-backoff_x
   1943     integer, intent(in) ::  backoff_y !< particles leaves domain when crossing jed-backoff_y
   1944     character(len=*), intent(out) :: ermesg !< Error message (if any).
   1945 
   1946     ermesg = ''
   1947 
   1948     if(.not.allocated(self%xu) .or. .not.allocated(self%yu)) then
   1949        ermesg = 'drifters_set_domain_bounds: ERROR "u"-component axes not set'
   1950        return
   1951     endif
   1952     call drifters_comm_set_domain(self%comm, domain, self%xu, self%yu, backoff_x, backoff_y)
   1953     if(.not.allocated(self%xv) .or. .not.allocated(self%yv)) then
   1954        ermesg = 'drifters_set_domain_bounds: ERROR "v"-component axes not set'
   1955        return
   1956     endif
   1957     if(allocated(self%xw) .and. allocated(self%yw)) then
   1958        call drifters_comm_set_domain(self%comm, domain, self%xv, self%yv, backoff_x, backoff_y)
   1959     endif
   1960 
   1961 
   1962   end subroutine drifters_set_domain_bounds

Page 57          Source Listing                  DRIFTERS_SET_DOMAIN_BOUNDS
2021-06-01 08:54 Entry Points                    drifters.F90



ENTRY POINTS

  Name                                                   
                                                         
 drifters_mod_mp_drifters_set_domain_bounds_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ALLOCATED                  Func   1948                                 scalar                    1948,1953,1957                    
 BACKOFF_X                  Dummy  1939     I(4)            4           scalar   ARG,IN           1952,1958                         
 BACKOFF_Y                  Dummy  1939     I(4)            4           scalar   ARG,IN           1952,1958                         
 DOMAIN                     Dummy  1939     DOMAIN2D        752         scalar   ARG,INOUT        1952,1958                         
 DRIFTERS_COMM_SET_DOMAIN   Subr   1952                                          PRIV             170,1952,1958                     
 DRIFTERS_SET_DOMAIN_BOUNDS Subr   1939                                                                                             
 ERMESG                     Dummy  1939     CHAR                        scalar   ARG,OUT          1946,1949,1954                    
 SELF                       Dummy  1939     DRIFTERS_TYPE   2880        scalar   ARG,INOUT        1948,1952,1953,1957,1958          

Page 58          Source Listing                  DRIFTERS_SET_DOMAIN_BOUNDS
2021-06-01 08:54                                 drifters.F90

   1963 
   1964 !============================================================================
   1965 ! <SUBROUTINE NAME="drifters_positions2lonlat">
   1966 !  <OVERVIEW>
   1967 !  Interpolates positions onto longitude/latitude grid.
   1968 !  </OVERVIEW>
   1969 !  <DESCRIPTION>
   1970 !  In many cases, the integrated positions will not be longitudes  or latitudes. This call
   1971 !  can be ionvoked to recover the longitude/latitude positions from the "logical" positions.
   1972 !  </DESCRIPTION>
   1973 !  <TEMPLATE>
   1974 !   call   drifters_positions2lonlat(self, positions, &
   1975 !     &                                        x1, y1, geolon1, &
   1976 !     &                                        x2, y2, geolat2, &
   1977 !     &                                        lons, lats, &
   1978 !     &                                        ermesg)
   1979 !
   1980 !  </TEMPLATE>
   1981 !  <INOUT NAME="self" TYPE="drifters_type" DIM="SCALAR" UNITS="" DEFAULT="">
   1982 !  Opaque data structure.
   1983 !  </INOUT>
   1984 !  <IN NAME="positions" TYPE="real" DIM="" UNITS="" DEFAULT="">
   1985 !  Logical positions.
   1986 !  </IN>
   1987 !  <IN NAME="x1" TYPE="real" DIM="" UNITS="" DEFAULT="">
   1988 !  X-axis of "geolon1" field.
   1989 !  </IN>
   1990 !  <INOUT NAME="y1" TYPE="" DIM="" UNITS="" DEFAULT="">
   1991 !  Y-axis of "geolon1" field.
   1992 !  </INOUT>
   1993 !  <INOUT NAME="geolon1" TYPE="" DIM="" UNITS="" DEFAULT="">
   1994 !  Longitude field as an array of (x1, y1).
   1995 !  </INOUT>
   1996 !  <IN NAME="x2" TYPE="real" DIM="" UNITS="" DEFAULT="">
   1997 !  X-axis of "geolat2" field.
   1998 !  </IN>
   1999 !  <INOUT NAME="y2" TYPE="" DIM="" UNITS="" DEFAULT="">
   2000 !  Y-axis of "geolat2" field.
   2001 !  </INOUT>
   2002 !  <INOUT NAME="geolat2" TYPE="" DIM="" UNITS="" DEFAULT="">
   2003 !  Latitude field as an array of (x2, y2)
   2004 !  </INOUT>
   2005 !  <OUT NAME="lons" TYPE="real" DIM="" UNITS="" DEFAULT="">
   2006 !  Returned longitudes.
   2007 !  </OUT>
   2008 !  <INOUT NAME="lats" TYPE="" DIM="" UNITS="" DEFAULT="">
   2009 !  Returned latitudes.
   2010 !  </INOUT>
   2011 !  <OUT NAME="ermesg" TYPE="character" DIM="SCALAR" UNITS="" DEFAULT="">
   2012 !  Error message (if any).
   2013 !  </OUT>
   2014 ! </SUBROUTINE>
   2015 !
   2016 !> @brief Interpolates positions onto longitude/latitude grid.
   2017 !! @details In many cases, the integrated positions will not be longitudes  or latitudes. This call
   2018 !!  can be ionvoked to recover the longitude/latitude positions from the "logical" positions.
   2019   subroutine drifters_positions2lonlat(self, positions, &

Page 59          Source Listing                  DRIFTERS_POSITIONS2LONLAT
2021-06-01 08:54                                 drifters.F90

   2020        &                                        x1, y1, geolon1, &
   2021        &                                        x2, y2, geolat2, &
   2022        &                                        lons, lats, &
   2023        &                                        ermesg)
   2024 
   2025     type(drifters_type) :: self !< Opaque data structure.
   2026 ! Input positions
   2027     real, intent(in)    :: positions(:,:) !< Logical positions.
   2028 ! Input mesh
   2029     real, intent(in)    :: x1(:) !< X-axis of "geolon1" field.
   2030     real, intent(in)    :: y1(:) !< Y-axis of "geolon1" field.
   2031     real, intent(in)    :: geolon1(:,:) !< Y-axis of "geolon1" field.
   2032     real, intent(in)    :: x2(:) !< X-axis of "geolat2" field.
   2033     real, intent(in)    :: y2(:) !< Y-axis of "geolat2" field.
   2034     real, intent(in)    :: geolat2(:,:) !< Latitude field as an array of (x2, y2)
   2035 ! Output lon/lat
   2036     real, intent(out)   :: lons(:) !< Returned longitudes.
   2037     real, intent(out)   :: lats(:) !< Returned latitudes.
   2038     character(len=*), intent(out) :: ermesg !< Error message (if any).
   2039 
   2040     real    fvals(2**self%core%nd), ts(self%core%nd)
   2041     integer np, ij(2), ip, ier, n1s(2), n2s(2), i, j, iertot
   2042     character(len=10) :: n1_str, n2_str, np_str, iertot_str
   2043 
   2044     ermesg = ''
   2045     lons = -huge(1.)
   2046     lats = -huge(1.)
   2047 
   2048 ! check dimensions
   2049     n1s = (/size(x1), size(y1)/)
   2050     n2s = (/size(x2), size(y2)/)
   2051     if(n1s(1) /= size(geolon1, 1) .or. n1s(2) /= size(geolon1, 2)) then
   2052        ermesg = 'drifters_positions2geolonlat: ERROR incompatibles dims between (x1, y1, geolon1)'
   2053        return
   2054     endif
   2055     if(n2s(1) /= size(geolat2, 1) .or. n2s(2) /= size(geolat2, 2)) then
   2056        ermesg = 'drifters_positions2geolonlat: ERROR incompatibles dims between (x2, y2, geolat2)'
   2057        return
   2058     endif
   2059 
   2060     np = size(positions, 2)
   2061     if(size(lons) < np .or. size(lats) < np) then
   2062        write(np_str, '(i10)') np
   2063        write(n1_str, '(i10)') size(lons)
   2064        write(n2_str, '(i10)') size(lats)
   2065        ermesg = 'drifters_positions2geolonlat: ERROR size of "lons" ('//trim(n1_str)// &
   2066             & ') or "lats" ('//trim(n2_str)//') < '//trim(np_str)
   2067        return
   2068     endif
   2069 
   2070 ! Interpolate
   2071     iertot = 0
   2072     do ip = 1, np
   2073 
   2074 ! get longitude
   2075        call cld_ntrp_locate_cell(x1, positions(1,ip), i, ier)
   2076        iertot = iertot + ier

Page 60          Source Listing                  DRIFTERS_POSITIONS2LONLAT
2021-06-01 08:54                                 drifters.F90

   2077        call cld_ntrp_locate_cell(y1, positions(2,ip), j, ier)
   2078        iertot = iertot + ier
   2079        ij(1) = i; ij(2) = j;
   2080        call cld_ntrp_get_cell_values(n1s, reshape((geolon1), (/size((geolon1))/) ), ij, fvals, ier)
   2081        iertot = iertot + ier
   2082        ts(1) = (positions(1,ip) - x1(i))/(x1(i+1) - x1(i))
   2083        ts(2) = (positions(2,ip) - y1(j))/(y1(j+1) - y1(j))
   2084        call cld_ntrp_linear_cell_interp(fvals, ts, lons(ip), ier)
   2085        iertot = iertot + ier
   2086 
   2087 ! get latitude
   2088        call cld_ntrp_locate_cell(x2, positions(1,ip), i, ier)
   2089        iertot = iertot + ier
   2090        call cld_ntrp_locate_cell(y2, positions(2,ip), j, ier)
   2091        iertot = iertot + ier
   2092        ij(1) = i; ij(2) = j;
   2093        call cld_ntrp_get_cell_values(n2s, reshape((geolat2), (/size((geolat2))/) ), ij, fvals, ier)
   2094        iertot = iertot + ier
   2095        ts(1) = (positions(1,ip) - x2(i))/(x2(i+1) - x2(i))
   2096        ts(2) = (positions(2,ip) - y2(j))/(y2(j+1) - y2(j))
   2097        call cld_ntrp_linear_cell_interp(fvals, ts, lats(ip), ier)
   2098        iertot = iertot + ier
   2099 
   2100     enddo
   2101 
   2102   if(iertot /= 0) then
   2103      write(iertot_str, '(i10)') iertot
   2104      ermesg = 'drifters_positions2geolonlat: ERROR '//trim(iertot_str)// &
   2105           & ' interpolation errors (domain out of bounds?)'
   2106   endif
   2107 
   2108   end subroutine drifters_positions2lonlat

Page 61          Source Listing                  DRIFTERS_POSITIONS2LONLAT
2021-06-01 08:54 Entry Points                    drifters.F90



ENTRY POINTS

  Name                                                  
                                                        
 drifters_mod_mp_drifters_positions2lonlat_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 DRIFTERS_POSITIONS2LONLAT  Subr   2019                                                                                             
 ERMESG                     Dummy  2023     CHAR                        scalar   ARG,OUT          2044,2052,2056,2065,2104          
 FVALS                      Local  2040     R(8)            8     1     0        TGT              2080,2084,2093,2097               
 GEOLAT2                    Dummy  2021     R(8)            8     2     1        ARG,IN           2055,2093                         
 GEOLON1                    Dummy  2020     R(8)            8     2     1        ARG,IN           2051,2080                         
 HUGE                       Func   2045                                 scalar                    2045,2046                         
 I                          Local  2041     I(4)            4           scalar                    2075,2079,2082,2088,2092,2095     
 IER                        Local  2041     I(4)            4           scalar                    2075,2076,2077,2078,2080,2081,2084
                                                                                                  ,2085,2088,2089,2090,2091,2093,209
                                                                                                  4,2097,2098                       
 IERTOT                     Local  2041     I(4)            4           scalar                    2071,2076,2078,2081,2085,2089,2091
                                                                                                  ,2094,2098,2102,2103              
 IERTOT_STR                 Local  2042     CHAR            10          scalar                    2103,2104                         
 IJ                         Local  2041     I(4)            4     1     2        TGT              2079,2080,2092,2093               
 IP                         Local  2041     I(4)            4           scalar                    2072,2075,2077,2082,2083,2084,2088
                                                                                                  ,2090,2095,2096,2097              
 J                          Local  2041     I(4)            4           scalar                    2077,2079,2083,2090,2092,2096     
 LATS                       Dummy  2022     R(8)            8     1     1        ARG,OUT          2046,2061,2064,2097               
 LONS                       Dummy  2022     R(8)            8     1     1        ARG,OUT          2045,2061,2063,2084               
 N1S                        Local  2041     I(4)            4     1     2        TGT              2049,2051,2080                    
 N1_STR                     Local  2042     CHAR            10          scalar                    2063,2065                         
 N2S                        Local  2041     I(4)            4     1     2        TGT              2050,2055,2093                    
 N2_STR                     Local  2042     CHAR            10          scalar                    2064,2066                         
 NP                         Local  2041     I(4)            4           scalar                    2060,2061,2062,2072               
 NP_STR                     Local  2042     CHAR            10          scalar                    2062,2066                         
 POSITIONS                  Dummy  2019     R(8)            8     2     1        ARG,IN           2060,2075,2077,2082,2083,2088,2090
                                                                                                  ,2095,2096                        
 RESHAPE                    Func   2080                                 scalar                    2080,2093                         
 SELF                       Dummy  2019     DRIFTERS_TYPE   2880        scalar   ARG,INOUT        2040                              
 SIZE                       Func   2049                                 scalar                    2049,2050,2051,2055,2060,2061,2063
                                                                                                  ,2064,2080,2093                   
 TRIM                       Func   2065                                 scalar                    2065,2066,2104                    
 TS                         Local  2040     R(8)            8     1     0        TGT              2082,2083,2084,2095,2096,2097     
 X1                         Dummy  2020     R(8)            8     1     1        ARG,IN           2049,2075,2082                    
 X2                         Dummy  2021     R(8)            8     1     1        ARG,IN           2050,2088,2095                    
 Y1                         Dummy  2020     R(8)            8     1     1        ARG,IN           2049,2077,2083                    
 Y2                         Dummy  2021     R(8)            8     1     1        ARG,IN           2050,2090,2096                    

Page 62          Source Listing                  DRIFTERS_POSITIONS2LONLAT
2021-06-01 08:54                                 drifters.F90

   2109 
   2110 !============================================================================
   2111 ! <SUBROUTINE NAME="drifters_print_checksums">
   2112 !  <OVERVIEW>
   2113 !  Print Runge-Kutta check sums.
   2114 !  </OVERVIEW>
   2115 !  <DESCRIPTION>
   2116 !  Useful for debugging only.
   2117 !  </DESCRIPTION>
   2118 !  <TEMPLATE>
   2119 !   call   drifters_print_checksums(self, pe, ermesg)
   2120 !
   2121 !  </TEMPLATE>
   2122 !  <INOUT NAME="self" TYPE="drifters_type" DIM="SCALAR" UNITS="" DEFAULT="">
   2123 !  Opaque handle.
   2124 !  </INOUT>
   2125 !  <IN NAME="pe" TYPE="integer" DIM="SCALAR" UNITS="" DEFAULT="">
   2126 !  Processor element.
   2127 !  </IN>
   2128 !  <OUT NAME="ermesg" TYPE="character" DIM="SCALAR" UNITS="" DEFAULT="">
   2129 !  Error message (if any).
   2130 !  </OUT>
   2131 ! </SUBROUTINE>
   2132 !
   2133 !> @brief Print Runge-Kutta check sums. Useful for debugging only.
   2134   subroutine drifters_print_checksums(self, pe, ermesg)
   2135 
   2136     type(drifters_type) :: self !< Opaque handle.
   2137     integer, intent(in), optional :: pe !< Processor element.
   2138     character(len=*), intent(out) :: ermesg !< Error message (if any).
   2139 
   2140     integer, parameter :: i8 = selected_int_kind(13)
   2141     integer(i8) :: mold, chksum_pos, chksum_k1, chksum_k2, chksum_k3, chksum_k4
   2142     integer(i8) :: chksum_tot
   2143     integer nd, np, me
   2144 
   2145     ermesg = ''
   2146 
   2147     if(.not. present(pe)) then
   2148        me = mpp_pe()
   2149     else
   2150        me = pe
   2151     endif
   2152 
   2153     if(me == mpp_pe()) then
   2154 
   2155        nd = self%core%nd
   2156        np = self%core%np
   2157        chksum_pos = transfer(sum(sum(self%core%positions(1:nd,1:np),1)), mold)
   2158        chksum_k1  = transfer(sum(sum(self%rk4_k1(1:nd,1:np),1)), mold)
   2159        chksum_k2  = transfer(sum(sum(self%rk4_k2(1:nd,1:np),1)), mold)
   2160        chksum_k3  = transfer(sum(sum(self%rk4_k3(1:nd,1:np),1)), mold)
   2161        chksum_k4  = transfer(sum(sum(self%rk4_k4(1:nd,1:np),1)), mold)
   2162        chksum_tot = chksum_pos + chksum_k1 + chksum_k2 + chksum_k3 +chksum_k4
   2163 
   2164        print *,'==============drifters checksums=========================='
   2165        print '(a,i25,a,i6,a,e15.7)','==positions: ', chksum_pos,  ' PE=', me, ' time = ', self%time

Page 63          Source Listing                  DRIFTERS_PRINT_CHECKSUMS
2021-06-01 08:54                                 drifters.F90

   2166        print '(a,i25,a,i6,a,e15.7)','==k1       : ', chksum_k1,   ' PE=', me, ' time = ', self%time
   2167        print '(a,i25,a,i6,a,e15.7)','==k2       : ', chksum_k2,   ' PE=', me, ' time = ', self%time
   2168        print '(a,i25,a,i6,a,e15.7)','==k3       : ', chksum_k3,   ' PE=', me, ' time = ', self%time
   2169        print '(a,i25,a,i6,a,e15.7)','==k4       : ', chksum_k4,   ' PE=', me, ' time = ', self%time
   2170        print '(a,i25,a,i6,a,e15.7)','==total    : ', chksum_tot,  ' PE=', me, ' time = ', self%time
   2171 
   2172     endif
   2173 
   2174   end subroutine drifters_print_checksums


ENTRY POINTS

  Name                                                 
                                                       
 drifters_mod_mp_drifters_print_checksums_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 CHKSUM_K1                  Local  2141     I(8)            8           scalar                    2158,2162,2166                    
 CHKSUM_K2                  Local  2141     I(8)            8           scalar                    2159,2162,2167                    
 CHKSUM_K3                  Local  2141     I(8)            8           scalar                    2160,2162,2168                    
 CHKSUM_K4                  Local  2141     I(8)            8           scalar                    2161,2162,2169                    
 CHKSUM_POS                 Local  2141     I(8)            8           scalar                    2157,2162,2165                    
 CHKSUM_TOT                 Local  2142     I(8)            8           scalar                    2162,2170                         
 DRIFTERS_PRINT_CHECKSUMS   Subr   2134                                                                                             
 ERMESG                     Dummy  2134     CHAR                        scalar   ARG,OUT          2145                              
 I8                         Param  2140     I(4)            4           scalar                    2141,2142                         
 ME                         Local  2143     I(4)            4           scalar                    2148,2150,2153,2165,2166,2167,2168
                                                                                                  ,2169,2170                        
 MOLD                       Local  2141     I(8)            8           scalar                    2157,2158,2159,2160,2161          
 ND                         Local  2143     I(4)            4           scalar                    2155,2157,2158,2159,2160,2161     
 NP                         Local  2143     I(4)            4           scalar                    2156,2157,2158,2159,2160,2161     
 PE                         Dummy  2134     I(4)            4           scalar   ARG,IN           2147,2150                         
 PRESENT                    Func   2147                                 scalar                    2147                              
 SELECTED_INT_KIND          Func   2140                                 scalar                    2140                              
 SELF                       Dummy  2134     DRIFTERS_TYPE   2880        scalar   ARG,INOUT        2155,2156,2157,2158,2159,2160,2161
                                                                                                  ,2165,2166,2167,2168,2169,2170    
 SUM                        Func   2157                                 scalar                    2157,2158,2159,2160,2161          
 TRANSFER                   Func   2157                                 scalar                    2157,2158,2159,2160,2161          

Page 64          Source Listing                  DRIFTERS_PRINT_CHECKSUMS
2021-06-01 08:54                                 drifters.F90

   2175 
   2176   subroutine drifters_reset_rk4(self, ermesg)
   2177     type(drifters_type) :: self
   2178     character(len=*), intent(out) :: ermesg
   2179 
   2180     integer ier, nd
   2181 
   2182     ermesg = ''
   2183 
   2184     if(size(self%rk4_k1, 2) < self%core%np) then
   2185        deallocate(self%rk4_k1, stat=ier)
   2186        allocate(self%rk4_k1(self%core%nd, self%core%npdim))
   2187        self%rk4_k1 = 0
   2188     endif
   2189     if(size(self%rk4_k2, 2) < self%core%np) then
   2190        deallocate(self%rk4_k2, stat=ier)
   2191        allocate(self%rk4_k2(self%core%nd, self%core%npdim))
   2192        self%rk4_k2 = 0
   2193     endif
   2194     if(size(self%rk4_k3, 2) < self%core%np) then
   2195        deallocate(self%rk4_k3, stat=ier)
   2196        allocate(self%rk4_k3(self%core%nd, self%core%npdim))
   2197        self%rk4_k3 = 0
   2198     endif
   2199     if(size(self%rk4_k4, 2) < self%core%np) then
   2200        deallocate(self%rk4_k4, stat=ier)
   2201        allocate(self%rk4_k4(self%core%nd, self%core%npdim))
   2202        self%rk4_k4 = 0
   2203     endif
   2204 
   2205     if(size(self%remove) < self%core%np) then
   2206        deallocate(self%remove, stat=ier)
   2207        allocate(self%remove(self%core%npdim))
   2208        self%remove = .FALSE.
   2209     endif
   2210 
   2211     if(size(self%temp_pos, 2) < self%core%np) then
   2212        deallocate(self%temp_pos, stat=ier)
   2213        nd = size(self%input%velocity_names)
   2214        allocate(self%temp_pos(nd, self%core%npdim))
   2215        self%temp_pos = -huge(1.)
   2216     endif
   2217 
   2218   end subroutine drifters_reset_rk4

Page 65          Source Listing                  DRIFTERS_RESET_RK4
2021-06-01 08:54 Entry Points                    drifters.F90



ENTRY POINTS

  Name                                           
                                                 
 drifters_mod_mp_drifters_reset_rk4_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 DRIFTERS_RESET_RK4         Subr   2176                                                           752,826,909,987                   
 ERMESG                     Dummy  2176     CHAR                        scalar   ARG,OUT          2182                              
 HUGE                       Func   2215                                 scalar                    2215                              
 IER                        Local  2180     I(4)            4           scalar                    2185,2190,2195,2200,2206,2212     
 ND                         Local  2180     I(4)            4           scalar                    2213,2214                         
 SELF                       Dummy  2176     DRIFTERS_TYPE   2880        scalar   ARG,INOUT        2184,2185,2186,2187,2189,2190,2191
                                                                                                  ,2192,2194,2195,2196,2197,2199,220
                                                                                                  0,2201,2202,2205,2206,2207,2208,22
                                                                                                  11,2212,2213,2214,2215            
 SIZE                       Func   2184                                 scalar                    2184,2189,2194,2199,2205,2211,2213

Page 66          Source Listing                  DRIFTERS_RESET_RK4
2021-06-01 08:54                                 drifters.F90

   2219 
   2220 end module drifters_mod


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 Assignment (=)                    161                                                                                              
 CLOUD_INTERPOLATOR_MOD     Module 172                                                            172                               
 DRFT_EMPTY_ARRAY           Local  209      R(8)            8     1     0                                                           
 DRIFTERS_COMM_MOD          Module 169                                                            169                               
 DRIFTERS_COMM_TYPE         Type   169                                  scalar   PRIV             169,219                           
 DRIFTERS_CORE_MOD          Module 161                                                            161                               
 DRIFTERS_CORE_TYPE         Type   161                                  scalar                    161,216                           
 DRIFTERS_DISTRIBUTE        Subr   179                                                            179                               
 DRIFTERS_INPUT_MOD         Module 163                                                            163                               
 DRIFTERS_INPUT_TYPE        Type   163                                  scalar                    163,217                           
 DRIFTERS_IO_MOD            Module 165                                                            165                               
 DRIFTERS_IO_TYPE           Type   165                                  scalar   PRIV             165,218                           
 DRIFTERS_MOD               Module 85                                                                                               
 DRIFTERS_NEW               Subr   177                                                            177                               
 DRIFTERS_PRINT_CHECKSUMS   Subr   179                                                            179                               
 DRIFTERS_PUSH              Local  259                                  scalar                    176                               
 DRIFTERS_SAVE              Subr   179                                                            179                               
 DRIFTERS_SET_DOMAIN        Subr   177                                                            177                               
 DRIFTERS_SET_DOMAIN_BOUNDS Subr   178                                                            178                               
 DRIFTERS_SET_FIELD         Local  269                                  scalar                    176                               
 DRIFTERS_SET_PE_NEIGHBORS  Subr   177                                                            177                               
 DRIFTERS_SET_V_AXES        Subr   178                                                            178                               
 DRIFTERS_WRITE_RESTART     Subr   179                                                            179                               
 MPP_DOMAINS_MOD            Module 153                                                            153                               
 MPP_MOD                    Module 152                                                            152                               
 VERSION                    Param  206      CHAR            7           scalar                                                      

Page 67          Source Listing                  DRIFTERS_RESET_RK4
2021-06-01 08:54 Subprograms/Common Blocks       drifters.F90



SUBPROGRAMS/COMMON BLOCKS

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 DRIFTERS_COMPUTEK2D        Subr   1476                                          PRIV             755,768,776,789,831               
 DRIFTERS_COMPUTEK3D        Subr   1621                                          PRIV             912,926,935,949,992               
 DRIFTERS_COPY_NEW          Subr   473                                           PRIV                                               
 DRIFTERS_DEL               Subr   415                                                                                              
 DRIFTERS_DISTRIBUTE        Subr   1306                                                                                             
 DRIFTERS_MOD               Module 85                                                                                               
 DRIFTERS_MODULO            Subr   1015                                                           802,963                           
 DRIFTERS_NEW               Subr   309                                                                                              
 DRIFTERS_POSITIONS2LONLAT  Subr   2019                                                                                             
 DRIFTERS_PRINT_CHECKSUMS   Subr   2134                                                                                             
 DRIFTERS_PUSH_2            Subr   721                                           PRIV                                               
 DRIFTERS_PUSH_3            Subr   876                                           PRIV                                               
 DRIFTERS_RESET_RK4         Subr   2176                                                           752,826,909,987                   
 DRIFTERS_SAVE              Subr   1266                                                                                             
 DRIFTERS_SET_DOMAIN        Subr   612                                                                                              
 DRIFTERS_SET_DOMAIN_BOUNDS Subr   1939                                                                                             
 DRIFTERS_SET_FIELD_2D      Subr   1068                                          PRIV                                               
 DRIFTERS_SET_FIELD_3D      Subr   1162                                          PRIV                                               
 DRIFTERS_SET_PE_NEIGHBORS  Subr   685                                                                                              
 DRIFTERS_SET_V_AXES        Subr   1834                                                                                             
 DRIFTERS_WRITE_RESTART     Subr   1389                                                                                             

COMPILER OPTIONS BEING USED

       -align noall                          -align nonone
       -align nocommons                      -align nodcommons
       -align noqcommons                     -align nozcommons
       -align records                        -align nosequence
       -align norec1byte                     -align norec2byte
       -align norec4byte                     -align norec8byte
       -align norec16byte                    -align norec32byte
       -align norec64byte                    -align noarray8byte
       -align noarray16byte                  -align noarray32byte
       -align noarray64byte                  -align noarray128byte
       -align noarray256byte                 -altparam
       -assume accuracy_sensitive            -assume nobscc
       -assume nobuffered_io                 -assume nobuffered_stdout
       -assume byterecl                      -assume nocontiguous_assumed_shape
       -assume nocontiguous_pointer          -assume cc_omp
       -assume nocstring                     -assume nodummy_aliases
       -assume nofpe_summary                 -assume noieee_fpe_flags
       -assume nominus0                      -assume noold_boz
       -assume old_complex_align             -assume old_unit_star
       -assume old_inquire_recl              -assume old_ldout_format
       -assume old_ldout_zero                -assume noold_logical_assign
       -assume noold_logical_ldio            -assume old_maxminloc
       -assume old_xor                       -assume noprotect_allocates
       -assume protect_constants             -assume noprotect_parens
       -assume split_common                  -assume source_include
       -assume nostd_intent_in               -assume std_minus0_rounding
       -assume nostd_mod_proc_name           -assume std_value

Page 68          Source Listing                  DRIFTERS_RESET_RK4
2021-06-01 08:54                                 drifters.F90

       -assume realloc_lhs                   -assume underscore
       -assume no2underscores                -assume norecursion
       -auto                            no   -auto_scalar
  no   -bintext                              -ccdefault default
       -check noarg_temp_created             -check noassume
       -check nobounds                       -check nocontiguous
       -check noformat                       -check nooutput_conversion
       -check nooverflow                     -check nopointers
       -check noshape                        -check nostack
       -check nouninitialized                -check noudio_iostat
       -coarray-num-procs 0             no   -coarray-config-file
       -convert native                       -cross_reference
       -D __INTEL_COMPILER=1910              -D __INTEL_COMPILER_UPDATE=0
       -D __unix__                           -D __unix
       -D __linux__                          -D __linux
       -D __gnu_linux__                      -D unix
       -D linux                              -D __ELF__
       -D __x86_64                           -D __x86_64__
       -D __amd64                            -D __amd64__
       -D __INTEL_COMPILER_BUILD_DATE=20191121       -D _OPENMP=201611
       -D __INTEL_OFFLOAD                    -D __MMX__
       -D __SSE__                            -D __SSE_MATH__
       -D __SSE2__                           -D __SSE2_MATH__
       -D __pentium4                         -D __pentium4__
       -D __tune_pentium4__                  -D PACKAGE_NAME='"GFDL FMS Library"'
       -D PACKAGE_TARNAME='"FMS"'            -D PACKAGE_VERSION='"2021.02.0"'
       -D PACKAGE_STRING='"GFDL FMS Library 2021.02.0"'       -D PACKAGE_BUGREPORT='"gfdl.climate.model.info@noaa.gov"'
       -D PACKAGE_URL='"https://www.gfdl.noaa.gov/fms"'       -D PACKAGE='"FMS"'
       -D VERSION='"2021.02.0"'              -D STDC_HEADERS=1
       -D HAVE_SYS_TYPES_H=1                 -D HAVE_SYS_STAT_H=1
       -D HAVE_STDLIB_H=1                    -D HAVE_STRING_H=1
       -D HAVE_MEMORY_H=1                    -D HAVE_STRINGS_H=1
       -D HAVE_INTTYPES_H=1                  -D HAVE_STDINT_H=1
       -D HAVE_UNISTD_H=1                    -D HAVE_DLFCN_H=1
       -D LT_OBJDIR='".libs/"'               -D HAVE_MPI_H=1
       -D HAVE_NETCDF_H=1                    -D HAVE_SCHED_GETAFFINITY=1
       -D HAVE_MOD_MPI=1                     -D HAVE_MOD_NETCDF=1
       -D HAVE_CRAY_POINTER=1                -D HAVE_QUAD_PRECISION=1
       -D HAVE_INTERNAL_NML=1                -D use_netCDF=1
       -D use_libMPI=1                       -D INTERNAL_FILE_NML
       -double_size 64                  no   -d_lines
  no   -Qdyncom                              -error_limit 30
  no   -f66                             no   -f77rtl
  no   -fast                                 -fpscomp nofilesfromcmd
       -fpscomp nogeneral                    -fpscomp noioformat
       -fpscomp noldio_spacing               -fpscomp nologicals
  no   -fpconstant                           -fpe3
       -fprm nearest                         -ftz
       -fp_model noprecise                   -fp_model fast
       -fp_model nostrict                    -fp_model nosource
       -fp_model nodouble                    -fp_model noextended
       -fp_model novery_fast                 -fp_model noexcept
       -fp_model nono_except                 -fp_modbits nofp_contract
       -fp_modbits nono_fp_contract          -fp_modbits nofenv_access
       -fp_modbits nono_fenv_access          -fp_modbits nocx_limited_range
       -fp_modbits nono_cx_limited_range       -fp_modbits noprec_div
       -fp_modbits nono_prec_div             -fp_modbits noprec_sqrt

Page 69          Source Listing                  DRIFTERS_RESET_RK4
2021-06-01 08:54                                 drifters.F90

       -fp_modbits nono_prec_sqrt            -fp_modbits ftz
       -fp_modbits nono_ftz                  -fp_modbits nointrin_limited_range
       -fp_modbits nono_intrin_limited_range       -fp_modbits notrunc_compares
       -fp_modbits nono_trunc_compares       -fp_modbits noieee_nan_compares
       -fp_modbits nono_ieee_nan_compares       -fp_modbits honor_f32_conversion
       -fp_modbits nono_honor_f32_conversion       -fp_modbits honor_f64_conversion
       -fp_modbits nono_honor_f64_conversion       -fp_modbits nono_x87_copy
       -fp_modbits nono_no_x87_copy          -fp_modbits noexception_semantics
       -fp_modbits nono_exception_semantics       -fp_modbits noprecise_libm_functions
       -fp_modbits nono_precise_libm_functions       -heap_arrays 0
  no   -threadprivate_compat                 -free
       -g2                                   -iface nomixed_str_len_arg
       -iface nono_mixed_str_len_arg         -init noarrays
       -init nohuge                          -init noinfinity
       -init nominus_huge                    -init nominus_infinity
       -init nominus_tiny                    -init nonan
       -init nosnan                          -init notiny
       -init nozero                     no   -intconstant
       -integer_size 32                 no   -mixed_str_len_arg
       -module ../.mods                      -names lowercase
  no   -noinclude                       no   -o
       -offload-build=host                   -openmp
       -openmp-simd                          -openmp-offload
       -O0                              no   -pad_source
       -real_size 64                    no   -recursive
       -reentrancy threaded                  -vec=simd
       -show nofullpath                      -show noinclude
       -show map                             -show options
  no   -syntax_only                     no   -threadcom
  no   -U                               no   -vms
       -w noall                              -w nonone
       -w noalignments                       -w nodeclarations
       -w noexternals                        -w nogeneral
       -w noignore_bounds                    -w noignore_loc
       -w nointerfaces                       -w noshape
       -w notruncated_source                 -w nouncalled
       -w nouninitialized                    -w nounused
       -w nousage                       no   -wrap-margins

       -includepath : /opt/netcdf/4.6.1/INTEL/include/,/opt/intel/2020/compilers_and_libraries/linux/pstl/include/,
           /opt/intel/2020/compilers_and_libraries_2020.0.166/linux/compiler/include/,.f90,./.f90,./.f90,../include/.f90,
           ./.f90,/opt/netcdf/4.6.1/INTEL/include/.f90,/opt/intel/2020/compilers_and_libraries/linux/mpi/intel64/include/.f90,
           /opt/intel/2020/compilers_and_libraries/linux/mpi/intel64/include/.f90,/opt/intel/2020/compilers_and_libraries/linux/ipp/include/.f90,
           /opt/intel/2020/compilers_and_libraries/linux/mkl/include/.f90,/opt/intel/2020/compilers_and_libraries/linux/pstl/include/.f90,
           /opt/intel/2020/compilers_and_libraries/linux/tbb/include/.f90,/opt/intel/2020/compilers_and_libraries/linux/daal/include/.f90,
           /opt/intel/2020/compilers_and_libraries_2020.0.166/linux/compiler/include/intel64/.f90,/opt/intel/2020/compilers_and_libraries_2020.0.166/linux/compiler/include/icc/.f90,
           /opt/intel/2020/compilers_and_libraries_2020.0.166/linux/compiler/include/.f90,/usr/local/include/.f90,
           /usr/lib/gcc/x86_64-redhat-linux/4.8.5/include/.f90,/usr/include/.f90,/usr/include/.f90,/usr/include/.f90
       -list filename : drifters.lst
  no   -o

COMPILER: Intel(R) Fortran 19.1-1555
