Page 1           Source Listing                  MOSAIC_INIT
2021-06-01 08:54                                 /tmp/ifortKdEFmn.i90

      1 # 1 "mosaic.F90"
      2 !***********************************************************************
      3 !*                   GNU Lesser General Public License
      4 !*
      5 !* This file is part of the GFDL Flexible Modeling System (FMS).
      6 !*
      7 !* FMS is free software: you can redistribute it and/or modify it under
      8 !* the terms of the GNU Lesser General Public License as published by
      9 !* the Free Software Foundation, either version 3 of the License, or (at
     10 !* your option) any later version.
     11 !*
     12 !* FMS is distributed in the hope that it will be useful, but WITHOUT
     13 !* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
     14 !* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
     15 !* for more details.
     16 !*
     17 !* You should have received a copy of the GNU Lesser General Public
     18 !* License along with FMS.  If not, see <http://www.gnu.org/licenses/>.
     19 !***********************************************************************
     20 module mosaic_mod
     21 
     22 ! <CONTACT EMAIL="Zhi.Liang@noaa.gov">
     23 !   Zhi Liang
     24 ! </CONTACT>
     25 
     26 ! <HISTORY SRC="http://www.gfdl.noaa.gov/fms-cgi-bin/cvsweb.cgi/FMS/"/>
     27 
     28 ! <OVERVIEW>
     29 !    <TT>mosaic_mod</TT> implements some utility routines to read mosaic information.
     30 ! </OVERVIEW>
     31 
     32 ! <DESCRIPTION>
     33 !    <TT>mosaic_mod</TT> implements some utility routines to read mosaic information.
     34 !    The information includes number of tiles and contacts in the mosaic,
     35 !    mosaic grid resolution of each tile, mosaic contact information, mosaic exchange
     36 !    grid information. Each routine will call a C-version routine to get these information.
     37 ! </DESCRIPTION>
     38 
     39 use mpp_mod,    only : mpp_error, FATAL, mpp_pe, mpp_root_pe
     40 use mpp_io_mod, only : MPP_MULTI
     41 use fms_io_mod, only : dimension_size, field_exist, read_data, read_compressed
     42 use constants_mod, only : PI, RADIUS
     43 
     44 implicit none
     45 private
     46 
     47 character(len=*), parameter :: &
     48      grid_dir  = 'INPUT/'      ! root directory for all grid files
     49 
     50 integer, parameter :: &
     51      MAX_NAME = 256,  & ! max length of the variable names
     52      MAX_FILE = 1024, & ! max length of the file names
     53      X_REFINE = 2,    & ! supergrid size/model grid size in x-direction
     54      Y_REFINE = 2       ! supergrid size/model grid size in y-direction
     55 
     56 ! --- public interface
     57 

Page 2           Source Listing                  MOSAIC_INIT
2021-06-01 08:54                                 mosaic.F90

     58 
     59 public :: get_mosaic_ntiles
     60 public :: get_mosaic_ncontacts
     61 public :: get_mosaic_grid_sizes
     62 public :: get_mosaic_contact
     63 public :: get_mosaic_xgrid_size
     64 public :: get_mosaic_xgrid
     65 public :: calc_mosaic_grid_area
     66 public :: calc_mosaic_grid_great_circle_area
     67 public :: is_inside_polygon
     68 
     69 logical :: module_is_initialized = .true.
     70 ! Include variable "version" to be written to log file.
     71 # 1 "../include/file_version.h" 1 
     72 ! -*-f90-*-
     73 !***********************************************************************
     74 !*                   GNU Lesser General Public License
     75 !*
     76 !* This file is part of the GFDL Flexible Modeling System (FMS).
     77 !*
     78 !* FMS is free software: you can redistribute it and/or modify it under
     79 !* the terms of the GNU Lesser General Public License as published by
     80 !* the Free Software Foundation, either version 3 of the License, or (at
     81 !* your option) any later version.
     82 !*
     83 !* FMS is distributed in the hope that it will be useful, but WITHOUT
     84 !* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
     85 !* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
     86 !* for more details.
     87 !*
     88 !* You should have received a copy of the GNU Lesser General Public
     89 !* License along with FMS.  If not, see <http://www.gnu.org/licenses/>.
     90 !***********************************************************************
     91 
     92 # 23
     93 
     94   character(len=*), parameter :: version = 'unknown'
     95 
     96 # 71 "mosaic.F90" 2 
     97 
     98 contains
     99 
    100 !#######################################################################
    101 
    102 ! <SUBROUTINE NAME="mosaic_init">
    103 !   <OVERVIEW>
    104 !     Initialize the mosaic_mod.
    105 !   </OVERVIEW>
    106 !   <DESCRIPTION>
    107 !     Initialization routine for the mosaic module. It writes the
    108 !     version information to the log file.
    109 !   </DESCRIPTION>
    110 !   <TEMPLATE>
    111 !     call mosaic_init ( )
    112 !   </TEMPLATE>
    113 subroutine mosaic_init()
    114 

Page 3           Source Listing                  MOSAIC_INIT
2021-06-01 08:54                                 mosaic.F90

    115   if (module_is_initialized) return
    116   module_is_initialized = .TRUE.
    117 
    118 !--------- write version number and namelist ------------------
    119 
    120 end subroutine mosaic_init


ENTRY POINTS

  Name                                  
                                        
 mosaic_mod_mp_mosaic_init_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 MODULE_IS_INITIALIZED      Local  115      L(4)            4           scalar                    69,115,116                        
 MOSAIC_INIT                Subr   113                                                                                              

Page 4           Source Listing                  MOSAIC_INIT
2021-06-01 08:54                                 mosaic.F90

    121 ! </SUBROUTINE>
    122 
    123 !#######################################################################
    124 ! <FUNCTION NAME="get_mosaic_xgrid_size">
    125 !   <OVERVIEW>
    126 !     return exchange grid size of mosaic xgrid file.
    127 !   </OVERVIEW>
    128 !   <DESCRIPTION>
    129 !     return exchange grid size of mosaic xgrid file.
    130 !   </DESCRIPTION>
    131 !   <TEMPLATE>
    132 !    nxgrid = get_mosaic_xgrid_size(xgrid_file)
    133 !   </TEMPLATE>
    134 !   <IN NAME="xgrid_file" TYPE="character(len=*)">
    135 !     The file that contains exchange grid information.
    136 !   </IN>
    137   function get_mosaic_xgrid_size(xgrid_file)
    138     character(len=*), intent(in)          :: xgrid_file
    139     integer                               :: get_mosaic_xgrid_size
    140 
    141     get_mosaic_xgrid_size = dimension_size(xgrid_file, "ncells", no_domain=.TRUE.)
    142 
    143     return
    144 
    145   end function get_mosaic_xgrid_size


ENTRY POINTS

  Name                                            
                                                  
 mosaic_mod_mp_get_mosaic_xgrid_size_             

Page 5           Source Listing                  GET_MOSAIC_XGRID_SIZE
2021-06-01 08:54 Symbol Table                    mosaic.F90



SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 DIMENSION_SIZE             Func   141      I(4)            4           scalar   PRIV             41,141,241,271,316,317            
 GET_MOSAIC_XGRID_SIZE      Func   137      I(4)            4           scalar                                                      
 XGRID_FILE                 Dummy  137      CHAR                        scalar   ARG,IN           141                               

Page 6           Source Listing                  GET_MOSAIC_XGRID_SIZE
2021-06-01 08:54                                 mosaic.F90

    146 ! </FUNCTION>
    147 !#######################################################################
    148 ! <SUBROUTINE NAME="get_mosaic_xgrid">
    149 !   <OVERVIEW>
    150 !     get exchange grid information from mosaic xgrid file.
    151 !   </OVERVIEW>
    152 !   <DESCRIPTION>
    153 !     get exchange grid information from mosaic xgrid file.
    154 !   </DESCRIPTION>
    155 !   <TEMPLATE>
    156 !     call get_mosaic_xgrid(xgrid_file, nxgrid, i1, j1, i2, j2, area)
    157 !   </TEMPLATE>
    158 !   <IN NAME="xgrid_file" TYPE="character(len=*)">
    159 !     The file that contains exchange grid information.
    160 !   </IN>
    161 !   <INOUT NAME="nxgrid" TYPE="integer">
    162 !     number of exchange grid in xgrid_file
    163 !   </INOUT>
    164 !   <INOUT NAME="i1, j1" TYPE="integer, dimension(:)">
    165 !     i and j-index in grid 1 of exchange grid.
    166 !   </INOUT>
    167 !   <INOUT NAME="i2, j2" TYPE="integer, dimension(:)">
    168 !     i and j-index in grid 2 of exchange grid.
    169 !   </INOUT>
    170 !   <INOUT NAME="area" TYPE="real, dimension(:)">
    171 !     area of the exchange grid. The area is scaled to represent unit earth area.
    172 !   </INOUT>
    173   subroutine get_mosaic_xgrid(xgrid_file, i1, j1, i2, j2, area, ibegin, iend)
    174     character(len=*), intent(in) :: xgrid_file
    175     integer,       intent(inout) :: i1(:), j1(:), i2(:), j2(:)
    176     real,          intent(inout) :: area(:)
    177     integer, optional, intent(in) :: ibegin, iend
    178 
    179     integer                            :: start(4), nread(4), istart
    180     real,    dimension(2, size(i1(:))) :: tile1_cell, tile2_cell
    181     integer                            :: nxgrid, n
    182     real                               :: garea
    183     real                               :: get_global_area;
    184 
    185     garea = get_global_area();
    186 
    187 ! When start and nread present, make sure nread(1) is the same as the size of the data
    188     if(present(ibegin) .and. present(iend)) then
    189        istart = ibegin
    190        nxgrid = iend - ibegin + 1
    191        if(nxgrid .NE. size(i1(:))) call mpp_error(FATAL, "get_mosaic_xgrid: nxgrid .NE. size(i1(:))")
    192        if(nxgrid .NE. size(j1(:))) call mpp_error(FATAL, "get_mosaic_xgrid: nxgrid .NE. size(j1(:))")
    193        if(nxgrid .NE. size(i2(:))) call mpp_error(FATAL, "get_mosaic_xgrid: nxgrid .NE. size(i2(:))")
    194        if(nxgrid .NE. size(j2(:))) call mpp_error(FATAL, "get_mosaic_xgrid: nxgrid .NE. size(j2(:))")
    195        if(nxgrid .NE. size(area(:))) call mpp_error(FATAL, "get_mosaic_xgrid: nxgrid .NE. size(area(:))")
    196     else
    197        istart = 1
    198        nxgrid = size(i1(:))
    199     endif
    200 
    201     start  = 1; nread = 1
    202     start(1) = istart; nread(1) = nxgrid

Page 7           Source Listing                  GET_MOSAIC_XGRID
2021-06-01 08:54                                 mosaic.F90

    203     call read_compressed(xgrid_file, 'xgrid_area', area, start=start, nread=nread, threading=MPP_MULTI)
    204     start = 1; nread = 1
    205     nread(1) = 2
    206     start(2) = istart; nread(2) = nxgrid
    207     call read_compressed(xgrid_file, 'tile1_cell', tile1_cell, start=start, nread=nread, threading=MPP_MULTI)
    208     call read_compressed(xgrid_file, 'tile2_cell', tile2_cell, start=start, nread=nread, threading=MPP_MULTI)
    209 
    210      do n = 1, nxgrid
    211        i1(n) = tile1_cell(1,n)
    212        j1(n) = tile1_cell(2,n)
    213        i2(n) = tile2_cell(1,n)
    214        j2(n) = tile2_cell(2,n)
    215        area(n) = area(n)/garea
    216     end do
    217 
    218     return
    219 
    220   end subroutine get_mosaic_xgrid


ENTRY POINTS

  Name                                       
                                             
 mosaic_mod_mp_get_mosaic_xgrid_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 AREA                       Dummy  173      R(8)            8     1     1        ARG,INOUT        195,203,215                       
 FATAL                      Param  191      I(4)            4           scalar   PRIV             39,191,192,193,194,195,311,318,319
                                                                                                  ,398,409,421,434,438,441,444,447,4
                                                                                                  50,453,456,459,467,469,471,504,546
                                                                                                  ,548,587,589,636,644              
 GAREA                      Local  182      R(8)            8           scalar                    185,215                           
 GET_GLOBAL_AREA            Func   183      R(8)            8           scalar                    185                               
 GET_MOSAIC_XGRID           Subr   173                                                                                              
 I1                         Dummy  173      I(4)            4     1     1        ARG,INOUT        191,198,211                       
 I2                         Dummy  173      I(4)            4     1     1        ARG,INOUT        193,213                           
 IBEGIN                     Dummy  173      I(4)            4           scalar   ARG,IN           188,189,190                       
 IEND                       Dummy  173      I(4)            4           scalar   ARG,IN           188,190                           
 ISTART                     Local  179      I(4)            4           scalar                    189,197,202,206                   
 J1                         Dummy  173      I(4)            4     1     1        ARG,INOUT        192,212                           
 J2                         Dummy  173      I(4)            4     1     1        ARG,INOUT        194,214                           
 MPP_ERROR                  Local  191                                  scalar   PRIV             39,191,192,193,194,195,311,318,319
                                                                                                  ,398,409,421,434,438,441,444,447,4
                                                                                                  50,453,456,459,467,469,471,504,546
                                                                                                  ,548,587,589,636,644              
 MPP_ERROR_BASIC            Subr   191                                           PRIV             191,192,193,194,195,311,318,319,39
                                                                                                  8,409,421,434,438,441,444,447,450,
                                                                                                  453,456,459,467,469,471,504,546,54
                                                                                                  8,587,589,636,644                 
 MPP_MULTI                  Param  203      I(4)            4           scalar   PRIV             40,203,207,208                    
 N                          Local  181      I(4)            4           scalar                    210,211,212,213,214,215           
 NREAD                      Local  179      I(4)            4     1     4        TGT              201,202,203,204,205,206,207,208   

Page 8           Source Listing                  GET_MOSAIC_XGRID
2021-06-01 08:54 Symbol Table                    mosaic.F90

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 NXGRID                     Local  181      I(4)            4           scalar                    190,191,192,193,194,195,198,202,20
                                                                                                  6,210                             
 PRESENT                    Func   188                                  scalar                    188                               
 READ_COMPRESSED            Local  203                                  scalar   PRIV             41,203,207,208                    
 READ_COMPRESSED_1D         Subr   203                                           PRIV             203                               
 READ_COMPRESSED_2D         Subr   207                                           PRIV             207,208                           
 SIZE                       Func   191                                  scalar                    191,192,193,194,195,198           
 START                      Local  179      I(4)            4     1     4        TGT              201,202,203,204,206,207,208       
 TILE1_CELL                 Local  180      R(8)            8     2     0        TGT              207,211,212                       
 TILE2_CELL                 Local  180      R(8)            8     2     0        TGT              208,213,214                       
 XGRID_FILE                 Dummy  173      CHAR                        scalar   ARG,IN           203,207,208                       

Page 9           Source Listing                  GET_MOSAIC_XGRID
2021-06-01 08:54                                 mosaic.F90

    221 ! </SUBROUTINE>
    222 
    223 !###############################################################################
    224 ! <SUBROUTINE NAME="get_mosaic_ntiles">
    225 !   <OVERVIEW>
    226 !     get number of tiles in the mosaic_file.
    227 !   </OVERVIEW>
    228 !   <DESCRIPTION>
    229 !     get number of tiles in the mosaic_file.
    230 !   </DESCRIPTION>
    231 !   <TEMPLATE>
    232 !     ntiles = get_mosaic_ntiles( mosaic_file)
    233 !   </TEMPLATE>
    234 !   <IN NAME="mosaic_file" TYPE="character(len=*)">
    235 !     The file that contains mosaic information.
    236 !   </IN>
    237   function get_mosaic_ntiles(mosaic_file)
    238     character(len=*), intent(in) :: mosaic_file
    239     integer                      :: get_mosaic_ntiles
    240 
    241     get_mosaic_ntiles = dimension_size(mosaic_file, "ntiles")
    242 
    243     return
    244 
    245   end function get_mosaic_ntiles


ENTRY POINTS

  Name                                        
                                              
 mosaic_mod_mp_get_mosaic_ntiles_             

Page 10          Source Listing                  GET_MOSAIC_NTILES
2021-06-01 08:54 Symbol Table                    mosaic.F90



SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 GET_MOSAIC_NTILES          Func   237      I(4)            4           scalar                                                      
 MOSAIC_FILE                Dummy  237      CHAR                        scalar   ARG,IN           241                               

Page 11          Source Listing                  GET_MOSAIC_NTILES
2021-06-01 08:54                                 mosaic.F90

    246 ! </SUBROUTINE>
    247 
    248 !###############################################################################
    249 ! <SUBROUTINE NAME="get_mosaic_ncontacts">
    250 !   <OVERVIEW>
    251 !     get number of contacts in the mosaic_file.
    252 !   </OVERVIEW>
    253 !   <DESCRIPTION>
    254 !     get number of contacts in the mosaic_file.
    255 !   </DESCRIPTION>
    256 !   <TEMPLATE>
    257 !     ntiles = get_mosaic_ncontacts( mosaic_file)
    258 !   </TEMPLATE>
    259 !   <IN NAME="mosaic_file" TYPE="character(len=*)">
    260 !     The file that contains mosaic information.
    261 !   </IN>
    262   function get_mosaic_ncontacts( mosaic_file)
    263     character(len=*), intent(in) :: mosaic_file
    264     integer                      :: get_mosaic_ncontacts
    265 
    266     character(len=len_trim(mosaic_file)+1) :: mfile
    267     integer                                :: strlen
    268     integer                                :: read_mosaic_ncontacts
    269 
    270     if(field_exist(mosaic_file, "contacts") ) then
    271       get_mosaic_ncontacts = dimension_size(mosaic_file, "ncontact", no_domain=.TRUE.)
    272     else
    273       get_mosaic_ncontacts = 0
    274     endif
    275 
    276     return
    277 
    278   end function get_mosaic_ncontacts

Page 12          Source Listing                  GET_MOSAIC_NCONTACTS
2021-06-01 08:54 Entry Points                    mosaic.F90



ENTRY POINTS

  Name                                           
                                                 
 mosaic_mod_mp_get_mosaic_ncontacts_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 FIELD_EXIST                Func   270      L(4)            4           scalar   PRIV             41,270                            
 GET_MOSAIC_NCONTACTS       Func   262      I(4)            4           scalar                                                      
 LEN_TRIM                   Func   266                                  scalar                    266                               
 MFILE                      Local  266      CHAR                        scalar                                                      
 MOSAIC_FILE                Dummy  262      CHAR                        scalar   ARG,IN           266,270,271                       
 READ_MOSAIC_NCONTACTS      Local  268      I(4)            4           scalar                                                      
 STRLEN                     Local  267      I(4)            4           scalar                                                      

Page 13          Source Listing                  GET_MOSAIC_NCONTACTS
2021-06-01 08:54                                 mosaic.F90

    279 ! </SUBROUTINE>
    280 
    281 
    282 !###############################################################################
    283 ! <SUBROUTINE NAME="get_mosaic_grid_sizes">
    284 !   <OVERVIEW>
    285 !     get grid size of each tile from mosaic_file
    286 !   </OVERVIEW>
    287 !   <DESCRIPTION>
    288 !     get grid size of each tile from mosaic_file
    289 !   </DESCRIPTION>
    290 !   <TEMPLATE>
    291 !     call get_mosaic_grid_sizes(mosaic_file, nx, ny)
    292 !   </TEMPLATE>
    293 !   <IN NAME="mosaic_file" TYPE="character(len=*)">
    294 !     The file that contains mosaic information.
    295 !   </IN>
    296 !   <INOUT NAME="nx" TYPE="integer, dimension(:)">
    297 !     List of grid size in x-direction of each tile.
    298 !   </INOUT>
    299 !   <INOUT NAME="ny" TYPE="integer, dimension(:)">
    300 !     List of grid size in y-direction of each tile.
    301 !   </INOUT>
    302   subroutine get_mosaic_grid_sizes( mosaic_file, nx, ny)
    303     character(len=*),         intent(in) :: mosaic_file
    304     integer, dimension(:), intent(inout) :: nx, ny
    305 
    306     character(len=MAX_FILE) :: gridfile
    307     integer                 :: ntiles, n
    308 
    309     ntiles = get_mosaic_ntiles(mosaic_file)
    310     if(ntiles .NE. size(nx(:)) .OR. ntiles .NE. size(ny(:)) ) then
    311       call mpp_error(FATAL, "get_mosaic_grid_sizes: size of nx/ny does not equal to ntiles")
    312     endif
    313     do n = 1, ntiles
    314       call read_data(mosaic_file, 'gridfiles', gridfile, level=n)
    315       gridfile = grid_dir//trim(gridfile)
    316       nx(n) = dimension_size(gridfile, "nx")
    317       ny(n) = dimension_size(gridfile, "ny")
    318       if(mod(nx(n),x_refine) .NE. 0) call mpp_error(FATAL, "get_mosaic_grid_sizes: nx is not divided by x_refine");
    319       if(mod(ny(n),y_refine) .NE. 0) call mpp_error(FATAL, "get_mosaic_grid_sizes: ny is not divided by y_refine");
    320       nx(n) = nx(n)/x_refine;
    321       ny(n) = ny(n)/y_refine;
    322     enddo
    323 
    324     return
    325 
    326   end subroutine get_mosaic_grid_sizes

Page 14          Source Listing                  GET_MOSAIC_GRID_SIZES
2021-06-01 08:54 Entry Points                    mosaic.F90



ENTRY POINTS

  Name                                            
                                                  
 mosaic_mod_mp_get_mosaic_grid_sizes_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 GET_MOSAIC_GRID_SIZES      Subr   302                                                                                              
 GET_MOSAIC_NTILES          Func   309      I(4)            4           scalar                    59,241,309,387                    
 GRIDFILE                   Local  306      CHAR            1024        scalar                    314,315,316,317                   
 GRID_DIR                   Param  315      CHAR            6           scalar                    315                               
 MAX_FILE                   Param  306      I(4)            4           scalar                    306                               
 MOD                        Func   318                                  scalar                    318,319                           
 MOSAIC_FILE                Dummy  302      CHAR                        scalar   ARG,IN           309,314                           
 N                          Local  307      I(4)            4           scalar                    313,314,316,317,318,319,320,321   
 NTILES                     Local  307      I(4)            4           scalar                    309,310,313                       
 NX                         Dummy  302      I(4)            4     1     1        ARG,INOUT        310,316,318,320                   
 NY                         Dummy  302      I(4)            4     1     1        ARG,INOUT        310,317,319,321                   
 READ_DATA                  Local  314                                  scalar   PRIV             41,314,390,396,424                
 READ_DATA_TEXT             Subr   314                                           PRIV             314,390,396,424                   
 SIZE                       Func   310                                  scalar                    310                               
 TRIM                       Func   315                                  scalar                    315                               
 X_REFINE                   Param  318      I(4)            4           scalar                    318,320,462,464                   
 Y_REFINE                   Param  319      I(4)            4           scalar                    319,321,463,465                   

Page 15          Source Listing                  GET_MOSAIC_GRID_SIZES
2021-06-01 08:54                                 mosaic.F90

    327 ! </SUBROUTINE>
    328 
    329 !###############################################################################
    330 ! <SUBROUTINE NAME="get_mosaic_contact">
    331 !   <OVERVIEW>
    332 !     get contact information from mosaic_file
    333 !   </OVERVIEW>
    334 !   <DESCRIPTION>
    335 !     get contact information from mosaic_file
    336 !   </DESCRIPTION>
    337 !   <TEMPLATE>
    338 !     call get_mosaic_contact(mosaic_file, tile1, tile2, istart1, iend1, jstart1, jend1,
    339 !                             istart2, iend2, jstart2, jend2)
    340 !   </TEMPLATE>
    341 !   <IN NAME="mosaic_file" TYPE="character(len=*)">
    342 !     The file that contains mosaic information.
    343 !   </IN>
    344 !   <INOUT NAME="tile1" TYPE="integer, dimension(:)">
    345 !     list tile number in tile 1 of each contact.
    346 !   </INOUT>
    347 !   <INOUT NAME="tile1" TYPE="integer, dimension(:)">
    348 !     list tile number in tile 2 of each contact.
    349 !   </INOUT>
    350 !   <INOUT NAME="istart1" TYPE="integer, dimension(:)">
    351 !     list starting i-index in tile 1 of each contact.
    352 !   </INOUT>
    353 !   <INOUT NAME="iend1" TYPE="integer, dimension(:)">
    354 !     list ending i-index in tile 1 of each contact.
    355 !   </INOUT>
    356 !   <INOUT NAME="jstart1" TYPE="integer, dimension(:)">
    357 !     list starting j-index in tile 1 of each contact.
    358 !   </INOUT>
    359 !   <INOUT NAME="jend1" TYPE="integer, dimension(:)">
    360 !     list ending j-index in tile 1 of each contact.
    361 !   </INOUT>
    362 !   <INOUT NAME="istart2" TYPE="integer, dimension(:)">
    363 !     list starting i-index in tile 2 of each contact.
    364 !   </INOUT>
    365 !   <INOUT NAME="iend2" TYPE="integer, dimension(:)">
    366 !     list ending i-index in tile 2 of each contact.
    367 !   </INOUT>
    368 !   <INOUT NAME="jstart2" TYPE="integer, dimension(:)">
    369 !     list starting j-index in tile 2 of each contact.
    370 !   </INOUT>
    371 !   <INOUT NAME="jend2" TYPE="integer, dimension(:)">
    372 !     list ending j-index in tile 2 of each contact.
    373 !   </INOUT>
    374   subroutine get_mosaic_contact( mosaic_file, tile1, tile2, istart1, iend1, jstart1, jend1, &
    375                                    istart2, iend2, jstart2, jend2)
    376     character(len=*),         intent(in) :: mosaic_file
    377     integer, dimension(:), intent(inout) :: tile1, tile2
    378     integer, dimension(:), intent(inout) :: istart1, iend1, jstart1, jend1
    379     integer, dimension(:), intent(inout) :: istart2, iend2, jstart2, jend2
    380     character(len=MAX_NAME), allocatable :: gridtiles(:)
    381     character(len=MAX_NAME)              :: contacts
    382     character(len=MAX_NAME)              :: strlist(8)
    383     integer :: ntiles, n, m, ncontacts, nstr, ios

Page 16          Source Listing                  GET_MOSAIC_CONTACT
2021-06-01 08:54                                 mosaic.F90

    384     integer :: i1_type, j1_type, i2_type, j2_type
    385     logical :: found
    386 
    387     ntiles = get_mosaic_ntiles(mosaic_file)
    388     allocate(gridtiles(ntiles))
    389     do n = 1, ntiles
    390       call read_data(mosaic_file, 'gridtiles', gridtiles(n), level=n)
    391     enddo
    392 
    393     ncontacts = get_mosaic_ncontacts(mosaic_file)
    394 
    395     do n = 1, ncontacts
    396       call read_data(mosaic_file, "contacts", contacts, level=n)
    397       nstr = parse_string(contacts, ":", strlist)
    398       if(nstr .NE. 4) call mpp_error(FATAL, &
    399          "mosaic_mod(get_mosaic_contact): number of elements in contact seperated by :/:: should be 4")
    400       found = .false.
    401       do m = 1, ntiles
    402         if(trim(gridtiles(m)) == trim(strlist(2)) ) then !found the tile name
    403           found = .true.
    404           tile1(n) = m
    405           exit
    406         endif
    407       enddo
    408 
    409       if(.not.found) call mpp_error(FATAL, &
    410          "mosaic_mod(get_mosaic_contact):the first tile name specified in contact is not found in tile list")
    411 
    412       found = .false.
    413       do m = 1, ntiles
    414         if(trim(gridtiles(m)) == trim(strlist(4)) ) then !found the tile name
    415           found = .true.
    416           tile2(n) = m
    417           exit
    418         endif
    419       enddo
    420 
    421       if(.not.found) call mpp_error(FATAL, &
    422          "mosaic_mod(get_mosaic_contact):the second tile name specified in contact is not found in tile list")
    423 
    424       call read_data(mosaic_file, "contact_index", contacts, level=n)
    425       nstr = parse_string(contacts, ":,", strlist)
    426       if(nstr .NE. 8) then
    427         if(mpp_pe()==mpp_root_pe()) then
    428           print*, "nstr is ", nstr
    429           print*, "contacts is ", contacts
    430           do m = 1, nstr
    431             print*, "strlist is ", trim(strlist(m))
    432           enddo
    433         endif
    434         call mpp_error(FATAL, &
    435                "mosaic_mod(get_mosaic_contact): number of elements in contact_index seperated by :/, should be 8")
    436       endif
    437       read(strlist(1), *, iostat=ios) istart1(n)
    438       if(ios .NE. 0) call mpp_error(FATAL, &
    439          "mosaic_mod(get_mosaic_contact): Error in reading istart1")
    440       read(strlist(2), *, iostat=ios) iend1(n)

Page 17          Source Listing                  GET_MOSAIC_CONTACT
2021-06-01 08:54                                 mosaic.F90

    441       if(ios .NE. 0) call mpp_error(FATAL, &
    442          "mosaic_mod(get_mosaic_contact): Error in reading iend1")
    443       read(strlist(3), *, iostat=ios) jstart1(n)
    444       if(ios .NE. 0) call mpp_error(FATAL, &
    445          "mosaic_mod(get_mosaic_contact): Error in reading jstart1")
    446       read(strlist(4), *, iostat=ios) jend1(n)
    447       if(ios .NE. 0) call mpp_error(FATAL, &
    448          "mosaic_mod(get_mosaic_contact): Error in reading jend1")
    449       read(strlist(5), *, iostat=ios) istart2(n)
    450       if(ios .NE. 0) call mpp_error(FATAL, &
    451          "mosaic_mod(get_mosaic_contact): Error in reading istart2")
    452       read(strlist(6), *, iostat=ios) iend2(n)
    453       if(ios .NE. 0) call mpp_error(FATAL, &
    454          "mosaic_mod(get_mosaic_contact): Error in reading iend2")
    455       read(strlist(7), *, iostat=ios) jstart2(n)
    456       if(ios .NE. 0) call mpp_error(FATAL, &
    457          "mosaic_mod(get_mosaic_contact): Error in reading jstart2")
    458       read(strlist(8), *, iostat=ios) jend2(n)
    459       if(ios .NE. 0) call mpp_error(FATAL, &
    460          "mosaic_mod(get_mosaic_contact): Error in reading jend2")
    461 
    462       i1_type = transfer_to_model_index(istart1(n), iend1(n), x_refine)
    463       j1_type = transfer_to_model_index(jstart1(n), jend1(n), y_refine)
    464       i2_type = transfer_to_model_index(istart2(n), iend2(n), x_refine)
    465       j2_type = transfer_to_model_index(jstart2(n), jend2(n), y_refine)
    466 
    467       if( i1_type == 0 .AND. j1_type == 0 ) call mpp_error(FATAL, &
    468          "mosaic_mod(get_mosaic_contact): istart1==iend1 and jstart1==jend1")
    469       if( i2_type == 0 .AND. j2_type == 0 ) call mpp_error(FATAL, &
    470          "mosaic_mod(get_mosaic_contact): istart2==iend2 and jstart2==jend2")
    471       if( i1_type + j1_type .NE. i2_type + j2_type ) call mpp_error(FATAL, &
    472          "mosaic_mod(get_mosaic_contact): It is not a line or overlap contact")
    473 
    474    enddo
    475 
    476       deallocate(gridtiles)
    477 
    478   end subroutine get_mosaic_contact

Page 18          Source Listing                  GET_MOSAIC_CONTACT
2021-06-01 08:54 Entry Points                    mosaic.F90



ENTRY POINTS

  Name                                         
                                               
 mosaic_mod_mp_get_mosaic_contact_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 CONTACTS                   Local  381      CHAR            256         scalar                    396,397,424,425,429               
 FOUND                      Local  385      L(4)            4           scalar                    400,403,409,412,415,421           
 GET_MOSAIC_CONTACT         Subr   374                                                                                              
 GET_MOSAIC_NCONTACTS       Func   393      I(4)            4           scalar                    60,271,273,393                    
 GRIDTILES                  Local  380      CHAR            256   1     1        ALC              388,390,402,414,476               
 I1_TYPE                    Local  384      I(4)            4           scalar                    462,467,471                       
 I2_TYPE                    Local  384      I(4)            4           scalar                    464,469,471                       
 IEND1                      Dummy  374      I(4)            4     1     1        ARG,INOUT        440,462                           
 IEND2                      Dummy  375      I(4)            4     1     1        ARG,INOUT        452,464                           
 IOS                        Local  383      I(4)            4           scalar                    437,438,440,441,443,444,446,447,44
                                                                                                  9,450,452,453,455,456,458,459     
 ISTART1                    Dummy  374      I(4)            4     1     1        ARG,INOUT        437,462                           
 ISTART2                    Dummy  375      I(4)            4     1     1        ARG,INOUT        449,464                           
 J1_TYPE                    Local  384      I(4)            4           scalar                    463,467,471                       
 J2_TYPE                    Local  384      I(4)            4           scalar                    465,469,471                       
 JEND1                      Dummy  374      I(4)            4     1     1        ARG,INOUT        446,463                           
 JEND2                      Dummy  375      I(4)            4     1     1        ARG,INOUT        458,465                           
 JSTART1                    Dummy  374      I(4)            4     1     1        ARG,INOUT        443,463                           
 JSTART2                    Dummy  375      I(4)            4     1     1        ARG,INOUT        455,465                           
 M                          Local  383      I(4)            4           scalar                    401,402,404,413,414,416,430,431   
 MAX_NAME                   Param  380      I(4)            4           scalar                    380,381,382                       
 MOSAIC_FILE                Dummy  374      CHAR                        scalar   ARG,IN           387,390,393,396,424               
 MPP_PE                     Func   427      I(4)            4           scalar   PRIV             39,427                            
 MPP_ROOT_PE                Func   427      I(4)            4           scalar   PRIV             39,427                            
 N                          Local  383      I(4)            4           scalar                    389,390,395,396,404,416,424,437,44
                                                                                                  0,443,446,449,452,455,458,462,463,
                                                                                                  464,465                           
 NCONTACTS                  Local  383      I(4)            4           scalar                    393,395                           
 NSTR                       Local  383      I(4)            4           scalar                    397,398,425,426,428,430           
 NTILES                     Local  383      I(4)            4           scalar                    387,388,389,401,413               
 PARSE_STRING@0             Local  397      I(4)            4           scalar                                                      
 STRLIST                    Local  382      CHAR            256   1     8        TGT              397,402,414,425,431,437,440,443,44
                                                                                                  6,449,452,455,458                 
 TILE1                      Dummy  374      I(4)            4     1     1        ARG,INOUT        404                               
 TILE2                      Dummy  374      I(4)            4     1     1        ARG,INOUT        416                               
 TRANSFER_TO_MODEL_INDEX@0  Local  462      I(4)            4           scalar                                                      
 TRIM                       Func   402                                  scalar                    402,414,431                       

Page 19          Source Listing                  GET_MOSAIC_CONTACT
2021-06-01 08:54                                 mosaic.F90

    479 ! </SUBROUTINE>
    480 
    481 
    482 function transfer_to_model_index(istart, iend, refine_ratio)
    483    integer, intent(inout) :: istart, iend
    484    integer                :: refine_ratio
    485    integer                :: transfer_to_model_index
    486    integer                :: istart_in, iend_in
    487 
    488    istart_in = istart
    489    iend_in = iend
    490 
    491    if( istart_in == iend_in ) then
    492       transfer_to_model_index = 0
    493       istart = (istart_in + 1)/refine_ratio
    494       iend   = istart
    495    else
    496       transfer_to_model_index = 1
    497       if( iend_in > istart_in ) then
    498         istart = istart_in + 1
    499         iend   = iend_in
    500       else
    501         istart = istart_in
    502         iend   = iend_in + 1
    503       endif
    504       if( mod(istart, refine_ratio) .NE. 0 .OR. mod(iend,refine_ratio) .NE. 0) call mpp_error(FATAL, &
    505          "mosaic_mod(transfer_to_model_index): mismatch between refine_ratio and istart/iend")
    506       istart = istart/refine_ratio
    507       iend = iend/refine_ratio
    508 
    509    endif
    510 
    511    return
    512 
    513 end function transfer_to_model_index

Page 20          Source Listing                  TRANSFER_TO_MODEL_INDEX
2021-06-01 08:54 Entry Points                    mosaic.F90



ENTRY POINTS

  Name                                              
                                                    
 mosaic_mod_mp_transfer_to_model_index_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 IEND                       Dummy  482      I(4)            4           scalar   ARG,INOUT        489,494,499,502,504,507           
 IEND_IN                    Local  486      I(4)            4           scalar                    489,491,497,499,502               
 ISTART                     Dummy  482      I(4)            4           scalar   ARG,INOUT        488,493,494,498,501,504,506       
 ISTART_IN                  Local  486      I(4)            4           scalar                    488,491,493,497,498,501           
 MOD                        Func   504                                  scalar                    504                               
 REFINE_RATIO               Dummy  482      I(4)            4           scalar   ARG,INOUT        493,504,506,507                   
 TRANSFER_TO_MODEL_INDEX    Func   482      I(4)            4           scalar                    462,463,464,465,492,496           

Page 21          Source Listing                  TRANSFER_TO_MODEL_INDEX
2021-06-01 08:54                                 mosaic.F90

    514 
    515 !###############################################################################
    516 ! <SUBROUTINE NAME="calc_mosaic_grid_area">
    517 !   <OVERVIEW>
    518 !     calculate grid cell area.
    519 !   </OVERVIEW>
    520 !   <DESCRIPTION>
    521 !     calculate the grid cell area. The purpose of this routine is to make
    522 !     sure the consistency between model grid area and exchange grid area.
    523 !   </DESCRIPTION>
    524 !   <TEMPLATE>
    525 !     call calc_mosaic_grid_area(lon, lat, area)
    526 !   </TEMPLATE>
    527 !   <IN NAME="lon" TYPE="real, dimension(:,:)">
    528 !     geographical longitude of grid cell vertices.
    529 !   </IN>
    530 !   <IN NAME="lat" TYPE="real, dimension(:,:)">
    531 !     geographical latitude of grid cell vertices.
    532 !   </IN>
    533 !   <INOUT NAME="area" TYPE="real, dimension(:,:)">
    534 !     grid cell area.
    535 !   </INOUT>
    536   subroutine calc_mosaic_grid_area(lon, lat, area)
    537      real, dimension(:,:), intent(in)    :: lon
    538      real, dimension(:,:), intent(in)    :: lat
    539      real, dimension(:,:), intent(inout) :: area
    540      integer                             :: nlon, nlat
    541 
    542      nlon = size(area,1)
    543      nlat = size(area,2)
    544 ! make sure size of lon, lat and area are consitency
    545      if( size(lon,1) .NE. nlon+1 .OR. size(lat,1) .NE. nlon+1 ) &
    546         call mpp_error(FATAL, "mosaic_mod: size(lon,1) and size(lat,1) should equal to size(area,1)+1")
    547      if( size(lon,2) .NE. nlat+1 .OR. size(lat,2) .NE. nlat+1 ) &
    548         call mpp_error(FATAL, "mosaic_mod: size(lon,2) and size(lat,2) should equal to size(area,2)+1")
    549 
    550      call get_grid_area( nlon, nlat, lon, lat, area)
    551 
    552   end subroutine calc_mosaic_grid_area

Page 22          Source Listing                  CALC_MOSAIC_GRID_AREA
2021-06-01 08:54 Entry Points                    mosaic.F90



ENTRY POINTS

  Name                                            
                                                  
 mosaic_mod_mp_calc_mosaic_grid_area_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 AREA                       Dummy  536      R(8)            8     2     1        ARG,INOUT        542,543,550                       
 CALC_MOSAIC_GRID_AREA      Subr   536                                                                                              
 GET_GRID_AREA              Subr   550                                                            550                               
 LAT                        Dummy  536      R(8)            8     2     1        ARG,IN           545,547,550                       
 LON                        Dummy  536      R(8)            8     2     1        ARG,IN           545,547,550                       
 NLAT                       Local  540      I(4)            4           scalar                    543,547,550                       
 NLON                       Local  540      I(4)            4           scalar                    542,545,550                       
 SIZE                       Func   542                                  scalar                    542,543,545,547                   

Page 23          Source Listing                  CALC_MOSAIC_GRID_AREA
2021-06-01 08:54                                 mosaic.F90

    553 ! </SUBROUTINE>
    554 
    555 !###############################################################################
    556 ! <SUBROUTINE NAME="calc_mosaic_grid_great_circle_area">
    557 !   <OVERVIEW>
    558 !     calculate grid cell area using great cirlce algorithm
    559 !   </OVERVIEW>
    560 !   <DESCRIPTION>
    561 !     calculate the grid cell area. The purpose of this routine is to make
    562 !     sure the consistency between model grid area and exchange grid area.
    563 !   </DESCRIPTION>
    564 !   <TEMPLATE>
    565 !     call calc_mosaic_grid_great_circle_area(lon, lat, area)
    566 !   </TEMPLATE>
    567 !   <IN NAME="lon" TYPE="real, dimension(:,:)">
    568 !     geographical longitude of grid cell vertices.
    569 !   </IN>
    570 !   <IN NAME="lat" TYPE="real, dimension(:,:)">
    571 !     geographical latitude of grid cell vertices.
    572 !   </IN>
    573 !   <INOUT NAME="area" TYPE="real, dimension(:,:)">
    574 !     grid cell area.
    575 !   </INOUT>
    576   subroutine calc_mosaic_grid_great_circle_area(lon, lat, area)
    577      real, dimension(:,:), intent(in)    :: lon
    578      real, dimension(:,:), intent(in)    :: lat
    579      real, dimension(:,:), intent(inout) :: area
    580      integer                             :: nlon, nlat
    581 
    582 
    583      nlon = size(area,1)
    584      nlat = size(area,2)
    585 ! make sure size of lon, lat and area are consitency
    586      if( size(lon,1) .NE. nlon+1 .OR. size(lat,1) .NE. nlon+1 ) &
    587         call mpp_error(FATAL, "mosaic_mod: size(lon,1) and size(lat,1) should equal to size(area,1)+1")
    588      if( size(lon,2) .NE. nlat+1 .OR. size(lat,2) .NE. nlat+1 ) &
    589         call mpp_error(FATAL, "mosaic_mod: size(lon,2) and size(lat,2) should equal to size(area,2)+1")
    590 
    591      call get_grid_great_circle_area( nlon, nlat, lon, lat, area)
    592 
    593   end subroutine calc_mosaic_grid_great_circle_area

Page 24          Source Listing                  CALC_MOSAIC_GRID_GREAT_CIRCLE_AREA
2021-06-01 08:54 Entry Points                    mosaic.F90



ENTRY POINTS

  Name                                                         
                                                               
 mosaic_mod_mp_calc_mosaic_grid_great_circle_area_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 AREA                       Dummy  576      R(8)            8     2     1        ARG,INOUT        583,584,591                       
 CALC_MOSAIC_GRID_GREAT_CIR                                                                                                         
 CLE_AREA                   Subr   576                                                                                              
 GET_GRID_GREAT_CIRCLE_AREA Subr   591                                                            591                               
 LAT                        Dummy  576      R(8)            8     2     1        ARG,IN           586,588,591                       
 LON                        Dummy  576      R(8)            8     2     1        ARG,IN           586,588,591                       
 NLAT                       Local  580      I(4)            4           scalar                    584,588,591                       
 NLON                       Local  580      I(4)            4           scalar                    583,586,591                       
 SIZE                       Func   583                                  scalar                    583,584,586,588                   

Page 25          Source Listing                  CALC_MOSAIC_GRID_GREAT_CIRCLE_AREA
2021-06-01 08:54                                 mosaic.F90

    594 ! </SUBROUTINE>
    595 
    596 !#####################################################################
    597 ! This function check if a point (lon1,lat1) is inside a polygon (lon2(:), lat2(:))
    598 ! lon1, lat1, lon2, lat2 are in radians.
    599   function is_inside_polygon(lon1, lat1, lon2, lat2 )
    600      real, intent(in) :: lon1, lat1
    601      real, intent(in) :: lon2(:), lat2(:)
    602      logical          :: is_inside_polygon
    603      real, dimension(size(lon2(:))) :: x2, y2, z2
    604      integer                        :: npts, isinside
    605      integer                        :: inside_a_polygon
    606 
    607      npts = size(lon2(:))
    608 
    609      isinside = inside_a_polygon(lon1, lat1, npts, lon2, lat2)
    610      if(isinside == 1) then
    611         is_inside_polygon = .TRUE.
    612      else
    613         is_inside_polygon = .FALSE.
    614      endif
    615 
    616      return
    617 
    618   end function is_inside_polygon


ENTRY POINTS

  Name                                        
                                              
 mosaic_mod_mp_is_inside_polygon_             

Page 26          Source Listing                  IS_INSIDE_POLYGON
2021-06-01 08:54 Symbol Table                    mosaic.F90



SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 INSIDE_A_POLYGON           Func   605      I(4)            4           scalar                    609                               
 ISINSIDE                   Local  604      I(4)            4           scalar                    609,610                           
 IS_INSIDE_POLYGON          Func   599      L(4)            4           scalar                                                      
 LAT1                       Dummy  599      R(8)            8           scalar   ARG,IN           609                               
 LAT2                       Dummy  599      R(8)            8     1     1        ARG,IN           609                               
 LON1                       Dummy  599      R(8)            8           scalar   ARG,IN           609                               
 LON2                       Dummy  599      R(8)            8     1     1        ARG,IN           607,609                           
 NPTS                       Local  604      I(4)            4           scalar                    607,609                           
 SIZE                       Func   607                                  scalar                    607                               
 X2                         Local  603      R(8)            8     1     0                                                           
 Y2                         Local  603      R(8)            8     1     0                                                           
 Z2                         Local  603      R(8)            8     1     0                                                           

Page 27          Source Listing                  IS_INSIDE_POLYGON
2021-06-01 08:54                                 mosaic.F90

    619 
    620   function parse_string(string, set, value)
    621   character(len=*),  intent(in) :: string
    622   character(len=*),  intent(in) :: set
    623   character(len=*), intent(out) :: value(:)
    624   integer                       :: parse_string
    625   integer :: nelem, length, first, last
    626 
    627      nelem = size(value(:))
    628      length = len_trim(string)
    629 
    630      first = 1; last = 0
    631      parse_string = 0
    632 
    633      do while(first .LE. length)
    634        parse_string = parse_string + 1
    635        if(parse_string>nelem) then
    636          call mpp_error(FATAL, "mosaic_mod(parse_string) : number of element is greater than size(value(:))")
    637        endif
    638        last = first - 1 + scan(string(first:length), set)
    639        if(last == first-1 ) then  ! not found, end of string
    640          value(parse_string) = string(first:length)
    641          exit
    642        else
    643          if(last <= first) then
    644            call mpp_error(FATAL, "mosaic_mod(parse_string) : last <= first")
    645          endif
    646          value(parse_string) = string(first:(last-1))
    647          first = last + 1
    648 ! scan to make sure the next is not the character in the set
    649          do while (first == last+1)
    650            last = first - 1 + scan(string(first:length), set)
    651            if(last == first) then
    652              first = first+1
    653            else
    654              exit
    655            endif
    656          end do
    657        endif
    658      enddo
    659 
    660      return
    661 
    662   end function parse_string

Page 28          Source Listing                  PARSE_STRING
2021-06-01 08:54 Entry Points                    mosaic.F90



ENTRY POINTS

  Name                                   
                                         
 mosaic_mod_mp_parse_string_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 FIRST                      Local  625      I(4)            4           scalar                    630,633,638,639,640,643,646,647,64
                                                                                                  9,650,651,652                     
 LAST                       Local  625      I(4)            4           scalar                    630,638,639,643,646,647,649,650,65
                                                                                                  1                                 
 LENGTH                     Local  625      I(4)            4           scalar                    628,633,638,640,650               
 LEN_TRIM                   Func   628                                  scalar                    628                               
 NELEM                      Local  625      I(4)            4           scalar                    627,635                           
 PARSE_STRING               Func   620      I(4)            4           scalar                    397,425,631,634,635,640,646       
 SCAN                       Func   638                                  scalar                    638,650                           
 SET                        Dummy  620      CHAR                        scalar   ARG,IN           638,650                           
 SIZE                       Func   627                                  scalar                    627                               
 STRING                     Dummy  620      CHAR                        scalar   ARG,IN           628,638,640,646,650               
 VALUE                      Dummy  620      CHAR                  1     1        ARG,OUT          627,640,646                       

Page 29          Source Listing                  PARSE_STRING
2021-06-01 08:54                                 mosaic.F90

    663 
    664 
    665 
    666 end module mosaic_mod


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 CALC_MOSAIC_GRID_AREA      Subr   65                                                             65                                
 CALC_MOSAIC_GRID_GREAT_CIR                                                                                                         
 CLE_AREA                   Subr   66                                                             66                                
 CONSTANTS_MOD              Module 42                                                             42                                
 FMS_IO_MOD                 Module 41                                                             41                                
 GET_MOSAIC_CONTACT         Subr   62                                                             62                                
 GET_MOSAIC_GRID_SIZES      Subr   61                                                             61                                
 GET_MOSAIC_NCONTACTS@0     Local  262      I(4)            4           scalar                                                      
 GET_MOSAIC_NTILES@0        Local  237      I(4)            4           scalar                                                      
 GET_MOSAIC_XGRID           Subr   64                                                             64                                
 GET_MOSAIC_XGRID_SIZE@0    Local  137      I(4)            4           scalar                                                      
 IS_INSIDE_POLYGON@0        Local  599      L(4)            4           scalar                                                      
 MOSAIC_MOD                 Module 20                                                                                               
 MPP_IO_MOD                 Module 40                                                             40                                
 MPP_MOD                    Module 39                                                             39                                
 PI                         Param  42       R(8)            8           scalar   PRIV             42                                
 RADIUS                     Param  42       R(8)            8           scalar   PRIV             42                                
 VERSION                    Param  94       CHAR            7           scalar                                                      

Page 30          Source Listing                  PARSE_STRING
2021-06-01 08:54                                 mosaic.F90

    667 
    668 

Page 31          Source Listing                  PARSE_STRING
2021-06-01 08:54 Subprograms/Common Blocks       mosaic.F90



SUBPROGRAMS/COMMON BLOCKS

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 CALC_MOSAIC_GRID_AREA      Subr   536                                                                                              
 CALC_MOSAIC_GRID_GREAT_CIR                                                                                                         
 CLE_AREA                   Subr   576                                                                                              
 GET_MOSAIC_CONTACT         Subr   374                                                                                              
 GET_MOSAIC_GRID_SIZES      Subr   302                                                                                              
 GET_MOSAIC_NCONTACTS       Func   262      I(4)            4           scalar                                                      
 GET_MOSAIC_NTILES          Func   237      I(4)            4           scalar                                                      
 GET_MOSAIC_XGRID           Subr   173                                                                                              
 GET_MOSAIC_XGRID_SIZE      Func   137      I(4)            4           scalar                                                      
 IS_INSIDE_POLYGON          Func   599      L(4)            4           scalar                                                      
 MOSAIC_INIT                Subr   113                                                                                              
 MOSAIC_MOD                 Module 20                                                                                               
 PARSE_STRING               Func   620      I(4)            4           scalar                    397,425,631,634,635,640,646       
 TRANSFER_TO_MODEL_INDEX    Func   482      I(4)            4           scalar                    462,463,464,465,492,496           

COMPILER OPTIONS BEING USED

       -align noall                          -align nonone
       -align nocommons                      -align nodcommons
       -align noqcommons                     -align nozcommons
       -align records                        -align nosequence
       -align norec1byte                     -align norec2byte
       -align norec4byte                     -align norec8byte
       -align norec16byte                    -align norec32byte
       -align norec64byte                    -align noarray8byte
       -align noarray16byte                  -align noarray32byte
       -align noarray64byte                  -align noarray128byte
       -align noarray256byte                 -altparam
       -assume accuracy_sensitive            -assume nobscc
       -assume nobuffered_io                 -assume nobuffered_stdout
       -assume byterecl                      -assume nocontiguous_assumed_shape
       -assume nocontiguous_pointer          -assume cc_omp
       -assume nocstring                     -assume nodummy_aliases
       -assume nofpe_summary                 -assume noieee_fpe_flags
       -assume nominus0                      -assume noold_boz
       -assume old_complex_align             -assume old_unit_star
       -assume old_inquire_recl              -assume old_ldout_format
       -assume old_ldout_zero                -assume noold_logical_assign
       -assume noold_logical_ldio            -assume old_maxminloc
       -assume old_xor                       -assume noprotect_allocates
       -assume protect_constants             -assume noprotect_parens
       -assume split_common                  -assume source_include
       -assume nostd_intent_in               -assume std_minus0_rounding
       -assume nostd_mod_proc_name           -assume std_value
       -assume realloc_lhs                   -assume underscore
       -assume no2underscores                -assume norecursion
       -auto                            no   -auto_scalar
  no   -bintext                              -ccdefault default
       -check noarg_temp_created             -check noassume
       -check nobounds                       -check nocontiguous
       -check noformat                       -check nooutput_conversion

Page 32          Source Listing                  PARSE_STRING
2021-06-01 08:54                                 mosaic.F90

       -check nooverflow                     -check nopointers
       -check noshape                        -check nostack
       -check nouninitialized                -check noudio_iostat
       -coarray-num-procs 0             no   -coarray-config-file
       -convert native                       -cross_reference
       -D __INTEL_COMPILER=1910              -D __INTEL_COMPILER_UPDATE=0
       -D __unix__                           -D __unix
       -D __linux__                          -D __linux
       -D __gnu_linux__                      -D unix
       -D linux                              -D __ELF__
       -D __x86_64                           -D __x86_64__
       -D __amd64                            -D __amd64__
       -D __INTEL_COMPILER_BUILD_DATE=20191121       -D _OPENMP=201611
       -D __INTEL_OFFLOAD                    -D __MMX__
       -D __SSE__                            -D __SSE_MATH__
       -D __SSE2__                           -D __SSE2_MATH__
       -D __pentium4                         -D __pentium4__
       -D __tune_pentium4__                  -D PACKAGE_NAME='"GFDL FMS Library"'
       -D PACKAGE_TARNAME='"FMS"'            -D PACKAGE_VERSION='"2021.02.0"'
       -D PACKAGE_STRING='"GFDL FMS Library 2021.02.0"'       -D PACKAGE_BUGREPORT='"gfdl.climate.model.info@noaa.gov"'
       -D PACKAGE_URL='"https://www.gfdl.noaa.gov/fms"'       -D PACKAGE='"FMS"'
       -D VERSION='"2021.02.0"'              -D STDC_HEADERS=1
       -D HAVE_SYS_TYPES_H=1                 -D HAVE_SYS_STAT_H=1
       -D HAVE_STDLIB_H=1                    -D HAVE_STRING_H=1
       -D HAVE_MEMORY_H=1                    -D HAVE_STRINGS_H=1
       -D HAVE_INTTYPES_H=1                  -D HAVE_STDINT_H=1
       -D HAVE_UNISTD_H=1                    -D HAVE_DLFCN_H=1
       -D LT_OBJDIR='".libs/"'               -D HAVE_MPI_H=1
       -D HAVE_NETCDF_H=1                    -D HAVE_SCHED_GETAFFINITY=1
       -D HAVE_MOD_MPI=1                     -D HAVE_MOD_NETCDF=1
       -D HAVE_CRAY_POINTER=1                -D HAVE_QUAD_PRECISION=1
       -D HAVE_INTERNAL_NML=1                -D use_netCDF=1
       -D use_libMPI=1                       -D INTERNAL_FILE_NML
       -double_size 64                  no   -d_lines
  no   -Qdyncom                              -error_limit 30
  no   -f66                             no   -f77rtl
  no   -fast                                 -fpscomp nofilesfromcmd
       -fpscomp nogeneral                    -fpscomp noioformat
       -fpscomp noldio_spacing               -fpscomp nologicals
  no   -fpconstant                           -fpe3
       -fprm nearest                         -ftz
       -fp_model noprecise                   -fp_model fast
       -fp_model nostrict                    -fp_model nosource
       -fp_model nodouble                    -fp_model noextended
       -fp_model novery_fast                 -fp_model noexcept
       -fp_model nono_except                 -fp_modbits nofp_contract
       -fp_modbits nono_fp_contract          -fp_modbits nofenv_access
       -fp_modbits nono_fenv_access          -fp_modbits nocx_limited_range
       -fp_modbits nono_cx_limited_range       -fp_modbits noprec_div
       -fp_modbits nono_prec_div             -fp_modbits noprec_sqrt
       -fp_modbits nono_prec_sqrt            -fp_modbits ftz
       -fp_modbits nono_ftz                  -fp_modbits nointrin_limited_range
       -fp_modbits nono_intrin_limited_range       -fp_modbits notrunc_compares
       -fp_modbits nono_trunc_compares       -fp_modbits noieee_nan_compares
       -fp_modbits nono_ieee_nan_compares       -fp_modbits honor_f32_conversion
       -fp_modbits nono_honor_f32_conversion       -fp_modbits honor_f64_conversion
       -fp_modbits nono_honor_f64_conversion       -fp_modbits nono_x87_copy

Page 33          Source Listing                  PARSE_STRING
2021-06-01 08:54                                 mosaic.F90

       -fp_modbits nono_no_x87_copy          -fp_modbits noexception_semantics
       -fp_modbits nono_exception_semantics       -fp_modbits noprecise_libm_functions
       -fp_modbits nono_precise_libm_functions       -heap_arrays 0
  no   -threadprivate_compat                 -free
       -g2                                   -iface nomixed_str_len_arg
       -iface nono_mixed_str_len_arg         -init noarrays
       -init nohuge                          -init noinfinity
       -init nominus_huge                    -init nominus_infinity
       -init nominus_tiny                    -init nonan
       -init nosnan                          -init notiny
       -init nozero                     no   -intconstant
       -integer_size 32                 no   -mixed_str_len_arg
       -module ../.mods                      -names lowercase
  no   -noinclude                       no   -o
       -offload-build=host                   -openmp
       -openmp-simd                          -openmp-offload
       -O0                              no   -pad_source
       -real_size 64                    no   -recursive
       -reentrancy threaded                  -vec=simd
       -show nofullpath                      -show noinclude
       -show map                             -show options
  no   -syntax_only                     no   -threadcom
  no   -U                               no   -vms
       -w noall                              -w nonone
       -w noalignments                       -w nodeclarations
       -w noexternals                        -w nogeneral
       -w noignore_bounds                    -w noignore_loc
       -w nointerfaces                       -w noshape
       -w notruncated_source                 -w nouncalled
       -w nouninitialized                    -w nounused
       -w nousage                       no   -wrap-margins

       -includepath : /opt/netcdf/4.6.1/INTEL/include/,/opt/intel/2020/compilers_and_libraries/linux/pstl/include/,
           /opt/intel/2020/compilers_and_libraries_2020.0.166/linux/compiler/include/,.f90,./.f90,./.f90,../include/.f90,
           ./.f90,/opt/netcdf/4.6.1/INTEL/include/.f90,/opt/intel/2020/compilers_and_libraries/linux/mpi/intel64/include/.f90,
           /opt/intel/2020/compilers_and_libraries/linux/mpi/intel64/include/.f90,/opt/intel/2020/compilers_and_libraries/linux/ipp/include/.f90,
           /opt/intel/2020/compilers_and_libraries/linux/mkl/include/.f90,/opt/intel/2020/compilers_and_libraries/linux/pstl/include/.f90,
           /opt/intel/2020/compilers_and_libraries/linux/tbb/include/.f90,/opt/intel/2020/compilers_and_libraries/linux/daal/include/.f90,
           /opt/intel/2020/compilers_and_libraries_2020.0.166/linux/compiler/include/intel64/.f90,/opt/intel/2020/compilers_and_libraries_2020.0.166/linux/compiler/include/icc/.f90,
           /opt/intel/2020/compilers_and_libraries_2020.0.166/linux/compiler/include/.f90,/usr/local/include/.f90,
           /usr/lib/gcc/x86_64-redhat-linux/4.8.5/include/.f90,/usr/include/.f90,/usr/include/.f90,/usr/include/.f90
       -list filename : mosaic.lst
  no   -o

COMPILER: Intel(R) Fortran 19.1-1555
