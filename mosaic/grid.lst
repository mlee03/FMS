Page 1           Source Listing                  GET_GRID_VERSION
2021-06-01 08:54                                 /tmp/ifortj2nZgJ.i90

      1 # 1 "grid.F90"
      2 !***********************************************************************
      3 !*                   GNU Lesser General Public License
      4 !*
      5 !* This file is part of the GFDL Flexible Modeling System (FMS).
      6 !*
      7 !* FMS is free software: you can redistribute it and/or modify it under
      8 !* the terms of the GNU Lesser General Public License as published by
      9 !* the Free Software Foundation, either version 3 of the License, or (at
     10 !* your option) any later version.
     11 !*
     12 !* FMS is distributed in the hope that it will be useful, but WITHOUT
     13 !* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
     14 !* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
     15 !* for more details.
     16 !*
     17 !* You should have received a copy of the GNU Lesser General Public
     18 !* License along with FMS.  If not, see <http://www.gnu.org/licenses/>.
     19 !***********************************************************************
     20 module grid_mod
     21 
     22 use mpp_mod, only : mpp_root_pe, uppercase, lowercase, FATAL, NOTE, mpp_error
     23 use constants_mod, only : PI, radius
     24 use fms_io_mod, only : get_great_circle_algorithm, get_global_att_value, string, &
     25                        field_exist, field_size, read_data
     26 use mosaic_mod, only : get_mosaic_ntiles, get_mosaic_xgrid_size, get_mosaic_grid_sizes, &
     27      get_mosaic_xgrid, calc_mosaic_grid_area, calc_mosaic_grid_great_circle_area
     28 
     29 ! the following two use statement are only needed for define_cube_mosaic
     30 use mpp_domains_mod, only : domain2d, mpp_define_mosaic, mpp_get_compute_domain, &
     31                             mpp_get_global_domain, domainUG, mpp_pass_SG_to_UG
     32 use mosaic_mod, only : get_mosaic_ncontacts, get_mosaic_contact
     33 
     34 implicit none;private
     35 
     36 ! ==== public interfaces =====================================================
     37 ! grid dimension inquiry subroutines
     38 public :: get_grid_ntiles ! returns number of tiles
     39 public :: get_grid_size   ! returns horizontal sizes of the grid
     40 ! grid geometry inquiry subroutines
     41 public :: get_grid_cell_centers
     42 public :: get_grid_cell_vertices
     43 ! grid area inquiry subroutines
     44 public :: get_grid_cell_area
     45 public :: get_grid_comp_area
     46 ! decompose cubed sphere domains -- probably does not belong here, but it should
     47 ! be in some place available for component models
     48 public :: define_cube_mosaic
     49 ! ==== end of public interfaces ==============================================
     50 
     51 interface get_grid_size
     52    module procedure get_grid_size_for_all_tiles
     53    module procedure get_grid_size_for_one_tile
     54 end interface
     55 
     56 interface get_grid_cell_vertices
     57    module procedure get_grid_cell_vertices_1D

Page 2           Source Listing                  GET_GRID_VERSION
2021-06-01 08:54                                 grid.F90

     58    module procedure get_grid_cell_vertices_2D
     59    module procedure get_grid_cell_vertices_UG
     60 end interface
     61 
     62 interface get_grid_cell_centers
     63    module procedure get_grid_cell_centers_1D
     64    module procedure get_grid_cell_centers_2D
     65    module procedure get_grid_cell_centers_UG
     66 end interface
     67 
     68 interface get_grid_cell_area
     69    module procedure get_grid_cell_area_SG
     70    module procedure get_grid_cell_area_UG
     71 end interface get_grid_cell_area
     72 
     73 interface get_grid_comp_area
     74    module procedure get_grid_comp_area_SG
     75    module procedure get_grid_comp_area_UG
     76 end interface get_grid_comp_area
     77 
     78 ! ==== module constants ======================================================
     79 character(len=*), parameter :: &
     80      module_name = 'grid_mod'
     81 
     82 ! Include variable "version" to be written to log file.
     83 # 1 "../include/file_version.h" 1 
     84 ! -*-f90-*-
     85 !***********************************************************************
     86 !*                   GNU Lesser General Public License
     87 !*
     88 !* This file is part of the GFDL Flexible Modeling System (FMS).
     89 !*
     90 !* FMS is free software: you can redistribute it and/or modify it under
     91 !* the terms of the GNU Lesser General Public License as published by
     92 !* the Free Software Foundation, either version 3 of the License, or (at
     93 !* your option) any later version.
     94 !*
     95 !* FMS is distributed in the hope that it will be useful, but WITHOUT
     96 !* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
     97 !* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
     98 !* for more details.
     99 !*
    100 !* You should have received a copy of the GNU Lesser General Public
    101 !* License along with FMS.  If not, see <http://www.gnu.org/licenses/>.
    102 !***********************************************************************
    103 
    104 # 23
    105 
    106   character(len=*), parameter :: version = 'unknown'
    107 
    108 # 83 "grid.F90" 2 
    109 
    110 character(len=*), parameter :: &
    111      grid_dir  = 'INPUT/',     &      ! root directory for all grid files
    112      grid_file = 'INPUT/grid_spec.nc' ! name of the grid spec file
    113 
    114 integer, parameter :: &

Page 3           Source Listing                  GET_GRID_VERSION
2021-06-01 08:54                                 grid.F90

    115      MAX_NAME = 256,  & ! max length of the variable names
    116      MAX_FILE = 1024, & ! max length of the file names
    117      VERSION_0 = 0,   &
    118      VERSION_1 = 1,   &
    119      VERSION_2 = 2
    120 
    121 integer, parameter :: BUFSIZE = 1048576  ! This is used to control memory usage in get_grid_comp_area
    122 ! We may change this to a namelist variable is needed.
    123 
    124 ! ==== module variables ======================================================
    125 integer :: grid_version = -1
    126 logical :: great_circle_algorithm = .FALSE.
    127 logical :: first_call = .TRUE.
    128 
    129 
    130 contains
    131 
    132 function get_grid_version()
    133   integer :: get_grid_version
    134 
    135   if(first_call) then
    136      great_circle_algorithm = get_great_circle_algorithm()
    137      first_call = .FALSE.
    138   endif
    139 
    140   if(grid_version<0) then
    141     if(field_exist(grid_file, 'geolon_t')) then
    142        grid_version = VERSION_0
    143     else if(field_exist(grid_file, 'x_T')) then
    144        grid_version = VERSION_1
    145     else if(field_exist(grid_file, 'ocn_mosaic_file') ) then
    146        grid_version = VERSION_2
    147     else
    148        call mpp_error(FATAL, module_name//'/get_grid_version: Can''t determine the version of the grid spec: none of "x_T", 
    148 "geolon_t", or "ocn_mosaic_file" exist in file "'//trim(grid_file)//'"')
    149     endif
    150   endif
    151   get_grid_version = grid_version
    152 end function get_grid_version

Page 4           Source Listing                  GET_GRID_VERSION
2021-06-01 08:54 Entry Points                    grid.F90



ENTRY POINTS

  Name                                     
                                           
 grid_mod_mp_get_grid_version_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 FATAL                      Param  148      I(4)            4           scalar   PRIV             22,148,220,247,315,332,344,361,416
                                                                                                  ,480,482,484,577,579,581,749,751,7
                                                                                                  53,833,835,837                    
 FIELD_EXIST                Func   141      L(4)            4           scalar   PRIV             25,141,143,145,366                
 FIRST_CALL                 Local  135      L(4)            4           scalar                    127,135,137                       
 GET_GREAT_CIRCLE_ALGORITHM Func   136      L(4)            4           scalar   PRIV             24,136                            
 GET_GRID_VERSION           Func   132      I(4)            4           scalar                    151,165,190,237,301,487,584,756,84
                                                                                                  0                                 
 GREAT_CIRCLE_ALGORITHM     Local  136      L(4)            4           scalar                    126,136,259                       
 GRID_FILE                  Param  141      CHAR            18          scalar                    141,143,145,148,169,192,195,241,24
                                                                                                  4,305,308,309,313,325,329,347,348,
                                                                                                  366,368,374,491,492,494,495,500,50
                                                                                                  1,506,508,511,513,522,590,596,608,
                                                                                                  609,611,612,620,626,636,637,650,76
                                                                                                  0,761,763,764,769,770,772,773,777,
                                                                                                  846,852,860,861,868,874,882,883,88
                                                                                                  7,998                             
 GRID_VERSION               Local  140      I(4)            4           scalar                    125,140,142,144,146,151           
 MODULE_NAME                Param  148      CHAR            8           scalar                    148,247,315,332,344,361,480,482,48
                                                                                                  4,571,577,579,581,749,751,753,827,
                                                                                                  833,835,837                       
 MPP_ERROR                  Local  148                                  scalar   PRIV             22,148,220,247,315,332,344,361,416
                                                                                                  ,480,482,484,571,577,579,581,749,7
                                                                                                  51,753,827,833,835,837            
 MPP_ERROR_BASIC            Subr   148                                           PRIV             148,220,247,315,332,344,361,416,48
                                                                                                  0,482,484,571,577,579,581,749,751,
                                                                                                  753,827,833,835,837               
 TRIM                       Func   148                                  scalar                    148                               
 VERSION_0                  Param  142      I(4)            4           scalar                    142,166,191,238,302,488,585,757,84
                                                                                                  1                                 
 VERSION_1                  Param  144      I(4)            4           scalar                    144,166,191,238,302,497,615,766,86
                                                                                                  3                                 
 VERSION_2                  Param  146      I(4)            4           scalar                    146,168,194,251,317,520,648,775,88
                                                                                                  5                                 

Page 5           Source Listing                  GET_GRID_VERSION
2021-06-01 08:54                                 grid.F90

    153 
    154 
    155 ! ============================================================================
    156 ! returns number of tiles for a given component
    157 ! ============================================================================
    158 subroutine get_grid_ntiles(component,ntiles)
    159   character(len=*)     :: component
    160   integer, intent(out) :: ntiles
    161 
    162 ! local vars
    163   character(len=MAX_FILE) :: component_mosaic
    164 
    165   select case (get_grid_version())
    166   case(VERSION_0,VERSION_1)
    167      ntiles = 1
    168   case(VERSION_2)
    169      call read_data(grid_file,trim(lowercase(component))//'_mosaic_file',component_mosaic)
    170      ntiles = get_mosaic_ntiles(grid_dir//trim(component_mosaic))
    171   end select
    172 end subroutine get_grid_ntiles


ENTRY POINTS

  Name                                    
                                          
 grid_mod_mp_get_grid_ntiles_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 COMPONENT                  Dummy  158      CHAR                        scalar   ARG,INOUT        169                               
 COMPONENT_MOSAIC           Local  163      CHAR            1024        scalar                    169,170                           
 GET_GRID_NTILES            Subr   158                                                                                              
 GET_MOSAIC_NTILES          Func   170      I(4)            4           scalar   PRIV             26,170,350                        
 GRID_DIR                   Param  170      CHAR            6           scalar                    170,196,349,355,392,402,523,526,65
                                                                                                  1,654,778,781,888,891,999         
 LOWERCASE                  Func   169      CHAR                        scalar   TGT,PRIV         22,169,188,491,492,500,501,522,590
                                                                                                  ,596,620,626,650,760,761,769,770,7
                                                                                                  77,846,852,868,874,887,997        
 MAX_FILE                   Param  163      I(4)            4           scalar                    163,185,476,555,745,811,965       
 NTILES                     Dummy  158      I(4)            4           scalar   ARG,OUT          167,170                           
 READ_DATA                  Local  169                                  scalar   PRIV             25,169,195,241,244,305,308,309,313
                                                                                                  ,325,329,347,348,354,374,491,492,4
                                                                                                  94,495,500,501,506,508,511,513,522
                                                                                                  ,525,531,538,590,596,608,609,611,6
                                                                                                  12,620,626,636,637,650,653,661,667
                                                                                                  ,675,681,760,761,763,764,769,770,7
                                                                                                  72,773,777,780,786,793,846,852,860
                                                                                                  ,861,868,874,882,883,887,890,898,9
                                                                                                  04,912,918,998                    
 READ_DATA_TEXT             Subr   169                                           PRIV             169,195,325,329,347,348,354,374,52
                                                                                                  2,525,650,653,777,780,887,890,998 
 TRIM                       Func   169                                  scalar                    169,170                           

Page 6           Source Listing                  GET_GRID_NTILES
2021-06-01 08:54                                 grid.F90

    173 
    174 
    175 ! ============================================================================
    176 ! returns size of the grid for each of the tiles
    177 ! ============================================================================
    178 subroutine get_grid_size_for_all_tiles(component,nx,ny)
    179   character(len=*)     :: component
    180   integer, intent(inout) :: nx(:),ny(:)
    181 
    182 ! local vars
    183   integer :: siz(4) ! for the size of external fields
    184   character(len=MAX_NAME) :: varname1, varname2
    185   character(len=MAX_FILE) :: component_mosaic
    186 
    187   varname1 = 'AREA_'//trim(uppercase(component))
    188   varname2 = trim(lowercase(component))//'_mosaic_file'
    189 
    190   select case (get_grid_version())
    191   case(VERSION_0,VERSION_1)
    192      call field_size(grid_file, varname1, siz)
    193      nx(1) = siz(1); ny(1)=siz(2)
    194   case(VERSION_2) ! mosaic file
    195      call read_data(grid_file,varname2, component_mosaic)
    196      call get_mosaic_grid_sizes(grid_dir//trim(component_mosaic),nx,ny)
    197   end select
    198 end subroutine get_grid_size_for_all_tiles


ENTRY POINTS

  Name                                                
                                                      
 grid_mod_mp_get_grid_size_for_all_tiles_             

Page 7           Source Listing                  GET_GRID_SIZE_FOR_ALL_TILES
2021-06-01 08:54 Symbol Table                    grid.F90



SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 COMPONENT                  Dummy  178      CHAR                        scalar   ARG,INOUT        187,188                           
 COMPONENT_MOSAIC           Local  185      CHAR            1024        scalar                    195,196                           
 FIELD_SIZE                 Subr   192                                           PRIV             25,192,368                        
 GET_GRID_SIZE_FOR_ALL_TILE                                                                                                         
 S                          Subr   178                                           PRIV             216,981                           
 GET_MOSAIC_GRID_SIZES      Subr   196                                           PRIV             26,196                            
 MAX_NAME                   Param  184      I(4)            4           scalar                    184,284,292,293,810,964           
 NX                         Dummy  178      I(4)            4     1     1        ARG,INOUT        193,196                           
 NY                         Dummy  178      I(4)            4     1     1        ARG,INOUT        193,196                           
 SIZ                        Local  183      I(4)            4     1     4        TGT              192,193                           
 TRIM                       Func   187                                  scalar                    187,188,196                       
 UPPERCASE                  Func   187      CHAR                        scalar   TGT,PRIV         22,187,244                        
 VARNAME1                   Local  184      CHAR            256         scalar                    187,192                           
 VARNAME2                   Local  184      CHAR            256         scalar                    188,195                           

Page 8           Source Listing                  GET_GRID_SIZE_FOR_ALL_TILES
2021-06-01 08:54                                 grid.F90

    199 
    200 
    201 ! ============================================================================
    202 ! returns size of the grid for one of the tiles
    203 ! ============================================================================
    204 subroutine get_grid_size_for_one_tile(component,tile,nx,ny)
    205   character(len=*)       :: component
    206   integer, intent(in)    :: tile
    207   integer, intent(inout) :: nx,ny
    208 
    209 ! local vars
    210   integer, allocatable :: nnx(:), nny(:)
    211   integer :: ntiles
    212 
    213   call get_grid_ntiles(component, ntiles)
    214   if(tile>0.and.tile<=ntiles) then
    215      allocate(nnx(ntiles),nny(ntiles))
    216      call get_grid_size_for_all_tiles(component,nnx,nny)
    217      nx = nnx(tile); ny = nny(tile)
    218      deallocate(nnx,nny)
    219   else
    220      call mpp_error(FATAL, 'get_grid_size: requested tile index '//trim(string(tile))//' is out of bounds (1:'//trim(string(
    220 ntiles))//')')
    221   endif
    222 end subroutine get_grid_size_for_one_tile


ENTRY POINTS

  Name                                               
                                                     
 grid_mod_mp_get_grid_size_for_one_tile_             

Page 9           Source Listing                  GET_GRID_SIZE_FOR_ONE_TILE
2021-06-01 08:54 Symbol Table                    grid.F90



SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 COMPONENT                  Dummy  204      CHAR                        scalar   ARG,INOUT        213,216                           
 GET_GRID_NTILES            Subr   213                                                            38,213,976                        
 GET_GRID_SIZE_FOR_ONE_TILE Subr   204                                           PRIV             255,339,478,564,747,820           
 NNX                        Local  210      I(4)            4     1     1        ALC              215,216,217,218                   
 NNY                        Local  210      I(4)            4     1     1        ALC              215,216,217,218                   
 NTILES                     Local  211      I(4)            4           scalar                    213,214,215,220                   
 NX                         Dummy  204      I(4)            4           scalar   ARG,INOUT        217                               
 NY                         Dummy  204      I(4)            4           scalar   ARG,INOUT        217                               
 STRING                     Local  220                                  scalar   PRIV             24,220                            
 STRING_FROM_INTEGER        Func   220      CHAR            16          scalar   PRIV             220                               
 TILE                       Dummy  204      I(4)            4           scalar   ARG,IN           214,217,220                       
 TRIM                       Func   220                                  scalar                    220                               

Page 10          Source Listing                  GET_GRID_SIZE_FOR_ONE_TILE
2021-06-01 08:54                                 grid.F90

    223 
    224 ! ============================================================================
    225 ! return grid cell area for the specified model component and tile
    226 ! ============================================================================
    227 subroutine get_grid_cell_area_SG(component, tile, cellarea, domain)
    228   character(len=*), intent(in)    :: component
    229   integer         , intent(in)    :: tile
    230   real            , intent(inout) :: cellarea(:,:)
    231   type(domain2d)  , intent(in), optional :: domain
    232 
    233 ! local vars
    234   integer :: nlon, nlat
    235   real, allocatable :: glonb(:,:), glatb(:,:)
    236 
    237   select case(get_grid_version())
    238   case(VERSION_0,VERSION_1)
    239      select case(trim(component))
    240      case('LND')
    241         call read_data(grid_file, 'AREA_LND_CELL', cellarea, &
    242             no_domain=.not.present(domain), domain=domain)
    243      case('ATM','OCN')
    244         call read_data(grid_file, 'AREA_'//trim(uppercase(component)),cellarea,&
    245             no_domain=.not.present(domain),domain=domain)
    246      case default
    247         call mpp_error(FATAL, module_name//'/get_grid_cell_area: Illegal component name "'//trim(component)//'": must be one
    247  of ATM, LND, or OCN')
    248      end select
    249 ! convert area to m2
    250      cellarea = cellarea*4.*PI*radius**2
    251   case(VERSION_2)
    252      if (present(domain)) then
    253         call mpp_get_compute_domain(domain,xsize=nlon,ysize=nlat)
    254      else
    255         call get_grid_size(component,tile,nlon,nlat)
    256      endif
    257      allocate(glonb(nlon+1,nlat+1),glatb(nlon+1,nlat+1))
    258      call get_grid_cell_vertices(component, tile, glonb, glatb, domain)
    259      if (great_circle_algorithm) then
    260         call calc_mosaic_grid_great_circle_area(glonb*pi/180.0, glatb*pi/180.0, cellarea)
    261      else
    262         call calc_mosaic_grid_area(glonb*pi/180.0, glatb*pi/180.0, cellarea)
    263      end if
    264      deallocate(glonb,glatb)
    265   end select
    266 
    267 end subroutine get_grid_cell_area_SG

Page 11          Source Listing                  GET_GRID_CELL_AREA_SG
2021-06-01 08:54 Entry Points                    grid.F90



ENTRY POINTS

  Name                                          
                                                
 grid_mod_mp_get_grid_cell_area_sg_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 CALC_MOSAIC_GRID_AREA      Subr   262                                           PRIV             27,262                            
 CALC_MOSAIC_GRID_GREAT_CIR                                                                                                         
 CLE_AREA                   Subr   260                                           PRIV             27,260                            
 CELLAREA                   Dummy  227      R(8)            8     2     1        ARG,INOUT        241,244,250,260,262               
 COMPONENT                  Dummy  227      CHAR                        scalar   ARG,IN           239,244,247,255,258               
 DOMAIN                     Dummy  227      DOMAIN2D        752         scalar   ARG,IN           242,245,252,253,258               
 DOMAIN2D                   Type   231                                  scalar   PRIV             30,231,276,430,447,552,698,808,934
                                                                                                  ,956                              
 GET_GRID_CELL_AREA_SG      Subr   227                                           PRIV             321,437                           
 GET_GRID_CELL_VERTICES     Local  258                                  scalar                    42,258                            
 GET_GRID_SIZE              Local  255                                  scalar                    39,255,339,981                    
 GLATB                      Local  235      R(8)            8     2     1        ALC              257,258,260,262,264               
 GLONB                      Local  235      R(8)            8     2     1        ALC              257,258,260,262,264               
 MPP_GET_COMPUTE_DOMAIN     Local  253                                  scalar   PRIV             30,253,336,435,452,566,703,822,939
 MPP_GET_COMPUTE_DOMAIN2D   Subr   253                                           PRIV             253,336,435,452,566,703,822,939   
 NLAT                       Local  234      I(4)            4           scalar                    253,255,257                       
 NLON                       Local  234      I(4)            4           scalar                    253,255,257                       
 PI                         Param  250      R(8)            8           scalar   PRIV             23,250,260,262,422                
 PRESENT                    Func   242                                  scalar                    242,245,252                       
 RADIUS                     Param  250      R(8)            8           scalar   PRIV             23,250,422                        
 READ_DATA_2D_NEW           Subr   241                                           PRIV             241,244,305,308,309,313,611,612,67
                                                                                                  5,681,860,861,882,883,912,918     
 TILE                       Dummy  227      I(4)            4           scalar   ARG,IN           255,258                           
 TRIM                       Func   239                                  scalar                    239,244,247                       

Page 12          Source Listing                  GET_GRID_CELL_AREA_SG
2021-06-01 08:54                                 grid.F90

    268 
    269 ! ============================================================================
    270 ! get the area of the component per grid cell
    271 ! ============================================================================
    272 subroutine get_grid_comp_area_SG(component,tile,area,domain)
    273   character(len=*) :: component
    274   integer, intent(in) :: tile
    275   real, intent(inout) :: area(:,:)
    276   type(domain2d), intent(in), optional :: domain
    277 ! local vars
    278   integer :: n_xgrid_files ! number of exchange grid files in the mosaic
    279   integer :: siz(4), nxgrid
    280   integer :: i,j,m,n
    281   integer, allocatable :: i1(:), j1(:), i2(:), j2(:)
    282   real, allocatable :: xgrid_area(:)
    283   real, allocatable :: rmask(:,:)
    284   character(len=MAX_NAME) :: &
    285      xgrid_name, & ! name of the variable holding xgrid names
    286      tile_name,  & ! name of the tile
    287      xgrid_file, & ! name of the current xgrid file
    288      mosaic_name,& ! name of the mosaic
    289      mosaic_file,&
    290      tilefile
    291   character(len=4096)     :: attvalue
    292   character(len=MAX_NAME), allocatable :: nest_tile_name(:)
    293   character(len=MAX_NAME) :: varname1, varname2
    294   integer :: is,ie,js,je ! boundaries of our domain
    295   integer :: i0, j0 ! offsets for x and y, respectively
    296   integer :: num_nest_tile, ntiles
    297   logical :: is_nest
    298   integer :: found_xgrid_files ! how many xgrid files we actually found in the grid spec
    299   integer :: ibegin, iend, bsize, l
    300 
    301   select case (get_grid_version())
    302   case(VERSION_0,VERSION_1)
    303      select case(component)
    304      case('ATM')
    305         call read_data(grid_file,'AREA_ATM',area, no_domain=.not.present(domain),domain=domain)
    306      case('OCN')
    307         allocate(rmask(size(area,1),size(area,2)))
    308         call read_data(grid_file,'AREA_OCN',area, no_domain=.not.present(domain),domain=domain)
    309         call read_data(grid_file,'wet',     rmask,no_domain=.not.present(domain),domain=domain)
    310         area = area*rmask
    311         deallocate(rmask)
    312      case('LND')
    313         call read_data(grid_file,'AREA_LND',area,no_domain=.not.present(domain),domain=domain)
    314      case default
    315         call mpp_error(FATAL, module_name//'/get_grid_comp_area: Illegal component name "'//trim(component)//'": must be one
    315  of ATM, LND, or OCN')
    316      end select
    317   case(VERSION_2) ! mosaic gridspec
    318      select case (component)
    319      case ('ATM')
    320 ! just read the grid cell area and return
    321         call get_grid_cell_area(component,tile,area)
    322         return
    323      case ('LND')

Page 13          Source Listing                  GET_GRID_COMP_AREA_SG
2021-06-01 08:54                                 grid.F90

    324         xgrid_name = 'aXl_file'
    325         call read_data(grid_file, 'lnd_mosaic', mosaic_name)
    326         tile_name  = trim(mosaic_name)//'_tile'//char(tile+ichar('0'))
    327      case ('OCN')
    328         xgrid_name = 'aXo_file'
    329         call read_data(grid_file, 'ocn_mosaic', mosaic_name)
    330         tile_name  = trim(mosaic_name)//'_tile'//char(tile+ichar('0'))
    331      case default
    332         call mpp_error(FATAL, module_name//'/get_grid_comp_area: Illegal component name "'//trim(component)//'": must be one
    332  of ATM, LND, or OCN')
    333      end select
    334 ! get the boundaries of the requested domain
    335      if(present(domain)) then
    336         call mpp_get_compute_domain(domain,is,ie,js,je)
    337         i0 = 1-is ; j0=1-js
    338      else
    339         call get_grid_size(component,tile,ie,je)
    340         is = 1 ; i0 = 0
    341         js = 1 ; j0 = 0
    342      endif
    343      if (size(area,1)/=ie-is+1.or.size(area,2)/=je-js+1) &
    344         call mpp_error(FATAL, module_name//'/get_grid_comp_area: size of the output argument "area" is not consistent with t
    344 he domain')
    345 
    346 ! find the nest tile
    347      call read_data(grid_file, 'atm_mosaic', mosaic_name)
    348      call read_data(grid_file,'atm_mosaic_file',mosaic_file)
    349      mosaic_file = grid_dir//trim(mosaic_file)
    350      ntiles = get_mosaic_ntiles(trim(mosaic_file))
    351      allocate(nest_tile_name(ntiles))
    352      num_nest_tile = 0
    353      do n = 1, ntiles
    354         call read_data(mosaic_file, 'gridfiles', tilefile, level=n)
    355         tilefile = grid_dir//trim(tilefile)
    356         if( get_global_att_value(tilefile, "nest_grid", attvalue) ) then
    357            if(trim(attvalue) == "TRUE") then
    358               num_nest_tile = num_nest_tile + 1
    359               nest_tile_name(num_nest_tile) = trim(mosaic_name)//'_tile'//char(n+ichar('0'))
    360            else if(trim(attvalue) .NE. "FALSE") then
    361               call mpp_error(FATAL, module_name//'/get_grid_comp_area: value of global attribute nest_grid in file'// trim(t
    361 ilefile)//' should be TRUE of FALSE')
    362            endif
    363         end if
    364      end do
    365      area(:,:) = 0.
    366      if(field_exist(grid_file,xgrid_name)) then
    367 ! get the number of the exchange-grid files
    368         call field_size(grid_file,xgrid_name,siz)
    369         n_xgrid_files = siz(2)
    370         found_xgrid_files = 0
    371 ! loop through all exchange grid files
    372         do n = 1, n_xgrid_files
    373 ! get the name of the current exchange grid file
    374            call read_data(grid_file,xgrid_name,xgrid_file,level=n)
    375 ! skip the rest of the loop if the name of the current tile isn't found
    376 ! in the file name, but check this only if there is more than 1 tile
    377            if(n_xgrid_files>1) then

Page 14          Source Listing                  GET_GRID_COMP_AREA_SG
2021-06-01 08:54                                 grid.F90

    378               if(index(xgrid_file,trim(tile_name))==0) cycle
    379            endif
    380            found_xgrid_files = found_xgrid_files + 1
    381 !---make sure the atmosphere grid is not a nested grid
    382            is_nest = .false.
    383            do m = 1, num_nest_tile
    384               if(index(xgrid_file, trim(nest_tile_name(m))) .NE. 0) then
    385                  is_nest = .true.
    386                  exit
    387               end if
    388            end do
    389            if(is_nest) cycle
    390 
    391 ! finally read the exchange grid
    392            nxgrid = get_mosaic_xgrid_size(grid_dir//xgrid_file)
    393            if(nxgrid < BUFSIZE) then
    394               allocate(i1(nxgrid), j1(nxgrid), i2(nxgrid), j2(nxgrid), xgrid_area(nxgrid))
    395            else
    396               allocate(i1(BUFSIZE), j1(BUFSIZE), i2(BUFSIZE), j2(BUFSIZE), xgrid_area(BUFSIZE))
    397            endif
    398            ibegin = 1
    399            do l = 1,nxgrid,BUFSIZE
    400               bsize = min(BUFSIZE, nxgrid-l+1)
    401               iend = ibegin + bsize - 1
    402               call get_mosaic_xgrid(grid_dir//xgrid_file, i1(1:bsize), j1(1:bsize), i2(1:bsize), j2(1:bsize), &
    403                                     xgrid_area(1:bsize), ibegin, iend)
    404 ! and sum the exchange grid areas
    405               do m = 1, bsize
    406                  i = i2(m); j = j2(m)
    407                  if (i<is.or.i>ie) cycle
    408                  if (j<js.or.j>je) cycle
    409                  area(i+i0,j+j0) = area(i+i0,j+j0) + xgrid_area(m)
    410               end do
    411               ibegin = iend + 1
    412            enddo
    413            deallocate(i1, j1, i2, j2, xgrid_area)
    414         enddo
    415         if (found_xgrid_files == 0) &
    416            call mpp_error(FATAL, 'get_grid_comp_area: no xgrid files were found for component '//trim(component)//' (mosaic 
    416 name is '//trim(mosaic_name)//')')
    417 
    418      endif
    419      deallocate(nest_tile_name)
    420   end select ! version
    421 ! convert area to m2
    422   area = area*4.*PI*radius**2
    423 end subroutine get_grid_comp_area_SG

Page 15          Source Listing                  GET_GRID_COMP_AREA_SG
2021-06-01 08:54 Entry Points                    grid.F90



ENTRY POINTS

  Name                                          
                                                
 grid_mod_mp_get_grid_comp_area_sg_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 AREA                       Dummy  272      R(8)            8     2     1        ARG,INOUT        305,307,308,310,313,321,343,365,40
                                                                                                  9,422                             
 ATTVALUE                   Local  291      CHAR            4096        scalar                    356,357,360                       
 BSIZE                      Local  299      I(4)            4           scalar                    400,401,402,403,405               
 BUFSIZE                    Param  393      I(4)            4           scalar                    393,396,399,400                   
 CHAR                       Func   326                                  scalar                    326,330,359                       
 COMPONENT                  Dummy  272      CHAR                        scalar   ARG,INOUT        303,315,318,321,332,339,416       
 DOMAIN                     Dummy  272      DOMAIN2D        752         scalar   ARG,IN           305,308,309,313,335,336           
 FOUND_XGRID_FILES          Local  298      I(4)            4           scalar                    370,380,415                       
 GET_GLOBAL_ATT_VALUE       Local  356                                  scalar   PRIV             24,356                            
 GET_GLOBAL_ATT_VALUE_TEXT  Func   356      L(4)            4           scalar   PRIV             356                               
 GET_GRID_CELL_AREA         Local  321                                  scalar                    44,321                            
 GET_GRID_COMP_AREA_SG      Subr   272                                           PRIV             454                               
 GET_MOSAIC_XGRID           Subr   402                                           PRIV             27,402                            
 GET_MOSAIC_XGRID_SIZE      Func   392      I(4)            4           scalar   PRIV             26,392                            
 I                          Local  280      I(4)            4           scalar                    406,407,409                       
 I0                         Local  295      I(4)            4           scalar                    337,340,409                       
 I1                         Local  281      I(4)            4     1     1        ALC              394,396,402,413                   
 I2                         Local  281      I(4)            4     1     1        ALC              394,396,402,406,413               
 IBEGIN                     Local  299      I(4)            4           scalar                    398,401,403,411                   
 ICHAR                      Func   326                                  scalar                    326,330,359                       
 IE                         Local  294      I(4)            4           scalar                    336,339,343,407                   
 IEND                       Local  299      I(4)            4           scalar                    401,403,411                       
 INDEX                      Func   378                                  scalar                    378,384                           
 IS                         Local  294      I(4)            4           scalar                    336,337,340,343,407               
 IS_NEST                    Local  297      L(4)            4           scalar                    382,385,389                       
 J                          Local  280      I(4)            4           scalar                    406,408,409                       
 J0                         Local  295      I(4)            4           scalar                    337,341,409                       
 J1                         Local  281      I(4)            4     1     1        ALC              394,396,402,413                   
 J2                         Local  281      I(4)            4     1     1        ALC              394,396,402,406,413               
 JE                         Local  294      I(4)            4           scalar                    336,339,343,408                   
 JS                         Local  294      I(4)            4           scalar                    336,337,341,343,408               
 L                          Local  299      I(4)            4           scalar                    399,400                           
 M                          Local  280      I(4)            4           scalar                    383,384,405,406,409               
 MIN                        Func   400                                  scalar                    400                               
 MOSAIC_FILE                Local  289      CHAR            256         scalar                    348,349,350,354                   
 MOSAIC_NAME                Local  288      CHAR            256         scalar                    325,326,329,330,347,359,416       
 N                          Local  280      I(4)            4           scalar                    353,354,359,372,374               
 NEST_TILE_NAME             Local  292      CHAR            256   1     1        ALC              351,359,384,419                   
 NTILES                     Local  296      I(4)            4           scalar                    350,351,353                       
 NUM_NEST_TILE              Local  296      I(4)            4           scalar                    352,358,359,383                   
 NXGRID                     Local  279      I(4)            4           scalar                    392,393,394,399,400               
 N_XGRID_FILES              Local  278      I(4)            4           scalar                    369,372,377                       
 PRESENT                    Func   305                                  scalar                    305,308,309,313,335               

Page 16          Source Listing                  GET_GRID_COMP_AREA_SG
2021-06-01 08:54 Symbol Table                    grid.F90

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 RMASK                      Local  283      R(8)            8     2     1        ALC              307,309,310,311                   
 SIZ                        Local  279      I(4)            4     1     4        TGT              368,369                           
 SIZE                       Func   307                                  scalar                    307,343                           
 TILE                       Dummy  272      I(4)            4           scalar   ARG,IN           321,326,330,339                   
 TILEFILE                   Local  290      CHAR            256         scalar                    354,355,356,361                   
 TILE_NAME                  Local  286      CHAR            256         scalar                    326,330,378                       
 TRIM                       Func   315                                  scalar                    315,326,330,332,349,350,355,357,35
                                                                                                  9,360,361,378,384,416             
 VARNAME1                   Local  293      CHAR            256         scalar                                                      
 VARNAME2                   Local  293      CHAR            256         scalar                                                      
 XGRID_AREA                 Local  282      R(8)            8     1     1        ALC              394,396,403,409,413               
 XGRID_FILE                 Local  287      CHAR            256         scalar                    374,378,384,392,402               
 XGRID_NAME                 Local  285      CHAR            256         scalar                    324,328,366,368,374               

Page 17          Source Listing                  GET_GRID_COMP_AREA_SG
2021-06-01 08:54                                 grid.F90

    424 
    425 !======================================================================
    426 subroutine get_grid_cell_area_UG(component, tile, cellarea, SG_domain, UG_domain)
    427   character(len=*),   intent(in)    :: component
    428   integer         ,   intent(in)    :: tile
    429   real            ,   intent(inout) :: cellarea(:)
    430   type(domain2d)  ,   intent(in)    :: SG_domain
    431   type(domainUG)  ,   intent(in)    :: UG_domain
    432   integer :: is, ie, js, je
    433   real, allocatable :: SG_area(:,:)
    434 
    435   call mpp_get_compute_domain(SG_domain, is, ie, js, je)
    436   allocate(SG_area(is:ie, js:je))
    437   call get_grid_cell_area_SG(component, tile, SG_area, SG_domain)
    438   call mpp_pass_SG_to_UG(UG_domain, SG_area, cellarea)
    439   deallocate(SG_area)
    440 
    441 end subroutine get_grid_cell_area_UG


ENTRY POINTS

  Name                                          
                                                
 grid_mod_mp_get_grid_cell_area_ug_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 CELLAREA                   Dummy  426      R(8)            8     1     1        ARG,INOUT        438                               
 COMPONENT                  Dummy  426      CHAR                        scalar   ARG,IN           437                               
 DOMAINUG                   Type   431                                  scalar                    31,431,448,699,935                
 GET_GRID_CELL_AREA_UG      Subr   426                                           PRIV                                               
 IE                         Local  432      I(4)            4           scalar                    435,436                           
 IS                         Local  432      I(4)            4           scalar                    435,436                           
 JE                         Local  432      I(4)            4           scalar                    435,436                           
 JS                         Local  432      I(4)            4           scalar                    435,436                           
 MPP_PASS_SG_TO_UG          Local  438                                  scalar   PRIV             31,438,455,716,725,943,944        
 MPP_PASS_SG_TO_UG_R8_2D    Subr   438                                           PRIV             438,455,943,944                   
 SG_AREA                    Local  433      R(8)            8     2     1        ALC              436,437,438,439                   
 SG_DOMAIN                  Dummy  426      DOMAIN2D        752         scalar   ARG,IN           435,437                           
 TILE                       Dummy  426      I(4)            4           scalar   ARG,IN           437                               
 UG_DOMAIN                  Dummy  426      DOMAINUG        544         scalar   ARG,IN           438                               

Page 18          Source Listing                  GET_GRID_CELL_AREA_UG
2021-06-01 08:54                                 grid.F90

    442 
    443 subroutine get_grid_comp_area_UG(component, tile, area, SG_domain, UG_domain)
    444   character(len=*),   intent(in)    :: component
    445   integer         ,   intent(in)    :: tile
    446   real            ,   intent(inout) :: area(:)
    447   type(domain2d)  ,   intent(in)    :: SG_domain
    448   type(domainUG)  ,   intent(in)    :: UG_domain
    449   integer :: is, ie, js, je
    450   real, allocatable :: SG_area(:,:)
    451 
    452   call mpp_get_compute_domain(SG_domain, is, ie, js, je)
    453   allocate(SG_area(is:ie, js:je))
    454   call get_grid_comp_area_SG(component, tile, SG_area, SG_domain)
    455   call mpp_pass_SG_to_UG(UG_domain, SG_area, area)
    456   deallocate(SG_area)
    457 
    458 end subroutine get_grid_comp_area_UG


ENTRY POINTS

  Name                                          
                                                
 grid_mod_mp_get_grid_comp_area_ug_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 AREA                       Dummy  443      R(8)            8     1     1        ARG,INOUT        455                               
 COMPONENT                  Dummy  443      CHAR                        scalar   ARG,IN           454                               
 GET_GRID_COMP_AREA_UG      Subr   443                                           PRIV                                               
 IE                         Local  449      I(4)            4           scalar                    452,453                           
 IS                         Local  449      I(4)            4           scalar                    452,453                           
 JE                         Local  449      I(4)            4           scalar                    452,453                           
 JS                         Local  449      I(4)            4           scalar                    452,453                           
 SG_AREA                    Local  450      R(8)            8     2     1        ALC              453,454,455,456                   
 SG_DOMAIN                  Dummy  443      DOMAIN2D        752         scalar   ARG,IN           452,454                           
 TILE                       Dummy  443      I(4)            4           scalar   ARG,IN           454                               
 UG_DOMAIN                  Dummy  443      DOMAINUG        544         scalar   ARG,IN           455                               

Page 19          Source Listing                  GET_GRID_COMP_AREA_UG
2021-06-01 08:54                                 grid.F90

    459 
    460 
    461 ! ============================================================================
    462 ! returns arrays of global grid cell boundaries for given model component and
    463 ! mosaic tile number.
    464 ! NOTE that in case of non-lat-lon grid the returned coordinates may have be not so
    465 ! meaningful, by the very nature of such grids. But presumably these 1D coordinate
    466 ! arrays are good enough for diag axis and such.
    467 ! ============================================================================
    468 subroutine get_grid_cell_vertices_1D(component, tile, glonb, glatb)
    469   character(len=*), intent(in) :: component
    470   integer,          intent(in) :: tile
    471   real,          intent(inout) :: glonb(:),glatb(:)
    472 
    473   integer                      :: nlon, nlat
    474   integer                      :: start(4), nread(4)
    475   real, allocatable            :: tmp(:,:), x_vert_t(:,:,:), y_vert_t(:,:,:)
    476   character(len=MAX_FILE)      :: filename1, filename2
    477 
    478   call get_grid_size_for_one_tile(component, tile, nlon, nlat)
    479   if (size(glonb(:))/=nlon+1) &
    480        call mpp_error (FATAL,  module_name//'/get_grid_cell_vertices_1D: Size of argument "glonb" is not consistent with the
    480  grid size')
    481   if (size(glatb(:))/=nlat+1) &
    482        call mpp_error (FATAL, module_name//'/get_grid_cell_vertices_1D: Size of argument "glatb" is not consistent with the 
    482 grid size')
    483   if(trim(component) .NE. 'ATM' .AND. component .NE. 'LND' .AND. component .NE. 'OCN') then
    484      call mpp_error(FATAL, module_name//'/get_grid_cell_vertices_1D: Illegal component name "'//trim(component)//'": must be
    484  one of ATM, LND, or OCN')
    485   endif
    486 
    487   select case(get_grid_version())
    488   case(VERSION_0)
    489      select case(trim(component))
    490      case('ATM','LND')
    491         call read_data(grid_file, 'xb'//lowercase(component(1:1)), glonb, no_domain=.true.)
    492         call read_data(grid_file, 'yb'//lowercase(component(1:1)), glatb, no_domain=.true.)
    493      case('OCN')
    494         call read_data(grid_file, "gridlon_vert_t", glonb, no_domain=.true.)
    495         call read_data(grid_file, "gridlat_vert_t", glatb, no_domain=.true.)
    496      end select
    497   case(VERSION_1)
    498      select case(trim(component))
    499      case('ATM','LND')
    500         call read_data(grid_file, 'xb'//lowercase(component(1:1)), glonb, no_domain=.true.)
    501         call read_data(grid_file, 'yb'//lowercase(component(1:1)), glatb, no_domain=.true.)
    502      case('OCN')
    503         allocate (x_vert_t(nlon,1,2), y_vert_t(1,nlat,2) )
    504         start = 1; nread = 1
    505         nread(1) = nlon; nread(2) = 1; start(3) = 1
    506         call read_data(grid_file, "x_vert_T", x_vert_t(:,:,1), start, nread, no_domain=.TRUE.)
    507         nread(1) = nlon; nread(2) = 1; start(3) = 2
    508         call read_data(grid_file, "x_vert_T", x_vert_t(:,:,2), start, nread, no_domain=.TRUE.)
    509 
    510         nread(1) = 1; nread(2) = nlat; start(3) = 1
    511         call read_data(grid_file, "y_vert_T", y_vert_t(:,:,1), start, nread, no_domain=.TRUE.)
    512         nread(1) = 1; nread(2) = nlat; start(3) = 4

Page 20          Source Listing                  GET_GRID_CELL_VERTICES_1D
2021-06-01 08:54                                 grid.F90

    513         call read_data(grid_file, "y_vert_T", y_vert_t(:,:,2), start, nread, no_domain=.TRUE.)
    514         glonb(1:nlon) = x_vert_t(1:nlon,1,1)
    515         glonb(nlon+1) = x_vert_t(nlon,1,2)
    516         glatb(1:nlat) = y_vert_t(1,1:nlat,1)
    517         glatb(nlat+1) = y_vert_t(1,nlat,2)
    518         deallocate(x_vert_t, y_vert_t)
    519      end select
    520   case(VERSION_2)
    521 ! get the name of the mosaic file for the component
    522      call read_data(grid_file, trim(lowercase(component))//'_mosaic_file', filename1)
    523      filename1=grid_dir//trim(filename1)
    524 ! get the name of the grid file for the component and tile
    525      call read_data(filename1, 'gridfiles', filename2, level=tile)
    526      filename2 = grid_dir//trim(filename2)
    527 
    528      start = 1; nread = 1
    529      nread(1) = 2*nlon+1
    530      allocate( tmp(2*nlon+1,1) )
    531      call read_data(filename2, "x", tmp, start, nread, no_domain=.TRUE.)
    532      glonb(1:nlon+1) = tmp(1:2*nlon+1:2,1)
    533      deallocate(tmp)
    534      allocate(tmp(1,2*nlat+1))
    535 
    536      start = 1; nread = 1
    537      nread(2) = 2*nlat+1
    538      call read_data(filename2, "y", tmp, start, nread, no_domain=.TRUE.)
    539      glatb(1:nlat+1) = tmp(1,1:2*nlat+1:2)
    540      deallocate(tmp)
    541   end select
    542 
    543 end subroutine get_grid_cell_vertices_1D

Page 21          Source Listing                  GET_GRID_CELL_VERTICES_1D
2021-06-01 08:54 Entry Points                    grid.F90



ENTRY POINTS

  Name                                              
                                                    
 grid_mod_mp_get_grid_cell_vertices_1d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 COMPONENT                  Dummy  468      CHAR                        scalar   ARG,IN           478,483,484,489,491,492,498,500,50
                                                                                                  1,522                             
 FILENAME1                  Local  476      CHAR            1024        scalar                    522,523,525                       
 FILENAME2                  Local  476      CHAR            1024        scalar                    525,526,531,538                   
 GET_GRID_CELL_VERTICES_1D  Subr   468                                           PRIV                                               
 GLATB                      Dummy  468      R(8)            8     1     1        ARG,INOUT        481,492,495,501,516,517,539       
 GLONB                      Dummy  468      R(8)            8     1     1        ARG,INOUT        479,491,494,500,514,515,532       
 NLAT                       Local  473      I(4)            4           scalar                    478,481,503,510,512,516,517,534,53
                                                                                                  7,539                             
 NLON                       Local  473      I(4)            4           scalar                    478,479,503,505,507,514,515,529,53
                                                                                                  0,532                             
 NREAD                      Local  474      I(4)            4     1     4        TGT              504,505,506,507,508,510,511,512,51
                                                                                                  3,528,529,531,536,537,538         
 READ_DATA_1D_NEW           Subr   491                                           PRIV             491,492,494,495,500,501,590,596,62
                                                                                                  0,626,760,761,763,764,769,770,772,
                                                                                                  773,846,852,868,874               
 READ_DATA_2D_REGION        Subr   506                                           PRIV             506,508,511,513,531,538,608,609,66
                                                                                                  1,667,786,793,898,904             
 SIZE                       Func   479                                  scalar                    479,481                           
 START                      Local  474      I(4)            4     1     4        TGT              504,505,506,507,508,510,511,512,51
                                                                                                  3,528,531,536,538                 
 TILE                       Dummy  468      I(4)            4           scalar   ARG,IN           478,525                           
 TMP                        Local  475      R(8)            8     2     1        ALC              530,531,532,533,534,538,539,540   
 TRIM                       Func   483                                  scalar                    483,484,489,498,522,523,526       
 X_VERT_T                   Local  475      R(8)            8     3     1        ALC              503,506,508,514,515,518           
 Y_VERT_T                   Local  475      R(8)            8     3     1        ALC              503,511,513,516,517,518           

Page 22          Source Listing                  GET_GRID_CELL_VERTICES_1D
2021-06-01 08:54                                 grid.F90

    544 
    545 ! ============================================================================
    546 ! returns cell vertices for the specified model component and mosaic tile number
    547 ! ============================================================================
    548 subroutine get_grid_cell_vertices_2D(component, tile, lonb, latb, domain)
    549   character(len=*),         intent(in) :: component
    550   integer,                  intent(in) :: tile
    551   real,                  intent(inout) :: lonb(:,:),latb(:,:)
    552   type(domain2d), optional, intent(in) :: domain
    553 
    554 ! local vars
    555   character(len=MAX_FILE) :: filename1, filename2
    556   integer :: nlon, nlat
    557   integer :: i,j
    558   real, allocatable :: buffer(:), tmp(:,:), x_vert_t(:,:,:), y_vert_t(:,:,:)
    559   integer :: is,ie,js,je ! boundaries of our domain
    560   integer :: i0,j0 ! offsets for coordinates
    561   integer :: isg, jsg
    562   integer :: start(4), nread(4)
    563 
    564   call get_grid_size_for_one_tile(component, tile, nlon, nlat)
    565   if (present(domain)) then
    566     call mpp_get_compute_domain(domain,is,ie,js,je)
    567   else
    568     is = 1 ; ie = nlon
    569     js = 1 ; je = nlat
    570 !--- domain normally should be present
    571     call mpp_error (NOTE, module_name//'/get_grid_cell_vertices: domain is not present, global data will be read')
    572   endif
    573   i0 = -is+1; j0 = -js+1
    574 
    575 ! verify that lonb and latb sizes are consistent with the size of domain
    576   if (size(lonb,1)/=ie-is+2.or.size(lonb,2)/=je-js+2) &
    577        call mpp_error (FATAL, module_name//'/get_grid_cell_vertices: Size of argument "lonb" is not consistent with the doma
    577 in size')
    578   if (size(latb,1)/=ie-is+2.or.size(latb,2)/=je-js+2) &
    579        call mpp_error (FATAL, module_name//'/get_grid_cell_vertices: Size of argument "latb" is not consistent with the doma
    579 in size')
    580   if(trim(component) .NE. 'ATM' .AND. component .NE. 'LND' .AND. component .NE. 'OCN') then
    581      call mpp_error(FATAL, module_name//'/get_grid_cell_vertices: Illegal component name "'//trim(component)//'": must be on
    581 e of ATM, LND, or OCN')
    582   endif
    583 
    584   select case(get_grid_version())
    585   case(VERSION_0)
    586      select case(component)
    587      case('ATM','LND')
    588         allocate(buffer(max(nlon,nlat)+1))
    589 ! read coordinates of grid cell vertices
    590         call read_data(grid_file, 'xb'//lowercase(component(1:1)), buffer(1:nlon+1), no_domain=.true.)
    591         do j = js, je+1
    592            do i = is, ie+1
    593               lonb(i+i0,j+j0) = buffer(i)
    594            enddo
    595         enddo
    596         call read_data(grid_file, 'yb'//lowercase(component(1:1)), buffer(1:nlat+1), no_domain=.true.)
    597         do j = js, je+1

Page 23          Source Listing                  GET_GRID_CELL_VERTICES_2D
2021-06-01 08:54                                 grid.F90

    598            do i = is, ie+1
    599               latb(i+i0,j+j0) = buffer(j)
    600            enddo
    601         enddo
    602         deallocate(buffer)
    603      case('OCN')
    604         if (present(domain)) then
    605            start = 1; nread = 1
    606            start(1) = is; start(2) = js
    607            nread(1) = ie-is+2; nread(2) = je-js+2
    608            call read_data(grid_file, 'geolon_vert_t', lonb, start, nread, no_domain=.true. )
    609            call read_data(grid_file, 'geolat_vert_t', latb, start, nread, no_domain=.true. )
    610          else
    611            call read_data(grid_file, 'geolon_vert_t', lonb, no_domain=.TRUE. )
    612            call read_data(grid_file, 'geolat_vert_t', latb, no_domain=.TRUE. )
    613          endif
    614      end select
    615   case(VERSION_1)
    616      select case(component)
    617      case('ATM','LND')
    618         allocate(buffer(max(nlon,nlat)+1))
    619 ! read coordinates of grid cell vertices
    620         call read_data(grid_file, 'xb'//lowercase(component(1:1)), buffer(1:nlon+1), no_domain=.true.)
    621         do j = js, je+1
    622            do i = is, ie+1
    623               lonb(i+i0,j+j0) = buffer(i)
    624            enddo
    625         enddo
    626         call read_data(grid_file, 'yb'//lowercase(component(1:1)), buffer(1:nlat+1), no_domain=.true.)
    627         do j = js, je+1
    628            do i = is, ie+1
    629               latb(i+i0,j+j0) = buffer(j)
    630            enddo
    631         enddo
    632         deallocate(buffer)
    633      case('OCN')
    634         nlon=ie-is+1; nlat=je-js+1
    635         allocate (x_vert_t(nlon,nlat,4), y_vert_t(nlon,nlat,4) )
    636         call read_data(grid_file, 'x_vert_T', x_vert_t, no_domain=.not.present(domain), domain=domain )
    637         call read_data(grid_file, 'y_vert_T', y_vert_t, no_domain=.not.present(domain), domain=domain )
    638         lonb(1:nlon,1:nlat) = x_vert_t(1:nlon,1:nlat,1)
    639         lonb(nlon+1,1:nlat) = x_vert_t(nlon,1:nlat,2)
    640         lonb(1:nlon,nlat+1) = x_vert_t(1:nlon,nlat,4)
    641         lonb(nlon+1,nlat+1) = x_vert_t(nlon,nlat,3)
    642         latb(1:nlon,1:nlat) = y_vert_t(1:nlon,1:nlat,1)
    643         latb(nlon+1,1:nlat) = y_vert_t(nlon,1:nlat,2)
    644         latb(1:nlon,nlat+1) = y_vert_t(1:nlon,nlat,4)
    645         latb(nlon+1,nlat+1) = y_vert_t(nlon,nlat,3)
    646         deallocate(x_vert_t, y_vert_t)
    647      end select
    648   case(VERSION_2)
    649 ! get the name of the mosaic file for the component
    650      call read_data(grid_file, trim(lowercase(component))//'_mosaic_file', filename1)
    651      filename1=grid_dir//trim(filename1)
    652 ! get the name of the grid file for the component and tile
    653      call read_data(filename1, 'gridfiles', filename2, level=tile)
    654      filename2 = grid_dir//trim(filename2)

Page 24          Source Listing                  GET_GRID_CELL_VERTICES_2D
2021-06-01 08:54                                 grid.F90

    655      if(PRESENT(domain)) then
    656         call mpp_get_global_domain(domain, xbegin=isg, ybegin=jsg)
    657         start = 1; nread = 1
    658         start(1) = 2*(is-isg+1) - 1; nread(1) = 2*(ie-is)+3
    659         start(2) = 2*(js-jsg+1) - 1; nread(2) = 2*(je-js)+3
    660         allocate(tmp(nread(1), nread(2)) )
    661         call read_data(filename2, 'x', tmp, start, nread, no_domain=.TRUE.)
    662         do j = 1, je-js+2
    663            do i = 1, ie-is+2
    664               lonb(i,j) = tmp(2*i-1,2*j-1)
    665            enddo
    666         enddo
    667         call read_data(filename2, 'y', tmp, start, nread, no_domain=.TRUE.)
    668         do j = 1, je-js+2
    669            do i = 1, ie-is+2
    670               latb(i,j) = tmp(2*i-1,2*j-1)
    671            enddo
    672         enddo
    673      else
    674         allocate(tmp(2*nlon+1,2*nlat+1))
    675         call read_data(filename2, 'x', tmp, no_domain=.TRUE.)
    676         do j = js, je+1
    677            do i = is, ie+1
    678               lonb(i+i0,j+j0) = tmp(2*i-1,2*j-1)
    679            end do
    680         end do
    681         call read_data(filename2, 'y', tmp, no_domain=.TRUE.)
    682         do j = js, je+1
    683            do i = is, ie+1
    684               latb(i+i0,j+j0) = tmp(2*i-1,2*j-1)
    685            end do
    686         end do
    687      endif
    688      deallocate(tmp)
    689   end select
    690 
    691 end subroutine get_grid_cell_vertices_2D

Page 25          Source Listing                  GET_GRID_CELL_VERTICES_2D
2021-06-01 08:54 Entry Points                    grid.F90



ENTRY POINTS

  Name                                              
                                                    
 grid_mod_mp_get_grid_cell_vertices_2d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 BUFFER                     Local  558      R(8)            8     1     1        ALC              588,590,593,596,599,602,618,620,62
                                                                                                  3,626,629,632                     
 COMPONENT                  Dummy  548      CHAR                        scalar   ARG,IN           564,580,581,586,590,596,616,620,62
                                                                                                  6,650                             
 DOMAIN                     Dummy  548      DOMAIN2D        752         scalar   ARG,IN           565,566,604,636,637,655,656       
 FILENAME1                  Local  555      CHAR            1024        scalar                    650,651,653                       
 FILENAME2                  Local  555      CHAR            1024        scalar                    653,654,661,667,675,681           
 GET_GRID_CELL_VERTICES_2D  Subr   548                                           PRIV             258,707                           
 I                          Local  557      I(4)            4           scalar                    592,593,598,599,622,623,628,629,66
                                                                                                  3,664,669,670,677,678,683,684     
 I0                         Local  560      I(4)            4           scalar                    573,593,599,623,629,678,684       
 IE                         Local  559      I(4)            4           scalar                    566,568,576,578,592,598,607,622,62
                                                                                                  8,634,658,663,669,677,683         
 IS                         Local  559      I(4)            4           scalar                    566,568,573,576,578,592,598,606,60
                                                                                                  7,622,628,634,658,663,669,677,683 
 ISG                        Local  561      I(4)            4           scalar                    656,658                           
 J                          Local  557      I(4)            4           scalar                    591,593,597,599,621,623,627,629,66
                                                                                                  2,664,668,670,676,678,682,684     
 J0                         Local  560      I(4)            4           scalar                    573,593,599,623,629,678,684       
 JE                         Local  559      I(4)            4           scalar                    566,569,576,578,591,597,607,621,62
                                                                                                  7,634,659,662,668,676,682         
 JS                         Local  559      I(4)            4           scalar                    566,569,573,576,578,591,597,606,60
                                                                                                  7,621,627,634,659,662,668,676,682 
 JSG                        Local  561      I(4)            4           scalar                    656,659                           
 LATB                       Dummy  548      R(8)            8     2     1        ARG,INOUT        578,599,609,612,629,642,643,644,64
                                                                                                  5,670,684                         
 LONB                       Dummy  548      R(8)            8     2     1        ARG,INOUT        576,593,608,611,623,638,639,640,64
                                                                                                  1,664,678                         
 MAX                        Func   588                                  scalar                    588,618                           
 MPP_GET_GLOBAL_DOMAIN      Local  656                                  scalar   PRIV             31,656,893                        
 MPP_GET_GLOBAL_DOMAIN2D    Subr   656                                           PRIV             656,893                           
 NLAT                       Local  556      I(4)            4           scalar                    564,569,588,596,618,626,634,635,63
                                                                                                  8,639,640,641,642,643,644,645,674 
 NLON                       Local  556      I(4)            4           scalar                    564,568,588,590,618,620,634,635,63
                                                                                                  8,639,640,641,642,643,644,645,674 
 NOTE                       Param  571      I(4)            4           scalar   PRIV             22,571,827                        
 NREAD                      Local  562      I(4)            4     1     4        TGT              605,607,608,609,657,658,659,660,66
                                                                                                  1,667                             
 PRESENT                    Func   565                                  scalar                    565,604,636,637,655               
 READ_DATA_3D_NEW           Subr   636                                           PRIV             636,637                           
 SIZE                       Func   576                                  scalar                    576,578                           
 START                      Local  562      I(4)            4     1     4        TGT              605,606,608,609,657,658,659,661,66
                                                                                                  7                                 
 TILE                       Dummy  548      I(4)            4           scalar   ARG,IN           564,653                           

Page 26          Source Listing                  GET_GRID_CELL_VERTICES_2D
2021-06-01 08:54 Symbol Table                    grid.F90

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 TMP                        Local  558      R(8)            8     2     1        ALC              660,661,664,667,670,674,675,678,68
                                                                                                  1,684,688                         
 TRIM                       Func   580                                  scalar                    580,581,650,651,654               
 X_VERT_T                   Local  558      R(8)            8     3     1        ALC              635,636,638,639,640,641,646       
 Y_VERT_T                   Local  558      R(8)            8     3     1        ALC              635,637,642,643,644,645,646       

Page 27          Source Listing                  GET_GRID_CELL_VERTICES_2D
2021-06-01 08:54                                 grid.F90

    692 
    693 
    694 subroutine get_grid_cell_vertices_UG(component, tile, lonb, latb, SG_domain, UG_domain)
    695   character(len=*),         intent(in) :: component
    696   integer,                  intent(in) :: tile
    697   real,                  intent(inout) :: lonb(:,:),latb(:,:) ! The second dimension is 4
    698   type(domain2d)  ,   intent(in)       :: SG_domain
    699   type(domainUG)  ,   intent(in)       :: UG_domain
    700   integer :: is, ie, js, je, i, j
    701   real, allocatable :: SG_lonb(:,:), SG_latb(:,:), tmp(:,:,:)
    702 
    703   call mpp_get_compute_domain(SG_domain, is, ie, js, je)
    704   allocate(SG_lonb(is:ie+1, js:je+1))
    705   allocate(SG_latb(is:ie+1, js:je+1))
    706   allocate(tmp(is:ie,js:je,4))
    707   call get_grid_cell_vertices_2D(component, tile, SG_lonb, SG_latb, SG_domain)
    708   do j = js, je
    709      do i = is, ie
    710         tmp(i,j,1) = SG_lonb(i,j)
    711         tmp(i,j,2) = SG_lonb(i+1,j)
    712         tmp(i,j,3) = SG_lonb(i+1,j+1)
    713         tmp(i,j,4) = SG_lonb(i,j+1)
    714      enddo
    715   enddo
    716   call mpp_pass_SG_to_UG(UG_domain, tmp, lonb)
    717   do j = js, je
    718      do i = is, ie
    719         tmp(i,j,1) = SG_latb(i,j)
    720         tmp(i,j,2) = SG_latb(i+1,j)
    721         tmp(i,j,3) = SG_latb(i+1,j+1)
    722         tmp(i,j,4) = SG_latb(i,j+1)
    723      enddo
    724   enddo
    725   call mpp_pass_SG_to_UG(UG_domain, tmp, latb)
    726 
    727 
    728   deallocate(SG_lonb, SG_latb, tmp)
    729 
    730 end subroutine get_grid_cell_vertices_UG

Page 28          Source Listing                  GET_GRID_CELL_VERTICES_UG
2021-06-01 08:54 Entry Points                    grid.F90



ENTRY POINTS

  Name                                              
                                                    
 grid_mod_mp_get_grid_cell_vertices_ug_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 COMPONENT                  Dummy  694      CHAR                        scalar   ARG,IN           707                               
 GET_GRID_CELL_VERTICES_UG  Subr   694                                           PRIV                                               
 I                          Local  700      I(4)            4           scalar                    709,710,711,712,713,718,719,720,72
                                                                                                  1,722                             
 IE                         Local  700      I(4)            4           scalar                    703,704,705,706,709,718           
 IS                         Local  700      I(4)            4           scalar                    703,704,705,706,709,718           
 J                          Local  700      I(4)            4           scalar                    708,710,711,712,713,717,719,720,72
                                                                                                  1,722                             
 JE                         Local  700      I(4)            4           scalar                    703,704,705,706,708,717           
 JS                         Local  700      I(4)            4           scalar                    703,704,705,706,708,717           
 LATB                       Dummy  694      R(8)            8     2     1        ARG,INOUT        725                               
 LONB                       Dummy  694      R(8)            8     2     1        ARG,INOUT        716                               
 MPP_PASS_SG_TO_UG_R8_3D    Subr   716                                           PRIV             716,725                           
 SG_DOMAIN                  Dummy  694      DOMAIN2D        752         scalar   ARG,IN           703,707                           
 SG_LATB                    Local  701      R(8)            8     2     1        ALC              705,707,719,720,721,722,728       
 SG_LONB                    Local  701      R(8)            8     2     1        ALC              704,707,710,711,712,713,728       
 TILE                       Dummy  694      I(4)            4           scalar   ARG,IN           707                               
 TMP                        Local  701      R(8)            8     3     1        ALC              706,710,711,712,713,716,719,720,72
                                                                                                  1,722,725,728                     
 UG_DOMAIN                  Dummy  694      DOMAINUG        544         scalar   ARG,IN           716,725                           

Page 29          Source Listing                  GET_GRID_CELL_VERTICES_UG
2021-06-01 08:54                                 grid.F90

    731 
    732 ! ============================================================================
    733 ! returns global coordinate arrays fro given model component and mosaic tile number
    734 ! NOTE that in case of non-lat-lon grid those coordinates may have be not so
    735 ! meaningful, by the very nature of such grids. But presumably these 1D coordinate
    736 ! arrays are good enough for diag axis and such.
    737 ! ============================================================================
    738 subroutine get_grid_cell_centers_1D(component, tile, glon, glat)
    739   character(len=*), intent(in) :: component
    740   integer, intent(in) :: tile
    741   real, intent(inout) :: glon(:),glat(:)
    742   integer                      :: nlon, nlat
    743   integer                      :: start(4), nread(4)
    744   real, allocatable            :: tmp(:,:)
    745   character(len=MAX_FILE)      :: filename1, filename2
    746 
    747   call get_grid_size_for_one_tile(component, tile, nlon, nlat)
    748   if (size(glon(:))/=nlon) &
    749        call mpp_error (FATAL,  module_name//'/get_grid_cell_centers_1D: Size of argument "glon" is not consistent with the g
    749 rid size')
    750   if (size(glat(:))/=nlat) &
    751        call mpp_error (FATAL,  module_name//'/get_grid_cell_centers_1D: Size of argument "glat" is not consistent with the g
    751 rid size')
    752   if(trim(component) .NE. 'ATM' .AND. component .NE. 'LND' .AND. component .NE. 'OCN') then
    753      call mpp_error(FATAL, module_name//'/get_grid_cell_centers_1D: Illegal component name "'//trim(component)//'": must be 
    753 one of ATM, LND, or OCN')
    754   endif
    755 
    756   select case(get_grid_version())
    757   case(VERSION_0)
    758      select case(trim(component))
    759      case('ATM','LND')
    760         call read_data(grid_file, 'xt'//lowercase(component(1:1)), glon, no_domain=.true.)
    761         call read_data(grid_file, 'yt'//lowercase(component(1:1)), glat, no_domain=.true.)
    762      case('OCN')
    763         call read_data(grid_file, "gridlon_t", glon, no_domain=.true.)
    764         call read_data(grid_file, "gridlat_t", glat, no_domain=.true.)
    765      end select
    766   case(VERSION_1)
    767      select case(trim(component))
    768      case('ATM','LND')
    769         call read_data(grid_file, 'xt'//lowercase(component(1:1)), glon, no_domain=.true.)
    770         call read_data(grid_file, 'yt'//lowercase(component(1:1)), glat, no_domain=.true.)
    771      case('OCN')
    772         call read_data(grid_file, "grid_x_T", glon, no_domain=.true.)
    773         call read_data(grid_file, "grid_y_T", glat, no_domain=.true.)
    774      end select
    775   case(VERSION_2)
    776 ! get the name of the mosaic file for the component
    777      call read_data(grid_file, trim(lowercase(component))//'_mosaic_file', filename1)
    778      filename1=grid_dir//trim(filename1)
    779 ! get the name of the grid file for the component and tile
    780      call read_data(filename1, 'gridfiles', filename2, level=tile)
    781      filename2 = grid_dir//trim(filename2)
    782 
    783      start = 1; nread = 1
    784      nread(1) = 2*nlon+1; start(2) = 2

Page 30          Source Listing                  GET_GRID_CELL_CENTERS_1D
2021-06-01 08:54                                 grid.F90

    785      allocate( tmp(2*nlon+1,1) )
    786      call read_data(filename2, "x", tmp, start, nread, no_domain=.TRUE.)
    787      glon(1:nlon) = tmp(2:2*nlon:2,1)
    788      deallocate(tmp)
    789      allocate(tmp(1, 2*nlat+1))
    790 
    791      start = 1; nread = 1
    792      nread(2) = 2*nlat+1; start(1) = 2
    793      call read_data(filename2, "y", tmp, start, nread, no_domain=.TRUE.)
    794      glat(1:nlat) = tmp(1,2:2*nlat:2)
    795      deallocate(tmp)
    796   end select
    797 
    798 
    799 end subroutine get_grid_cell_centers_1D


ENTRY POINTS

  Name                                             
                                                   
 grid_mod_mp_get_grid_cell_centers_1d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 COMPONENT                  Dummy  738      CHAR                        scalar   ARG,IN           747,752,753,758,760,761,767,769,77
                                                                                                  0,777                             
 FILENAME1                  Local  745      CHAR            1024        scalar                    777,778,780                       
 FILENAME2                  Local  745      CHAR            1024        scalar                    780,781,786,793                   
 GET_GRID_CELL_CENTERS_1D   Subr   738                                           PRIV                                               
 GLAT                       Dummy  738      R(8)            8     1     1        ARG,INOUT        750,761,764,770,773,794           
 GLON                       Dummy  738      R(8)            8     1     1        ARG,INOUT        748,760,763,769,772,787           
 NLAT                       Local  742      I(4)            4           scalar                    747,750,789,792,794               
 NLON                       Local  742      I(4)            4           scalar                    747,748,784,785,787               
 NREAD                      Local  743      I(4)            4     1     4        TGT              783,784,786,791,792,793           
 SIZE                       Func   748                                  scalar                    748,750                           
 START                      Local  743      I(4)            4     1     4        TGT              783,784,786,791,792,793           
 TILE                       Dummy  738      I(4)            4           scalar   ARG,IN           747,780                           
 TMP                        Local  744      R(8)            8     2     1        ALC              785,786,787,788,789,793,794,795   
 TRIM                       Func   752                                  scalar                    752,753,758,767,777,778,781       

Page 31          Source Listing                  GET_GRID_CELL_CENTERS_1D
2021-06-01 08:54                                 grid.F90

    800 
    801 ! ============================================================================
    802 ! returns grid cell centers for specified model component and mosaic tile number
    803 ! ============================================================================
    804 subroutine get_grid_cell_centers_2D(component, tile, lon, lat, domain)
    805   character(len=*), intent(in) :: component
    806   integer, intent(in) :: tile
    807   real, intent(inout) :: lon(:,:),lat(:,:)
    808   type(domain2d), intent(in), optional :: domain
    809 ! local vars
    810   character(len=MAX_NAME) :: varname
    811   character(len=MAX_FILE) :: filename1, filename2
    812   integer :: nlon, nlat
    813   integer :: i,j
    814   real, allocatable :: buffer(:),tmp(:,:)
    815   integer :: is,ie,js,je ! boundaries of our domain
    816   integer :: i0,j0 ! offsets for coordinates
    817   integer :: isg, jsg
    818   integer :: start(4), nread(4)
    819 
    820   call get_grid_size_for_one_tile(component, tile, nlon, nlat)
    821   if (present(domain)) then
    822     call mpp_get_compute_domain(domain,is,ie,js,je)
    823   else
    824     is = 1 ; ie = nlon
    825     js = 1 ; je = nlat
    826 !--- domain normally should be present
    827     call mpp_error (NOTE, module_name//'/get_grid_cell_centers: domain is not present, global data will be read')
    828   endif
    829   i0 = -is+1; j0 = -js+1
    830 
    831 ! verify that lon and lat sizes are consistent with the size of domain
    832   if (size(lon,1)/=ie-is+1.or.size(lon,2)/=je-js+1) &
    833        call mpp_error (FATAL, module_name//'/get_grid_cell_centers: Size of array "lon" is not consistent with the domain si
    833 ze')
    834   if (size(lat,1)/=ie-is+1.or.size(lat,2)/=je-js+1) &
    835        call mpp_error (FATAL, module_name//'/get_grid_cell_centers: Size of array "lat" is not consistent with the domain si
    835 ze')
    836   if(trim(component) .NE. 'ATM' .AND. component .NE. 'LND' .AND. component .NE. 'OCN') then
    837      call mpp_error(FATAL, module_name//'/get_grid_cell_vertices: Illegal component name "'//trim(component)//'": must be on
    837 e of ATM, LND, or OCN')
    838   endif
    839 
    840   select case(get_grid_version())
    841   case(VERSION_0)
    842      select case (trim(component))
    843      case('ATM','LND')
    844         allocate(buffer(max(nlon,nlat)))
    845 ! read coordinates of grid cell vertices
    846         call read_data(grid_file, 'xt'//lowercase(component(1:1)), buffer(1:nlon), no_domain=.true.)
    847         do j = js,je
    848         do i = is,ie
    849            lon(i+i0,j+j0) = buffer(i)
    850         enddo
    851         enddo
    852         call read_data(grid_file, 'yt'//lowercase(component(1:1)), buffer(1:nlat), no_domain=.true.)
    853         do j = js,je

Page 32          Source Listing                  GET_GRID_CELL_CENTERS_2D
2021-06-01 08:54                                 grid.F90

    854         do i = is,ie
    855            lat(i+i0,j+j0) = buffer(j)
    856         enddo
    857         enddo
    858         deallocate(buffer)
    859      case('OCN')
    860         call read_data(grid_file, 'geolon_t', lon, no_domain=.not.present(domain), domain=domain )
    861         call read_data(grid_file, 'geolat_t', lat, no_domain=.not.present(domain), domain=domain )
    862      end select
    863   case(VERSION_1)
    864      select case(trim(component))
    865      case('ATM','LND')
    866         allocate(buffer(max(nlon,nlat)))
    867 ! read coordinates of grid cell vertices
    868         call read_data(grid_file, 'xt'//lowercase(component(1:1)), buffer(1:nlon), no_domain=.true.)
    869         do j = js,je
    870         do i = is,ie
    871            lon(i+i0,j+j0) = buffer(i)
    872         enddo
    873         enddo
    874         call read_data(grid_file, 'yt'//lowercase(component(1:1)), buffer(1:nlat), no_domain=.true.)
    875         do j = js,je
    876         do i = is,ie
    877            lat(i+i0,j+j0) = buffer(j)
    878         enddo
    879         enddo
    880         deallocate(buffer)
    881      case('OCN')
    882         call read_data(grid_file, 'x_T', lon, no_domain=.not.present(domain), domain=domain )
    883         call read_data(grid_file, 'y_T', lat, no_domain=.not.present(domain), domain=domain )
    884      end select
    885   case(VERSION_2) ! mosaic grid file
    886 ! get the name of the mosaic file for the component
    887      call read_data(grid_file, trim(lowercase(component))//'_mosaic_file', filename1)
    888      filename1=grid_dir//trim(filename1)
    889 ! get the name of the grid file for the component and tile
    890      call read_data(filename1, 'gridfiles', filename2, level=tile)
    891      filename2 = grid_dir//trim(filename2)
    892      if(PRESENT(domain)) then
    893         call mpp_get_global_domain(domain, xbegin=isg, ybegin=jsg)
    894         start = 1; nread = 1
    895         start(1) = 2*(is-isg+1) - 1; nread(1) = 2*(ie-is)+3
    896         start(2) = 2*(js-jsg+1) - 1; nread(2) = 2*(je-js)+3
    897         allocate(tmp(nread(1), nread(2)))
    898         call read_data(filename2, 'x', tmp, start, nread, no_domain=.TRUE.)
    899         do j = 1, je-js+1
    900            do i = 1, ie-is+1
    901               lon(i,j) = tmp(2*i,2*j)
    902            enddo
    903         enddo
    904         call read_data(filename2, 'y', tmp, start, nread, no_domain=.TRUE.)
    905         do j = 1, je-js+1
    906            do i = 1, ie-is+1
    907               lat(i,j) = tmp(2*i,2*j)
    908            enddo
    909         enddo
    910      else

Page 33          Source Listing                  GET_GRID_CELL_CENTERS_2D
2021-06-01 08:54                                 grid.F90

    911         allocate(tmp(2*nlon+1,2*nlat+1))
    912         call read_data(filename2, 'x', tmp, no_domain=.TRUE.)
    913         do j = js,je
    914            do i = is,ie
    915               lon(i+i0,j+j0) = tmp(2*i,2*j)
    916            end do
    917         end do
    918         call read_data(filename2, 'y', tmp, no_domain=.TRUE.)
    919         do j = js,je
    920            do i = is,ie
    921               lat(i+i0,j+j0) = tmp(2*i,2*j)
    922            end do
    923         end do
    924         deallocate(tmp)
    925      endif
    926   end select
    927 
    928 end subroutine get_grid_cell_centers_2D


ENTRY POINTS

  Name                                             
                                                   
 grid_mod_mp_get_grid_cell_centers_2d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 BUFFER                     Local  814      R(8)            8     1     1        ALC              844,846,849,852,855,858,866,868,87
                                                                                                  1,874,877,880                     
 COMPONENT                  Dummy  804      CHAR                        scalar   ARG,IN           820,836,837,842,846,852,864,868,87
                                                                                                  4,887                             
 DOMAIN                     Dummy  804      DOMAIN2D        752         scalar   ARG,IN           821,822,860,861,882,883,892,893   
 FILENAME1                  Local  811      CHAR            1024        scalar                    887,888,890                       
 FILENAME2                  Local  811      CHAR            1024        scalar                    890,891,898,904,912,918           
 GET_GRID_CELL_CENTERS_2D   Subr   804                                           PRIV             942                               
 I                          Local  813      I(4)            4           scalar                    848,849,854,855,870,871,876,877,90
                                                                                                  0,901,906,907,914,915,920,921     
 I0                         Local  816      I(4)            4           scalar                    829,849,855,871,877,915,921       
 IE                         Local  815      I(4)            4           scalar                    822,824,832,834,848,854,870,876,89
                                                                                                  5,900,906,914,920                 
 IS                         Local  815      I(4)            4           scalar                    822,824,829,832,834,848,854,870,87
                                                                                                  6,895,900,906,914,920             
 ISG                        Local  817      I(4)            4           scalar                    893,895                           
 J                          Local  813      I(4)            4           scalar                    847,849,853,855,869,871,875,877,89
                                                                                                  9,901,905,907,913,915,919,921     
 J0                         Local  816      I(4)            4           scalar                    829,849,855,871,877,915,921       
 JE                         Local  815      I(4)            4           scalar                    822,825,832,834,847,853,869,875,89
                                                                                                  6,899,905,913,919                 
 JS                         Local  815      I(4)            4           scalar                    822,825,829,832,834,847,853,869,87
                                                                                                  5,896,899,905,913,919             
 JSG                        Local  817      I(4)            4           scalar                    893,896                           
 LAT                        Dummy  804      R(8)            8     2     1        ARG,INOUT        834,855,861,877,883,907,921       
 LON                        Dummy  804      R(8)            8     2     1        ARG,INOUT        832,849,860,871,882,901,915       

Page 34          Source Listing                  GET_GRID_CELL_CENTERS_2D
2021-06-01 08:54 Symbol Table                    grid.F90

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 MAX                        Func   844                                  scalar                    844,866                           
 NLAT                       Local  812      I(4)            4           scalar                    820,825,844,852,866,874,911       
 NLON                       Local  812      I(4)            4           scalar                    820,824,844,846,866,868,911       
 NREAD                      Local  818      I(4)            4     1     4        TGT              894,895,896,897,898,904           
 PRESENT                    Func   821                                  scalar                    821,860,861,882,883,892           
 SIZE                       Func   832                                  scalar                    832,834                           
 START                      Local  818      I(4)            4     1     4        TGT              894,895,896,898,904               
 TILE                       Dummy  804      I(4)            4           scalar   ARG,IN           820,890                           
 TMP                        Local  814      R(8)            8     2     1        ALC              897,898,901,904,907,911,912,915,91
                                                                                                  8,921,924                         
 TRIM                       Func   836                                  scalar                    836,837,842,864,887,888,891       
 VARNAME                    Local  810      CHAR            256         scalar                                                      

Page 35          Source Listing                  GET_GRID_CELL_CENTERS_2D
2021-06-01 08:54                                 grid.F90

    929 
    930 subroutine get_grid_cell_centers_UG(component, tile, lon, lat, SG_domain, UG_domain)
    931   character(len=*), intent(in) :: component
    932   integer, intent(in) :: tile
    933   real, intent(inout) :: lon(:),lat(:)
    934   type(domain2d)  ,   intent(in) :: SG_domain
    935   type(domainUG)  ,   intent(in) :: UG_domain
    936   integer :: is, ie, js, je
    937   real, allocatable :: SG_lon(:,:), SG_lat(:,:)
    938 
    939   call mpp_get_compute_domain(SG_domain, is, ie, js, je)
    940   allocate(SG_lon(is:ie, js:je))
    941   allocate(SG_lat(is:ie, js:je))
    942   call get_grid_cell_centers_2D(component, tile, SG_lon, SG_lat, SG_domain)
    943   call mpp_pass_SG_to_UG(UG_domain, SG_lon, lon)
    944   call mpp_pass_SG_to_UG(UG_domain, SG_lat, lat)
    945   deallocate(SG_lon, SG_lat)
    946 
    947 end subroutine get_grid_cell_centers_UG


ENTRY POINTS

  Name                                             
                                                   
 grid_mod_mp_get_grid_cell_centers_ug_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 COMPONENT                  Dummy  930      CHAR                        scalar   ARG,IN           942                               
 GET_GRID_CELL_CENTERS_UG   Subr   930                                           PRIV                                               
 IE                         Local  936      I(4)            4           scalar                    939,940,941                       
 IS                         Local  936      I(4)            4           scalar                    939,940,941                       
 JE                         Local  936      I(4)            4           scalar                    939,940,941                       
 JS                         Local  936      I(4)            4           scalar                    939,940,941                       
 LAT                        Dummy  930      R(8)            8     1     1        ARG,INOUT        944                               
 LON                        Dummy  930      R(8)            8     1     1        ARG,INOUT        943                               
 SG_DOMAIN                  Dummy  930      DOMAIN2D        752         scalar   ARG,IN           939,942                           
 SG_LAT                     Local  937      R(8)            8     2     1        ALC              941,942,944,945                   
 SG_LON                     Local  937      R(8)            8     2     1        ALC              940,942,943,945                   
 TILE                       Dummy  930      I(4)            4           scalar   ARG,IN           942                               
 UG_DOMAIN                  Dummy  930      DOMAINUG        544         scalar   ARG,IN           943,944                           

Page 36          Source Listing                  GET_GRID_CELL_CENTERS_UG
2021-06-01 08:54                                 grid.F90

    948 
    949 ! ============================================================================
    950 ! given a model component, a layout, and (optionally) a halo size, returns a
    951 ! domain for current processor
    952 ! ============================================================================
    953 ! this subroutine probably does not belong in the grid_mod
    954 subroutine define_cube_mosaic ( component, domain, layout, halo, maskmap )
    955   character(len=*) , intent(in)    :: component
    956   type(domain2d)   , intent(inout) :: domain
    957   integer          , intent(in)    :: layout(2)
    958   integer, optional, intent(in)    :: halo
    959   logical, optional, intent(in)    :: maskmap(:,:,:)
    960 
    961 ! ---- local constants
    962 
    963 ! ---- local vars
    964   character(len=MAX_NAME) :: varname
    965   character(len=MAX_FILE) :: mosaic_file
    966   integer :: ntiles     ! number of tiles
    967   integer :: ncontacts  ! number of contacts between mosaic tiles
    968   integer :: n
    969   integer :: ng, pe_pos, npes         ! halo size
    970   integer, allocatable :: nlon(:), nlat(:), global_indices(:,:)
    971   integer, allocatable :: pe_start(:), pe_end(:), layout_2d(:,:)
    972   integer, allocatable :: tile1(:),tile2(:)
    973   integer, allocatable :: is1(:),ie1(:),js1(:),je1(:)
    974   integer, allocatable :: is2(:),ie2(:),js2(:),je2(:)
    975 
    976   call get_grid_ntiles(component,ntiles)
    977   allocate(nlon(ntiles), nlat(ntiles))
    978   allocate(global_indices(4,ntiles))
    979   allocate(pe_start(ntiles),pe_end(ntiles))
    980   allocate(layout_2d(2,ntiles))
    981   call get_grid_size(component,nlon,nlat)
    982 
    983   pe_pos = mpp_root_pe()
    984   do n = 1, ntiles
    985      global_indices(:,n) = (/ 1, nlon(n), 1, nlat(n) /)
    986      layout_2d     (:,n) = layout
    987      if(present(maskmap)) then
    988         npes = count(maskmap(:,:,n))
    989      else
    990         npes = layout(1)*layout(2)
    991      endif
    992      pe_start(n) = pe_pos
    993      pe_end  (n) = pe_pos + npes - 1
    994      pe_pos      = pe_end(n) + 1
    995   enddo
    996 
    997   varname=trim(lowercase(component))//'_mosaic_file'
    998   call read_data(grid_file,varname,mosaic_file)
    999   mosaic_file = grid_dir//mosaic_file
   1000 
   1001 ! get the contact information from mosaic file
   1002   ncontacts = get_mosaic_ncontacts(mosaic_file)
   1003   allocate(tile1(ncontacts),tile2(ncontacts))
   1004   allocate(is1(ncontacts),ie1(ncontacts),js1(ncontacts),je1(ncontacts))

Page 37          Source Listing                  DEFINE_CUBE_MOSAIC
2021-06-01 08:54                                 grid.F90

   1005   allocate(is2(ncontacts),ie2(ncontacts),js2(ncontacts),je2(ncontacts))
   1006   call get_mosaic_contact(mosaic_file, tile1, tile2, &
   1007        is1, ie1, js1, je1, is2, ie2, js2, je2)
   1008 
   1009   ng = 0
   1010   if(present(halo)) ng = halo
   1011 ! create the domain2d variable
   1012   call mpp_define_mosaic ( global_indices, layout_2d, domain, &
   1013        ntiles, ncontacts, tile1, tile2,                  &
   1014        is1, ie1, js1, je1, &
   1015        is2, ie2, js2, je2, &
   1016        pe_start=pe_start, pe_end=pe_end, symmetry=.true.,  &
   1017        shalo = ng, nhalo = ng, whalo = ng, ehalo = ng,     &
   1018        maskmap = maskmap,                                  &
   1019        name = trim(component)//'Cubic-Sphere Grid' )
   1020 
   1021   deallocate(nlon,nlat,global_indices,pe_start,pe_end,layout_2d)
   1022   deallocate(tile1,tile2)
   1023   deallocate(is1,ie1,js1,je1)
   1024   deallocate(is2,ie2,js2,je2)
   1025 
   1026 end subroutine define_cube_mosaic


ENTRY POINTS

  Name                                       
                                             
 grid_mod_mp_define_cube_mosaic_             

Page 38          Source Listing                  DEFINE_CUBE_MOSAIC
2021-06-01 08:54 Symbol Table                    grid.F90



SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 COMPONENT                  Dummy  954      CHAR                        scalar   ARG,IN           976,981,997,1019                  
 COUNT                      Func   988                                  scalar                    988                               
 DEFINE_CUBE_MOSAIC         Subr   954                                                                                              
 DOMAIN                     Dummy  954      DOMAIN2D        752         scalar   ARG,INOUT        1012                              
 GET_MOSAIC_CONTACT         Subr   1006                                          PRIV             32,1006                           
 GET_MOSAIC_NCONTACTS       Func   1002     I(4)            4           scalar   PRIV             32,1002                           
 GLOBAL_INDICES             Local  970      I(4)            4     2     1        ALC              978,985,1012,1021                 
 HALO                       Dummy  954      I(4)            4           scalar   ARG,IN           1010                              
 IE1                        Local  973      I(4)            4     1     1        ALC              1004,1007,1014,1023               
 IE2                        Local  974      I(4)            4     1     1        ALC              1005,1007,1015,1024               
 IS1                        Local  973      I(4)            4     1     1        ALC              1004,1007,1014,1023               
 IS2                        Local  974      I(4)            4     1     1        ALC              1005,1007,1015,1024               
 JE1                        Local  973      I(4)            4     1     1        ALC              1004,1007,1014,1023               
 JE2                        Local  974      I(4)            4     1     1        ALC              1005,1007,1015,1024               
 JS1                        Local  973      I(4)            4     1     1        ALC              1004,1007,1014,1023               
 JS2                        Local  974      I(4)            4     1     1        ALC              1005,1007,1015,1024               
 LAYOUT                     Dummy  954      I(4)            4     1     2        ARG,IN           986,990                           
 LAYOUT_2D                  Local  971      I(4)            4     2     1        ALC              980,986,1012,1021                 
 MASKMAP                    Dummy  954      L(4)            4     3     1        ARG,IN           987,988,1018                      
 MOSAIC_FILE                Local  965      CHAR            1024        scalar                    998,999,1002,1006                 
 MPP_DEFINE_MOSAIC          Subr   1012                                          PRIV             30,1012                           
 MPP_ROOT_PE                Func   983      I(4)            4           scalar   PRIV             22,983                            
 N                          Local  968      I(4)            4           scalar                    984,985,986,988,992,993,994       
 NCONTACTS                  Local  967      I(4)            4           scalar                    1002,1003,1004,1005,1013          
 NG                         Local  969      I(4)            4           scalar                    1009,1010,1017                    
 NLAT                       Local  970      I(4)            4     1     1        ALC              977,981,985,1021                  
 NLON                       Local  970      I(4)            4     1     1        ALC              977,981,985,1021                  
 NPES                       Local  969      I(4)            4           scalar                    988,990,993                       
 NTILES                     Local  966      I(4)            4           scalar                    976,977,978,979,980,984,1013      
 PE_END                     Local  971      I(4)            4     1     1        ALC              979,993,994,1016,1021             
 PE_POS                     Local  969      I(4)            4           scalar                    983,992,993,994                   
 PE_START                   Local  971      I(4)            4     1     1        ALC              979,992,1016,1021                 
 PRESENT                    Func   987                                  scalar                    987,1010                          
 TILE1                      Local  972      I(4)            4     1     1        ALC              1003,1006,1013,1022               
 TILE2                      Local  972      I(4)            4     1     1        ALC              1003,1006,1013,1022               
 TRIM                       Func   997                                  scalar                    997,1019                          
 VARNAME                    Local  964      CHAR            256         scalar                    997,998                           

Page 39          Source Listing                  DEFINE_CUBE_MOSAIC
2021-06-01 08:54                                 grid.F90

   1027 
   1028 end module grid_mod


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 CONSTANTS_MOD              Module 23                                                             23                                
 DEFINE_CUBE_MOSAIC         Subr   48                                                             48                                
 FMS_IO_MOD                 Module 24                                                             24                                
 GET_GRID_CELL_CENTERS      Local  62                                   scalar                    41                                
 GET_GRID_COMP_AREA         Local  73                                   scalar                    45                                
 GET_GRID_VERSION@0         Local  132      I(4)            4           scalar                                                      
 GRID_MOD                   Module 20                                                                                               
 MOSAIC_MOD                 Module 26                                                             26,32                             
 MPP_DOMAINS_MOD            Module 30                                                             30                                
 MPP_MOD                    Module 22                                                             22                                
 VERSION                    Param  106      CHAR            7           scalar                                                      

Page 40          Source Listing                  DEFINE_CUBE_MOSAIC
2021-06-01 08:54 Subprograms/Common Blocks       grid.F90



SUBPROGRAMS/COMMON BLOCKS

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 DEFINE_CUBE_MOSAIC         Subr   954                                                                                              
 GET_GRID_CELL_AREA_SG      Subr   227                                           PRIV             321,437                           
 GET_GRID_CELL_AREA_UG      Subr   426                                           PRIV                                               
 GET_GRID_CELL_CENTERS_1D   Subr   738                                           PRIV                                               
 GET_GRID_CELL_CENTERS_2D   Subr   804                                           PRIV             942                               
 GET_GRID_CELL_CENTERS_UG   Subr   930                                           PRIV                                               
 GET_GRID_CELL_VERTICES_1D  Subr   468                                           PRIV                                               
 GET_GRID_CELL_VERTICES_2D  Subr   548                                           PRIV             258,707                           
 GET_GRID_CELL_VERTICES_UG  Subr   694                                           PRIV                                               
 GET_GRID_COMP_AREA_SG      Subr   272                                           PRIV             454                               
 GET_GRID_COMP_AREA_UG      Subr   443                                           PRIV                                               
 GET_GRID_NTILES            Subr   158                                                                                              
 GET_GRID_SIZE_FOR_ALL_TILE                                                                                                         
 S                          Subr   178                                           PRIV             216,981                           
 GET_GRID_SIZE_FOR_ONE_TILE Subr   204                                           PRIV             255,339,478,564,747,820           
 GET_GRID_VERSION           Func   132      I(4)            4           scalar                    151,165,190,237,301,487,584,756,84
                                                                                                  0                                 
 GRID_MOD                   Module 20                                                                                               

COMPILER OPTIONS BEING USED

       -align noall                          -align nonone
       -align nocommons                      -align nodcommons
       -align noqcommons                     -align nozcommons
       -align records                        -align nosequence
       -align norec1byte                     -align norec2byte
       -align norec4byte                     -align norec8byte
       -align norec16byte                    -align norec32byte
       -align norec64byte                    -align noarray8byte
       -align noarray16byte                  -align noarray32byte
       -align noarray64byte                  -align noarray128byte
       -align noarray256byte                 -altparam
       -assume accuracy_sensitive            -assume nobscc
       -assume nobuffered_io                 -assume nobuffered_stdout
       -assume byterecl                      -assume nocontiguous_assumed_shape
       -assume nocontiguous_pointer          -assume cc_omp
       -assume nocstring                     -assume nodummy_aliases
       -assume nofpe_summary                 -assume noieee_fpe_flags
       -assume nominus0                      -assume noold_boz
       -assume old_complex_align             -assume old_unit_star
       -assume old_inquire_recl              -assume old_ldout_format
       -assume old_ldout_zero                -assume noold_logical_assign
       -assume noold_logical_ldio            -assume old_maxminloc
       -assume old_xor                       -assume noprotect_allocates
       -assume protect_constants             -assume noprotect_parens
       -assume split_common                  -assume source_include
       -assume nostd_intent_in               -assume std_minus0_rounding
       -assume nostd_mod_proc_name           -assume std_value
       -assume realloc_lhs                   -assume underscore
       -assume no2underscores                -assume norecursion
       -auto                            no   -auto_scalar

Page 41          Source Listing                  DEFINE_CUBE_MOSAIC
2021-06-01 08:54                                 grid.F90

  no   -bintext                              -ccdefault default
       -check noarg_temp_created             -check noassume
       -check nobounds                       -check nocontiguous
       -check noformat                       -check nooutput_conversion
       -check nooverflow                     -check nopointers
       -check noshape                        -check nostack
       -check nouninitialized                -check noudio_iostat
       -coarray-num-procs 0             no   -coarray-config-file
       -convert native                       -cross_reference
       -D __INTEL_COMPILER=1910              -D __INTEL_COMPILER_UPDATE=0
       -D __unix__                           -D __unix
       -D __linux__                          -D __linux
       -D __gnu_linux__                      -D unix
       -D linux                              -D __ELF__
       -D __x86_64                           -D __x86_64__
       -D __amd64                            -D __amd64__
       -D __INTEL_COMPILER_BUILD_DATE=20191121       -D _OPENMP=201611
       -D __INTEL_OFFLOAD                    -D __MMX__
       -D __SSE__                            -D __SSE_MATH__
       -D __SSE2__                           -D __SSE2_MATH__
       -D __pentium4                         -D __pentium4__
       -D __tune_pentium4__                  -D PACKAGE_NAME='"GFDL FMS Library"'
       -D PACKAGE_TARNAME='"FMS"'            -D PACKAGE_VERSION='"2021.02.0"'
       -D PACKAGE_STRING='"GFDL FMS Library 2021.02.0"'       -D PACKAGE_BUGREPORT='"gfdl.climate.model.info@noaa.gov"'
       -D PACKAGE_URL='"https://www.gfdl.noaa.gov/fms"'       -D PACKAGE='"FMS"'
       -D VERSION='"2021.02.0"'              -D STDC_HEADERS=1
       -D HAVE_SYS_TYPES_H=1                 -D HAVE_SYS_STAT_H=1
       -D HAVE_STDLIB_H=1                    -D HAVE_STRING_H=1
       -D HAVE_MEMORY_H=1                    -D HAVE_STRINGS_H=1
       -D HAVE_INTTYPES_H=1                  -D HAVE_STDINT_H=1
       -D HAVE_UNISTD_H=1                    -D HAVE_DLFCN_H=1
       -D LT_OBJDIR='".libs/"'               -D HAVE_MPI_H=1
       -D HAVE_NETCDF_H=1                    -D HAVE_SCHED_GETAFFINITY=1
       -D HAVE_MOD_MPI=1                     -D HAVE_MOD_NETCDF=1
       -D HAVE_CRAY_POINTER=1                -D HAVE_QUAD_PRECISION=1
       -D HAVE_INTERNAL_NML=1                -D use_netCDF=1
       -D use_libMPI=1                       -D INTERNAL_FILE_NML
       -double_size 64                  no   -d_lines
  no   -Qdyncom                              -error_limit 30
  no   -f66                             no   -f77rtl
  no   -fast                                 -fpscomp nofilesfromcmd
       -fpscomp nogeneral                    -fpscomp noioformat
       -fpscomp noldio_spacing               -fpscomp nologicals
  no   -fpconstant                           -fpe3
       -fprm nearest                         -ftz
       -fp_model noprecise                   -fp_model fast
       -fp_model nostrict                    -fp_model nosource
       -fp_model nodouble                    -fp_model noextended
       -fp_model novery_fast                 -fp_model noexcept
       -fp_model nono_except                 -fp_modbits nofp_contract
       -fp_modbits nono_fp_contract          -fp_modbits nofenv_access
       -fp_modbits nono_fenv_access          -fp_modbits nocx_limited_range
       -fp_modbits nono_cx_limited_range       -fp_modbits noprec_div
       -fp_modbits nono_prec_div             -fp_modbits noprec_sqrt
       -fp_modbits nono_prec_sqrt            -fp_modbits ftz
       -fp_modbits nono_ftz                  -fp_modbits nointrin_limited_range
       -fp_modbits nono_intrin_limited_range       -fp_modbits notrunc_compares

Page 42          Source Listing                  DEFINE_CUBE_MOSAIC
2021-06-01 08:54                                 grid.F90

       -fp_modbits nono_trunc_compares       -fp_modbits noieee_nan_compares
       -fp_modbits nono_ieee_nan_compares       -fp_modbits honor_f32_conversion
       -fp_modbits nono_honor_f32_conversion       -fp_modbits honor_f64_conversion
       -fp_modbits nono_honor_f64_conversion       -fp_modbits nono_x87_copy
       -fp_modbits nono_no_x87_copy          -fp_modbits noexception_semantics
       -fp_modbits nono_exception_semantics       -fp_modbits noprecise_libm_functions
       -fp_modbits nono_precise_libm_functions       -heap_arrays 0
  no   -threadprivate_compat                 -free
       -g2                                   -iface nomixed_str_len_arg
       -iface nono_mixed_str_len_arg         -init noarrays
       -init nohuge                          -init noinfinity
       -init nominus_huge                    -init nominus_infinity
       -init nominus_tiny                    -init nonan
       -init nosnan                          -init notiny
       -init nozero                     no   -intconstant
       -integer_size 32                 no   -mixed_str_len_arg
       -module ../.mods                      -names lowercase
  no   -noinclude                       no   -o
       -offload-build=host                   -openmp
       -openmp-simd                          -openmp-offload
       -O0                              no   -pad_source
       -real_size 64                    no   -recursive
       -reentrancy threaded                  -vec=simd
       -show nofullpath                      -show noinclude
       -show map                             -show options
  no   -syntax_only                     no   -threadcom
  no   -U                               no   -vms
       -w noall                              -w nonone
       -w noalignments                       -w nodeclarations
       -w noexternals                        -w nogeneral
       -w noignore_bounds                    -w noignore_loc
       -w nointerfaces                       -w noshape
       -w notruncated_source                 -w nouncalled
       -w nouninitialized                    -w nounused
       -w nousage                       no   -wrap-margins

       -includepath : /opt/netcdf/4.6.1/INTEL/include/,/opt/intel/2020/compilers_and_libraries/linux/pstl/include/,
           /opt/intel/2020/compilers_and_libraries_2020.0.166/linux/compiler/include/,.f90,./.f90,./.f90,../include/.f90,
           ./.f90,/opt/netcdf/4.6.1/INTEL/include/.f90,/opt/intel/2020/compilers_and_libraries/linux/mpi/intel64/include/.f90,
           /opt/intel/2020/compilers_and_libraries/linux/mpi/intel64/include/.f90,/opt/intel/2020/compilers_and_libraries/linux/ipp/include/.f90,
           /opt/intel/2020/compilers_and_libraries/linux/mkl/include/.f90,/opt/intel/2020/compilers_and_libraries/linux/pstl/include/.f90,
           /opt/intel/2020/compilers_and_libraries/linux/tbb/include/.f90,/opt/intel/2020/compilers_and_libraries/linux/daal/include/.f90,
           /opt/intel/2020/compilers_and_libraries_2020.0.166/linux/compiler/include/intel64/.f90,/opt/intel/2020/compilers_and_libraries_2020.0.166/linux/compiler/include/icc/.f90,
           /opt/intel/2020/compilers_and_libraries_2020.0.166/linux/compiler/include/.f90,/usr/local/include/.f90,
           /usr/lib/gcc/x86_64-redhat-linux/4.8.5/include/.f90,/usr/include/.f90,/usr/include/.f90,/usr/include/.f90
       -list filename : grid.lst
  no   -o

COMPILER: Intel(R) Fortran 19.1-1555
