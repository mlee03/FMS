Page 1           Source Listing                  HORIZ_INTERP_CONSERVE_INIT
2021-06-01 08:55                                 /tmp/ifortO525Fx.i90

      1 # 1 "horiz_interp_conserve.F90"
      2 !***********************************************************************
      3 !*                   GNU Lesser General Public License
      4 !*
      5 !* This file is part of the GFDL Flexible Modeling System (FMS).
      6 !*
      7 !* FMS is free software: you can redistribute it and/or modify it under
      8 !* the terms of the GNU Lesser General Public License as published by
      9 !* the Free Software Foundation, either version 3 of the License, or (at
     10 !* your option) any later version.
     11 !*
     12 !* FMS is distributed in the hope that it will be useful, but WITHOUT
     13 !* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
     14 !* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
     15 !* for more details.
     16 !*
     17 !* You should have received a copy of the GNU Lesser General Public
     18 !* License along with FMS.  If not, see <http://www.gnu.org/licenses/>.
     19 !***********************************************************************
     20 module horiz_interp_conserve_mod
     21 
     22 ! <CONTACT EMAIL="Bruce.Wyman@noaa.gov"> Bruce Wyman </CONTACT>
     23 ! <CONTACT EMAIL="Zhi.Liang@noaa.gov"> Zhi Liang </CONTACT>
     24 
     25 ! <HISTORY SRC="http://www.gfdl.noaa.gov/fms-cgi-bin/cvsweb.cgi/FMS/"/>
     26 
     27 ! <OVERVIEW>
     28 !   Performs spatial interpolation between grids using conservative interpolation
     29 ! </OVERVIEW>
     30 
     31 ! <DESCRIPTION>
     32 !     This module can conservatively interpolate data from any logically rectangular grid
     33 !     to any rectangular grid. The interpolation scheme is area-averaging
     34 !     conservative scheme. There is an optional mask field for missing input data in both
     35 !     horiz_interp__conserveinit and horiz_interp_conserve. For efficiency purpose, mask should only be
     36 !     kept in horiz_interp_init (will remove the mask in horiz_interp in the future).
     37 !     There are 1-D and 2-D version of horiz_interp_conserve_init for 1-D and 2-D grid.
     38 !     There is a optional argument mask in horiz_interp_conserve_init_2d and no mask should
     39 !     to passed into horiz_interp_conserv. optional argument mask will not be passed into
     40 !     horiz_interp_conserve_init_1d and optional argument mask may be passed into
     41 !     horiz_interp_conserve (For the purpose of reproduce Memphis??? results).
     42 !     An optional output mask field may be used in conjunction with the input mask to show
     43 !     where output data exists.
     44 ! </DESCRIPTION>
     45 # 1 "../include/fms_platform.h" 1 
     46 ! -*-f90-*-*
     47 !***********************************************************************
     48 !*                   GNU Lesser General Public License
     49 !*
     50 !* This file is part of the GFDL Flexible Modeling System (FMS).
     51 !*
     52 !* FMS is free software: you can redistribute it and/or modify it under
     53 !* the terms of the GNU Lesser General Public License as published by
     54 !* the Free Software Foundation, either version 3 of the License, or (at
     55 !* your option) any later version.
     56 !*
     57 !* FMS is distributed in the hope that it will be useful, but WITHOUT

Page 2           Source Listing                  HORIZ_INTERP_CONSERVE_INIT
2021-06-01 08:55                                 ../include/fms_platform.h

     58 !* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
     59 !* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
     60 !* for more details.
     61 !*
     62 !* You should have received a copy of the GNU Lesser General Public
     63 !* License along with FMS.  If not, see <http://www.gnu.org/licenses/>.
     64 !***********************************************************************
     65 
     66 
     67 
     68 
     69 
     70 !Set type kinds.
     71 # 37
     72 
     73 !These values are not necessarily portable.
     74 
     75 
     76 
     77 
     78 
     79 
     80 
     81 !DEC$ MESSAGE:'Using 8-byte addressing'
     82 
     83 
     84 
     85 !Control "pure" functions.
     86 # 54
     87 
     88 
     89 !DEC$ MESSAGE:'Using pure routines.'
     90 
     91 
     92 
     93 !Control array members of derived types.
     94 # 66
     95 
     96 
     97 
     98 
     99 !DEC$ MESSAGE:'Using allocatable derived type array members.'
    100 
    101 
    102 
    103 !Control use of cray pointers.
    104 # 78
    105 
    106 
    107 !DEC$ MESSAGE:'Using cray pointers.'
    108 
    109 
    110 
    111 !Control size of integers that will hold address values.
    112 !Appears for legacy reasons, but seems rather dangerous.
    113 # 89
    114 

Page 3           Source Listing                  HORIZ_INTERP_CONSERVE_INIT
2021-06-01 08:55                                 ../include/fms_platform.h

    115 
    116 
    117 !If you do not want to use 64-bit integers.
    118 # 95
    119 
    120 
    121 
    122 !If you do not want to use 32-bit floats.
    123 # 106
    124 
    125 
    126 
    127 !If you want to use quad-precision.
    128 ! The NO_QUAD_PRECISION macro will be deprecated and removed at some future time.
    129 ! Model code will rely solely upon the ENABLE_QUAD_PRECISION macro thereafer.
    130 # 114
    131 
    132 
    133 
    134 
    135 
    136 
    137 
    138 
    139 # 45 "horiz_interp_conserve.F90" 2 
    140   use mpp_mod,               only: mpp_send, mpp_recv, mpp_pe, mpp_root_pe, mpp_npes
    141   use mpp_mod,               only: mpp_error, FATAL,  mpp_sync_self
    142   use mpp_mod,               only: COMM_TAG_1, COMM_TAG_2
    143   use fms_mod,               only: write_version_number
    144   use grid2_mod,             only: get_great_circle_algorithm
    145   use constants_mod,         only: PI
    146   use horiz_interp_type_mod, only: horiz_interp_type
    147 
    148 
    149   implicit none
    150   private
    151 
    152 ! public interface
    153 
    154 
    155 ! <INTERFACE NAME="horiz_interp_conserve_new">
    156 !   <OVERVIEW>
    157 !      Allocates space and initializes a derived-type variable
    158 !      that contains pre-computed interpolation indices and weights.
    159 !   </OVERVIEW>
    160 !   <DESCRIPTION>
    161 !      Allocates space and initializes a derived-type variable
    162 !      that contains pre-computed interpolation indices and weights
    163 !      for improved performance of multiple interpolations between
    164 !      the same grids.
    165 
    166 !   </DESCRIPTION>
    167 !   <IN NAME="lon_in" TYPE="real" DIM="dimension(:), dimension(:,:)" UNITS="radians">
    168 !      Longitude (in radians) for source data grid.
    169 !   </IN>
    170 !   <IN NAME="lat_in" TYPE="real" DIM="dimension(:), dimension(:,:)" UNITS="radians">
    171 !      Latitude (in radians) for source data grid.

Page 4           Source Listing                  HORIZ_INTERP_CONSERVE_INIT
2021-06-01 08:55                                 horiz_interp_conserve.F90

    172 !   </IN>
    173 !   <IN NAME="lon_out" TYPE="real" DIM="dimension(:), dimension(:,:)" UNITS="radians" >
    174 !      Longitude (in radians) for destination data grid.
    175 !   </IN>
    176 !   <IN NAME="lat_out" TYPE="real" DIM="dimension(:), dimension(:,:)" UNITS="radians" >
    177 !      Latitude (in radians) for destination data grid.
    178 !   </IN>
    179 !   <IN NAME="verbose" TYPE="integer, optional" >
    180 !      flag for the amount of print output.
    181 !   </IN>
    182 !   <IN NAME="mask_in" TYPE="real, dimension(:,:),optional">
    183 !      Input mask.  must be the size (size(lon_in)-1, size(lon. The real value of
    184 !      mask_in must be in the range (0.,1.). Set mask_in=0.0 for data points
    185 !      that should not be used or have missing data.
    186 !   </IN>
    187 !   <OUT NAME="mask_out" TYPE="real, dimension(:,:),optional">
    188 !      Output mask that specifies whether data was computed.
    189 !   </OUT>
    190 !   <INOUT NAME="Interp" TYPE="type(horiz_interp_type)" >
    191 !      A derived-type variable containing indices and weights used for subsequent
    192 !      interpolations. To reinitialize this variable for a different grid-to-grid
    193 !      interpolation you must first use the "horiz_interp_del" interface.
    194 !   </INOUT>
    195   interface horiz_interp_conserve_new
    196      module procedure horiz_interp_conserve_new_1dx1d
    197      module procedure horiz_interp_conserve_new_1dx2d
    198      module procedure horiz_interp_conserve_new_2dx1d
    199      module procedure horiz_interp_conserve_new_2dx2d
    200   end interface
    201 ! </INTERFACE>
    202   public :: horiz_interp_conserve_init
    203   public :: horiz_interp_conserve_new, horiz_interp_conserve, horiz_interp_conserve_del
    204 
    205   integer :: pe, root_pe
    206 !-----------------------------------------------------------------------
    207 ! Include variable "version" to be written to log file.
    208 # 1 "../include/file_version.h" 1 
    209 ! -*-f90-*-
    210 !***********************************************************************
    211 !*                   GNU Lesser General Public License
    212 !*
    213 !* This file is part of the GFDL Flexible Modeling System (FMS).
    214 !*
    215 !* FMS is free software: you can redistribute it and/or modify it under
    216 !* the terms of the GNU Lesser General Public License as published by
    217 !* the Free Software Foundation, either version 3 of the License, or (at
    218 !* your option) any later version.
    219 !*
    220 !* FMS is distributed in the hope that it will be useful, but WITHOUT
    221 !* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
    222 !* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
    223 !* for more details.
    224 !*
    225 !* You should have received a copy of the GNU Lesser General Public
    226 !* License along with FMS.  If not, see <http://www.gnu.org/licenses/>.
    227 !***********************************************************************
    228 

Page 5           Source Listing                  HORIZ_INTERP_CONSERVE_INIT
2021-06-01 08:55                                 ../include/file_version.h

    229 # 23
    230 
    231   character(len=*), parameter :: version = 'unknown'
    232 
    233 # 114 "horiz_interp_conserve.F90" 2 
    234   logical            :: module_is_initialized = .FALSE.
    235 
    236   logical         :: great_circle_algorithm = .false.
    237 
    238 contains
    239 
    240 !#######################################################################
    241 !  <SUBROUTINE NAME="horiz_interp_conserve_init">
    242 !  <OVERVIEW>
    243 !     writes version number to logfile.out
    244 !  </OVERVIEW>
    245 !  <DESCRIPTION>
    246 !     writes version number to logfile.out
    247 !  </DESCRIPTION>
    248 
    249   subroutine horiz_interp_conserve_init
    250 
    251     if(module_is_initialized) return
    252     call write_version_number("HORIZ_INTERP_CONSERVE_MOD", version)
    253 
    254     great_circle_algorithm = get_great_circle_algorithm()
    255 
    256     module_is_initialized = .true.
    257 
    258   end subroutine horiz_interp_conserve_init

Page 6           Source Listing                  HORIZ_INTERP_CONSERVE_INIT
2021-06-01 08:55 Entry Points                    horiz_interp_conserve.F90



ENTRY POINTS

  Name                                                                
                                                                      
 horiz_interp_conserve_mod_mp_horiz_interp_conserve_init_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 GET_GREAT_CIRCLE_ALGORITHM Func   254      L(4)            4           scalar   PRIV             144,254                           
 GREAT_CIRCLE_ALGORITHM     Local  254      L(4)            4           scalar                    236,254,289,540,679,796           
 HORIZ_INTERP_CONSERVE_INIT Subr   249                                                                                              
 MODULE_IS_INITIALIZED      Local  251      L(4)            4           scalar                    234,251,256,286,493,656,762       
 VERSION                    Param  252      CHAR            7           scalar                    252                               
 WRITE_VERSION_NUMBER       Subr   252                                           PRIV             143,252                           

Page 7           Source Listing                  HORIZ_INTERP_CONSERVE_INIT
2021-06-01 08:55                                 horiz_interp_conserve.F90

    259 
    260 !  </SUBROUTINE>
    261 
    262 !#######################################################################
    263 !<PUBLICROUTINE INTERFACE="horiz_interp_conserve_new">
    264   subroutine horiz_interp_conserve_new_1dx1d ( Interp, lon_in, lat_in, lon_out, lat_out, verbose)
    265     type(horiz_interp_type), intent(inout) :: Interp
    266     real, intent(in),       dimension(:)   :: lon_in , lat_in
    267     real, intent(in),       dimension(:)   :: lon_out, lat_out
    268     integer, intent(in),       optional    :: verbose
    269 
    270 !</PUBLICROUTINE>
    271 !-----------------------------------------------------------------------
    272     real, dimension(size(lat_out(:))-1,2) :: sph
    273     real, dimension(size(lon_out(:))-1,2) :: theta
    274     real, dimension(size(lat_in(:)))      :: slat_in
    275     real, dimension(size(lon_in(:))-1)    :: dlon_in
    276     real, dimension(size(lat_in(:))-1)    :: dsph_in
    277     real, dimension(size(lon_out(:))-1)   :: dlon_out
    278     real, dimension(size(lat_out(:))-1)   :: dsph_out
    279     real    :: blon, fac, hpi, tpi, eps
    280     integer :: num_iters = 4
    281     integer :: i, j, m, n, nlon_in, nlat_in, nlon_out, nlat_out,   &
    282          iverbose, m2, n2, iter
    283     logical :: s2n
    284     character(len=64) :: mesg
    285 
    286     if(.not. module_is_initialized) call mpp_error(FATAL, &
    287          'horiz_interp_conserve_new_1dx1d: horiz_interp_conserve_init is not called')
    288 
    289     if(great_circle_algorithm) call mpp_error(FATAL, &
    290          'horiz_interp_conserve_new_1dx1d: great_circle_algorithm is not implemented, contact developer')
    291 !-----------------------------------------------------------------------
    292     iverbose = 0;  if (present(verbose)) iverbose = verbose
    293 
    294     pe      = mpp_pe()
    295     root_pe = mpp_root_pe()
    296 !-----------------------------------------------------------------------
    297     hpi = 0.5*pi
    298     tpi = 4.*hpi
    299     Interp%version = 1
    300     nlon_in = size(lon_in(:))-1;  nlat_in = size(lat_in(:))-1
    301     nlon_out = size(lon_out(:))-1;  nlat_out = size(lat_out(:))-1
    302 
    303     allocate ( Interp % facj (nlat_out,2), Interp % jlat (nlat_out,2),      &
    304                Interp % faci (nlon_out,2), Interp % ilon (nlon_out,2),      &
    305                Interp % area_src (nlon_in, nlat_in),   &
    306                Interp % area_dst (nlon_out, nlat_out) )
    307 
    308 !-----------------------------------------------------------------------
    309 !  --- set-up for input grid boxes ---
    310 
    311     do j = 1, nlat_in+1
    312        slat_in(j) = sin(lat_in(j))
    313     enddo
    314 
    315     do j = 1, nlat_in

Page 8           Source Listing                  HORIZ_INTERP_CONSERVE_NEW_1DX1D
2021-06-01 08:55                                 horiz_interp_conserve.F90

    316        dsph_in(j) = abs(slat_in(j+1)-slat_in(j))
    317     enddo
    318 
    319     do i = 1,nlon_in
    320        dlon_in(i) = abs(lon_in(i+1)-lon_in(i))
    321     enddo
    322 
    323 !  set south to north flag
    324     s2n = .true.
    325     if (lat_in(1) > lat_in(nlat_in+1)) s2n = .false.
    326 
    327 !-----------------------------------------------------------------------
    328 !  --- set-up for output grid boxes ---
    329 
    330     do n = 1, nlat_out
    331        dsph_out(n) = abs(sin(lat_out(n+1))-sin(lat_out(n)))
    332     enddo
    333 
    334     do m = 1,nlon_out
    335        theta(m,1)  = lon_out(m)
    336        theta(m,2)  = lon_out(m+1)
    337        dlon_out(m) = abs(lon_out(m+1)-lon_out(m))
    338     enddo
    339 
    340     Interp%nlon_src = nlon_in;  Interp%nlat_src = nlat_in
    341     Interp%nlon_dst = nlon_out; Interp%nlat_dst = nlat_out
    342 !***********************************************************************
    343 
    344 !------ set up latitudinal indexing ------
    345 !------ make sure output grid goes south to north ------
    346 
    347     do n = 1, nlat_out
    348        if (lat_out(n) < lat_out(n+1)) then
    349           sph(n,1) = sin(lat_out(n))
    350           sph(n,2) = sin(lat_out(n+1))
    351        else
    352           sph(n,1) = sin(lat_out(n+1))
    353           sph(n,2) = sin(lat_out(n))
    354        endif
    355     enddo
    356 
    357     Interp%jlat = 0
    358     do n2 = 1, 2         ! looping on grid box edges
    359        do n = 1, nlat_out   ! looping on output latitudes
    360           eps = 0.0
    361           do iter=1,num_iters
    362 ! find indices from input latitudes
    363              do j = 1, nlat_in
    364                 if ( (s2n .and. (slat_in(j)-sph(n,n2)) <= eps .and.   &
    365                      (sph(n,n2)-slat_in(j+1)) <= eps) .or. &
    366                      (.not.s2n .and. (slat_in(j+1)-sph(n,n2)) <= eps .and.  &
    367                      (sph(n,n2)-slat_in(j)) <= eps) ) then
    368                    Interp%jlat(n,n2) = j
    369 ! weight with sin(lat) to exactly conserve area-integral
    370                    fac = (sph(n,n2)-slat_in(j))/(slat_in(j+1)-slat_in(j))
    371                    if (s2n) then
    372                       if (n2 == 1) Interp%facj(n,n2) = 1.0 - fac

Page 9           Source Listing                  HORIZ_INTERP_CONSERVE_NEW_1DX1D
2021-06-01 08:55                                 horiz_interp_conserve.F90

    373                       if (n2 == 2) Interp%facj(n,n2) = fac
    374                    else
    375                       if (n2 == 1) Interp%facj(n,n2) = fac
    376                       if (n2 == 2) Interp%facj(n,n2) = 1.0 - fac
    377                    endif
    378                    exit
    379                 endif
    380              enddo
    381              if ( Interp%jlat(n,n2) /= 0 ) exit
    382 ! did not find this output grid edge in the input grid
    383 ! increase tolerance for multiple passes
    384              eps  = epsilon(sph)*real(10**iter)
    385           enddo
    386 ! no match
    387           if ( Interp%jlat(n,n2) == 0 ) then
    388              write (mesg,710) n,sph(n,n2)
    389 710          format (': n,sph=',i3,f14.7,40x)
    390              call mpp_error(FATAL, 'horiz_interp_conserve_mod:no latitude index found'//trim(mesg))
    391           endif
    392        enddo
    393     enddo
    394 
    395 !------ set up longitudinal indexing ------
    396 
    397     Interp%ilon = 0
    398     do m2 = 1, 2         ! looping on grid box edges
    399        do m = 1, nlon_out   ! looping on output longitudes
    400           blon = theta(m,m2)
    401           if ( blon < lon_in(1)         ) blon = blon + tpi
    402           if ( blon > lon_in(nlon_in+1) ) blon = blon - tpi
    403           eps = 0.0
    404           do iter=1,num_iters
    405 ! find indices from input longitudes
    406              do i = 1, nlon_in
    407                 if ( (lon_in(i)-blon) <= eps .and. &
    408                      (blon-lon_in(i+1)) <= eps ) then
    409                    Interp%ilon(m,m2) = i
    410                    fac = (blon-lon_in(i))/(lon_in(i+1)-lon_in(i))
    411                    if (m2 == 1) Interp%faci(m,m2) = 1.0 - fac
    412                    if (m2 == 2) Interp%faci(m,m2) = fac
    413                    exit
    414                 endif
    415              enddo
    416              if ( Interp%ilon(m,m2) /= 0 ) exit
    417 ! did not find this output grid edge in the input grid
    418 ! increase tolerance for multiple passes
    419              eps  = epsilon(blon)*real(10**iter)
    420           enddo
    421 ! no match
    422           if ( Interp%ilon(m,m2) == 0 ) then
    423              print *, 'lon_out,blon,blon_in,eps=',  &
    424                   theta(m,m2),blon,lon_in(1),lon_in(nlon_in+1),eps
    425              call mpp_error(FATAL, 'horiz_interp_conserve_mod: no longitude index found')
    426           endif
    427        enddo
    428     enddo
    429 

Page 10          Source Listing                  HORIZ_INTERP_CONSERVE_NEW_1DX1D
2021-06-01 08:55                                 horiz_interp_conserve.F90

    430 !  --- area of input grid boxes ---
    431 
    432     do j = 1,nlat_in
    433        do i = 1,nlon_in
    434           Interp%area_src(i,j) = dlon_in(i) * dsph_in(j)
    435        enddo
    436     enddo
    437 
    438 !  --- area of output grid boxes ---
    439 
    440     do n = 1, nlat_out
    441        do m = 1, nlon_out
    442           Interp%area_dst(m,n) = dlon_out(m) * dsph_out(n)
    443        enddo
    444     enddo
    445 
    446 !-----------------------------------------------------------------------
    447 ! this output may be quite lengthy and is not recommended
    448 ! when using more than one processor
    449     if (iverbose > 2) then
    450        write (*,801) (i,Interp%ilon(i,1),Interp%ilon(i,2),  &
    451             Interp%faci(i,1),Interp%faci(i,2),i=1,nlon_out)
    452        write (*,802) (j,Interp%jlat(j,1),Interp%jlat(j,2),  &
    453             Interp%facj(j,1),Interp%facj(j,2),j=1,nlat_out)
    454 801    format (/,2x,'i',4x,'is',5x,'ie',4x,'facis',4x,'facie',  &
    455             /,(i4,2i7,2f10.5))
    456 802    format (/,2x,'j',4x,'js',5x,'je',4x,'facjs',4x,'facje',  &
    457             /,(i4,2i7,2f10.5))
    458     endif
    459 !-----------------------------------------------------------------------
    460 
    461   end subroutine horiz_interp_conserve_new_1dx1d

Page 11          Source Listing                  HORIZ_INTERP_CONSERVE_NEW_1DX1D
2021-06-01 08:55 Entry Points                    horiz_interp_conserve.F90



ENTRY POINTS

  Name                                                                     
                                                                           
 horiz_interp_conserve_mod_mp_horiz_interp_conserve_new_1dx1d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 710                        Label  389                                                            388                               
 801                        Label  454                                                            450                               
 802                        Label  456                                                            452                               
 ABS                        Func   316                                  scalar                    316,320,331,337                   
 BLON                       Local  279      R(8)            8           scalar                    400,401,402,407,408,410,419,424   
 DLON_IN                    Local  275      R(8)            8     1     0                         320,434                           
 DLON_OUT                   Local  277      R(8)            8     1     0                         337,442                           
 DSPH_IN                    Local  276      R(8)            8     1     0                         316,434                           
 DSPH_OUT                   Local  278      R(8)            8     1     0                         331,442                           
 EPS                        Local  279      R(8)            8           scalar                    360,364,365,366,367,384,403,407,40
                                                                                                  8,419,424                         
 EPSILON                    Func   384                                  scalar                    384,419                           
 FAC                        Local  279      R(8)            8           scalar                    370,372,373,375,376,410,411,412   
 FATAL                      Param  286      I(4)            4           scalar   PRIV             141,286,289,390,425,493,497,501,50
                                                                                                  7,532,618,656,660,664,670,726,762,
                                                                                                  766,770,772,778,831,898,901,907,94
                                                                                                  2                                 
 HORIZ_INTERP_CONSERVE_NEW_                                                                                                         
 1DX1D                      Subr   264                                           PRIV                                               
 HORIZ_INTERP_TYPE          Type   265                                  scalar   PRIV             146,265,467,634,742,889,919,1066,1
                                                                                                  105                               
 HPI                        Local  279      R(8)            8           scalar                    297,298                           
 I                          Local  281      I(4)            4           scalar                    319,320,406,407,408,409,410,433,43
                                                                                                  4,450,451                         
 INTERP                     Dummy  264      HORIZ_INTERP_TYPE                                                                       
                                                            2208        scalar   ARG,INOUT        299,303,304,305,306,340,341,357,36
                                                                                                  8,372,373,375,376,381,387,397,409,
                                                                                                  411,412,416,422,434,442,450,451,45
                                                                                                  2,453                             
 ITER                       Local  282      I(4)            4           scalar                    361,384,404,419                   
 IVERBOSE                   Local  282      I(4)            4           scalar                    292,449                           
 J                          Local  281      I(4)            4           scalar                    311,312,315,316,363,364,365,366,36
                                                                                                  7,368,370,432,434,452,453         
 LAT_IN                     Dummy  264      R(8)            8     1     1        ARG,IN           274,276,300,312,325               
 LAT_OUT                    Dummy  264      R(8)            8     1     1        ARG,IN           272,278,301,331,348,349,350,352,35
                                                                                                  3                                 
 LON_IN                     Dummy  264      R(8)            8     1     1        ARG,IN           275,300,320,401,402,407,408,410,42
                                                                                                  4                                 
 LON_OUT                    Dummy  264      R(8)            8     1     1        ARG,IN           273,277,301,335,336,337           
 M                          Local  281      I(4)            4           scalar                    334,335,336,337,399,400,409,411,41
                                                                                                  2,416,422,424,441,442             
 M2                         Local  282      I(4)            4           scalar                    398,400,409,411,412,416,422,424   
 MESG                       Local  284      CHAR            64          scalar                    388,390                           
 MPP_ERROR                  Local  286                                  scalar   PRIV             141,286,289,390,425,493,497,501,50

Page 12          Source Listing                  HORIZ_INTERP_CONSERVE_NEW_1DX1D
2021-06-01 08:55 Symbol Table                    horiz_interp_conserve.F90

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
                                                                                                  7,532,618,656,660,664,670,726,762,
                                                                                                  766,770,772,778,831,898,901,907,94
                                                                                                  2                                 
 MPP_ERROR_BASIC            Subr   286                                           PRIV             286,289,390,425,493,497,501,507,53
                                                                                                  2,618,656,660,664,670,726,762,766,
                                                                                                  770,772,778,831,898,901,907,942   
 MPP_PE                     Func   294      I(4)            4           scalar   PRIV             140,294,1137                      
 MPP_ROOT_PE                Func   295      I(4)            4           scalar   PRIV             140,295,1138                      
 N                          Local  281      I(4)            4           scalar                    330,331,347,348,349,350,352,353,35
                                                                                                  9,364,365,366,367,368,370,372,373,
                                                                                                  375,376,381,387,388,440,442       
 N2                         Local  282      I(4)            4           scalar                    358,364,365,366,367,368,370,372,37
                                                                                                  3,375,376,381,387,388             
 NLAT_IN                    Local  281      I(4)            4           scalar                    300,305,311,315,325,340,363,432   
 NLAT_OUT                   Local  281      I(4)            4           scalar                    301,303,306,330,341,347,359,440,45
                                                                                                  3                                 
 NLON_IN                    Local  281      I(4)            4           scalar                    300,305,319,340,402,406,424,433   
 NLON_OUT                   Local  281      I(4)            4           scalar                    301,304,306,334,341,399,441,451   
 NUM_ITERS                  Local  280      I(4)            4           scalar                    280,361,404                       
 PE                         Local  294      I(4)            4           scalar                    294,1021,1034,1045                
 PI                         Param  297      R(8)            8           scalar   PRIV             145,297                           
 PRESENT                    Func   292                                  scalar                    292                               
 REAL                       Func   384                                  scalar                    384,419                           
 ROOT_PE                    Local  295      I(4)            4           scalar                    295,1021,1034,1045                
 S2N                        Local  283      L(4)            4           scalar                    324,325,364,366,371               
 SIN                        Func   312                                  scalar                    312,331,349,350,352,353           
 SIZE                       Func   272                                  scalar                    272,273,274,275,276,277,278,300,30
                                                                                                  1                                 
 SLAT_IN                    Local  274      R(8)            8     1     0                         312,316,364,365,366,367,370       
 SPH                        Local  272      R(8)            8     2     0                         349,350,352,353,364,365,366,367,37
                                                                                                  0,384,388                         
 THETA                      Local  273      R(8)            8     2     0                         335,336,400,424                   
 TPI                        Local  279      R(8)            8           scalar                    298,401,402                       
 TRIM                       Func   390                                  scalar                    390                               
 VERBOSE                    Dummy  264      I(4)            4           scalar   ARG,IN           292                               


TYPE COMPONENTS/COMMON VARIABLES

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 HORIZ_INTERP_TYPE.AREA_DST R(8)            8     480      2     1        PTR              306,442,1032,1110                  
 HORIZ_INTERP_TYPE.AREA_SRC R(8)            8     384      2     1        PTR              305,434,988,991,994,1018,1109      
 HORIZ_INTERP_TYPE.FACI     R(8)            8     0        2     1        PTR              304,411,412,451,963,983,1113       
 HORIZ_INTERP_TYPE.FACJ     R(8)            8     96       2     1        PTR              303,372,373,375,376,453,954,957,11 
                                                                                           11                                 
 HORIZ_INTERP_TYPE.ILON     I(4)            4     192      2     1        PTR              304,397,409,416,422,450,962,982,11 
                                                                                           14                                 
 HORIZ_INTERP_TYPE.JLAT     I(4)            4     288      2     1        PTR              303,357,368,381,387,452,952,953,95 
                                                                                           6,1112                             
 HORIZ_INTERP_TYPE.NLAT_DST I(4)            4     1388           scalar                    341,616,724,829,900,938            
 HORIZ_INTERP_TYPE.NLAT_SRC I(4)            4     1380           scalar                    340,615,723,828,897,937            
 HORIZ_INTERP_TYPE.NLON_DST I(4)            4     1384           scalar                    341,616,724,829,900,938            
 HORIZ_INTERP_TYPE.NLON_SRC I(4)            4     1376           scalar                    340,615,723,828,897,937            
 HORIZ_INTERP_TYPE.VERSION  I(4)            4     1740           scalar                    299,598,707,811,903,1107           

Page 13          Source Listing                  HORIZ_INTERP_CONSERVE_NEW_1DX1D
2021-06-01 08:55                                 horiz_interp_conserve.F90

    462 
    463 !#######################################################################
    464 !<PUBLICROUTINE INTERFACE="horiz_interp_conserve_new">
    465   subroutine horiz_interp_conserve_new_1dx2d ( Interp, lon_in, lat_in, lon_out, lat_out, &
    466                                                mask_in, mask_out, verbose)
    467     type(horiz_interp_type),        intent(inout) :: Interp
    468     real, intent(in),              dimension(:)   :: lon_in , lat_in
    469     real, intent(in),              dimension(:,:) :: lon_out, lat_out
    470     real, intent(in),    optional, dimension(:,:) :: mask_in
    471     real, intent(inout), optional, dimension(:,:) :: mask_out
    472     integer, intent(in), optional                 :: verbose
    473 
    474 !</PUBLICROUTINE>
    475 
    476     integer :: create_xgrid_1DX2D_order1, get_maxxgrid, maxxgrid
    477     integer :: create_xgrid_great_circle
    478     integer :: nlon_in, nlat_in, nlon_out, nlat_out, nxgrid, i, j
    479     real(8), dimension(size(lon_in(:))-1, size(lat_in(:))-1) :: mask_src
    480     integer, allocatable, dimension(:)   :: i_src, j_src, i_dst, j_dst
    481     real(8),    allocatable, dimension(:)   :: xgrid_area, clon, clat
    482     real(8),    allocatable, dimension(:,:) :: dst_area, lon_src, lat_src
    483     real(8),    allocatable, dimension(:)   :: lat_in_flip
    484     real(8),    allocatable, dimension(:,:) :: mask_src_flip
    485     real(8),    allocatable, dimension(:)   :: lon_in_r8, lat_in_r8
    486     real(8),    allocatable, dimension(:,:) :: lon_out_r8, lat_out_r8
    487 
    488     integer :: nincrease, ndecrease
    489     logical :: flip_lat
    490     integer :: wordsz
    491     integer(kind=1) :: one_byte(8)
    492 
    493     if(.not. module_is_initialized) call mpp_error(FATAL, &
    494          'horiz_interp_conserve_new_1dx2d: horiz_interp_conserve_init is not called')
    495 
    496     wordsz=size(transfer(lon_in(1), one_byte))
    497     if(wordsz .NE. 4 .AND. wordsz .NE. 8) call mpp_error(FATAL, &
    498          'horiz_interp_conserve_new_1dx2d: wordsz should be 4 or 8')
    499 
    500     if( (size(lon_out,1) .NE. size(lat_out,1)) .OR. (size(lon_out,2) .NE. size(lat_out,2)) )  &
    501         call mpp_error(FATAL, 'horiz_interp_conserve_mod: size mismatch between lon_out and lat_out')
    502     nlon_in  = size(lon_in(:)) - 1;  nlat_in  = size(lat_in(:)) - 1
    503     nlon_out = size(lon_out,1) - 1;  nlat_out = size(lon_out,2) - 1
    504 
    505     mask_src = 1.
    506     if(present(mask_in)) then
    507        if( (size(mask_in,1) .NE. nlon_in) .OR.  (size(mask_in,2) .NE. nlat_in)) call mpp_error(FATAL, &
    508          'horiz_interp_conserve_mod: size mismatch between mask_in and lon_in/lat_in')
    509        mask_src = mask_in
    510     end if
    511 
    512     maxxgrid = get_maxxgrid()
    513     allocate(i_src(maxxgrid), j_src(maxxgrid), i_dst(maxxgrid), j_dst(maxxgrid) )
    514     allocate( xgrid_area(maxxgrid), dst_area(nlon_out, nlat_out) )
    515 
    516 !--- check if source latitude is flipped
    517     nincrease = 0
    518     ndecrease = 0

Page 14          Source Listing                  HORIZ_INTERP_CONSERVE_NEW_1DX2D
2021-06-01 08:55                                 horiz_interp_conserve.F90

    519     do j = 1, nlat_in
    520        if( lat_in(j+1) > lat_in(j) ) then
    521           nincrease = nincrease + 1
    522        else if ( lat_in(j+1) < lat_in(j) ) then
    523           ndecrease = ndecrease + 1
    524        endif
    525     enddo
    526 
    527     if(nincrease == nlat_in) then
    528        flip_lat = .false.
    529     else if(ndecrease == nlat_in) then
    530        flip_lat = .true.
    531     else
    532        call mpp_error(FATAL, 'horiz_interp_conserve_mod: nlat_in should be equal to nincreaase or ndecrease')
    533     endif
    534 
    535     allocate(lon_out_r8(size(lon_out,1),size(lon_out,2)))
    536     allocate(lat_out_r8(size(lat_out,1),size(lat_out,2)))
    537     lon_out_r8 = lon_out
    538     lat_out_r8 = lat_out
    539 
    540     if( .not. great_circle_algorithm ) then
    541        if(flip_lat) then
    542           allocate(lat_in_flip(nlat_in+1), mask_src_flip(nlon_in,nlat_in))
    543           do j = 1, nlat_in+1
    544              lat_in_flip(j) = lat_in(nlat_in+2-j)
    545           enddo
    546           do j = 1, nlat_in
    547              mask_src_flip(:,j) = mask_src(:,nlat_in+1-j)
    548           enddo
    549           allocate(lon_in_r8(size(lon_in)))
    550           lon_in_r8 = lon_in
    551           nxgrid = create_xgrid_1DX2D_order1(nlon_in, nlat_in, nlon_out, nlat_out, lon_in_r8, lat_in_flip, &
    552                                lon_out_r8, lat_out_r8, mask_src_flip, i_src, j_src, i_dst, j_dst, xgrid_area)
    553           deallocate(lon_in_r8, lat_in_flip, mask_src_flip)
    554        else
    555           allocate(lon_in_r8(size(lon_in)))
    556           allocate(lat_in_r8(size(lat_in)))
    557           lon_in_r8 = lon_in
    558           lat_in_r8 = lat_in
    559           nxgrid = create_xgrid_1DX2D_order1(nlon_in, nlat_in, nlon_out, nlat_out, lon_in_r8, lat_in_r8, lon_out_r8, lat_out
    559 _r8, &
    560                                           mask_src, i_src, j_src, i_dst, j_dst, xgrid_area)
    561           deallocate(lon_in_r8,lat_in_r8)
    562        endif
    563     else
    564        allocate(lon_src(nlon_in+1,nlat_in+1), lat_src(nlon_in+1,nlat_in+1))
    565        allocate(clon(maxxgrid), clat(maxxgrid))
    566        if(flip_lat) then
    567           allocate(mask_src_flip(nlon_in,nlat_in))
    568           do j = 1, nlat_in+1
    569              do i = 1, nlon_in+1
    570                 lon_src(i,j) = lon_in(i)
    571                 lat_src(i,j) = lat_in(nlat_in+2-j)
    572              enddo
    573           enddo
    574           do j = 1, nlat_in

Page 15          Source Listing                  HORIZ_INTERP_CONSERVE_NEW_1DX2D
2021-06-01 08:55                                 horiz_interp_conserve.F90

    575              mask_src_flip(:,j) = mask_src(:,nlat_in+1-j)
    576           enddo
    577           nxgrid = create_xgrid_great_circle(nlon_in, nlat_in, nlon_out, nlat_out, lon_src, lat_src, lon_out_r8, lat_out_r8,
    577  &
    578                                              mask_src_flip, i_src, j_src, i_dst, j_dst, xgrid_area, clon, clat)
    579           deallocate(mask_src_flip)
    580        else
    581           do j = 1, nlat_in+1
    582              do i = 1, nlon_in+1
    583                 lon_src(i,j) = lon_in(i)
    584                 lat_src(i,j) = lat_in(j)
    585              enddo
    586           enddo
    587           nxgrid =  create_xgrid_great_circle(nlon_in, nlat_in, nlon_out, nlat_out, lon_src, lat_src, lon_out_r8, lat_out_r8
    587 , &
    588                                              mask_src, i_src, j_src, i_dst, j_dst, xgrid_area, clon, clat)
    589        endif
    590        deallocate(lon_src, lat_src, clon, clat)
    591     endif
    592 
    593     deallocate(lon_out_r8, lat_out_r8)
    594 
    595     allocate(Interp%i_src(nxgrid), Interp%j_src(nxgrid) )
    596     allocate(Interp%i_dst(nxgrid), Interp%j_dst(nxgrid) )
    597     allocate(Interp%area_frac_dst(nxgrid) )
    598     Interp%version = 2
    599     Interp%nxgrid   = nxgrid
    600     Interp%i_src = i_src(1:nxgrid)+1 ! in C, the starting index is 0
    601     Interp%j_src = j_src(1:nxgrid)+1
    602     if(flip_lat) Interp%j_src = nlat_in+1-Interp%j_src
    603     Interp%i_dst = i_dst(1:nxgrid)+1
    604     Interp%j_dst = j_dst(1:nxgrid)+1
    605 
    606 ! sum over exchange grid area to get destination grid area
    607     dst_area = 0.
    608     do i = 1, nxgrid
    609        dst_area(Interp%i_dst(i), Interp%j_dst(i)) = dst_area(Interp%i_dst(i), Interp%j_dst(i)) + xgrid_area(i)
    610     end do
    611 
    612     do i = 1, nxgrid
    613        Interp%area_frac_dst(i) = xgrid_area(i)/dst_area(Interp%i_dst(i), Interp%j_dst(i) )
    614     end do
    615     Interp%nlon_src = nlon_in;  Interp%nlat_src = nlat_in
    616     Interp%nlon_dst = nlon_out; Interp%nlat_dst = nlat_out
    617     if(present(mask_out)) then
    618        if( (size(mask_out,1) .NE. nlon_out) .OR. (size(mask_out,2) .NE. nlat_out) ) call mpp_error(FATAL, &
    619          'horiz_interp_conserve_mod: size mismatch between mask_out and lon_out/lat_out')
    620        mask_out = 0.0
    621        do i = 1, nxgrid
    622           mask_out(Interp%i_dst(i),Interp%j_dst(i)) = mask_out(Interp%i_dst(i),Interp%j_dst(i)) + Interp%area_frac_dst(i)
    623        end do
    624     end if
    625 
    626     deallocate(i_src, j_src, i_dst, j_dst, xgrid_area, dst_area )
    627 
    628   end subroutine horiz_interp_conserve_new_1dx2d

Page 16          Source Listing                  HORIZ_INTERP_CONSERVE_NEW_1DX2D
2021-06-01 08:55 Entry Points                    horiz_interp_conserve.F90



ENTRY POINTS

  Name                                                                     
                                                                           
 horiz_interp_conserve_mod_mp_horiz_interp_conserve_new_1dx2d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 CLAT                       Local  481      R(8)            8     1     1        ALC              565,578,588,590                   
 CLON                       Local  481      R(8)            8     1     1        ALC              565,578,588,590                   
 CREATE_XGRID_1DX2D_ORDER1  Func   476      I(4)            4           scalar                    551,559                           
 CREATE_XGRID_GREAT_CIRCLE  Func   477      I(4)            4           scalar                    577,587                           
 DST_AREA                   Local  482      R(8)            8     2     1        ALC              514,607,609,613,626               
 FLIP_LAT                   Local  489      L(4)            4           scalar                    528,530,541,566,602               
 GET_MAXXGRID               Func   476      I(4)            4           scalar                    512                               
 HORIZ_INTERP_CONSERVE_NEW_                                                                                                         
 1DX2D                      Subr   465                                           PRIV                                               
 I                          Local  478      I(4)            4           scalar                    569,570,571,582,583,584,608,609,61
                                                                                                  2,613,621,622                     
 INTERP                     Dummy  465      HORIZ_INTERP_TYPE                                                                       
                                                            2208        scalar   ARG,INOUT        595,596,597,598,599,600,601,602,60
                                                                                                  3,604,609,613,615,616,622         
 I_DST                      Local  480      I(4)            4     1     1        ALC              513,552,560,578,588,603,626       
 I_SRC                      Local  480      I(4)            4     1     1        ALC              513,552,560,578,588,600,626       
 J                          Local  478      I(4)            4           scalar                    519,520,522,543,544,546,547,568,57
                                                                                                  0,571,574,575,581,583,584         
 J_DST                      Local  480      I(4)            4     1     1        ALC              513,552,560,578,588,604,626       
 J_SRC                      Local  480      I(4)            4     1     1        ALC              513,552,560,578,588,601,626       
 LAT_IN                     Dummy  465      R(8)            8     1     1        ARG,IN           479,502,520,522,544,556,558,571,58
                                                                                                  4                                 
 LAT_IN_FLIP                Local  483      R(8)            8     1     1        ALC              542,544,551,553                   
 LAT_IN_R8                  Local  485      R(8)            8     1     1        ALC              556,558,559,561                   
 LAT_OUT                    Dummy  465      R(8)            8     2     1        ARG,IN           500,536,538                       
 LAT_OUT_R8                 Local  486      R(8)            8     2     1        ALC              536,538,552,559,577,587,593       
 LAT_SRC                    Local  482      R(8)            8     2     1        ALC              564,571,577,584,587,590           
 LON_IN                     Dummy  465      R(8)            8     1     1        ARG,IN           479,496,502,549,550,555,557,570,58
                                                                                                  3                                 
 LON_IN_R8                  Local  485      R(8)            8     1     1        ALC              549,550,551,553,555,557,559,561   
 LON_OUT                    Dummy  465      R(8)            8     2     1        ARG,IN           500,503,535,537                   
 LON_OUT_R8                 Local  486      R(8)            8     2     1        ALC              535,537,552,559,577,587,593       
 LON_SRC                    Local  482      R(8)            8     2     1        ALC              564,570,577,583,587,590           
 MASK_IN                    Dummy  466      R(8)            8     2     1        ARG,IN           506,507,509                       
 MASK_OUT                   Dummy  466      R(8)            8     2     1        ARG,INOUT        617,618,620,622                   
 MASK_SRC                   Local  479      R(8)            8     2     0                         505,509,547,560,575,588           
 MASK_SRC_FLIP              Local  484      R(8)            8     2     1        ALC              542,547,552,553,567,575,578,579   
 MAXXGRID                   Local  476      I(4)            4           scalar                    512,513,514,565                   
 NDECREASE                  Local  488      I(4)            4           scalar                    518,523,529                       
 NINCREASE                  Local  488      I(4)            4           scalar                    517,521,527                       
 NLAT_IN                    Local  478      I(4)            4           scalar                    502,507,519,527,529,542,543,544,54
                                                                                                  6,547,551,559,564,567,568,571,574,
                                                                                                  575,577,581,587,602,615           
 NLAT_OUT                   Local  478      I(4)            4           scalar                    503,514,551,559,577,587,616,618   

Page 17          Source Listing                  HORIZ_INTERP_CONSERVE_NEW_1DX2D
2021-06-01 08:55 Symbol Table                    horiz_interp_conserve.F90

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 NLON_IN                    Local  478      I(4)            4           scalar                    502,507,542,551,559,564,567,569,57
                                                                                                  7,582,587,615                     
 NLON_OUT                   Local  478      I(4)            4           scalar                    503,514,551,559,577,587,616,618   
 NXGRID                     Local  478      I(4)            4           scalar                    551,559,577,587,595,596,597,599,60
                                                                                                  0,601,603,604,608,612,621         
 ONE_BYTE                   Local  491      I(1)            1     1     8                         496                               
 PRESENT                    Func   506                                  scalar                    506,617                           
 SIZE                       Func   479                                  scalar                    479,496,500,502,503,507,535,536,54
                                                                                                  9,555,556,618                     
 TRANSFER                   Func   496                                  scalar                    496                               
 VERBOSE                    Dummy  466      I(4)            4           scalar   ARG,IN                                             
 WORDSZ                     Local  490      I(4)            4           scalar                    496,497                           
 XGRID_AREA                 Local  481      R(8)            8     1     1        ALC              514,552,560,578,588,609,613,626   


TYPE COMPONENTS/COMMON VARIABLES

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 HORIZ_INTERP_TYPE.AREA_FRAC_DST                                                                                           ...
                            R(8)            8     2040     1     1        PTR              597,613,622,706,721,730,810,825,83 
                                                                                           5,1076,1120                        
 HORIZ_INTERP_TYPE.I_DST    I(4)            4     1896     1     1        PTR              596,603,609,613,622,705,711,717,72 
                                                                                           1,730,809,815,821,825,835,1075,111 
                                                                                           8                                  
 HORIZ_INTERP_TYPE.I_SRC    I(4)            4     1752     1     1        PTR              595,600,704,709,808,813,1074,1116  
 HORIZ_INTERP_TYPE.J_DST    I(4)            4     1968     1     1        PTR              596,604,609,613,622,705,712,717,72 
                                                                                           1,730,809,816,821,825,835,1075,111 
                                                                                           9                                  
 HORIZ_INTERP_TYPE.J_SRC    I(4)            4     1824     1     1        PTR              595,601,602,704,710,808,814,1074,1 
                                                                                           117                                
 HORIZ_INTERP_TYPE.NXGRID   I(4)            4     1744           scalar                    599,708,812,1073                   

Page 18          Source Listing                  HORIZ_INTERP_CONSERVE_NEW_1DX2D
2021-06-01 08:55                                 horiz_interp_conserve.F90

    629 
    630 !#######################################################################
    631 !<PUBLICROUTINE INTERFACE="horiz_interp_conserve_new">
    632   subroutine horiz_interp_conserve_new_2dx1d ( Interp, lon_in, lat_in, lon_out, lat_out, &
    633                                                mask_in, mask_out, verbose)
    634     type(horiz_interp_type),        intent(inout) :: Interp
    635     real, intent(in),              dimension(:,:) :: lon_in , lat_in
    636     real, intent(in),              dimension(:)   :: lon_out, lat_out
    637     real, intent(in),    optional, dimension(:,:) :: mask_in
    638     real, intent(inout), optional, dimension(:,:) :: mask_out
    639     integer, intent(in), optional                 :: verbose
    640 
    641 !</PUBLICROUTINE>
    642 
    643     integer :: create_xgrid_2DX1D_order1, get_maxxgrid, maxxgrid
    644     integer :: create_xgrid_great_circle
    645     integer :: nlon_in, nlat_in, nlon_out, nlat_out, nxgrid, i, j
    646     integer, allocatable, dimension(:)   :: i_src, j_src, i_dst, j_dst
    647     real,    allocatable, dimension(:,:) :: dst_area
    648     real(8), dimension(size(lon_in,1)-1, size(lon_in,2)-1) :: mask_src
    649     real(8), allocatable, dimension(:)   :: xgrid_area, clon, clat
    650     real(8), allocatable, dimension(:)   :: lon_out_r8, lat_out_r8
    651     real(8), allocatable, dimension(:,:) :: lon_in_r8, lat_in_r8
    652     real(8), allocatable, dimension(:,:) :: lon_dst, lat_dst
    653     integer :: wordsz
    654     integer(kind=1) :: one_byte(8)
    655 
    656     if(.not. module_is_initialized) call mpp_error(FATAL, &
    657          'horiz_interp_conserve_new_2dx1d: horiz_interp_conserve_init is not called')
    658 
    659     wordsz=size(transfer(lon_in(1,1), one_byte))
    660     if(wordsz .NE. 8) call mpp_error(FATAL, &
    661          'horiz_interp_conserve_new_2dx1d: currently only support 64-bit real, contact developer')
    662 
    663     if( (size(lon_in,1) .NE. size(lat_in,1)) .OR. (size(lon_in,2) .NE. size(lat_in,2)) )  &
    664         call mpp_error(FATAL, 'horiz_interp_conserve_mod: size mismatch between lon_in and lat_in')
    665     nlon_in  = size(lon_in,1)   - 1;  nlat_in  = size(lon_in,2)   - 1
    666     nlon_out = size(lon_out(:)) - 1;  nlat_out = size(lat_out(:)) - 1
    667 
    668     mask_src = 1.
    669     if(present(mask_in)) then
    670        if( (size(mask_in,1) .NE. nlon_in) .OR. (size(mask_in,2) .NE. nlat_in)) call mpp_error(FATAL, &
    671          'horiz_interp_conserve_mod: size mismatch between mask_in and lon_in/lat_in')
    672        mask_src = mask_in
    673     end if
    674 
    675     maxxgrid = get_maxxgrid()
    676     allocate(i_src(maxxgrid), j_src(maxxgrid), i_dst(maxxgrid), j_dst(maxxgrid) )
    677     allocate( xgrid_area(maxxgrid), dst_area(nlon_out, nlat_out) )
    678 
    679     if( .not. great_circle_algorithm ) then
    680        allocate(lon_out_r8(size(lon_out)))
    681        allocate(lat_out_r8(size(lat_out)))
    682        lon_out_r8 = lon_out
    683        lat_out_r8 = lat_out
    684        nxgrid = create_xgrid_2DX1D_order1(nlon_in, nlat_in, nlon_out, nlat_out, lon_in, lat_in, lon_out, lat_out, &
    685                                           mask_src, i_src, j_src, i_dst, j_dst, xgrid_area)

Page 19          Source Listing                  HORIZ_INTERP_CONSERVE_NEW_2DX1D
2021-06-01 08:55                                 horiz_interp_conserve.F90

    686        deallocate(lon_out_r8,lat_out_r8)
    687     else
    688        allocate(lon_in_r8(size(lon_in,1),size(lon_in,2)))
    689        allocate(lat_in_r8(size(lat_in,1),size(lat_in,2)))
    690        lon_in_r8 = lon_in
    691        lat_in_r8 = lat_in
    692        allocate(lon_dst(nlon_out+1, nlat_out+1), lat_dst(nlon_out+1, nlat_out+1) )
    693        allocate(clon(maxxgrid), clat(maxxgrid))
    694        do j = 1, nlat_out+1
    695           do i = 1, nlon_out+1
    696              lon_dst(i,j) = lon_out(i)
    697              lat_dst(i,j) = lat_out(j)
    698           enddo
    699        enddo
    700        nxgrid =  create_xgrid_great_circle(nlon_in, nlat_in, nlon_out, nlat_out, lon_in_r8, lat_in_r8, lon_dst, lat_dst, &
    701                                           mask_src, i_src, j_src, i_dst, j_dst, xgrid_area, clon, clat)
    702        deallocate(lon_in_r8, lat_in_r8, lon_dst, lat_dst, clon, clat)
    703     endif
    704     allocate(Interp%i_src(nxgrid), Interp%j_src(nxgrid) )
    705     allocate(Interp%i_dst(nxgrid), Interp%j_dst(nxgrid) )
    706     allocate(Interp%area_frac_dst(nxgrid) )
    707     Interp%version = 2
    708     Interp%nxgrid   = nxgrid
    709     Interp%i_src = i_src(1:nxgrid)+1 ! in C, the starting index is 0
    710     Interp%j_src = j_src(1:nxgrid)+1
    711     Interp%i_dst = i_dst(1:nxgrid)+1
    712     Interp%j_dst = j_dst(1:nxgrid)+1
    713 
    714 ! sum over exchange grid area to get destination grid area
    715     dst_area = 0.
    716     do i = 1, nxgrid
    717        dst_area(Interp%i_dst(i), Interp%j_dst(i)) = dst_area(Interp%i_dst(i), Interp%j_dst(i)) + xgrid_area(i)
    718     end do
    719 
    720     do i = 1, nxgrid
    721        Interp%area_frac_dst(i) = xgrid_area(i)/dst_area(Interp%i_dst(i), Interp%j_dst(i) )
    722     end do
    723     Interp%nlon_src = nlon_in;  Interp%nlat_src = nlat_in
    724     Interp%nlon_dst = nlon_out; Interp%nlat_dst = nlat_out
    725     if(present(mask_out)) then
    726        if( (size(mask_out,1) .NE. nlon_out) .OR. (size(mask_out,2) .NE. nlat_out) ) call mpp_error(FATAL, &
    727          'horiz_interp_conserve_mod: size mismatch between mask_out and lon_out/lat_out')
    728        mask_out = 0.0
    729        do i = 1, nxgrid
    730           mask_out(Interp%i_dst(i),Interp%j_dst(i)) = mask_out(Interp%i_dst(i),Interp%j_dst(i)) + Interp%area_frac_dst(i)
    731        end do
    732     end if
    733 
    734     deallocate(i_src, j_src, i_dst, j_dst, xgrid_area, dst_area)
    735 
    736   end subroutine horiz_interp_conserve_new_2dx1d

Page 20          Source Listing                  HORIZ_INTERP_CONSERVE_NEW_2DX1D
2021-06-01 08:55 Entry Points                    horiz_interp_conserve.F90



ENTRY POINTS

  Name                                                                     
                                                                           
 horiz_interp_conserve_mod_mp_horiz_interp_conserve_new_2dx1d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 CLAT                       Local  649      R(8)            8     1     1        ALC              693,701,702                       
 CLON                       Local  649      R(8)            8     1     1        ALC              693,701,702                       
 CREATE_XGRID_2DX1D_ORDER1  Func   643      I(4)            4           scalar                    684                               
 CREATE_XGRID_GREAT_CIRCLE  Func   644      I(4)            4           scalar                    700                               
 DST_AREA                   Local  647      R(8)            8     2     1        ALC              677,715,717,721,734               
 GET_MAXXGRID               Func   643      I(4)            4           scalar                    675                               
 HORIZ_INTERP_CONSERVE_NEW_                                                                                                         
 2DX1D                      Subr   632                                           PRIV                                               
 I                          Local  645      I(4)            4           scalar                    695,696,697,716,717,720,721,729,73
                                                                                                  0                                 
 INTERP                     Dummy  632      HORIZ_INTERP_TYPE                                                                       
                                                            2208        scalar   ARG,INOUT        704,705,706,707,708,709,710,711,71
                                                                                                  2,717,721,723,724,730             
 I_DST                      Local  646      I(4)            4     1     1        ALC              676,685,701,711,734               
 I_SRC                      Local  646      I(4)            4     1     1        ALC              676,685,701,709,734               
 J                          Local  645      I(4)            4           scalar                    694,696,697                       
 J_DST                      Local  646      I(4)            4     1     1        ALC              676,685,701,712,734               
 J_SRC                      Local  646      I(4)            4     1     1        ALC              676,685,701,710,734               
 LAT_DST                    Local  652      R(8)            8     2     1        ALC              692,697,700,702                   
 LAT_IN                     Dummy  632      R(8)            8     2     1        ARG,IN           663,684,689,691                   
 LAT_IN_R8                  Local  651      R(8)            8     2     1        ALC              689,691,700,702                   
 LAT_OUT                    Dummy  632      R(8)            8     1     1        ARG,IN           666,681,683,684,697               
 LAT_OUT_R8                 Local  650      R(8)            8     1     1        ALC              681,683,686                       
 LON_DST                    Local  652      R(8)            8     2     1        ALC              692,696,700,702                   
 LON_IN                     Dummy  632      R(8)            8     2     1        ARG,IN           648,659,663,665,684,688,690       
 LON_IN_R8                  Local  651      R(8)            8     2     1        ALC              688,690,700,702                   
 LON_OUT                    Dummy  632      R(8)            8     1     1        ARG,IN           666,680,682,684,696               
 LON_OUT_R8                 Local  650      R(8)            8     1     1        ALC              680,682,686                       
 MASK_IN                    Dummy  633      R(8)            8     2     1        ARG,IN           669,670,672                       
 MASK_OUT                   Dummy  633      R(8)            8     2     1        ARG,INOUT        725,726,728,730                   
 MASK_SRC                   Local  648      R(8)            8     2     0                         668,672,685,701                   
 MAXXGRID                   Local  643      I(4)            4           scalar                    675,676,677,693                   
 NLAT_IN                    Local  645      I(4)            4           scalar                    665,670,684,700,723               
 NLAT_OUT                   Local  645      I(4)            4           scalar                    666,677,684,692,694,700,724,726   
 NLON_IN                    Local  645      I(4)            4           scalar                    665,670,684,700,723               
 NLON_OUT                   Local  645      I(4)            4           scalar                    666,677,684,692,695,700,724,726   
 NXGRID                     Local  645      I(4)            4           scalar                    684,700,704,705,706,708,709,710,71
                                                                                                  1,712,716,720,729                 
 ONE_BYTE                   Local  654      I(1)            1     1     8                         659                               
 PRESENT                    Func   669                                  scalar                    669,725                           
 SIZE                       Func   648                                  scalar                    648,659,663,665,666,670,680,681,68
                                                                                                  8,689,726                         
 TRANSFER                   Func   659                                  scalar                    659                               
 VERBOSE                    Dummy  633      I(4)            4           scalar   ARG,IN                                             

Page 21          Source Listing                  HORIZ_INTERP_CONSERVE_NEW_2DX1D
2021-06-01 08:55 Symbol Table                    horiz_interp_conserve.F90

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 WORDSZ                     Local  653      I(4)            4           scalar                    659,660                           
 XGRID_AREA                 Local  649      R(8)            8     1     1        ALC              677,685,701,717,721,734           

Page 22          Source Listing                  HORIZ_INTERP_CONSERVE_NEW_2DX1D
2021-06-01 08:55                                 horiz_interp_conserve.F90

    737 
    738 !#######################################################################
    739 !<PUBLICROUTINE INTERFACE="horiz_interp_conserve_new">
    740   subroutine horiz_interp_conserve_new_2dx2d ( Interp, lon_in, lat_in, lon_out, lat_out, &
    741                                                mask_in, mask_out, verbose)
    742     type(horiz_interp_type),        intent(inout) :: Interp
    743     real, intent(in),              dimension(:,:) :: lon_in , lat_in
    744     real, intent(in),              dimension(:,:) :: lon_out, lat_out
    745     real, intent(in),    optional, dimension(:,:) :: mask_in
    746     real, intent(inout), optional, dimension(:,:) :: mask_out
    747     integer, intent(in), optional                 :: verbose
    748 !</PUBLICROUTINE>
    749 
    750     integer :: create_xgrid_2DX2D_order1, get_maxxgrid, maxxgrid
    751     integer :: create_xgrid_great_circle
    752     integer :: nlon_in, nlat_in, nlon_out, nlat_out, nxgrid, i
    753     integer, allocatable, dimension(:)   :: i_src, j_src, i_dst, j_dst
    754     real(8), dimension(size(lon_in,1)-1, size(lon_in,2)-1) :: mask_src
    755     real(8), allocatable, dimension(:)   :: xgrid_area, clon, clat
    756     real(8), allocatable, dimension(:,:) :: dst_area
    757     real(8), allocatable, dimension(:,:) :: lon_in_r8, lat_in_r8
    758     real(8), allocatable, dimension(:,:) :: lon_out_r8, lat_out_r8
    759     integer :: wordsz
    760     integer(kind=1) :: one_byte(8)
    761 
    762     if(.not. module_is_initialized) call mpp_error(FATAL, &
    763          'horiz_interp_conserve_new_2dx2d: horiz_interp_conserve_init is not called')
    764 
    765     wordsz=size(transfer(lon_in(1,1), one_byte))
    766     if(wordsz .NE. 4 .AND. wordsz .NE. 8) call mpp_error(FATAL, &
    767          'horiz_interp_conserve_new_2dx2d: wordsz should be 4 or 8')
    768 
    769     if( (size(lon_in,1) .NE. size(lat_in,1)) .OR. (size(lon_in,2) .NE. size(lat_in,2)) )  &
    770         call mpp_error(FATAL, 'horiz_interp_conserve_mod: size mismatch between lon_in and lat_in')
    771     if( (size(lon_out,1) .NE. size(lat_out,1)) .OR. (size(lon_out,2) .NE. size(lat_out,2)) )  &
    772         call mpp_error(FATAL, 'horiz_interp_conserve_mod: size mismatch between lon_out and lat_out')
    773     nlon_in  = size(lon_in,1)  - 1;  nlat_in  = size(lon_in,2)  - 1
    774     nlon_out = size(lon_out,1) - 1;  nlat_out = size(lon_out,2) - 1
    775 
    776     mask_src = 1.
    777     if(present(mask_in)) then
    778        if( (size(mask_in,1) .NE. nlon_in) .OR.  (size(mask_in,2) .NE. nlat_in)) call mpp_error(FATAL, &
    779          'horiz_interp_conserve_mod: size mismatch between mask_in and lon_in/lat_in')
    780        mask_src = mask_in
    781     end if
    782 
    783     maxxgrid = get_maxxgrid()
    784     allocate(i_src(maxxgrid), j_src(maxxgrid), i_dst(maxxgrid), j_dst(maxxgrid) )
    785     allocate( xgrid_area(maxxgrid), dst_area(nlon_out, nlat_out) )
    786 
    787     allocate(lon_in_r8(size(lon_in,1),size(lon_in,2)))
    788     allocate(lat_in_r8(size(lat_in,1),size(lat_in,2)))
    789     allocate(lon_out_r8(size(lon_out,1),size(lon_out,2)))
    790     allocate(lat_out_r8(size(lat_out,1),size(lat_out,2)))
    791     lon_in_r8 = lon_in
    792     lat_in_r8 = lat_in
    793     lon_out_r8 = lon_out

Page 23          Source Listing                  HORIZ_INTERP_CONSERVE_NEW_2DX2D
2021-06-01 08:55                                 horiz_interp_conserve.F90

    794     lat_out_r8 = lat_out
    795 
    796     if( .not. great_circle_algorithm ) then
    797        nxgrid = create_xgrid_2DX2D_order1(nlon_in, nlat_in, nlon_out, nlat_out, lon_in_r8, lat_in_r8, lon_out_r8, lat_out_r8
    797 , &
    798                                        mask_src, i_src, j_src, i_dst, j_dst, xgrid_area)
    799     else
    800        allocate(clon(maxxgrid), clat(maxxgrid))
    801        nxgrid =  create_xgrid_great_circle(nlon_in, nlat_in, nlon_out, nlat_out, lon_in_r8, lat_in_r8, lon_out_r8, lat_out_r
    801 8, &
    802                                           mask_src, i_src, j_src, i_dst, j_dst, xgrid_area, clon, clat)
    803        deallocate(clon, clat)
    804     endif
    805 
    806     deallocate(lon_in_r8, lat_in_r8, lon_out_r8, lat_out_r8)
    807 
    808     allocate(Interp%i_src(nxgrid), Interp%j_src(nxgrid) )
    809     allocate(Interp%i_dst(nxgrid), Interp%j_dst(nxgrid) )
    810     allocate(Interp%area_frac_dst(nxgrid) )
    811     Interp%version = 2
    812     Interp%nxgrid   = nxgrid
    813     Interp%i_src = i_src(1:nxgrid)+1 ! in C, the starting index is 0
    814     Interp%j_src = j_src(1:nxgrid)+1
    815     Interp%i_dst = i_dst(1:nxgrid)+1
    816     Interp%j_dst = j_dst(1:nxgrid)+1
    817 
    818 ! sum over exchange grid area to get destination grid area
    819     dst_area = 0.
    820     do i = 1, nxgrid
    821        dst_area(Interp%i_dst(i), Interp%j_dst(i)) = dst_area(Interp%i_dst(i), Interp%j_dst(i)) + xgrid_area(i)
    822     end do
    823 
    824     do i = 1, nxgrid
    825        Interp%area_frac_dst(i) = xgrid_area(i)/dst_area(Interp%i_dst(i), Interp%j_dst(i) )
    826     end do
    827 
    828     Interp%nlon_src = nlon_in;  Interp%nlat_src = nlat_in
    829     Interp%nlon_dst = nlon_out; Interp%nlat_dst = nlat_out
    830     if(present(mask_out)) then
    831        if( (size(mask_out,1) .NE. nlon_out) .OR. (size(mask_out,2) .NE. nlat_out) ) call mpp_error(FATAL, &
    832          'horiz_interp_conserve_mod: size mismatch between mask_out and lon_out/lat_out')
    833        mask_out = 0.0
    834        do i = 1, nxgrid
    835           mask_out(Interp%i_dst(i),Interp%j_dst(i)) = mask_out(Interp%i_dst(i),Interp%j_dst(i)) + Interp%area_frac_dst(i)
    836        end do
    837     end if
    838 
    839     deallocate(i_src, j_src, i_dst, j_dst, xgrid_area, dst_area )
    840 
    841   end subroutine horiz_interp_conserve_new_2dx2d

Page 24          Source Listing                  HORIZ_INTERP_CONSERVE_NEW_2DX2D
2021-06-01 08:55 Entry Points                    horiz_interp_conserve.F90



ENTRY POINTS

  Name                                                                     
                                                                           
 horiz_interp_conserve_mod_mp_horiz_interp_conserve_new_2dx2d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 CLAT                       Local  755      R(8)            8     1     1        ALC              800,802,803                       
 CLON                       Local  755      R(8)            8     1     1        ALC              800,802,803                       
 CREATE_XGRID_2DX2D_ORDER1  Func   750      I(4)            4           scalar                    797                               
 CREATE_XGRID_GREAT_CIRCLE  Func   751      I(4)            4           scalar                    801                               
 DST_AREA                   Local  756      R(8)            8     2     1        ALC              785,819,821,825,839               
 GET_MAXXGRID               Func   750      I(4)            4           scalar                    783                               
 HORIZ_INTERP_CONSERVE_NEW_                                                                                                         
 2DX2D                      Subr   740                                           PRIV                                               
 I                          Local  752      I(4)            4           scalar                    820,821,824,825,834,835           
 INTERP                     Dummy  740      HORIZ_INTERP_TYPE                                                                       
                                                            2208        scalar   ARG,INOUT        808,809,810,811,812,813,814,815,81
                                                                                                  6,821,825,828,829,835             
 I_DST                      Local  753      I(4)            4     1     1        ALC              784,798,802,815,839               
 I_SRC                      Local  753      I(4)            4     1     1        ALC              784,798,802,813,839               
 J_DST                      Local  753      I(4)            4     1     1        ALC              784,798,802,816,839               
 J_SRC                      Local  753      I(4)            4     1     1        ALC              784,798,802,814,839               
 LAT_IN                     Dummy  740      R(8)            8     2     1        ARG,IN           769,788,792                       
 LAT_IN_R8                  Local  757      R(8)            8     2     1        ALC              788,792,797,801,806               
 LAT_OUT                    Dummy  740      R(8)            8     2     1        ARG,IN           771,790,794                       
 LAT_OUT_R8                 Local  758      R(8)            8     2     1        ALC              790,794,797,801,806               
 LON_IN                     Dummy  740      R(8)            8     2     1        ARG,IN           754,765,769,773,787,791           
 LON_IN_R8                  Local  757      R(8)            8     2     1        ALC              787,791,797,801,806               
 LON_OUT                    Dummy  740      R(8)            8     2     1        ARG,IN           771,774,789,793                   
 LON_OUT_R8                 Local  758      R(8)            8     2     1        ALC              789,793,797,801,806               
 MASK_IN                    Dummy  741      R(8)            8     2     1        ARG,IN           777,778,780                       
 MASK_OUT                   Dummy  741      R(8)            8     2     1        ARG,INOUT        830,831,833,835                   
 MASK_SRC                   Local  754      R(8)            8     2     0                         776,780,798,802                   
 MAXXGRID                   Local  750      I(4)            4           scalar                    783,784,785,800                   
 NLAT_IN                    Local  752      I(4)            4           scalar                    773,778,797,801,828               
 NLAT_OUT                   Local  752      I(4)            4           scalar                    774,785,797,801,829,831           
 NLON_IN                    Local  752      I(4)            4           scalar                    773,778,797,801,828               
 NLON_OUT                   Local  752      I(4)            4           scalar                    774,785,797,801,829,831           
 NXGRID                     Local  752      I(4)            4           scalar                    797,801,808,809,810,812,813,814,81
                                                                                                  5,816,820,824,834                 
 ONE_BYTE                   Local  760      I(1)            1     1     8                         765                               
 PRESENT                    Func   777                                  scalar                    777,830                           
 SIZE                       Func   754                                  scalar                    754,765,769,771,773,774,778,787,78
                                                                                                  8,789,790,831                     
 TRANSFER                   Func   765                                  scalar                    765                               
 VERBOSE                    Dummy  741      I(4)            4           scalar   ARG,IN                                             
 WORDSZ                     Local  759      I(4)            4           scalar                    765,766                           
 XGRID_AREA                 Local  755      R(8)            8     1     1        ALC              785,798,802,821,825,839           

Page 25          Source Listing                  HORIZ_INTERP_CONSERVE_NEW_2DX2D
2021-06-01 08:55                                 horiz_interp_conserve.F90

    842 
    843 !########################################################################
    844 ! <SUBROUTINE NAME="horiz_interp_conserve">
    845 
    846 !   <OVERVIEW>
    847 !      Subroutine for performing the horizontal interpolation between two grids.
    848 !   </OVERVIEW>
    849 !   <DESCRIPTION>
    850 !     Subroutine for performing the horizontal interpolation between two grids.
    851 !     horiz_interp_conserve_new must be called before calling this routine.
    852 !   </DESCRIPTION>
    853 !   <TEMPLATE>
    854 !     call horiz_interp_conserve ( Interp, data_in, data_out, verbose, mask_in, mask_out)
    855 !   </TEMPLATE>
    856 !
    857 !   <IN NAME="Interp" TYPE="type(horiz_interp_type)">
    858 !     Derived-type variable containing interpolation indices and weights.
    859 !     Returned by a previous call to horiz_interp_new.
    860 !   </IN>
    861 !   <IN NAME="data_in" TYPE="real, dimension(:,:)">
    862 !      Input data on source grid.
    863 !   </IN>
    864 
    865 !   <IN NAME="verbose" TYPE="integer, optional">
    866 !      flag for the amount of print output.
    867 !               verbose = 0, no output; = 1, min,max,means; = 2, still more
    868 !   </IN>
    869 !   <IN NAME="mask_in" TYPE="real, dimension(:,:),optional">
    870 !      Input mask, must be the same size as the input data. The real value of
    871 !      mask_in must be in the range (0.,1.). Set mask_in=0.0 for data points
    872 !      that should not be used or have missing data. mask_in will be applied only
    873 !      when horiz_interp_conserve_new_1d is called. mask_in will be passed into
    874 !      horiz_interp_conserve_new_2d.
    875 !   </IN>
    876 
    877 !   <OUT NAME="data_out" TYPE="real, dimension(:,:)">
    878 !      Output data on destination grid.
    879 !   </OUT>
    880 !   <OUT NAME="mask_out" TYPE="real, dimension(:,:),optional">
    881 !      Output mask that specifies whether data was computed. mask_out will be computed only
    882 !      when horiz_interp_conserve_new_1d is called. mask_out will be computed in
    883 !      horiz_interp_conserve_new_2d.
    884 !   </OUT>
    885 
    886   subroutine horiz_interp_conserve ( Interp, data_in, data_out, verbose, &
    887        mask_in, mask_out)
    888 !-----------------------------------------------------------------------
    889     type (horiz_interp_type), intent(in) :: Interp
    890     real, intent(in),  dimension(:,:) :: data_in
    891     real, intent(out), dimension(:,:) :: data_out
    892     integer, intent(in),                   optional :: verbose
    893     real, intent(in),   dimension(:,:), optional :: mask_in
    894     real, intent(out),  dimension(:,:), optional :: mask_out
    895 
    896 !  --- error checking ---
    897     if (size(data_in,1) /= Interp%nlon_src .or. size(data_in,2) /= Interp%nlat_src) &
    898          call mpp_error(FATAL, 'horiz_interp_conserve_mod: size of input array incorrect')

Page 26          Source Listing                  HORIZ_INTERP_CONSERVE
2021-06-01 08:55                                 horiz_interp_conserve.F90

    899 
    900     if (size(data_out,1) /= Interp%nlon_dst .or. size(data_out,2) /= Interp%nlat_dst) &
    901          call mpp_error(FATAL, 'horiz_interp_conserve_mod: size of output array incorrect')
    902 
    903     select case ( Interp%version)
    904     case (1)
    905        call horiz_interp_conserve_version1(Interp, data_in, data_out, verbose, mask_in, mask_out)
    906     case (2)
    907        if(present(mask_in) .OR. present(mask_out) ) call mpp_error(FATAL,  &
    908             'horiz_interp_conserve: for version 2, mask_in and mask_out must be passed in horiz_interp_new, not in horiz_int
    908 erp')
    909        call horiz_interp_conserve_version2(Interp, data_in, data_out, verbose)
    910     end select
    911 
    912   end subroutine horiz_interp_conserve


ENTRY POINTS

  Name                                                           
                                                                 
 horiz_interp_conserve_mod_mp_horiz_interp_conserve_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 DATA_IN                    Dummy  886      R(8)            8     2     1        ARG,IN           897,905,909                       
 DATA_OUT                   Dummy  886      R(8)            8     2     1        ARG,OUT          900,905,909                       
 HORIZ_INTERP_CONSERVE      Subr   886                                                                                              
 INTERP                     Dummy  886      HORIZ_INTERP_TYPE                                                                       
                                                            2208        scalar   ARG,IN           897,900,903,905,909               
 MASK_IN                    Dummy  887      R(8)            8     2     1        ARG,IN           905,907                           
 MASK_OUT                   Dummy  887      R(8)            8     2     1        ARG,OUT          905,907                           
 PRESENT                    Func   907                                  scalar                    907                               
 SIZE                       Func   897                                  scalar                    897,900                           
 VERBOSE                    Dummy  886      I(4)            4           scalar   ARG,IN           905,909                           

Page 27          Source Listing                  HORIZ_INTERP_CONSERVE
2021-06-01 08:55                                 horiz_interp_conserve.F90

    913 ! </SUBROUTINE>
    914 
    915 !##############################################################################
    916   subroutine horiz_interp_conserve_version1 ( Interp, data_in, data_out, verbose, &
    917        mask_in, mask_out)
    918 !-----------------------------------------------------------------------
    919     type (horiz_interp_type), intent(in) :: Interp
    920     real, intent(in),  dimension(:,:) :: data_in
    921     real, intent(out), dimension(:,:) :: data_out
    922     integer, intent(in),                   optional :: verbose
    923     real, intent(in),   dimension(:,:), optional :: mask_in
    924     real, intent(out),  dimension(:,:), optional :: mask_out
    925 !----------local variables----------------------------------------------------
    926     integer :: m, n, nlon_in, nlat_in, nlon_out, nlat_out,   &
    927          miss_in, miss_out, is, ie, js, je,   &
    928          np, npass, iverbose
    929     real    :: dsum, wsum, avg_in, min_in, max_in,   &
    930          avg_out, min_out, max_out, eps, asum,   &
    931          dwtsum, wtsum, arsum, fis, fie, fjs, fje
    932 !-----------------------------------------------------------------------
    933     iverbose = 0;  if (present(verbose)) iverbose = verbose
    934 
    935     eps = epsilon(wtsum)
    936 
    937     nlon_in  = Interp%nlon_src;  nlat_in  = Interp%nlat_src
    938     nlon_out = Interp%nlon_dst; nlat_out = Interp%nlat_dst
    939 
    940     if (present(mask_in)) then
    941        if ( count(mask_in < -.0001 .or. mask_in > 1.0001) > 0 ) &
    942             call mpp_error(FATAL, 'horiz_interp_conserve_mod: input mask not between 0,1')
    943     endif
    944 
    945 !-----------------------------------------------------------------------
    946 !---- loop through output grid boxes ----
    947 
    948     data_out = 0.0
    949     do n = 1, nlat_out
    950 ! latitude window
    951 ! setup ascending latitude indices and weights
    952        if (Interp%jlat(n,1) <= Interp%jlat(n,2)) then
    953           js = Interp%jlat(n,1); je = Interp%jlat(n,2)
    954           fjs = Interp%facj(n,1); fje = Interp%facj(n,2)
    955        else
    956           js = Interp%jlat(n,2); je = Interp%jlat(n,1)
    957           fjs = Interp%facj(n,2); fje = Interp%facj(n,1)
    958        endif
    959 
    960        do m = 1, nlon_out
    961 ! longitude window
    962           is = Interp%ilon(m,1); ie = Interp%ilon(m,2)
    963           fis = Interp%faci(m,1); fie = Interp%faci(m,2)
    964           npass = 1
    965           dwtsum = 0.
    966           wtsum = 0.
    967           arsum = 0.
    968 
    969 ! wrap-around on input grid

Page 28          Source Listing                  HORIZ_INTERP_CONSERVE_VERSION1
2021-06-01 08:55                                 horiz_interp_conserve.F90

    970 ! sum using 2 passes (pass 1: end of input grid)
    971           if ( ie < is ) then
    972              ie = nlon_in
    973              fie = 1.0
    974              npass = 2
    975           endif
    976 
    977           do np = 1, npass
    978 ! pass 2: beginning of input grid
    979              if ( np == 2 ) then
    980                 is = 1
    981                 fis = 1.0
    982                 ie = Interp%ilon(m,2)
    983                 fie = Interp%faci(m,2)
    984              endif
    985 
    986 ! summing data*weight and weight for single grid point
    987              if (present(mask_in)) then
    988                 call data_sum ( data_in(is:ie,js:je), Interp%area_src(is:ie,js:je), &
    989                      fis, fie, fjs,fje, dwtsum, wtsum, arsum, mask_in(is:ie,js:je)  )
    990              else if( ASSOCIATED(Interp%mask_in) ) then
    991                 call data_sum ( data_in(is:ie,js:je), Interp%area_src(is:ie,js:je), &
    992                      fis, fie, fjs,fje, dwtsum, wtsum, arsum, Interp%mask_in(is:ie,js:je)  )
    993              else
    994                 call data_sum ( data_in(is:ie,js:je), Interp%area_src(is:ie,js:je), &
    995                      fis, fie, fjs,fje,  dwtsum, wtsum, arsum    )
    996              endif
    997           enddo
    998 
    999           if (wtsum > eps) then
   1000              data_out(m,n) = dwtsum/wtsum
   1001              if (present(mask_out)) mask_out(m,n) = wtsum/arsum
   1002           else
   1003              data_out(m,n) = 0.
   1004              if (present(mask_out)) mask_out(m,n) = 0.0
   1005           endif
   1006 
   1007        enddo
   1008     enddo
   1009 
   1010 !***********************************************************************
   1011 ! compute statistics: minimum, maximum, and mean
   1012 !-----------------------------------------------------------------------
   1013 
   1014     if (iverbose > 0) then
   1015 
   1016 ! compute statistics of input data
   1017 
   1018        call stats(data_in, Interp%area_src, asum, dsum, wsum, min_in, max_in, miss_in, mask_in)
   1019 ! diagnostic messages
   1020 ! on the root_pe, we can calculate the global mean, minimum and maximum.
   1021        if(pe == root_pe) then
   1022           if (wsum > 0.0) then
   1023              avg_in=dsum/wsum
   1024           else
   1025              print *, 'horiz_interp stats: input area equals zero '
   1026              avg_in=0.0

Page 29          Source Listing                  HORIZ_INTERP_CONSERVE_VERSION1
2021-06-01 08:55                                 horiz_interp_conserve.F90

   1027           endif
   1028           if (iverbose > 1) print '(2f16.11)', 'global sum area_in  = ',  asum, wsum
   1029        endif
   1030 
   1031 ! compute statistics of output data
   1032        call stats(data_out, Interp%area_dst, asum, dsum, wsum, min_out, max_out, miss_out, mask_out)
   1033 ! diagnostic messages
   1034        if(pe == root_pe) then
   1035           if (wsum > 0.0) then
   1036              avg_out=dsum/wsum
   1037           else
   1038              print *, 'horiz_interp stats: output area equals zero '
   1039              avg_out=0.0
   1040           endif
   1041           if (iverbose > 1) print '(2f16.11)', 'global sum area_out = ',  asum, wsum
   1042        endif
   1043 !---- output statistics ----
   1044 ! the global mean, min and max are calculated on the root pe.
   1045        if(pe == root_pe) then
   1046           write (*,900)
   1047           write (*,901)  min_in ,max_in ,avg_in
   1048           if (present(mask_in))  write (*,903)  miss_in
   1049           write (*,902)  min_out,max_out,avg_out
   1050           if (present(mask_out)) write (*,903)  miss_out
   1051        endif
   1052 
   1053 900    format (/,1x,10('-'),' output from horiz_interp ',10('-'))
   1054 901    format ('  input:  min=',f16.9,'  max=',f16.9,'  avg=',f22.15)
   1055 902    format (' output:  min=',f16.9,'  max=',f16.9,'  avg=',f22.15)
   1056 903    format ('          number of missing points = ',i6)
   1057 
   1058     endif
   1059 
   1060 !-----------------------------------------------------------------------
   1061   end subroutine horiz_interp_conserve_version1

Page 30          Source Listing                  HORIZ_INTERP_CONSERVE_VERSION1
2021-06-01 08:55 Entry Points                    horiz_interp_conserve.F90



ENTRY POINTS

  Name                                                                    
                                                                          
 horiz_interp_conserve_mod_mp_horiz_interp_conserve_version1_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 900                        Label  1053                                                           1046                              
 901                        Label  1054                                                           1047                              
 902                        Label  1055                                                           1049                              
 903                        Label  1056                                                           1048,1050                         
 ARSUM                      Local  931      R(8)            8           scalar                    967,989,992,995,1001              
 ASSOCIATED                 Func   990                                  scalar                    990                               
 ASUM                       Local  930      R(8)            8           scalar                    1018,1028,1032,1041               
 AVG_IN                     Local  929      R(8)            8           scalar                    1023,1026,1047                    
 AVG_OUT                    Local  930      R(8)            8           scalar                    1036,1039,1049                    
 COUNT                      Func   941                                  scalar                    941                               
 DATA_IN                    Dummy  916      R(8)            8     2     1        ARG,IN           988,991,994,1018                  
 DATA_OUT                   Dummy  916      R(8)            8     2     1        ARG,OUT          948,1000,1003,1032                
 DSUM                       Local  929      R(8)            8           scalar                    1018,1023,1032,1036               
 DWTSUM                     Local  931      R(8)            8           scalar                    965,989,992,995,1000              
 EPS                        Local  930      R(8)            8           scalar                    935,999                           
 EPSILON                    Func   935                                  scalar                    935                               
 FIE                        Local  931      R(8)            8           scalar                    963,973,983,989,992,995           
 FIS                        Local  931      R(8)            8           scalar                    963,981,989,992,995               
 FJE                        Local  931      R(8)            8           scalar                    954,957,989,992,995               
 FJS                        Local  931      R(8)            8           scalar                    954,957,989,992,995               
 HORIZ_INTERP_CONSERVE_VERS                                                                                                         
 ION1                       Subr   916                                                            905                               
 IE                         Local  927      I(4)            4           scalar                    962,971,972,982,988,989,991,992,99
                                                                                                  4                                 
 INTERP                     Dummy  916      HORIZ_INTERP_TYPE                                                                       
                                                            2208        scalar   ARG,IN           937,938,952,953,954,956,957,962,96
                                                                                                  3,982,983,988,990,991,992,994,1018
                                                                                                  ,1032                             
 IS                         Local  927      I(4)            4           scalar                    962,971,980,988,989,991,992,994   
 IVERBOSE                   Local  928      I(4)            4           scalar                    933,1014,1028,1041                
 JE                         Local  927      I(4)            4           scalar                    953,956,988,989,991,992,994       
 JS                         Local  927      I(4)            4           scalar                    953,956,988,989,991,992,994       
 M                          Local  926      I(4)            4           scalar                    960,962,963,982,983,1000,1001,1003
                                                                                                  ,1004                             
 MASK_IN                    Dummy  917      R(8)            8     2     1        ARG,IN           940,941,987,989,1018,1048         
 MASK_OUT                   Dummy  917      R(8)            8     2     1        ARG,OUT          1001,1004,1032,1050               
 MAX_IN                     Local  929      R(8)            8           scalar                    1018,1047                         
 MAX_OUT                    Local  930      R(8)            8           scalar                    1032,1049                         
 MIN_IN                     Local  929      R(8)            8           scalar                    1018,1047                         
 MIN_OUT                    Local  930      R(8)            8           scalar                    1032,1049                         
 MISS_IN                    Local  927      I(4)            4           scalar                    1018,1048                         
 MISS_OUT                   Local  927      I(4)            4           scalar                    1032,1050                         
 N                          Local  926      I(4)            4           scalar                    949,952,953,954,956,957,1000,1001,
                                                                                                  1003,1004                         

Page 31          Source Listing                  HORIZ_INTERP_CONSERVE_VERSION1
2021-06-01 08:55 Symbol Table                    horiz_interp_conserve.F90

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 NLAT_IN                    Local  926      I(4)            4           scalar                    937                               
 NLAT_OUT                   Local  926      I(4)            4           scalar                    938,949                           
 NLON_IN                    Local  926      I(4)            4           scalar                    937,972                           
 NLON_OUT                   Local  926      I(4)            4           scalar                    938,960                           
 NP                         Local  928      I(4)            4           scalar                    977,979                           
 NPASS                      Local  928      I(4)            4           scalar                    964,974,977                       
 PRESENT                    Func   933                                  scalar                    933,940,987,1001,1004,1048,1050   
 VERBOSE                    Dummy  916      I(4)            4           scalar   ARG,IN           933                               
 WSUM                       Local  929      R(8)            8           scalar                    1018,1022,1023,1028,1032,1035,1036
                                                                                                  ,1041                             
 WTSUM                      Local  931      R(8)            8           scalar                    935,966,989,992,995,999,1000,1001 


TYPE COMPONENTS/COMMON VARIABLES

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 HORIZ_INTERP_TYPE.MASK_IN  R(8)            8     2112     2     1        PTR              990,992                            

Page 32          Source Listing                  HORIZ_INTERP_CONSERVE_VERSION1
2021-06-01 08:55                                 horiz_interp_conserve.F90

   1062 
   1063 !#############################################################################
   1064   subroutine horiz_interp_conserve_version2 ( Interp, data_in, data_out, verbose )
   1065 !-----------------------------------------------------------------------
   1066     type (horiz_interp_type), intent(in) :: Interp
   1067     real,    intent(in),  dimension(:,:) :: data_in
   1068     real,    intent(out), dimension(:,:) :: data_out
   1069     integer, intent(in),        optional :: verbose
   1070     integer :: i, i_src, j_src, i_dst, j_dst
   1071 
   1072     data_out = 0.0
   1073     do i = 1, Interp%nxgrid
   1074        i_src = Interp%i_src(i); j_src = Interp%j_src(i)
   1075        i_dst = Interp%i_dst(i); j_dst = Interp%j_dst(i)
   1076        data_out(i_dst, j_dst) = data_out(i_dst, j_dst) + data_in(i_src,j_src)*Interp%area_frac_dst(i)
   1077     end do
   1078 
   1079   end subroutine horiz_interp_conserve_version2


ENTRY POINTS

  Name                                                                    
                                                                          
 horiz_interp_conserve_mod_mp_horiz_interp_conserve_version2_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 DATA_IN                    Dummy  1064     R(8)            8     2     1        ARG,IN           1076                              
 DATA_OUT                   Dummy  1064     R(8)            8     2     1        ARG,OUT          1072,1076                         
 HORIZ_INTERP_CONSERVE_VERS                                                                                                         
 ION2                       Subr   1064                                                           909                               
 I                          Local  1070     I(4)            4           scalar                    1073,1074,1075,1076               
 INTERP                     Dummy  1064     HORIZ_INTERP_TYPE                                                                       
                                                            2208        scalar   ARG,IN           1073,1074,1075,1076               
 I_DST                      Local  1070     I(4)            4           scalar                    1075,1076                         
 I_SRC                      Local  1070     I(4)            4           scalar                    1074,1076                         
 J_DST                      Local  1070     I(4)            4           scalar                    1075,1076                         
 J_SRC                      Local  1070     I(4)            4           scalar                    1074,1076                         
 VERBOSE                    Dummy  1064     I(4)            4           scalar   ARG,IN                                             

Page 33          Source Listing                  HORIZ_INTERP_CONSERVE_VERSION2
2021-06-01 08:55                                 horiz_interp_conserve.F90

   1080 
   1081 !#######################################################################
   1082 ! <SUBROUTINE NAME="horiz_interp_conserve_del">
   1083 
   1084 !   <OVERVIEW>
   1085 !     Deallocates memory used by "horiz_interp_type" variables.
   1086 !     Must be called before reinitializing with horiz_interp_new.
   1087 !   </OVERVIEW>
   1088 !   <DESCRIPTION>
   1089 !     Deallocates memory used by "horiz_interp_type" variables.
   1090 !     Must be called before reinitializing with horiz_interp_new.
   1091 !   </DESCRIPTION>
   1092 !   <TEMPLATE>
   1093 !     call horiz_interp_conserve_del ( Interp )
   1094 !   </TEMPLATE>
   1095 
   1096 !   <INOUT NAME="Interp" TYPE="horiz_interp_type">
   1097 !     A derived-type variable returned by previous call
   1098 !     to horiz_interp_new. The input variable must have
   1099 !     allocated arrays. The returned variable will contain
   1100 !     deallocated arrays.
   1101 !   </INOUT>
   1102 
   1103   subroutine horiz_interp_conserve_del ( Interp )
   1104 
   1105     type (horiz_interp_type), intent(inout) :: Interp
   1106 
   1107     select case(Interp%version)
   1108     case (1)
   1109        if(associated(Interp%area_src)) deallocate(Interp%area_src)
   1110        if(associated(Interp%area_dst)) deallocate(Interp%area_dst)
   1111        if(associated(Interp%facj))     deallocate(Interp%facj)
   1112        if(associated(Interp%jlat))     deallocate(Interp%jlat)
   1113        if(associated(Interp%faci))     deallocate(Interp%faci)
   1114        if(associated(Interp%ilon))     deallocate(Interp%ilon)
   1115     case (2)
   1116        if(associated(Interp%i_src)) deallocate(Interp%i_src)
   1117        if(associated(Interp%j_src)) deallocate(Interp%j_src)
   1118        if(associated(Interp%i_dst)) deallocate(Interp%i_dst)
   1119        if(associated(Interp%j_dst)) deallocate(Interp%j_dst)
   1120        if(associated(Interp%area_frac_dst)) deallocate(Interp%area_frac_dst)
   1121     end select
   1122 
   1123   end subroutine horiz_interp_conserve_del

Page 34          Source Listing                  HORIZ_INTERP_CONSERVE_DEL
2021-06-01 08:55 Entry Points                    horiz_interp_conserve.F90



ENTRY POINTS

  Name                                                               
                                                                     
 horiz_interp_conserve_mod_mp_horiz_interp_conserve_del_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ASSOCIATED                 Func   1109                                 scalar                    1109,1110,1111,1112,1113,1114,1116
                                                                                                  ,1117,1118,1119,1120              
 HORIZ_INTERP_CONSERVE_DEL  Subr   1103                                                                                             
 INTERP                     Dummy  1103     HORIZ_INTERP_TYPE                                                                       
                                                            2208        scalar   ARG,INOUT        1107,1109,1110,1111,1112,1113,1114
                                                                                                  ,1116,1117,1118,1119,1120         

Page 35          Source Listing                  HORIZ_INTERP_CONSERVE_DEL
2021-06-01 08:55                                 horiz_interp_conserve.F90

   1124 ! </SUBROUTINE>
   1125 
   1126 !#######################################################################
   1127 !---This statistics is for conservative scheme
   1128   subroutine stats ( dat, area, asum, dsum, wsum, low, high, miss, mask )
   1129     real,    intent(in)  :: dat(:,:), area(:,:)
   1130     real,    intent(out) :: asum, dsum, wsum, low, high
   1131     integer, intent(out) :: miss
   1132     real,    intent(in), optional :: mask(:,:)
   1133 
   1134     integer :: pe, root_pe, npes, p, buffer_int(1)
   1135     real    :: buffer_real(5)
   1136 
   1137     pe = mpp_pe()
   1138     root_pe = mpp_root_pe()
   1139     npes = mpp_npes()
   1140 
   1141 ! sum data, data*area; and find min,max on each pe.
   1142 
   1143     if (present(mask)) then
   1144        asum = sum(area(:,:))
   1145        dsum = sum(area(:,:)*dat(:,:)*mask(:,:))
   1146        wsum = sum(area(:,:)*mask(:,:))
   1147        miss = count(mask(:,:) <= 0.5)
   1148        low  = minval(dat(:,:),mask=mask(:,:) > 0.5)
   1149        high = maxval(dat(:,:),mask=mask(:,:) > 0.5)
   1150     else
   1151        asum = sum(area(:,:))
   1152        dsum = sum(area(:,:)*dat(:,:))
   1153        wsum = sum(area(:,:))
   1154        miss = 0
   1155        low  = minval(dat(:,:))
   1156        high = maxval(dat(:,:))
   1157     endif
   1158 
   1159 ! other pe send local min, max, avg to the root pe and
   1160 ! root pe receive these information
   1161 
   1162     if(pe == root_pe) then
   1163        do p = 1, npes - 1
   1164 ! Force use of "scalar", integer pointer mpp interface
   1165           call mpp_recv(buffer_real(1),glen=5,from_pe=root_pe+p, tag=COMM_TAG_1)
   1166           asum = asum + buffer_real(1)
   1167           dsum = dsum + buffer_real(2)
   1168           wsum = wsum + buffer_real(3)
   1169           low  = min(low, buffer_real(4))
   1170           high = max(high, buffer_real(5))
   1171           call mpp_recv(buffer_int(1),glen=1,from_pe=root_pe+p, tag=COMM_TAG_2)
   1172           miss = miss + buffer_int(1)
   1173        enddo
   1174     else
   1175        buffer_real(1) = asum
   1176        buffer_real(2) = dsum
   1177        buffer_real(3) = wsum
   1178        buffer_real(4) = low
   1179        buffer_real(5) = high
   1180 ! Force use of "scalar", integer pointer mpp interface

Page 36          Source Listing                  STATS
2021-06-01 08:55                                 horiz_interp_conserve.F90

   1181        call mpp_send(buffer_real(1),plen=5,to_pe=root_pe, tag=COMM_TAG_1)
   1182        buffer_int(1) = miss
   1183        call mpp_send(buffer_int(1),plen=1,to_pe=root_pe, tag=COMM_TAG_2)
   1184     endif
   1185 
   1186     call mpp_sync_self()
   1187 
   1188   end subroutine stats


ENTRY POINTS

  Name                                           
                                                 
 horiz_interp_conserve_mod_mp_stats_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 AREA                       Dummy  1128     R(8)            8     2     1        ARG,IN           1144,1145,1146,1151,1152,1153     
 ASUM                       Dummy  1128     R(8)            8           scalar   ARG,OUT          1144,1151,1166,1175               
 BUFFER_INT                 Local  1134     I(4)            4     1     1                         1171,1172,1182,1183               
 BUFFER_REAL                Local  1135     R(8)            8     1     5                         1165,1166,1167,1168,1169,1170,1175
                                                                                                  ,1176,1177,1178,1179,1181         
 COMM_TAG_1                 Param  1165     I(4)            4           scalar   PRIV             142,1165,1181                     
 COMM_TAG_2                 Param  1171     I(4)            4           scalar   PRIV             142,1171,1183                     
 COUNT                      Func   1147                                 scalar                    1147                              
 DAT                        Dummy  1128     R(8)            8     2     1        ARG,IN           1145,1148,1149,1152,1155,1156     
 DSUM                       Dummy  1128     R(8)            8           scalar   ARG,OUT          1145,1152,1167,1176               
 HIGH                       Dummy  1128     R(8)            8           scalar   ARG,OUT          1149,1156,1170,1179               
 LOW                        Dummy  1128     R(8)            8           scalar   ARG,OUT          1148,1155,1169,1178               
 MASK                       Dummy  1128     R(8)            8     2     1        ARG,IN           1143,1145,1146,1147,1148,1149     
 MAX                        Func   1170                                 scalar                    1170                              
 MAXVAL                     Func   1149                                 scalar                    1149,1156                         
 MIN                        Func   1169                                 scalar                    1169                              
 MINVAL                     Func   1148                                 scalar                    1148,1155                         
 MISS                       Dummy  1128     I(4)            4           scalar   ARG,OUT          1147,1154,1172,1182               
 MPP_NPES                   Func   1139     I(4)            4           scalar   PRIV             140,1139                          
 MPP_RECV                   Local  1165                                 scalar   PRIV             140,1165,1171                     
 MPP_RECV_INT4_SCALAR       Subr   1171                                          PRIV             1171                              
 MPP_RECV_REAL8_SCALAR      Subr   1165                                          PRIV             1165                              
 MPP_SEND                   Local  1181                                 scalar   PRIV             140,1181,1183                     
 MPP_SEND_INT4_SCALAR       Subr   1183                                          PRIV             1183                              
 MPP_SEND_REAL8_SCALAR      Subr   1181                                          PRIV             1181                              
 MPP_SYNC_SELF              Subr   1186                                          PRIV             141,1186                          
 NPES                       Local  1134     I(4)            4           scalar                    1139,1163                         
 P                          Local  1134     I(4)            4           scalar                    1163,1165,1171                    
 PE                         Local  1134     I(4)            4           scalar                    1137,1162                         
 PRESENT                    Func   1143                                 scalar                    1143                              
 ROOT_PE                    Local  1134     I(4)            4           scalar                    1138,1162,1165,1171,1181,1183     
 STATS                      Subr   1128                                                           1018,1032                         
 SUM                        Func   1144                                 scalar                    1144,1145,1146,1151,1152,1153     
 WSUM                       Dummy  1128     R(8)            8           scalar   ARG,OUT          1146,1153,1168,1177               

Page 37          Source Listing                  STATS
2021-06-01 08:55                                 horiz_interp_conserve.F90

   1189 
   1190 !#######################################################################
   1191 
   1192   subroutine data_sum( data, area, facis, facie, facjs, facje,  &
   1193        dwtsum, wtsum, arsum, mask )
   1194 
   1195 !  sums up the data and weights for a single output grid box
   1196 !-----------------------------------------------------------------------
   1197     real, intent(in), dimension(:,:) :: data, area
   1198     real, intent(in)                 :: facis, facie, facjs, facje
   1199     real, intent(inout)              :: dwtsum, wtsum, arsum
   1200     real, intent(in), optional       :: mask(:,:)
   1201 
   1202 !  fac__ = fractional portion of each boundary grid box included
   1203 !          in the integral
   1204 !  dwtsum = sum(data*area*mask)
   1205 !  wtsum  = sum(area*mask)
   1206 !  arsum  = sum(area)
   1207 !-----------------------------------------------------------------------
   1208     real, dimension(size(area,1),size(area,2)) :: wt
   1209     real    :: asum
   1210     integer :: id, jd
   1211 !-----------------------------------------------------------------------
   1212 
   1213     id=size(area,1); jd=size(area,2)
   1214 
   1215     wt=area
   1216     wt( 1,:)=wt( 1,:)*facis
   1217     wt(id,:)=wt(id,:)*facie
   1218     wt(:, 1)=wt(:, 1)*facjs
   1219     wt(:,jd)=wt(:,jd)*facje
   1220 
   1221     asum = sum(wt)
   1222     arsum = arsum + asum
   1223 
   1224     if (present(mask)) then
   1225        wt = wt * mask
   1226        dwtsum = dwtsum + sum(wt*data)
   1227        wtsum =  wtsum + sum(wt)
   1228     else
   1229        dwtsum = dwtsum + sum(wt*data)
   1230        wtsum =  wtsum + asum
   1231     endif
   1232 !-----------------------------------------------------------------------
   1233 
   1234   end subroutine data_sum

Page 38          Source Listing                  DATA_SUM
2021-06-01 08:55 Entry Points                    horiz_interp_conserve.F90



ENTRY POINTS

  Name                                              
                                                    
 horiz_interp_conserve_mod_mp_data_sum_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 AREA                       Dummy  1192     R(8)            8     2     1        ARG,IN           1208,1213,1215                    
 ARSUM                      Dummy  1193     R(8)            8           scalar   ARG,INOUT        1222                              
 ASUM                       Local  1209     R(8)            8           scalar                    1221,1222,1230                    
 DATA                       Dummy  1192     R(8)            8     2     1        ARG,IN           1226,1229                         
 DATA_SUM                   Subr   1192                                                           988,991,994                       
 DWTSUM                     Dummy  1193     R(8)            8           scalar   ARG,INOUT        1226,1229                         
 FACIE                      Dummy  1192     R(8)            8           scalar   ARG,IN           1217                              
 FACIS                      Dummy  1192     R(8)            8           scalar   ARG,IN           1216                              
 FACJE                      Dummy  1192     R(8)            8           scalar   ARG,IN           1219                              
 FACJS                      Dummy  1192     R(8)            8           scalar   ARG,IN           1218                              
 ID                         Local  1210     I(4)            4           scalar                    1213,1217                         
 JD                         Local  1210     I(4)            4           scalar                    1213,1219                         
 MASK                       Dummy  1193     R(8)            8     2     1        ARG,IN           1224,1225                         
 PRESENT                    Func   1224                                 scalar                    1224                              
 SIZE                       Func   1208                                 scalar                    1208,1213                         
 SUM                        Func   1221                                 scalar                    1221,1226,1227,1229               
 WT                         Local  1208     R(8)            8     2     0                         1215,1216,1217,1218,1219,1221,1225
                                                                                                  ,1226,1227,1229                   
 WTSUM                      Dummy  1193     R(8)            8           scalar   ARG,INOUT        1227,1230                         

Page 39          Source Listing                  DATA_SUM
2021-06-01 08:55                                 horiz_interp_conserve.F90

   1235 
   1236 
   1237 !#######################################################################
   1238 
   1239 end module horiz_interp_conserve_mod


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 CONSTANTS_MOD              Module 145                                                            145                               
 FMS_MOD                    Module 143                                                            143                               
 GRID2_MOD                  Module 144                                                            144                               
 HORIZ_INTERP_CONSERVE      Subr   203                                                            203                               
 HORIZ_INTERP_CONSERVE_DEL  Subr   203                                                            203                               
 HORIZ_INTERP_CONSERVE_INIT Subr   202                                                            202                               
 HORIZ_INTERP_CONSERVE_MOD  Module 20                                                                                               
 HORIZ_INTERP_CONSERVE_NEW  Local  195                                  scalar                    203                               
 HORIZ_INTERP_TYPE_MOD      Module 146                                                            146                               
 MPP_MOD                    Module 140                                                            140,141,142                       

Page 40          Source Listing                  DATA_SUM
2021-06-01 08:55 Subprograms/Common Blocks       horiz_interp_conserve.F90



SUBPROGRAMS/COMMON BLOCKS

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 DATA_SUM                   Subr   1192                                                           988,991,994                       
 HORIZ_INTERP_CONSERVE      Subr   886                                                                                              
 HORIZ_INTERP_CONSERVE_DEL  Subr   1103                                                                                             
 HORIZ_INTERP_CONSERVE_INIT Subr   249                                                                                              
 HORIZ_INTERP_CONSERVE_MOD  Module 20                                                                                               
 HORIZ_INTERP_CONSERVE_NEW_                                                                                                         
 1DX1D                      Subr   264                                           PRIV                                               
 HORIZ_INTERP_CONSERVE_NEW_                                                                                                         
 1DX2D                      Subr   465                                           PRIV                                               
 HORIZ_INTERP_CONSERVE_NEW_                                                                                                         
 2DX1D                      Subr   632                                           PRIV                                               
 HORIZ_INTERP_CONSERVE_NEW_                                                                                                         
 2DX2D                      Subr   740                                           PRIV                                               
 HORIZ_INTERP_CONSERVE_VERS                                                                                                         
 ION1                       Subr   916                                                            905                               
 HORIZ_INTERP_CONSERVE_VERS                                                                                                         
 ION2                       Subr   1064                                                           909                               
 STATS                      Subr   1128                                                           1018,1032                         

COMPILER OPTIONS BEING USED

       -align noall                          -align nonone
       -align nocommons                      -align nodcommons
       -align noqcommons                     -align nozcommons
       -align records                        -align nosequence
       -align norec1byte                     -align norec2byte
       -align norec4byte                     -align norec8byte
       -align norec16byte                    -align norec32byte
       -align norec64byte                    -align noarray8byte
       -align noarray16byte                  -align noarray32byte
       -align noarray64byte                  -align noarray128byte
       -align noarray256byte                 -altparam
       -assume accuracy_sensitive            -assume nobscc
       -assume nobuffered_io                 -assume nobuffered_stdout
       -assume byterecl                      -assume nocontiguous_assumed_shape
       -assume nocontiguous_pointer          -assume cc_omp
       -assume nocstring                     -assume nodummy_aliases
       -assume nofpe_summary                 -assume noieee_fpe_flags
       -assume nominus0                      -assume noold_boz
       -assume old_complex_align             -assume old_unit_star
       -assume old_inquire_recl              -assume old_ldout_format
       -assume old_ldout_zero                -assume noold_logical_assign
       -assume noold_logical_ldio            -assume old_maxminloc
       -assume old_xor                       -assume noprotect_allocates
       -assume protect_constants             -assume noprotect_parens
       -assume split_common                  -assume source_include
       -assume nostd_intent_in               -assume std_minus0_rounding
       -assume nostd_mod_proc_name           -assume std_value
       -assume realloc_lhs                   -assume underscore
       -assume no2underscores                -assume norecursion
       -auto                            no   -auto_scalar

Page 41          Source Listing                  DATA_SUM
2021-06-01 08:55                                 horiz_interp_conserve.F90

  no   -bintext                              -ccdefault default
       -check noarg_temp_created             -check noassume
       -check nobounds                       -check nocontiguous
       -check noformat                       -check nooutput_conversion
       -check nooverflow                     -check nopointers
       -check noshape                        -check nostack
       -check nouninitialized                -check noudio_iostat
       -coarray-num-procs 0             no   -coarray-config-file
       -convert native                       -cross_reference
       -D __INTEL_COMPILER=1910              -D __INTEL_COMPILER_UPDATE=0
       -D __unix__                           -D __unix
       -D __linux__                          -D __linux
       -D __gnu_linux__                      -D unix
       -D linux                              -D __ELF__
       -D __x86_64                           -D __x86_64__
       -D __amd64                            -D __amd64__
       -D __INTEL_COMPILER_BUILD_DATE=20191121       -D _OPENMP=201611
       -D __INTEL_OFFLOAD                    -D __MMX__
       -D __SSE__                            -D __SSE_MATH__
       -D __SSE2__                           -D __SSE2_MATH__
       -D __pentium4                         -D __pentium4__
       -D __tune_pentium4__                  -D PACKAGE_NAME='"GFDL FMS Library"'
       -D PACKAGE_TARNAME='"FMS"'            -D PACKAGE_VERSION='"2021.02.0"'
       -D PACKAGE_STRING='"GFDL FMS Library 2021.02.0"'       -D PACKAGE_BUGREPORT='"gfdl.climate.model.info@noaa.gov"'
       -D PACKAGE_URL='"https://www.gfdl.noaa.gov/fms"'       -D PACKAGE='"FMS"'
       -D VERSION='"2021.02.0"'              -D STDC_HEADERS=1
       -D HAVE_SYS_TYPES_H=1                 -D HAVE_SYS_STAT_H=1
       -D HAVE_STDLIB_H=1                    -D HAVE_STRING_H=1
       -D HAVE_MEMORY_H=1                    -D HAVE_STRINGS_H=1
       -D HAVE_INTTYPES_H=1                  -D HAVE_STDINT_H=1
       -D HAVE_UNISTD_H=1                    -D HAVE_DLFCN_H=1
       -D LT_OBJDIR='".libs/"'               -D HAVE_MPI_H=1
       -D HAVE_NETCDF_H=1                    -D HAVE_SCHED_GETAFFINITY=1
       -D HAVE_MOD_MPI=1                     -D HAVE_MOD_NETCDF=1
       -D HAVE_CRAY_POINTER=1                -D HAVE_QUAD_PRECISION=1
       -D HAVE_INTERNAL_NML=1                -D use_netCDF=1
       -D use_libMPI=1                       -D INTERNAL_FILE_NML
       -double_size 64                  no   -d_lines
  no   -Qdyncom                              -error_limit 30
  no   -f66                             no   -f77rtl
  no   -fast                                 -fpscomp nofilesfromcmd
       -fpscomp nogeneral                    -fpscomp noioformat
       -fpscomp noldio_spacing               -fpscomp nologicals
  no   -fpconstant                           -fpe3
       -fprm nearest                         -ftz
       -fp_model noprecise                   -fp_model fast
       -fp_model nostrict                    -fp_model nosource
       -fp_model nodouble                    -fp_model noextended
       -fp_model novery_fast                 -fp_model noexcept
       -fp_model nono_except                 -fp_modbits nofp_contract
       -fp_modbits nono_fp_contract          -fp_modbits nofenv_access
       -fp_modbits nono_fenv_access          -fp_modbits nocx_limited_range
       -fp_modbits nono_cx_limited_range       -fp_modbits noprec_div
       -fp_modbits nono_prec_div             -fp_modbits noprec_sqrt
       -fp_modbits nono_prec_sqrt            -fp_modbits ftz
       -fp_modbits nono_ftz                  -fp_modbits nointrin_limited_range
       -fp_modbits nono_intrin_limited_range       -fp_modbits notrunc_compares

Page 42          Source Listing                  DATA_SUM
2021-06-01 08:55                                 horiz_interp_conserve.F90

       -fp_modbits nono_trunc_compares       -fp_modbits noieee_nan_compares
       -fp_modbits nono_ieee_nan_compares       -fp_modbits honor_f32_conversion
       -fp_modbits nono_honor_f32_conversion       -fp_modbits honor_f64_conversion
       -fp_modbits nono_honor_f64_conversion       -fp_modbits nono_x87_copy
       -fp_modbits nono_no_x87_copy          -fp_modbits noexception_semantics
       -fp_modbits nono_exception_semantics       -fp_modbits noprecise_libm_functions
       -fp_modbits nono_precise_libm_functions       -heap_arrays 0
  no   -threadprivate_compat                 -free
       -g2                                   -iface nomixed_str_len_arg
       -iface nono_mixed_str_len_arg         -init noarrays
       -init nohuge                          -init noinfinity
       -init nominus_huge                    -init nominus_infinity
       -init nominus_tiny                    -init nonan
       -init nosnan                          -init notiny
       -init nozero                     no   -intconstant
       -integer_size 32                 no   -mixed_str_len_arg
       -module ../.mods                      -names lowercase
  no   -noinclude                       no   -o
       -offload-build=host                   -openmp
       -openmp-simd                          -openmp-offload
       -O0                              no   -pad_source
       -real_size 64                    no   -recursive
       -reentrancy threaded                  -vec=simd
       -show nofullpath                      -show noinclude
       -show map                             -show options
  no   -syntax_only                     no   -threadcom
  no   -U                               no   -vms
       -w noall                              -w nonone
       -w noalignments                       -w nodeclarations
       -w noexternals                        -w nogeneral
       -w noignore_bounds                    -w noignore_loc
       -w nointerfaces                       -w noshape
       -w notruncated_source                 -w nouncalled
       -w nouninitialized                    -w nounused
       -w nousage                       no   -wrap-margins

       -includepath : /opt/netcdf/4.6.1/INTEL/include/,/opt/intel/2020/compilers_and_libraries/linux/pstl/include/,
           /opt/intel/2020/compilers_and_libraries_2020.0.166/linux/compiler/include/,.f90,./.f90,./.f90,../include/.f90,
           ./.f90,/opt/netcdf/4.6.1/INTEL/include/.f90,/opt/intel/2020/compilers_and_libraries/linux/mpi/intel64/include/.f90,
           /opt/intel/2020/compilers_and_libraries/linux/mpi/intel64/include/.f90,/opt/intel/2020/compilers_and_libraries/linux/ipp/include/.f90,
           /opt/intel/2020/compilers_and_libraries/linux/mkl/include/.f90,/opt/intel/2020/compilers_and_libraries/linux/pstl/include/.f90,
           /opt/intel/2020/compilers_and_libraries/linux/tbb/include/.f90,/opt/intel/2020/compilers_and_libraries/linux/daal/include/.f90,
           /opt/intel/2020/compilers_and_libraries_2020.0.166/linux/compiler/include/intel64/.f90,/opt/intel/2020/compilers_and_libraries_2020.0.166/linux/compiler/include/icc/.f90,
           /opt/intel/2020/compilers_and_libraries_2020.0.166/linux/compiler/include/.f90,/usr/local/include/.f90,
           /usr/lib/gcc/x86_64-redhat-linux/4.8.5/include/.f90,/usr/include/.f90,/usr/include/.f90,/usr/include/.f90
       -list filename : horiz_interp_conserve.lst
  no   -o

COMPILER: Intel(R) Fortran 19.1-1555
