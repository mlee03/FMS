Page 1           Source Listing                  REGISTER_DIAG_FIELD_SCALAR
2021-06-01 08:54                                 /tmp/ifortRcK06d.i90

      1 # 1 "diag_manager.F90"
      2 !***********************************************************************
      3 !*                   GNU Lesser General Public License
      4 !*
      5 !* This file is part of the GFDL Flexible Modeling System (FMS).
      6 !*
      7 !* FMS is free software: you can redistribute it and/or modify it under
      8 !* the terms of the GNU Lesser General Public License as published by
      9 !* the Free Software Foundation, either version 3 of the License, or (at
     10 !* your option) any later version.
     11 !*
     12 !* FMS is distributed in the hope that it will be useful, but WITHOUT
     13 !* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
     14 !* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
     15 !* for more details.
     16 !*
     17 !* You should have received a copy of the GNU Lesser General Public
     18 !* License along with FMS.  If not, see <http://www.gnu.org/licenses/>.
     19 !***********************************************************************
     20 
     21 !> @file
     22 !! @brief diag_manager_mod is a set of simple calls for parallel diagnostics
     23 !!   on distributed systems. It is geared toward the writing of data in netCDF
     24 !!   format.
     25 !! @author Matt Harrison, Giang Nong, Seth Underwood
     26 !! @email gfdl.climate.model.info@noaa.gov
     27 !!
     28 !!   <TT>diag_manager_mod</TT> provides a convenient set of interfaces for
     29 !!   writing data to disk.  It is built upon the parallel I/O interface of FMS
     30 !!   code <TT>/shared/mpp/mpp_io.F90</TT>.
     31 !!
     32 !!   A single group of calls to the <TT>diag_manager_mod</TT> interfaces
     33 !!   provides data to disk at any number of sampling and/or averaging intervals
     34 !!   specified at run-time. Run-time specification of diagnostics are input
     35 !!   through the diagnostics table.
     36 !!
     37 !!   <H4>Usage</H4>
     38 !!   Use of <TT>diag_manager</TT> includes the following steps:
     39 !!   <OL>
     40 !!     <LI> Create diag_table as described in the
     41 !!          <LINK SRC="diag_table.html">diag_table.F90</LINK>
     42 !!          documentation.</LI>
     43 !!     <LI> Call <LINK SRC="#diag_manager_init"><TT>diag_manager_init</TT></LINK> to initialize
     44 !!          diag_manager_mod.</LI>
     45 !!     <LI> Call <LINK SRC="#register_diag_field"><TT>register_diag_field</TT></LINK> to register the field to be
     46 !!          output.
     47 !!          <B>NOTE:</B> ALL fields in diag_table should be registered <I>BEFORE</I>
     48 !!          the first send_data call</LI>
     49 !!     <LI> Call <LINK SRC="#send_data"><TT>send_data</TT></LINK> to send data to output fields </LI>
     50 !!     <LI> Call <LINK SRC="#diag_manager_end"><TT>diag_manager_end</TT></LINK> to exit diag_manager </LI>
     51 !!   </OL>
     52 !!
     53 !!   <H4>Features</H4>
     54 !!   Features of <TT>diag_manager_mod</TT>:
     55 !!   <OL>
     56 !!     <LI> Ability to output from 0D arrays (scalars) to 3D arrays.</LI>
     57 !!     <LI> Ability to output time average of fields that have time dependent

Page 2           Source Listing                  REGISTER_DIAG_FIELD_SCALAR
2021-06-01 08:54                                 diag_manager.F90

     58 !!          mask.</LI>
     59 !!     <LI> Give optional warning if <TT>register_diag_field</TT> fails due to
     60 !!          misspelled module name or field name.</LI>
     61 !!     <LI> Check if a field is registered twice.</LI>
     62 !!     <LI> Check for duplicate lines in diag_table. </LI>
     63 !!     <LI> <LINK SRC="diag_table.html">diag_table</LINK> can contain fields
     64 !!          that are NOT written to any files. The file name in diag_table of
     65 !!          these fields is <TT>null</TT>.</LI>
     66 !!     <LI> By default, a field is output in its global grid.  The user can now
     67 !!          output a field in a specified region.  See
     68 !!          <LINK SRC="#send_data"><TT>send_data</TT></LINK> for more details.</LI>
     69 !!     <LI> To check if the diag table is set up correctly, user should set
     70 !!          <TT>debug_diag_manager=.true.</TT> in diag_manager namelist, then
     71 !!          the the content of diag_table is printed in stdout.</LI>
     72 !!     <LI> New optional format of file information in <LINK SRC="diag_table.html">diag_table</LINK>.It is possible to have 
     72 just
     73 !!           one file name and reuse it many times. A time string will be appended to the base file name each time a new fil
     73 e is
     74 !!          opened. The time string can be any combination from year to second of current model time.
     75 !!
     76 !!          Here is an example file line: <BR />
     77 !!          <PRE>"file2_yr_dy%1yr%3dy",2,"hours",1,"hours","Time", 10, "days", "1 1 7 0 0 0", 6, "hours"</PRE>
     78 !!          <BR />
     79 !!
     80 !!          From left to right we have:
     81 !!          <UL>
     82 !!            <LI>file name</LI>
     83 !!            <LI>output frequency</LI>
     84 !!            <LI>output frequency unit</LI>
     85 !!            <LI>Format (should always be 1)</LI>
     86 !!            <LI>time axis unit</LI>
     87 !!            <LI>time axis name</LI>
     88 !!            <LI>frequency for creating new file</LI>
     89 !!            <LI>unit for creating new file</LI>
     90 !!            <LI>start time of the new file</LI>
     91 !!            <LI>file duration</LI>
     92 !!            <LI>file duration unit.</LI>
     93 !!          </UL>
     94 !!          The 'file duration', if absent, will be equal to frequency for creating a new file.
     95 !!
     96 !!          Thus, the above means: create a new file every 10 days, each file will last 6 hours from creation time, no files
     96  will
     97 !!          be created before time "1 1 7 0 0 0".
     98 !!
     99 !!          In this example the string
    100 !!          <TT>10, "days", "1 1 7 0 0 0", 6, "hours"</TT> is optional.
    101 !!
    102 !!          Keywords for the time string suffix is
    103 !!          <TT>%xyr,%xmo,%xdy,%xhr,%xmi,%xsc</TT> where <TT>x</TT> is a
    104 !!          mandatory 1 digit number specifying the width of field used in
    105 !!          writing the string</LI>
    106 !!     <LI> New time axis for time averaged fields.  Users can use a namelist option to handle the time value written
    107 !!          to time axis for time averaged fields.
    108 !!
    109 !!          If <TT>mix_snapshot_average_fields=.true.</TT> then a time averaged file will have time values corresponding to
    110 !!          ending time_bound e.g. January monthly average is labeled Feb01. Users can have both snapshot and averaged field
    110 s in

Page 3           Source Listing                  REGISTER_DIAG_FIELD_SCALAR
2021-06-01 08:54                                 diag_manager.F90

    111 !!          one file.
    112 !!
    113 !!          If <TT>mix_snapshot_average_fields=.false.</TT> The time value written to time axis for time averaged fields is 
    113 the
    114 !!          middle on the averaging time. For example, January monthly mean will be written at Jan 16 not Feb 01 as
    115 !!          before. However, to use this new feature users should <B>separate</B> snapshot fields and time averaged fields i
    115 n
    116 !!          <B>different</B> files or a fatal error will occur.
    117 !!
    118 !!          The namelist <B>default</B> value is <TT>mix_snapshot_average_fields=.false.</TT></LI>
    119 !!     <LI> Time average, Root Mean Square, Max and Min, and diurnal. In addition to time average users can also get then Ro
    119 ot Mean Square, Max or Min value
    120 !!          during the same interval of time as time average. For this purpose, in the diag table users must replace
    121 !!          <TT>.true.</TT> or <TT>.false.</TT> by "<TT>rms</TT>, <TT>max</TT>" or "<TT>min</TT>".  <B><I>Note:</I></B> Curr
    121 ently, max
    122 !!          and min are not available for regional output.
    123 !!
    124 !!          A diurnal average or the average of an integer power can also be requested using <TT>diurnal##</TT> or <TT>pow##
    124 </TT> where
    125 !!          <TT>##</TT> are the number of diurnal sections or integer power to average.</LI>
    126 !!     <LI> <TT>standard_name</TT> is added as optional argument in <LINK SRC="#register_diag_field"><TT>register_diag_field
    126 </TT>
    127 !!          </LINK>.</LI>
    128 !!     <LI>When namelist variable <TT>debug_diag_manager = .true.</TT> array
    129 !!         bounds are checked in <LINK SRC="#send_data"><TT>send_data</TT></LINK>.</LI>
    130 !!     <LI>Coordinate attributes can be written in the output file if the
    131 !!         argument "<TT>aux</TT>" is given in <LINK SRC="diag_axis.html#diag_axis_init"><TT>diag_axis_init</TT></LINK>. The
    132 !!         corresponding fields (geolat/geolon) should also be written to the
    133 !!         same file.</LI>
    134 !!   </OL>
    135 MODULE diag_manager_mod
    136 use platform_mod
    137 ! <CONTACT EMAIL="Matthew.Harrison@gfdl.noaa.gov">
    138 !   Matt Harrison
    139 ! </CONTACT>
    140 ! <CONTACT EMAIL="Giang.Nong@noaa.gov">
    141 !   Giang Nong
    142 ! </CONTACT>
    143 ! <CONTACT EMAIL="seth.underwood@noaa.gov">
    144 !   Seth Underwood
    145 ! </CONTACT>
    146 ! <HISTORY SRC="http://www.gfdl.noaa.gov/fms-cgi-bin/cvsweb.cgi/FMS/" />
    147 ! <OVERVIEW>
    148 !   <TT>diag_manager_mod</TT> is a set of simple calls for parallel diagnostics
    149 !   on distributed systems. It is geared toward the writing of data in netCDF
    150 !   format.
    151 ! </OVERVIEW>
    152 ! <DESCRIPTION>
    153 !   <TT>diag_manager_mod</TT> provides a convenient set of interfaces for
    154 !   writing data to disk.  It is built upon the parallel I/O interface of FMS
    155 !   code <TT>/shared/mpp/mpp_io.F90</TT>.
    156 !
    157 !   A single group of calls to the <TT>diag_manager_mod</TT> interfaces
    158 !   provides data to disk at any number of sampling and/or averaging intervals
    159 !   specified at run-time. Run-time specification of diagnostics are input
    160 !   through the diagnostics table.
    161 !

Page 4           Source Listing                  REGISTER_DIAG_FIELD_SCALAR
2021-06-01 08:54                                 diag_manager.F90

    162 !   <H4>Usage</H4>
    163 !   Use of <TT>diag_manager</TT> includes the following steps:
    164 !   <OL>
    165 !     <LI> Create diag_table as described in the
    166 !          <LINK SRC="diag_table.html">diag_table.F90</LINK>
    167 !          documentation.</LI>
    168 !     <LI> Call <LINK SRC="#diag_manager_init"><TT>diag_manager_init</TT></LINK> to initialize
    169 !          diag_manager_mod.</LI>
    170 !     <LI> Call <LINK SRC="#register_diag_field"><TT>register_diag_field</TT></LINK> to register the field to be
    171 !          output.
    172 !          <B>NOTE:</B> ALL fields in diag_table should be registered <I>BEFORE</I>
    173 !          the first send_data call</LI>
    174 !     <LI> Call <LINK SRC="#send_data"><TT>send_data</TT></LINK> to send data to output fields </LI>
    175 !     <LI> Call <LINK SRC="#diag_manager_end"><TT>diag_manager_end</TT></LINK> to exit diag_manager </LI>
    176 !   </OL>
    177 !
    178 !   <H4>Features</H4>
    179 !   Features of <TT>diag_manager_mod</TT>:
    180 !   <OL>
    181 !     <LI> Ability to output from 0D arrays (scalars) to 3D arrays.</LI>
    182 !     <LI> Ability to output time average of fields that have time dependent
    183 !          mask.</LI>
    184 !     <LI> Give optional warning if <TT>register_diag_field</TT> fails due to
    185 !          misspelled module name or field name.</LI>
    186 !     <LI> Check if a field is registered twice.</LI>
    187 !     <LI> Check for duplicate lines in diag_table. </LI>
    188 !     <LI> <LINK SRC="diag_table.html">diag_table</LINK> can contain fields
    189 !          that are NOT written to any files. The file name in diag_table of
    190 !          these fields is <TT>null</TT>.</LI>
    191 !     <LI> By default, a field is output in its global grid.  The user can now
    192 !          output a field in a specified region.  See
    193 !          <LINK SRC="#send_data"><TT>send_data</TT></LINK> for more details.</LI>
    194 !     <LI> To check if the diag table is set up correctly, user should set
    195 !          <TT>debug_diag_manager=.true.</TT> in diag_manager namelist, then
    196 !          the the content of diag_table is printed in stdout.</LI>
    197 !     <LI> New optional format of file information in <LINK SRC="diag_table.html">diag_table</LINK>.It is possible to have j
    197 ust
    198 !          one file name and reuse it many times. A time string will be appended to the base file name each time a new file 
    198 is
    199 !          opened. The time string can be any combination from year to second of current model time.
    200 !
    201 !          Here is an example file line: <BR />
    202 !          <PRE>"file2_yr_dy%1yr%3dy",2,"hours",1,"hours","Time", 10, "days", "1 1 7 0 0 0", 6, "hours"</PRE>
    203 !          <BR />
    204 !
    205 !          From left to right we have:
    206 !          <UL>
    207 !            <LI>file name</LI>
    208 !            <LI>output frequency</LI>
    209 !            <LI>output frequency unit</LI>
    210 !            <LI>Format (should always be 1)</LI>
    211 !            <LI>time axis unit</LI>
    212 !            <LI>time axis name</LI>
    213 !            <LI>frequency for creating new file</LI>
    214 !            <LI>unit for creating new file</LI>
    215 !            <LI>start time of the new file</LI>
    216 !            <LI>file duration</LI>

Page 5           Source Listing                  REGISTER_DIAG_FIELD_SCALAR
2021-06-01 08:54                                 diag_manager.F90

    217 !            <LI>file duration unit.</LI>
    218 !          </UL>
    219 !          The 'file duration', if absent, will be equal to frequency for creating a new file.
    220 !
    221 !          Thus, the above means: create a new file every 10 days, each file will last 6 hours from creation time, no files 
    221 will
    222 !          be created before time "1 1 7 0 0 0".
    223 !
    224 !          In this example the string
    225 !          <TT>10, "days", "1 1 7 0 0 0", 6, "hours"</TT> is optional.
    226 !
    227 !          Keywords for the time string suffix is
    228 !          <TT>%xyr,%xmo,%xdy,%xhr,%xmi,%xsc</TT> where <TT>x</TT> is a
    229 !          mandatory 1 digit number specifying the width of field used in
    230 !          writing the string</LI>
    231 !     <LI> New time axis for time averaged fields.  Users can use a namelist option to handle the time value written
    232 !          to time axis for time averaged fields.
    233 !
    234 !          If <TT>mix_snapshot_average_fields=.true.</TT> then a time averaged file will have time values corresponding to
    235 !          ending time_bound e.g. January monthly average is labeled Feb01. Users can have both snapshot and averaged fields
    235  in
    236 !          one file.
    237 !
    238 !          If <TT>mix_snapshot_average_fields=.false.</TT> The time value written to time axis for time averaged fields is t
    238 he
    239 !          middle on the averaging time. For example, January monthly mean will be written at Jan 16 not Feb 01 as
    240 !          before. However, to use this new feature users should <B>separate</B> snapshot fields and time averaged fields in
    241 !          <B>different</B> files or a fatal error will occur.
    242 !
    243 !          The namelist <B>default</B> value is <TT>mix_snapshot_average_fields=.false.</TT></LI>
    244 !     <LI> Time average, Root Mean Square, Max and Min, and diurnal. In addition to time average users can also get then Roo
    244 t Mean Square, Max or Min value
    245 !          during the same interval of time as time average. For this purpose, in the diag table users must replace
    246 !          <TT>.true.</TT> or <TT>.false.</TT> by "<TT>rms</TT>, <TT>max</TT>" or "<TT>min</TT>".  <B><I>Note:</I></B> Curre
    246 ntly, max
    247 !          and min are not available for regional output.
    248 !
    249 !          A diurnal average or the average of an integer power can also be requested using <TT>diurnal##</TT> or <TT>pow##<
    249 /TT> where
    250 !          <TT>##</TT> are the number of diurnal sections or integer power to average.</LI>
    251 !     <LI> <TT>standard_name</TT> is added as optional argument in <LINK SRC="#register_diag_field"><TT>register_diag_field<
    251 /TT>
    252 !          </LINK>.</LI>
    253 !     <LI>When namelist variable <TT>debug_diag_manager = .true.</TT> array
    254 !         bounds are checked in <LINK SRC="#send_data"><TT>send_data</TT></LINK>.</LI>
    255 !     <LI>Coordinate attributes can be written in the output file if the
    256 !         argument "<TT>aux</TT>" is given in <LINK SRC="diag_axis.html#diag_axis_init"><TT>diag_axis_init</TT></LINK>. The
    257 !         corresponding fields (geolat/geolon) should also be written to the
    258 !         same file.</LI>
    259 !   </OL>
    260 !
    261 ! </DESCRIPTION>
    262 
    263 ! <NAMELIST NAME="diag_manager_nml">
    264 !   <DATA NAME="append_pelist_name" TYPE="LOGICAL" DEFAULT=".FALSE.">
    265 !   </DATA>
    266 !   <DATA NAME="mix_snapshot_average_fields" TYPE="LOGICAL" DEFAULT=".FALSE.">

Page 6           Source Listing                  REGISTER_DIAG_FIELD_SCALAR
2021-06-01 08:54                                 diag_manager.F90

    267 !     Set to .TRUE. to allow both time average and instantaneous fields in the same output file.
    268 !   </DATA>
    269 !   <DATA NAME="max_files" TYPE="INTEGER" DEFULT="31">
    270 !   </DATA>
    271 !   <DATA NAME="max_output_fields" TYPE="INTEGER" DEFAULT="300">
    272 !   </DATA>
    273 !   <DATA NAME="max_input_fields" TYPE="INTEGER" DEFAULT="300">
    274 !   </DATA>
    275 !   <DATA NAME="max_axes" TYPE="INTEGER" DEFAULT="60">
    276 !   </DATA>
    277 !   <DATA NAME="do_diag_field_log" TYPE="LOGICAL" DEFAULT=".FALSE.">
    278 !   </DATA>
    279 !   <DATA NAME="write_bytes_in_files" TYPE="LOGICAL" DEFAULT=".FALSE.">
    280 !   </DATA>
    281 !   <DATA NAME="debug_diag_manager" TYPE="LOGICAL" DEFAULT=".FALSE.">
    282 !   </DATA>
    283 !   <DATA NAME="max_num_axis_sets" TYPE="INTEGER" DEFAULT="25">
    284 !   </DATA>
    285 !   <DATA NAME="use_cmor" TYPE="LOGICAL" DEFAULT=".FALSE.">
    286 !     Let the <TT>diag_manager</TT> know if the missing value (if supplied) should be overridden to be the
    287 !     CMOR standard value of -1.0e20.
    288 !   </DATA>
    289 !   <DATA NAME="issue_oor_warnings" TYPE="LOGICAL" DEFAULT=".TRUE.">
    290 !     If <TT>.TRUE.</TT>, then the <TT>diag_manager</TT> will check for values outside the valid range.  This range is defin
    290 ed in
    291 !     the model, and passed to the <TT>diag_manager_mod</TT> via the OPTIONAL variable range in the <TT>register_diag_field<
    291 /TT>
    292 !     function.
    293 !   </DATA>
    294 !   <DATA NAME="oor_warnings_fatal" TYPE="LOGICAL" DEFAULT=".FALSE.">
    295 !     If <TT>.TRUE.</TT> then <TT>diag_manager_mod</TT> will issue a <TT>FATAL</TT> error if any values for the output field
    295  are
    296 !     outside the given range.
    297 !   </DATA>
    298 !   <DATA NAME="max_field_attributes" TYPE="INTEGER" DEFAULT="4">
    299 !     Maximum number of user definable attributes per field.
    300 !   </DATA>
    301 !   <DATA NAME="max_file_attributes" TYPE="INTEGER" DEFAULT="2">
    302 !     Maximum number of user definable global attributes per file.
    303 !   </DATA>
    304 !   <DATA NAME="prepend_date" TYPE="LOGICAL" DEFAULT=".TRUE.">
    305 !     If <TT>.TRUE.</TT> then prepend the file start date to the output file.  <TT>.TRUE.</TT> is only supported if the
    306 !      diag_manager_init routine is called with the optional time_init parameter.  Note: This was usually done by FRE after 
    306 the
    307 !     model run.
    308 !   </DATA>
    309 !   <DATA NAME="region_out_use_alt_value" TYPE="LOGICAL" DEFAULT=".TRUE.">
    310 !     Will determine which value to use when checking a regional output if the region is the full axis or a sub-axis.
    311 !     The values are defined as <TT>GLO_REG_VAL</TT> (-999) and <TT>GLO_REG_VAL_ALT</TT> (-1) in <TT>diag_data_mod</TT>.
    312 !   </DATA>
    313 !   <DATA NAME="use_mpp_io" TYPE="LOGICAL" DEFAULT=".false.">
    314 !    Set to true, diag_manager uses mpp_io.  Default is fms2_io.
    315 !   </DATA>
    316 ! </NAMELIST>
    317 
    318   USE time_manager_mod, ONLY: set_time, set_date, get_time, time_type, OPERATOR(>=), OPERATOR(>),&
    319        & OPERATOR(<), OPERATOR(==), OPERATOR(/=), OPERATOR(/), OPERATOR(+), ASSIGNMENT(=), get_date, &

Page 7           Source Listing                  REGISTER_DIAG_FIELD_SCALAR
2021-06-01 08:54                                 diag_manager.F90

    320        & get_ticks_per_second
    321   USE mpp_io_mod, ONLY: mpp_open, mpp_close, mpp_get_maxunits
    322   USE mpp_mod, ONLY: mpp_get_current_pelist, mpp_pe, mpp_npes, mpp_root_pe, mpp_sum
    323 
    324 
    325   USE mpp_mod, ONLY: input_nml_file
    326 # 327
    327 
    328 
    329   USE fms_mod, ONLY: error_mesg, FATAL, WARNING, NOTE, stdout, stdlog, write_version_number,&
    330        & file_exist, fms_error_handler, check_nml_error, get_mosaic_tile_file, lowercase
    331   USE fms_io_mod, ONLY: get_instance_filename
    332   USE diag_axis_mod, ONLY: diag_axis_init, get_axis_length, get_axis_num, get_domain2d, get_tile_count,&
    333        & diag_axis_add_attribute, axis_compatible_check, CENTER, NORTH, EAST
    334   USE diag_util_mod, ONLY: get_subfield_size, log_diag_field_info, update_bounds,&
    335        & check_out_of_bounds, check_bounds_are_exact_dynamic, check_bounds_are_exact_static,&
    336        & diag_time_inc, find_input_field, init_input_field, init_output_field,&
    337        & diag_data_out, write_static, get_date_dif, get_subfield_vert_size, sync_file_times,&
    338        & prepend_attribute, attribute_init, diag_util_init
    339   USE diag_data_mod, ONLY: max_files, CMOR_MISSING_VALUE, DIAG_OTHER, DIAG_OCEAN, DIAG_ALL, EVERY_TIME,&
    340        & END_OF_RUN, DIAG_SECONDS, DIAG_MINUTES, DIAG_HOURS, DIAG_DAYS, DIAG_MONTHS, DIAG_YEARS, num_files,&
    341        & max_input_fields, max_output_fields, num_output_fields, EMPTY, FILL_VALUE, null_axis_id,&
    342        & MAX_VALUE, MIN_VALUE, base_time, base_year, base_month, base_day,&
    343        & base_hour, base_minute, base_second, global_descriptor, coord_type, files, input_fields,&
    344        & output_fields, Time_zero, append_pelist_name, mix_snapshot_average_fields,&
    345        & first_send_data_call, do_diag_field_log, write_bytes_in_file, debug_diag_manager,&
    346        & diag_log_unit, time_unit_list, pelist_name, max_axes, module_is_initialized, max_num_axis_sets,&
    347        & use_cmor, issue_oor_warnings, oor_warnings_fatal, oor_warning, pack_size,&
    348        & max_out_per_in_field, flush_nc_files, region_out_use_alt_value, max_field_attributes, output_field_type,&
    349        & max_file_attributes, max_axis_attributes, prepend_date, DIAG_FIELD_NOT_FOUND, diag_init_time, diag_data_init, &
    350        & use_mpp_io
    351   USE diag_data_mod, ONLY:  fileobj, fileobjU, fnum_for_domain, fileobjND
    352   USE diag_table_mod, ONLY: parse_diag_table
    353   USE diag_output_mod, ONLY: get_diag_global_att, set_diag_global_att
    354   USE diag_grid_mod, ONLY: diag_grid_init, diag_grid_end
    355   USE constants_mod, ONLY: SECONDS_PER_DAY
    356 
    357 
    358   USE netcdf, ONLY: NF90_INT, NF90_FLOAT, NF90_CHAR
    359 
    360 
    361 !----------
    362 !ug support
    363   use diag_axis_mod, only: DIAG_AXIS_2DDOMAIN
    364   use diag_axis_mod, only: DIAG_AXIS_UGDOMAIN
    365 !----------
    366 
    367   IMPLICIT NONE
    368 
    369   PRIVATE
    370   PUBLIC :: diag_manager_init, send_data, send_tile_averaged_data, diag_manager_end,&
    371        & register_diag_field, register_static_field, diag_axis_init, get_base_time, get_base_date,&
    372        & need_data, DIAG_ALL, DIAG_OCEAN, DIAG_OTHER, get_date_dif, DIAG_SECONDS,&
    373        & DIAG_MINUTES, DIAG_HOURS, DIAG_DAYS, DIAG_MONTHS, DIAG_YEARS, get_diag_global_att,&
    374        & set_diag_global_att, diag_field_add_attribute, diag_field_add_cell_measures,&
    375        & get_diag_field_id, diag_axis_add_attribute, CMOR_MISSING_VALUE, null_axis_id
    376   PUBLIC :: CENTER, NORTH, EAST !< Used for diag_axis_init

Page 8           Source Listing                  REGISTER_DIAG_FIELD_SCALAR
2021-06-01 08:54                                 diag_manager.F90

    377 ! Public interfaces from diag_grid_mod
    378   PUBLIC :: diag_grid_init, diag_grid_end
    379   PUBLIC :: diag_manager_set_time_end, diag_send_complete
    380   PUBLIC :: diag_send_complete_instant
    381 ! Public interfaces from diag_data_mod
    382   PUBLIC :: DIAG_FIELD_NOT_FOUND
    383 
    384 ! version number of this module
    385 ! Include variable "version" to be written to log file.
    386 # 1 "../include/file_version.h" 1 
    387 ! -*-f90-*-
    388 !***********************************************************************
    389 !*                   GNU Lesser General Public License
    390 !*
    391 !* This file is part of the GFDL Flexible Modeling System (FMS).
    392 !*
    393 !* FMS is free software: you can redistribute it and/or modify it under
    394 !* the terms of the GNU Lesser General Public License as published by
    395 !* the Free Software Foundation, either version 3 of the License, or (at
    396 !* your option) any later version.
    397 !*
    398 !* FMS is distributed in the hope that it will be useful, but WITHOUT
    399 !* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
    400 !* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
    401 !* for more details.
    402 !*
    403 !* You should have received a copy of the GNU Lesser General Public
    404 !* License along with FMS.  If not, see <http://www.gnu.org/licenses/>.
    405 !***********************************************************************
    406 
    407 # 23
    408 
    409   character(len=*), parameter :: version = 'unknown'
    410 
    411 # 387 "diag_manager.F90" 2 
    412 
    413   type(time_type) :: Time_end
    414 
    415 ! <INTERFACE NAME="send_data">
    416 !   <TEMPLATE>
    417 !     send_data(diag_field_id, field, time, is_in, js_in, ks_in,
    418 !             mask, rmask, ie_in, je_in, ke_in, weight)
    419 !   </TEMPLATE>
    420 !   <OVERVIEW>
    421 !     Send data over to output fields.
    422 !   </OVERVIEW>
    423 !   <DESCRIPTION>
    424 !     <TT>send_data</TT> is overloaded for fields having zero dimension
    425 !     (scalars) to 3 dimension.  <TT>diag_field_id</TT> corresponds to the id
    426 !     returned from a previous call to <TT>register_diag_field</TT>. The field
    427 !     array is restricted to the computational range of the array. Optional
    428 !     argument <TT>is_in</TT> can be used to update sub-arrays of the entire
    429 !     field. Additionally, an optional logical or real mask can be used to
    430 !     apply missing values to the array.
    431 !
    432 !     If a field is declared to be <TT>mask_variant</TT> in
    433 !     <TT>register_diag_field</TT> logical mask should be mandatory.

Page 9           Source Listing                  REGISTER_DIAG_FIELD_SCALAR
2021-06-01 08:54                                 diag_manager.F90

    434 !
    435 !     For the real  mask, the mask is applied if the mask value is less than
    436 !     0.5.
    437 !
    438 !     By default, a field will be written out entirely in its global grid.
    439 !     Users can also specify regions in which the field will be output. The
    440 !     region is specified in diag-table just before the end of output_field
    441 !     replacing "none".
    442 !
    443 !     For example, by default:
    444 !
    445 !     "ocean_mod","Vorticity","vorticity","file1","all",.false.,"none",2
    446 !
    447 !     for regional output:
    448 !
    449 !     "ocean_mod","Vorticity","vorticity_local","file2","all",.false.,"0.5 53.5 -89.5 -28.5 -1 -1",2
    450 !
    451 !     The format of a region is "<TT>xbegin xend ybegin yend zbegin zend</TT>".
    452 !     If it is a 2D field use (-1 -1) for (zbegin zend) as in the example above.
    453 !     For a 3D field use (-1 -1) for (zbegin zend) when you want to write the
    454 !     entire vertical extent, otherwise specify real coordinates.  The units
    455 !     used for region are the actual units used in grid_spec.nc (for example
    456 !     degrees for lat, lon).  <B><I>NOTE:</I></B> A FATAL error will occur if
    457 !     the region's boundaries are not found in grid_spec.nc.
    458 !
    459 !     Regional output on the cubed sphere grid is also supported.  To use regional
    460 !     output on the cubed sphere grid, first the grid information needs to be sent to
    461 !     <TT>diag_manager_mod</TT> using the <LINK
    462 !     SRC="diag_grid.html#diag_grid_init"><TT> diag_grid_init</TT></LINK>
    463 !     subroutine.
    464 !
    465 !     <B><I>NOTE:</I></B> When using regional output the files containing regional
    466 !     outputs should be different from files containing global (default) output.
    467 !     It is a FATAL error to have one file containing both regional and global
    468 !     results. For maximum flexibility and independence from PE counts one file
    469 !     should contain just one region.
    470 !
    471 !     Time averaging is supported in regional output.
    472 !
    473 !     Physical fields (written in "physics windows" of atmospheric code) are
    474 !     fully supported for regional outputs.
    475 !
    476 !     <B><I>NOTE:</I></B> Most fields are defined in the data domain but use the
    477 !     compute domain. In <TT>send_data</TT> the field can be passed in either
    478 !     the data domain or in the compute domain.  If the data domain is used, the
    479 !     start and end indicies of the compute domain (isc, iec, . . .) should be
    480 !     passed.  If the compute domain is used no indices are needed.  The indices
    481 !     are for determining halo exclusively.  If users want to output the field
    482 !     partially they should use regional output as mentioned above.
    483 !
    484 !     Weight in Time averaging is now supported, each time level may have a
    485 !     different weight. The default of weight is 1.
    486 !   </DESCRIPTION>
    487 !   <IN NAME="diag_field_id" TYPE="INTEGER"> </IN>
    488 !   <IN NAME="field" TYPE="REAL, DIMENSION(:,:,:)"> </IN>
    489 !   <IN NAME="time" TYPE="TYPE(time_type)"> </IN>
    490 !   <IN NAME="is_in" TYPE="INTEGER, OPTIONAL"></IN>

Page 10          Source Listing                  REGISTER_DIAG_FIELD_SCALAR
2021-06-01 08:54                                 diag_manager.F90

    491 !   <IN NAME="js_in" TYPE="INTEGER, OPTIONAL"></IN>
    492 !   <IN NAME="ks_in" TYPE="INTEGER, OPTIONAL"></IN>
    493 !   <IN NAME="mask" TYPE="LOGICAL, DIMENSION(:,:,:), OPTIONAL"></IN>
    494 !   <IN NAME="rmask" TYPE="REAL, DIMENSION(:,:,:), OPTIONAL"></IN>
    495 !   <IN NAME="ie_in" TYPE="INTEGER, OPTIONAL"></IN>
    496 !   <IN NAME="je_in" TYPE="INTEGER, OPTIONAL"></IN>
    497 !   <IN NAME="ke_in" TYPE="INTEGER, OPTIONAL"></IN>
    498 !   <IN NAME="weight" TYPE="REAL, OPTIONAL"></IN>
    499 !   <OUT NAME="err_msg" TYPE="CHARACTER(len=*), OPTIONAL"></OUT>
    500 !> @brief Send data over to output fields.
    501   INTERFACE send_data
    502      MODULE PROCEDURE send_data_0d
    503      MODULE PROCEDURE send_data_1d
    504      MODULE PROCEDURE send_data_2d
    505      MODULE PROCEDURE send_data_3d
    506 # 484
    507 
    508   END INTERFACE
    509 
    510 !> @brief Register Diagnostic Field.
    511   INTERFACE register_diag_field
    512      MODULE PROCEDURE register_diag_field_scalar
    513      MODULE PROCEDURE register_diag_field_array
    514   END INTERFACE
    515 
    516 !> @brief Send tile-averaged data over to output fields.
    517   INTERFACE send_tile_averaged_data
    518      MODULE PROCEDURE send_tile_averaged_data1d
    519      MODULE PROCEDURE send_tile_averaged_data2d
    520      MODULE PROCEDURE send_tile_averaged_data3d
    521   END INTERFACE
    522 
    523 !> @brief Add a attribute to the output field
    524   INTERFACE diag_field_add_attribute
    525      MODULE PROCEDURE diag_field_add_attribute_scalar_r
    526      MODULE PROCEDURE diag_field_add_attribute_scalar_i
    527      MODULE PROCEDURE diag_field_add_attribute_scalar_c
    528      MODULE PROCEDURE diag_field_add_attribute_r1d
    529      MODULE PROCEDURE diag_field_add_attribute_i1d
    530   END INTERFACE diag_field_add_attribute
    531 ! </INTERFACE>
    532 
    533 CONTAINS
    534 
    535 ! <FUNCTION NAME="register_diag_field_scalar" INTERFACE="register_diag_field">
    536 !   <IN NAME="module_name" TYPE="CHARACTER(len=*)" />
    537 !   <IN NAME="field_name" TYPE="CHARACTER(len=*)" />
    538 !   <IN NAME="axes" TYPE="Not Applicable" />
    539 !   <IN NAME="init_time" TYPE="TYPE(time_type), OPTIONAL" />
    540 !   <IN NAME="long_name" TYPE="CHARACTER(len=*), OPTIONAL" />
    541 !   <IN NAME="units" TYPE="CHARACTER(len=*), OPTIONAL" />
    542 !   <IN NAME="missing_value" TYPE="REAL, OPTIONAL" />
    543 !   <IN NAME="range" TYPE="REAL, DIMENSION(2), OPTIONAL" />
    544 !   <IN NAME="mask_variant" TYPE="Not Applicable" />
    545 !   <IN NAME="standard_name" TYPE="CHARACTER(len=*), OPTIONAL" />
    546 !   <IN NAME="do_not_log" TYPE="LOGICAL, OPTIONAL" />
    547 !   <IN NAME="area" TYPE="INTEGER, OPTIONAL" />

Page 11          Source Listing                  REGISTER_DIAG_FIELD_SCALAR
2021-06-01 08:54                                 diag_manager.F90

    548 !   <IN NAME="volume" TYPE="INTEGER, OPTIONAL" />
    549 !   <IN NAME="realm" TYPE="CHARACTER(len=*), OPTIONAL" />
    550 !   <OUT NAME="err_msg" TYPE="CHARACTER(len=*), OPTIONAL" />
    551 !> @return integer
    552   INTEGER FUNCTION register_diag_field_scalar(module_name, field_name, init_time, &
    553        & long_name, units, missing_value, range, standard_name, do_not_log, err_msg,&
    554        & area, volume, realm)
    555     CHARACTER(len=*), INTENT(in) :: module_name, field_name
    556     TYPE(time_type), OPTIONAL, INTENT(in) :: init_time
    557     CHARACTER(len=*), OPTIONAL, INTENT(in) :: long_name, units, standard_name
    558     REAL, OPTIONAL, INTENT(in) :: missing_value
    559     REAL,  DIMENSION(2), OPTIONAL, INTENT(in) :: RANGE
    560     LOGICAL, OPTIONAL, INTENT(in) :: do_not_log !< if TRUE, field information is not logged
    561     CHARACTER(len=*), OPTIONAL, INTENT(out):: err_msg
    562     INTEGER, OPTIONAL, INTENT(in) :: area, volume
    563     CHARACTER(len=*), OPTIONAL, INTENT(in):: realm !< String to set as the value to the modeling_realm attribute
    564 
    565     IF ( PRESENT(err_msg) ) err_msg = ''
    566 
    567     IF ( PRESENT(init_time) ) THEN
    568        register_diag_field_scalar = register_diag_field_array(module_name, field_name,&
    569             & (/null_axis_id/), init_time,long_name, units, missing_value, range, &
    570             & standard_name=standard_name, do_not_log=do_not_log, err_msg=err_msg,&
    571             & area=area, volume=volume, realm=realm)
    572     ELSE
    573        register_diag_field_scalar = register_static_field(module_name, field_name,&
    574             & (/null_axis_id/),long_name, units, missing_value, range,&
    575             & standard_name=standard_name, do_not_log=do_not_log, realm=realm)
    576     END IF
    577   END FUNCTION register_diag_field_scalar

Page 12          Source Listing                  REGISTER_DIAG_FIELD_SCALAR
2021-06-01 08:54 Entry Points                    diag_manager.F90



ENTRY POINTS

  Name                                                       
                                                             
 diag_manager_mod_mp_register_diag_field_scalar_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 AREA                       Dummy  554      I(4)            4           scalar   ARG,IN           571                               
 DO_NOT_LOG                 Dummy  553      L(4)            4           scalar   ARG,IN           570,575                           
 ERR_MSG                    Dummy  553      CHAR                        scalar   ARG,OUT          565,570                           
 FIELD_NAME                 Dummy  552      CHAR                        scalar   ARG,IN           568,573                           
 INIT_TIME                  Dummy  552      TIME_TYPE       16          scalar   ARG,IN           567,569                           
 LONG_NAME                  Dummy  553      CHAR                        scalar   ARG,IN           569,574                           
 MISSING_VALUE              Dummy  553      R(8)            8           scalar   ARG,IN           569,574                           
 MODULE_NAME                Dummy  552      CHAR                        scalar   ARG,IN           568,573                           
 NULL_AXIS_ID               Local  569      I(4)            4           scalar                    341,375,569,574,3918              
 PRESENT                    Func   565                                  scalar                    565,567                           
 RANGE                      Dummy  553      R(8)            8     1     2        ARG,IN           569,574                           
 REALM                      Dummy  554      CHAR                        scalar   ARG,IN           571,575                           
 REGISTER_DIAG_FIELD_ARRAY@                                                                                                         
 0                          Local  568      I(4)            4           scalar                                                      
 REGISTER_DIAG_FIELD_SCALAR Func   552      I(4)            4           scalar   PRIV             568,573                           
 REGISTER_STATIC_FIELD      Func   573      I(4)            4           scalar                    371,573,648,867,868,870,887,900   
 REGISTER_STATIC_FIELD@0    Local  573      I(4)            4           scalar                                                      
 STANDARD_NAME              Dummy  553      CHAR                        scalar   ARG,IN           570,575                           
 TIME_TYPE                  Type   556                                  scalar                    318,413,556,607,1460,1496,1560,161
                                                                                                  9,3147,3233,3260,3351,3353,3354,35
                                                                                                  30,3546,3569,3572,3633,3654,3925,3
                                                                                                  957                               
 UNITS                      Dummy  553      CHAR                        scalar   ARG,IN           569,574                           
 VOLUME                     Dummy  554      I(4)            4           scalar   ARG,IN           571                               

Page 13          Source Listing                  REGISTER_DIAG_FIELD_SCALAR
2021-06-01 08:54                                 diag_manager.F90

    578 ! </FUNCTION>
    579 
    580 ! <FUNCTION NAME="register_diag_field_array" INTERFACE="register_diag_field">
    581 !   <IN NAME="module_name" TYPE="CHARACTER(len=*)" />
    582 !   <IN NAME="field_name" TYPE="CHARACTER(len=*)" />
    583 !   <IN NAME="axes" TYPE="INTEGER, DIMENSION(:)" />
    584 !   <IN NAME="init_time" TYPE="TYPE(time_type)" />
    585 !   <IN NAME="long_name" TYPE="CHARACTER(len=*), OPTIONAL" />
    586 !   <IN NAME="units" TYPE="CHARACTER(len=*), OPTIONAL" />
    587 !   <IN NAME="missing_value" TYPE="REAL, OPTIONAL" />
    588 !   <IN NAME="range" TYPE="REAL, DIMENSION(2), OPTIONAL" />
    589 !   <IN NAME="mask_variant" TYPE="LOGICAL, OPTIONAL" />
    590 !   <IN NAME="standard_name" TYPE="CHARACTER(len=*), OPTIONAL" />
    591 !   <IN NAME="do_not_log" TYPE="LOGICAL, OPTIONAL" />
    592 !   <IN NAME="interp_method" TYPE="CHARACTER(len=*), OPTIONAL">
    593 !     The interp method to be used when regridding the field in post-processing.
    594 !     Valid options are "conserve_order1", "conserve_order2", and "none".
    595 !   </IN>
    596 !   <IN NAME="tile_count" TYPE="INTEGER, OPTIONAL" />
    597 !   <IN NAME="area" TYPE="INTEGER, OPTIONAL">diag_field_id containing the cell area field</IN>
    598 !   <IN NAME="volume" TYPE="INTEGER, OPTIONAL">diag_field_id containing the cell volume field</IN>
    599 !   <IN NAME="realm" TYPE="CHARACTER(len=*), OPTIONAL" />
    600 !   <OUT NAME="err_msg" TYPE="CHARACTER(len=*), OPTIONAL" />
    601 !> @return integer
    602   INTEGER FUNCTION register_diag_field_array(module_name, field_name, axes, init_time, &
    603        & long_name, units, missing_value, range, mask_variant, standard_name, verbose,&
    604        & do_not_log, err_msg, interp_method, tile_count, area, volume, realm)
    605     CHARACTER(len=*), INTENT(in) :: module_name, field_name
    606     INTEGER, INTENT(in) :: axes(:)
    607     TYPE(time_type), INTENT(in) :: init_time
    608     CHARACTER(len=*), OPTIONAL, INTENT(in) :: long_name, units, standard_name
    609     REAL, OPTIONAL, INTENT(in) :: missing_value, RANGE(2)
    610     LOGICAL, OPTIONAL, INTENT(in) :: mask_variant,verbose
    611     LOGICAL, OPTIONAL, INTENT(in) :: do_not_log !< if TRUE, field info is not logged
    612     CHARACTER(len=*), OPTIONAL, INTENT(out):: err_msg
    613     CHARACTER(len=*), OPTIONAL, INTENT(in) :: interp_method !< The interp method to be used when
    614 !! regridding the field in post-processing.
    615 !! Valid options are "conserve_order1",
    616 !! "conserve_order2", and "none".
    617     INTEGER, OPTIONAL, INTENT(in) :: tile_count
    618     INTEGER, OPTIONAL, INTENT(in) :: area !< diag_field_id containing the cell area field
    619     INTEGER, OPTIONAL, INTENT(in) :: volume !< diag_field_id containing the cell volume field
    620     CHARACTER(len=*), OPTIONAL, INTENT(in):: realm !< String to set as the value to the modeling_realm attribute
    621 
    622     INTEGER :: field, j, ind, file_num, freq
    623     INTEGER :: i, cm_ind, cm_file_num
    624     INTEGER :: output_units
    625     INTEGER :: stdout_unit
    626     LOGICAL :: mask_variant1, verbose1
    627     LOGICAL :: cm_found
    628     CHARACTER(len=128) :: msg
    629 
    630 ! get stdout unit number
    631     stdout_unit = stdout()
    632 
    633     IF ( PRESENT(mask_variant) ) THEN
    634        mask_variant1 = mask_variant

Page 14          Source Listing                  REGISTER_DIAG_FIELD_ARRAY
2021-06-01 08:54                                 diag_manager.F90

    635     ELSE
    636        mask_variant1 = .FALSE.
    637     END IF
    638 
    639     IF ( PRESENT(verbose) ) THEN
    640        verbose1 = verbose
    641     ELSE
    642        verbose1 = .FALSE.
    643     END IF
    644 
    645     IF ( PRESENT(err_msg) ) err_msg = ''
    646 
    647 ! Call register static, then set static back to false
    648     register_diag_field_array = register_static_field(module_name, field_name, axes,&
    649          & long_name, units, missing_value, range, mask_variant1, standard_name=standard_name,&
    650          & DYNAMIC=.TRUE., do_not_log=do_not_log, interp_method=interp_method, tile_count=tile_count, realm=realm)
    651 
    652     IF ( .NOT.first_send_data_call ) THEN
    653 ! <ERROR STATUS="WARNING">
    654 !   module/output_field <module_name>/<field_name> registered AFTER first
    655 !   send_data call, TOO LATE
    656 ! </ERROR>
    657        IF ( mpp_pe() == mpp_root_pe() ) &
    658             & CALL  error_mesg ('diag_manager_mod::register_diag_field', 'module/output_field '&
    659             &//TRIM(module_name)//'/'// TRIM(field_name)//&
    660             &' registered AFTER first send_data call, TOO LATE', WARNING)
    661     END IF
    662 
    663     IF ( register_diag_field_array < 0 ) THEN
    664 ! <ERROR STATUS="WARNING">
    665 !   module/output_field <modul_name>/<field_name> NOT found in diag_table
    666 ! </ERROR>
    667        IF ( debug_diag_manager .OR. verbose1 ) THEN
    668           IF ( mpp_pe() == mpp_root_pe() ) &
    669                & CALL error_mesg ('diag_manager_mod::register_diag_field', 'module/output_field '&
    670                &//TRIM(module_name)//'/'// TRIM(field_name)//' NOT found in diag_table',&
    671                & WARNING)
    672        END IF
    673     ELSE
    674        input_fields(register_diag_field_array)%static = .FALSE.
    675        field = register_diag_field_array
    676 
    677 
    678 ! Verify that area and volume do not point to the same variable
    679        IF ( PRESENT(volume).AND.PRESENT(area) ) THEN
    680           IF ( area.EQ.volume ) THEN
    681              IF (PRESENT(err_msg)) THEN
    682                 err_msg = 'diag_manager_mod::register_diag_field: module/output_field '&
    683                   &//TRIM(module_name)//'/'// TRIM(field_name)//' AREA and VOLUME CANNOT be the same variable.&
    684                   & Contact the developers.'
    685                 register_diag_field_array = -1
    686                 RETURN
    687              ELSE
    688                 CALL error_mesg ('diag_manager_mod::register_diag_field', 'module/output_field '&
    689                   &//TRIM(module_name)//'/'// TRIM(field_name)//' AREA and VOLUME CANNOT be the same variable.&
    690                   & Contact the developers.',&
    691                   & FATAL)

Page 15          Source Listing                  REGISTER_DIAG_FIELD_ARRAY
2021-06-01 08:54                                 diag_manager.F90

    692              ENDIF
    693           END IF
    694        END IF
    695 
    696 ! Check for the existence of the area/volume field(s)
    697        IF ( PRESENT(area) ) THEN
    698           IF ( area < 0 ) THEN
    699              IF (PRESENT(err_msg)) THEN
    700                 err_msg = 'diag_manager_mod::register_diag_field: module/output_field '&
    701                   &//TRIM(module_name)//'/'// TRIM(field_name)//' AREA measures field NOT found in diag_table.&
    702                   & Contact the model liaison.'
    703                 register_diag_field_array = -1
    704                 RETURN
    705              ELSE
    706                 CALL error_mesg ('diag_manager_mod::register_diag_field', 'module/output_field '&
    707                   &//TRIM(module_name)//'/'// TRIM(field_name)//' AREA measures field NOT found in diag_table.&
    708                   & Contact the model liaison.',&
    709                   & FATAL)
    710              ENDIF
    711           END IF
    712        END IF
    713        IF ( PRESENT(volume) ) THEN
    714           IF ( volume < 0 ) THEN
    715              IF (PRESENT(err_msg)) THEN
    716                 err_msg = 'diag_manager_mod::register_diag_field: module/output_field '&
    717                   &//TRIM(module_name)//'/'// TRIM(field_name)//' VOLUME measures field NOT found in diag_table.&
    718                   & Contact the model liaison.'
    719                 register_diag_field_array = -1
    720                 RETURN
    721              ELSE
    722                 CALL error_mesg ('diag_manager_mod::register_diag_field', 'module/output_field '&
    723                   &//TRIM(module_name)//'/'// TRIM(field_name)//' VOLUME measures field NOT found in diag_table.&
    724                   & Contact the model liaison.',&
    725                   & FATAL)
    726              ENDIF
    727           END IF
    728        END IF
    729 
    730        IF ( PRESENT(standard_name) ) input_fields(field)%standard_name = standard_name
    731 
    732        DO j = 1, input_fields(field)%num_output_fields
    733           ind = input_fields(field)%output_fields(j)
    734           output_fields(ind)%static = .FALSE.
    735 ! Set up times in output_fields
    736           output_fields(ind)%last_output = init_time
    737 ! Get output frequency from for the appropriate output file
    738           file_num = output_fields(ind)%output_file
    739           IF ( file_num == max_files ) CYCLE
    740           IF ( output_fields(ind)%local_output ) THEN
    741              IF ( output_fields(ind)%need_compute) THEN
    742                 files(file_num)%local = .TRUE.
    743              END IF
    744           END IF
    745 
    746 ! Need to sync start_time of file with init time of model
    747 ! and close_time calculated with the duration of the file.
    748 ! Also, increase next_open until it is greater than init_time.

Page 16          Source Listing                  REGISTER_DIAG_FIELD_ARRAY
2021-06-01 08:54                                 diag_manager.F90

    749           CALL sync_file_times(file_num, init_time, err_msg=msg)
    750           IF ( msg /= '' ) THEN
    751              IF ( fms_error_handler('diag_manager_mod::register_diag_field', TRIM(msg), err_msg) ) RETURN
    752           END IF
    753 
    754           freq = files(file_num)%output_freq
    755           output_units = files(file_num)%output_units
    756           output_fields(ind)%next_output = diag_time_inc(init_time, freq, output_units, err_msg=msg)
    757           IF ( msg /= '' ) THEN
    758              IF ( fms_error_handler('diag_manager_mod::register_diag_field',&
    759                   & ' file='//TRIM(files(file_num)%name)//': '//TRIM(msg),err_msg)) RETURN
    760           END IF
    761           output_fields(ind)%next_next_output = &
    762                & diag_time_inc(output_fields(ind)%next_output, freq, output_units, err_msg=msg)
    763           IF ( msg /= '' ) THEN
    764              IF ( fms_error_handler('diag_manager_mod::register_diag_field',&
    765                   &' file='//TRIM(files(file_num)%name)//': '//TRIM(msg),err_msg) ) RETURN
    766           END IF
    767           IF ( debug_diag_manager .AND. mpp_pe() == mpp_root_pe() .AND. output_fields(ind)%local_output ) THEN
    768              WRITE (msg,'(" lon(",F5.1,", ",F5.1,"), lat(",F5.1,", ",F5.1,"), dep(",F5.1,", ",F5.1,")")') &
    769                   & output_fields(ind)%output_grid%start(1),output_fields(ind)%output_grid%end(1),&
    770                   & output_fields(ind)%output_grid%start(2),output_fields(ind)%output_grid%end(2),&
    771                   & output_fields(ind)%output_grid%start(3),output_fields(ind)%output_grid%end(3)
    772              WRITE(stdout_unit,* ) 'module/output_field '//TRIM(module_name)//'/'//TRIM(field_name)// &
    773                   & ' will be output in region:'//TRIM(msg)
    774           END IF
    775 
    776 ! Set the cell_measures attribute in the out file
    777           CALL init_field_cell_measures(output_fields(ind), area=area, volume=volume, err_msg=err_msg)
    778           IF ( LEN_TRIM(err_msg).GT.0 ) THEN
    779              CALL error_mesg ('diag_manager_mod::register_diag_field',&
    780                   & TRIM(err_msg)//' for module/field '//TRIM(module_name)//'/'//TRIM(field_name),&
    781                   & FATAL)
    782           END IF
    783 
    784        END DO
    785     END IF
    786   END FUNCTION register_diag_field_array

Page 17          Source Listing                  REGISTER_DIAG_FIELD_ARRAY
2021-06-01 08:54 Entry Points                    diag_manager.F90



ENTRY POINTS

  Name                                                      
                                                            
 diag_manager_mod_mp_register_diag_field_array_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 AREA                       Dummy  604      I(4)            4           scalar   ARG,IN           679,680,697,698,777               
 AXES                       Dummy  602      I(4)            4     1     1        ARG,IN           648                               
 CM_FILE_NUM                Local  623      I(4)            4           scalar                                                      
 CM_FOUND                   Local  627      L(4)            4           scalar                                                      
 CM_IND                     Local  623      I(4)            4           scalar                                                      
 DEBUG_DIAG_MANAGER         Local  667      L(4)            4           scalar   PRIV             345,667,767,1984,2012,2245,2399,25
                                                                                                  80,2722,2798,2835,2876,2913,2955,2
                                                                                                  993,3027,3080,3762,4077           
 DIAG_TIME_INC              Func   756      RECORD          16          scalar   PRIV             336,756,762,3513                  
 DO_NOT_LOG                 Dummy  604      L(4)            4           scalar   ARG,IN           650                               
 ERROR_MESG                 Subr   658                                           PRIV             329,658,669,688,706,722,779,821,88
                                                                                                  1,914,921,931,939,993,1014,1037,10
                                                                                                  50,1061,1112,1161,1208,1418,1826,1
                                                                                                  843,2317,3192,3316,3581,3696,3707,
                                                                                                  3815,3828,3837,3844,3847,3853,3872
                                                                                                  ,3875,3877,3891,3929,3940,4044,407
                                                                                                  3,4082,4096,4118,4130,4143,4155,41
                                                                                                  68,4179,4267                      
 ERR_MSG                    Dummy  604      CHAR                        scalar   ARG,OUT          645,681,682,699,700,715,716,751,75
                                                                                                  9,765,777,778,780                 
 FATAL                      Param  691      I(4)            4           scalar   PRIV             329,691,709,725,781,821,883,915,92
                                                                                                  4,934,942,996,1015,1038,1055,1066,
                                                                                                  1113,1210,1420,3193,3317,3582,3843
                                                                                                  ,3930,3941,4046,4076,4100,4121,413
                                                                                                  2,4146,4157,4171,4181,4268        
 FIELD                      Local  622      I(4)            4           scalar                    675,730,732,733                   
 FIELD_NAME                 Dummy  602      CHAR                        scalar   ARG,IN           648,659,670,683,689,701,707,717,72
                                                                                                  3,772,780                         
 FILES                      Local  742      RECORD          11400 1     1        ALC,PRIV,SAVE    343,742,754,755,759,765,893,897,10
                                                                                                  49,1054,1056,1057,1060,1065,1067,1
                                                                                                  068,1133,1417,1422,1437,1874,1875,
                                                                                                  3382,3383,3474,3476,3478,3551,3553
                                                                                                  ,3554,3586,3587,3588,3665,3666,368
                                                                                                  1,3682,3733,3735,3736,3864,3904   
 FILE_NUM                   Local  622      I(4)            4           scalar                    738,739,742,749,754,755,759,765   
 FIRST_SEND_DATA_CALL       Local  652      L(4)            4           scalar   PRIV             345,652,4038                      
 FMS_ERROR_HANDLER          Func   751      L(4)            4           scalar   PRIV             330,751,758,764,1333,1341,1360,137
                                                                                                  9,1666,1683,1706,1712,1721,1727,17
                                                                                                  53,1760,1930,1942,1961,1972,1987,2
                                                                                                  001,2016,2115,2125,2249,2403,2584,
                                                                                                  2726,2802,2839,2880,2917,2959,2997
                                                                                                  ,3031,3083,3611,3620,3781,3803,389
                                                                                                  9                                 
 FREQ                       Local  622      I(4)            4           scalar                    754,756,762                       

Page 18          Source Listing                  REGISTER_DIAG_FIELD_ARRAY
2021-06-01 08:54 Symbol Table                    diag_manager.F90

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 I                          Local  623      I(4)            4           scalar                                                      
 IND                        Local  622      I(4)            4           scalar                    733,734,736,738,740,741,756,761,76
                                                                                                  2,767,769,770,771,777             
 INIT_TIME                  Dummy  602      TIME_TYPE       16          scalar   ARG,IN           736,749,756                       
 INPUT_FIELDS               Local  674      RECORD          1072  1     1        ALC,PRIV         343,674,730,732,733,876,888,889,89
                                                                                                  1,894,907,909,947,949,951,955,957,
                                                                                                  960,963,965,969,970,972,976,978,98
                                                                                                  0,981,998,1000,1005,1006,1022,1029
                                                                                                  ,1030,1032,1173,1176,1177,1179,118
                                                                                                  0,1219,1220,1221,1276,1277,1294,12
                                                                                                  95,1334,1335,1342,1343,1361,1362,1
                                                                                                  364,1365,1380,1381,1383,1384,1791,
                                                                                                  1792,1794,1796,1799,1800,1802,1803
                                                                                                  ,1806,1809,1812,1818,1819,1828,182
                                                                                                  9,1837,1838,1845,1846,1858,1928,19
                                                                                                  40,1959,1996,1999,2113,2123,2312,2
                                                                                                  319,2320,2321,3197,3198,3321,3322,
                                                                                                  3367,3369,3370,3391,3441,3524,3556
                                                                                                  ,3557,3591,3593,3609,3679,3680,368
                                                                                                  9,3860,3862,3964,3966,4045,4046,40
                                                                                                  53,4054,4075,4076,4084,4085,4098,4
                                                                                                  099,4120,4121,4131,4132,4145,4146,
                                                                                                  4156,4157,4170,4171,4180,4181,4271
                                                                                                  ,4272                             
 INTERP_METHOD              Dummy  604      CHAR                        scalar   ARG,IN           650                               
 J                          Local  622      I(4)            4           scalar                    732,733                           
 LEN_TRIM                   Func   778                                  scalar                    778                               
 LONG_NAME                  Dummy  603      CHAR                        scalar   ARG,IN           649                               
 MASK_VARIANT               Dummy  603      L(4)            4           scalar   ARG,IN           633,634                           
 MASK_VARIANT1              Local  626      L(4)            4           scalar                    634,636,649                       
 MAX_FILES                  Local  739      I(4)            4           scalar   PRIV             339,739,1872,3763,3833,3835,3838,3
                                                                                                  864,3866,3867,3868,3869           
 MISSING_VALUE              Dummy  603      R(8)            8           scalar   ARG,IN           649                               
 MODULE_NAME                Dummy  602      CHAR                        scalar   ARG,IN           648,659,670,683,689,701,707,717,72
                                                                                                  3,772,780                         
 MPP_PE                     Func   657      I(4)            4           scalar   PRIV             322,657,668,767,909,1033,1154,1957
                                                                                                  ,1971,2311,3607,3619,3695,3734,381
                                                                                                  4,3820,3852,3907                  
 MPP_ROOT_PE                Func   657      I(4)            4           scalar   PRIV             322,657,668,767,909,1033,1154,1957
                                                                                                  ,1971,2311,3607,3619,3695,3734,381
                                                                                                  4,3820,3852,3907                  
 MSG                        Local  628      CHAR            128         scalar                    749,750,751,756,757,759,762,763,76
                                                                                                  5,768,773                         
 OUTPUT_FIELDS              Local  734      RECORD          3392  1     1        ALC,PRIV         344,734,736,738,740,741,756,761,76
                                                                                                  2,767,769,770,771,777,890,892,893,
                                                                                                  896,897,1032,1043,1047,1074,1083,1
                                                                                                  084,1086,1087,1088,1089,1091,1092,
                                                                                                  1094,1095,1096,1097,1099,1102,1103
                                                                                                  ,1104,1105,1107,1109,1116,1118,111
                                                                                                  9,1122,1123,1124,1125,1126,1127,11
                                                                                                  29,1131,1132,1133,1137,1138,1139,1
                                                                                                  140,1141,1142,1144,1146,1150,1152,
                                                                                                  1166,1167,1168,1173,1175,1176,1179
                                                                                                  ,1180,1185,1186,1187,1188,1191,119
                                                                                                  5,1197,1203,1206,1215,1222,1228,12

Page 19          Source Listing                  REGISTER_DIAG_FIELD_ARRAY
2021-06-01 08:54 Symbol Table                    diag_manager.F90

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
                                                                                                  30,1231,1233,1234,1237,1278,1281,1
                                                                                                  282,1283,1284,1296,1307,1354,1373,
                                                                                                  1438,1861,1863,1865,1871,1877,1880
                                                                                                  ,1882,1884,1885,1887,1888,1889,189
                                                                                                  1,1893,1895,1896,1903,1910,1911,19
                                                                                                  12,1914,1915,1922,1923,1925,1929,1
                                                                                                  938,1941,1953,1954,1956,1960,1984,
                                                                                                  2000,2030,2031,2034,2035,2038,2039
                                                                                                  ,2050,2051,2054,2055,2058,2059,207
                                                                                                  4,2075,2078,2079,2082,2083,2094,20
                                                                                                  95,2098,2099,2102,2103,2114,2124,2
                                                                                                  145,2146,2149,2150,2154,2171,2172,
                                                                                                  2175,2176,2180,2192,2193,2206,2207
                                                                                                  ,2210,2211,2215,2228,2229,2232,223
                                                                                                  3,2237,2261,2262,2265,2266,2270,22
                                                                                                  82,2283,2286,2287,2291,2302,2303,2
                                                                                                  305,2306,2331,2334,2348,2351,2363,
                                                                                                  2364,2375,2376,2379,2380,2388,2389
                                                                                                  ,2392,2393,2411,2412,2415,2416,242
                                                                                                  2,2423,2426,2427,2434,2435,2451,24
                                                                                                  52,2455,2456,2460,2477,2478,2481,2
                                                                                                  482,2486,2498,2499,2508,2526,2527,
                                                                                                  2530,2531,2535,2550,2551,2554,2555
                                                                                                  ,2559,2572,2596,2597,2600,2601,260
                                                                                                  5,2617,2618,2621,2622,2626,2638,26
                                                                                                  55,2658,2672,2675,2688,2689,2700,2
                                                                                                  701,2704,2705,2711,2712,2715,2716,
                                                                                                  2734,2735,2738,2739,2745,2746,2749
                                                                                                  ,2750,2757,2758,2765,2766,2768,278
                                                                                                  3,2784,2795,2796,2809,2810,2821,28
                                                                                                  22,2832,2833,2845,2846,2849,2861,2
                                                                                                  862,2873,2874,2887,2888,2899,2900,
                                                                                                  2910,2911,2923,2924,2927,2939,2940
                                                                                                  ,2951,2952,2966,2967,2979,2980,298
                                                                                                  9,2990,3003,3004,3008,3010,3017,30
                                                                                                  25,3037,3050,3063,3072,3080,3101,3
                                                                                                  114,3123,3364,3366,3371,3372,3374,
                                                                                                  3377,3379,3380,3381,3387,3388,3389
                                                                                                  ,3390,3396,3397,3398,3399,3400,340
                                                                                                  2,3412,3414,3417,3424,3425,3426,34
                                                                                                  27,3433,3434,3435,3439,3442,3452,3
                                                                                                  453,3459,3461,3463,3464,3466,3467,
                                                                                                  3468,3472,3473,3475,3479,3482,3486
                                                                                                  ,3490,3492,3495,3504,3506,3509,351
                                                                                                  1,3512,3513,3515,3516,3518,3520,35
                                                                                                  22,3524,3555,3558,3560,3589,3592,3
                                                                                                  597,3599,3604,3606,3610,3669,3671,
                                                                                                  3673,3678,3683,3684,3687,3688,3690
                                                                                                  ,3702,3708,3710,3711,3714,3715,371
                                                                                                  7,3718,3719,3724,3859,3967,3968,39
                                                                                                  72,4057,4061,4062,4089,4102,4104,4
                                                                                                  105,4107,4125,4135,4136,4150,4160,
                                                                                                  4161,4173,4273                    
 OUTPUT_UNITS               Local  624      I(4)            4           scalar                    755,756,762                       
 PRESENT                    Func   633                                  scalar                    633,639,645,679,681,697,699,713,71

Page 20          Source Listing                  REGISTER_DIAG_FIELD_ARRAY
2021-06-01 08:54 Symbol Table                    diag_manager.F90

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
                                                                                                  5,730                             
 RANGE                      Dummy  603      R(8)            8     1     2        ARG,IN           649                               
 REALM                      Dummy  604      CHAR                        scalar   ARG,IN           650                               
 REGISTER_DIAG_FIELD_ARRAY  Func   602      I(4)            4           scalar   PRIV             568,648,663,674,675,685,703,719   
 STANDARD_NAME              Dummy  603      CHAR                        scalar   ARG,IN           649,730                           
 STDOUT                     Func   631      I(4)            4           scalar   PRIV             329,631,3662,3790                 
 STDOUT_UNIT                Local  625      I(4)            4           scalar                    631,772                           
 SYNC_FILE_TIMES            Subr   749                                           PRIV             337,749                           
 TILE_COUNT                 Dummy  604      I(4)            4           scalar   ARG,IN           650                               
 TIME_ASSIGNMENT            Subr   736                                           PRIV             736,756,761,1203,1806,1925,3459,34
                                                                                                  73,3475,3477,3479,3504,3506,3509,3
                                                                                                  511,3512,3532,3593,3602,3795,3797,
                                                                                                  3886,3889,3931                    
 TRIM                       Func   659                                  scalar                    659,670,683,689,701,707,717,723,75
                                                                                                  1,759,765,772,773,780             
 UNITS                      Dummy  603      CHAR                        scalar   ARG,IN           649                               
 VERBOSE                    Dummy  603      L(4)            4           scalar   ARG,IN           639,640                           
 VERBOSE1                   Local  626      L(4)            4           scalar                    640,642,667                       
 VOLUME                     Dummy  604      I(4)            4           scalar   ARG,IN           679,680,713,714,777               
 WARNING                    Param  660      I(4)            4           scalar   PRIV             329,660,671,1164,2320,3697,3816,38
                                                                                                  56,3879                           


TYPE COMPONENTS/COMMON VARIABLES

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 DIAG_GRID.END              R(8)            8     24       1     3                         769,770,771                        
 DIAG_GRID.START            R(8)            8     0        1     3                         769,770,771                        
 FILE_TYPE.LOCAL            L(4)            4     1512           scalar                    742,1133                           
 FILE_TYPE.NAME             CHAR            128   0              scalar                    759,765,893,897,1054,1065,1417,142 
                                                                                           2,3736                             
 FILE_TYPE.OUTPUT_FREQ      I(4)            4     1460           scalar                    754,1874,3382,3551,3586,3681       
 FILE_TYPE.OUTPUT_UNITS     I(4)            4     1464           scalar                    755,1875,3383                      
 INPUT_FIELD_TYPE.NUM_OUTPUT_FIELDS                                                                                        ...
                            I(4)            4     952            scalar                    732,888,1029,1220,1276,1294,1794,3 
                                                                                           964,4053,4271                      
 INPUT_FIELD_TYPE.OUTPUT_FIELDS                                                                                            ...
                            I(4)            4     880      1     1        ALC              733,889,1030,1221,1277,1295,1858,3 
                                                                                           862,3966,4054,4272                 
 INPUT_FIELD_TYPE.STANDARD_NAME                                                                                            ...
                            CHAR            256   512            scalar                    730,960                            
 INPUT_FIELD_TYPE.STATIC    L(4)            4     968            scalar                    674,907,3367,3679                  
 OUTPUT_FIELD_TYPE.LAST_OUTPUT                                                                                             ...
                            TIME_TYPE       16    656            scalar                    736,1283,1923,3473,3475,3504       
 OUTPUT_FIELD_TYPE.LOCAL_OUTPUT                                                                                            ...
                            L(4)            4     3248           scalar                    740,767,1109,1175,1861,3597,3669   
 OUTPUT_FIELD_TYPE.NEED_COMPUTE                                                                                            ...
                            L(4)            4     3252           scalar                    741,1116,1863,3364,3599,3671       
 OUTPUT_FIELD_TYPE.NEXT_NEXT_OUTPUT                                                                                        ...
                            TIME_TYPE       16    688            scalar                    761,1956,3511,3512,3513,3606,3688  
 OUTPUT_FIELD_TYPE.NEXT_OUTPUT                                                                                             ...
                            TIME_TYPE       16    672            scalar                    756,762,1282,1923,1925,1954,3459,3 
                                                                                           473,3479,3492,3495,3504,3506,3509, 
                                                                                           3511,3604,3687,3968                

Page 21          Source Listing                  REGISTER_DIAG_FIELD_ARRAY
2021-06-01 08:54 Symbol Table                    diag_manager.F90

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 OUTPUT_FIELD_TYPE.OUTPUT_FILE                                                                                             ...
                            I(4)            4     4              scalar                    738,890,1047,1133,1268,1278,1296,1 
                                                                                           348,1871,3381,3558                 
 OUTPUT_FIELD_TYPE.OUTPUT_GRID                                                                                             ...
                            DIAG_GRID       88    3160           scalar                    769,770,771,1083,1084,1091,1092,11 
                                                                                           18,1119,1180,1195,1197,1895,1896,1 
                                                                                           911,1912,1914,1915                 
 OUTPUT_FIELD_TYPE.STATIC   L(4)            4     144            scalar                    734,1150,1284,1307,1922,1938,1953, 
                                                                                           1984,3080,3592,3967                

Page 22          Source Listing                  REGISTER_DIAG_FIELD_ARRAY
2021-06-01 08:54                                 diag_manager.F90

    787 
    788 !> @brief Return field index for subsequent call to send_data.
    789 !! @return Return (integer) field index for subsequent call to send_data.
    790   INTEGER FUNCTION register_static_field(module_name, field_name, axes, long_name, units,&
    791        & missing_value, range, mask_variant, standard_name, DYNAMIC, do_not_log, interp_method,&
    792        & tile_count, area, volume, realm)
    793     CHARACTER(len=*), INTENT(in) :: module_name, field_name
    794     INTEGER, DIMENSION(:), INTENT(in) :: axes
    795     CHARACTER(len=*), OPTIONAL, INTENT(in) :: long_name, units, standard_name
    796     REAL, OPTIONAL, INTENT(in) :: missing_value
    797     REAL, DIMENSION(2), OPTIONAL, INTENT(in) :: range
    798     LOGICAL, OPTIONAL, INTENT(in) :: mask_variant
    799     LOGICAL, OPTIONAL, INTENT(in) :: DYNAMIC
    800     LOGICAL, OPTIONAL, INTENT(in) :: do_not_log !< if TRUE, field information is not logged
    801     CHARACTER(len=*), OPTIONAL, INTENT(in) :: interp_method !< The interp method to be used when
    802 !! regridding the field in post-processing.
    803 !! Valid options are "conserve_order1",
    804 !! "conserve_order2", and "none".
    805     INTEGER,          OPTIONAL, INTENT(in) :: tile_count
    806     INTEGER,          OPTIONAL, INTENT(in) :: area !< Field ID for the area field associated with this field
    807     INTEGER,          OPTIONAL, INTENT(in) :: volume !< Field ID for the volume field associated with this field
    808     CHARACTER(len=*), OPTIONAL, INTENT(in) :: realm !< String to set as the value to the modeling_realm attribute
    809 
    810     REAL :: missing_value_use
    811     INTEGER :: field, num_axes, j, out_num, k
    812     INTEGER, DIMENSION(3) :: siz, local_siz, local_start, local_end ! indices of local domain of global axes
    813     INTEGER :: tile, file_num
    814     LOGICAL :: mask_variant1, dynamic1, allow_log
    815     CHARACTER(len=128) :: msg
    816     INTEGER :: domain_type
    817 
    818 ! Fatal error if the module has not been initialized.
    819     IF ( .NOT.module_is_initialized ) THEN
    820 ! <ERROR STATUS="FATAL">diag_manager has NOT been initialized</ERROR>
    821        CALL error_mesg ('diag_manager_mod::register_static_field', 'diag_manager has NOT been initialized', FATAL)
    822     END IF
    823 
    824 ! Check if OPTIONAL parameters were passed in.
    825     IF ( PRESENT(missing_value) ) THEN
    826        IF ( use_cmor ) THEN
    827           missing_value_use = CMOR_MISSING_VALUE
    828        ELSE
    829           missing_value_use = missing_value
    830        END IF
    831     END IF
    832 
    833     IF ( PRESENT(mask_variant) ) THEN
    834        mask_variant1 = mask_variant
    835     ELSE
    836        mask_variant1 = .FALSE.
    837     END IF
    838 
    839     IF ( PRESENT(DYNAMIC) ) THEN
    840        dynamic1 = DYNAMIC
    841     ELSE
    842        dynamic1 = .FALSE.
    843     END IF

Page 23          Source Listing                  REGISTER_STATIC_FIELD
2021-06-01 08:54                                 diag_manager.F90

    844 
    845     IF ( PRESENT(tile_count) ) THEN
    846        tile = tile_count
    847     ELSE
    848        tile = 1
    849     END IF
    850 
    851     IF ( PRESENT(do_not_log) ) THEN
    852        allow_log = .NOT.do_not_log
    853     ELSE
    854        allow_log = .TRUE.
    855     END IF
    856 
    857 ! Namelist do_diag_field_log is by default false.  Thus to log the
    858 ! registration of the data field, but the OPTIONAL parameter
    859 ! do_not_log == .FALSE. and the namelist variable
    860 ! do_diag_field_log == .TRUE..
    861     IF ( do_diag_field_log.AND.allow_log ) THEN
    862        CALL log_diag_field_info (module_name, field_name, axes, &
    863             & long_name, units, missing_value=missing_value, range=range, &
    864             & DYNAMIC=dynamic1)
    865     END IF
    866 
    867     register_static_field = find_input_field(module_name, field_name, 1)
    868     field = register_static_field
    869 ! Negative index returned if this field was not found in the diag_table.
    870     IF ( register_static_field < 0 ) RETURN
    871 
    872 ! Check that the axes are compatible with each other
    873     domain_type = axis_compatible_check(axes,field_name)
    874 
    875     IF ( tile > 1 ) THEN
    876        IF ( .NOT.input_fields(field)%register ) THEN
    877 ! <ERROR STATUS="FATAL">
    878 !   module/output_field <module_name>/<field_name> is not registered for tile_count = 1,
    879 !   should not register for tile_count > 1
    880 ! </ERROR>
    881           CALL error_mesg ('diag_manager_mod::register_diag_field', 'module/output_field '//trim(module_name)//'/'//&
    882            & TRIM(field_name)//' is not registered for tile_count = 1, should not register for tile_count > 1',&
    883            & FATAL)
    884        END IF
    885 
    886        CALL init_input_field(module_name, field_name, tile)
    887        register_static_field = find_input_field(module_name, field_name, tile)
    888        DO j = 1, input_fields(field)%num_output_fields
    889           out_num = input_fields(field)%output_fields(j)
    890           file_num = output_fields(out_num)%output_file
    891           IF(input_fields(field)%local) THEN
    892              CALL init_output_field(module_name, field_name,output_fields(out_num)%output_name,&
    893                   & files(file_num)%name,output_fields(out_num)%time_method, output_fields(out_num)%pack,&
    894                   & tile, input_fields(field)%local_coord)
    895           ELSE
    896              CALL init_output_field(module_name, field_name,output_fields(out_num)%output_name,&
    897                   & files(file_num)%name,output_fields(out_num)%time_method, output_fields(out_num)%pack, tile)
    898           END IF
    899        END DO
    900        field = register_static_field

Page 24          Source Listing                  REGISTER_STATIC_FIELD
2021-06-01 08:54                                 diag_manager.F90

    901     END IF
    902 
    903 ! Store information for this input field into input field table
    904 
    905 ! Set static to true, if called by register_diag_field this is
    906 ! flipped back to false
    907     input_fields(field)%static = .TRUE.
    908 ! check if the field is registered twice
    909     IF ( input_fields(field)%register .AND. mpp_pe() == mpp_root_pe() ) THEN
    910 ! <ERROR STATUS="FATAL">
    911 !   module/output_field <module_name>/<field_name> ALREADY Registered, should
    912 !   not register twice
    913 ! </ERROR>
    914        CALL error_mesg ('diag_manager_mod::register_diag_field', 'module/output_field '//trim(module_name)//'/'//&
    915             & TRIM(field_name)//' ALREADY registered, should not register twice', FATAL)
    916     END IF
    917 
    918 ! Verify that area and volume do not point to the same variable
    919     IF ( PRESENT(volume).AND.PRESENT(area) ) THEN
    920        IF ( area.EQ.volume ) THEN
    921           CALL error_mesg ('diag_manager_mod::register_static_field', 'module/output_field '&
    922                &//TRIM(module_name)//'/'// TRIM(field_name)//' AREA and VOLUME CANNOT be the same variable.&
    923                & Contact the developers.',&
    924                & FATAL)
    925        END IF
    926     END IF
    927 
    928 ! Check for the existence of the area/volume field(s)
    929     IF ( PRESENT(area) ) THEN
    930        IF ( area < 0 ) THEN
    931           CALL error_mesg ('diag_manager_mod::register_static_field', 'module/output_field '&
    932                &//TRIM(module_name)//'/'// TRIM(field_name)//' AREA measures field NOT found in diag_table.&
    933                & Contact the model liaison.n',&
    934                & FATAL)
    935        END IF
    936     END IF
    937     IF ( PRESENT(volume) ) THEN
    938        IF ( volume < 0 ) THEN
    939           CALL error_mesg ('diag_manager_mod::register_static_field', 'module/output_field '&
    940                &//TRIM(module_name)//'/'// TRIM(field_name)//' VOLUME measures field NOT found in diag_table&
    941                & Contact the model liaison.',&
    942                & FATAL)
    943        END IF
    944     END IF
    945 
    946 ! Set flag that this field was registered
    947     input_fields(field)%register = .TRUE.
    948 ! set flag for mask: does it change with time?
    949     input_fields(field)%mask_variant = mask_variant1
    950 ! Set flag for mask warning
    951     input_fields(field)%issued_mask_ignore_warning = .FALSE.
    952 
    953 ! Check for more OPTIONAL parameters.
    954     IF ( PRESENT(long_name) ) THEN
    955        input_fields(field)%long_name = TRIM(long_name)
    956     ELSE
    957        input_fields(field)%long_name = input_fields(field)%field_name

Page 25          Source Listing                  REGISTER_STATIC_FIELD
2021-06-01 08:54                                 diag_manager.F90

    958     END IF
    959 
    960     IF ( PRESENT(standard_name) ) input_fields(field)%standard_name = standard_name
    961 
    962     IF ( PRESENT(units) ) THEN
    963        input_fields(field)%units = TRIM(units)
    964     ELSE
    965        input_fields(field)%units = 'none'
    966     END IF
    967 
    968     IF ( PRESENT(missing_value) ) THEN
    969        input_fields(field)%missing_value = missing_value_use
    970        input_fields(field)%missing_value_present = .TRUE.
    971     ELSE
    972        input_fields(field)%missing_value_present = .FALSE.
    973     END IF
    974 
    975     IF ( PRESENT(range) ) THEN
    976        input_fields(field)%range = range
    977 ! don't use the range if it is not a valid range
    978        input_fields(field)%range_present = range(2) .gt. range(1)
    979     ELSE
    980        input_fields(field)%range = (/ 1., 0. /)
    981        input_fields(field)%range_present = .FALSE.
    982     END IF
    983 
    984     IF ( PRESENT(interp_method) ) THEN
    985        IF ( TRIM(interp_method) .NE. 'conserve_order1' .AND.&
    986             & TRIM(interp_method) .NE. 'conserve_order2' .AND.&
    987             & TRIM(interp_method) .NE. 'none' ) THEN
    988 ! <ERROR STATUS="FATAL">
    989 !   when registering module/output_field <module_name>/<field_name> then optional
    990 !   argument interp_method = <interp_method>, but it should be "conserve_order1",
    991 !   "conserve_order2", or "none"
    992 ! </ERROR>
    993           CALL error_mesg ('diag_manager_mod::register_diag_field',&
    994                & 'when registering module/output_field '//TRIM(module_name)//'/'//&
    995                & TRIM(field_name)//', the optional argument interp_method = '//TRIM(interp_method)//&
    996                & ', but it should be "conserve_order1", "conserve_order2", or "none"', FATAL)
    997        END IF
    998        input_fields(field)%interp_method = TRIM(interp_method)
    999     ELSE
   1000        input_fields(field)%interp_method = ''
   1001     END IF
   1002 
   1003 ! Store the axis info
   1004     num_axes = SIZE(axes(:)) ! num_axes should be <= 3.
   1005     input_fields(field)%axes(1:num_axes) = axes
   1006     input_fields(field)%num_axes = num_axes
   1007 
   1008     siz = 1
   1009     DO j = 1, num_axes
   1010        IF ( axes(j) .LE. 0 ) THEN
   1011 ! <ERROR STATUS="FATAL">
   1012 !   module/output_field <module_name>/<field_name> has non-positive axis_id
   1013 ! </ERROR>
   1014           CALL error_mesg ('diag_manager_mod::register_diag_field', 'module/output_field '//trim(module_name)//'/'//&

Page 26          Source Listing                  REGISTER_STATIC_FIELD
2021-06-01 08:54                                 diag_manager.F90

   1015                & TRIM(field_name)//' has non-positive axis_id', FATAL)
   1016        END IF
   1017        siz(j) = get_axis_length(axes(j))
   1018     END DO
   1019 
   1020 ! Default length for axes is 1
   1021     DO j = 1, 3
   1022        input_fields(field)%size(j) = siz(j)
   1023     END DO
   1024 
   1025     local_siz = 1
   1026     local_start = 1
   1027     local_end= 1
   1028 ! Need to loop through all output_fields associated and allocate their buffers
   1029     DO j = 1, input_fields(field)%num_output_fields
   1030        out_num = input_fields(field)%output_fields(j)
   1031 ! Range is required when pack >= 4
   1032        IF ( output_fields(out_num)%pack>=4 .AND. .NOT.input_fields(field)%range_present ) THEN
   1033           IF(mpp_pe() .EQ. mpp_root_pe()) THEN
   1034 ! <ERROR STATUS="FATAL">
   1035 !   output_field <field_name> has pack >= 4, range is REQUIRED in register_diag_field
   1036 ! </ERROR>
   1037              CALL error_mesg ('diag_manager_mod::register_diag_field ', 'output_field '//TRIM(field_name)// &
   1038                   ' has pack >=4, range is REQUIRED in register_diag_field', FATAL)
   1039           END IF
   1040        END IF
   1041 ! reset the number of diurnal samples to 1 if the field is static (and, therefore,
   1042 ! doesn't vary diurnally)
   1043        IF ( .NOT.dynamic1 ) output_fields(out_num)%n_diurnal_samples = 1
   1044 
   1045 !Check that the domain associated with the inputted field matches
   1046 !the domain associated output files to which it will be written.
   1047        file_num = output_fields(out_num)%output_file
   1048        if (domain_type .eq. DIAG_AXIS_2DDOMAIN) then
   1049            if (files(file_num)%use_domainUG) then
   1050                call error_mesg("diag_manager_mod::register_static_field", &
   1051                                "Diagnostics living on a structured grid" &
   1052                                //" and an unstructured grid cannot exist" &
   1053                                //" in the same file (" &
   1054                                //trim(files(file_num)%name)//")", &
   1055                                FATAL)
   1056            elseif (.not. files(file_num)%use_domain2D) then
   1057                files(file_num)%use_domain2D = .true.
   1058            endif
   1059        elseif (domain_type .eq. DIAG_AXIS_UGDOMAIN) then
   1060            if (files(file_num)%use_domain2D) then
   1061                call error_mesg("diag_manager_mod::register_static_field", &
   1062                                "Diagnostics living on a structured grid" &
   1063                                //" and an unstructured grid cannot exist" &
   1064                                //" in the same file (" &
   1065                                //trim(files(file_num)%name)//")", &
   1066                                FATAL)
   1067            elseif (.not. files(file_num)%use_domainUG) then
   1068                files(file_num)%use_domainUG = .true.
   1069            endif
   1070        endif
   1071 

Page 27          Source Listing                  REGISTER_STATIC_FIELD
2021-06-01 08:54                                 diag_manager.F90

   1072 
   1073 !  if local_output (size of output_fields does NOT equal size of input_fields)
   1074        IF ( output_fields(out_num)%reduced_k_range ) THEN
   1075           CALL get_subfield_vert_size(axes, out_num)
   1076 
   1077 !----------
   1078 !ug support
   1079 !Send_data requires that the reduced k dimension be the 3rd dimension
   1080 !of the buffer, so set it to be the correct size.  If the diagnostic
   1081 !is unstructured, set the second dimension of the buffer to be 1.
   1082           if (domain_type .eq. DIAG_AXIS_UGDOMAIN) then
   1083               local_start(2) = output_fields(out_num)%output_grid%l_start_indx(2)
   1084               local_end(2) = output_fields(out_num)%output_grid%l_end_indx(2)
   1085               local_siz(2) = local_end(2) - local_start(2) + 1
   1086               allocate(output_fields(out_num)%buffer(siz(1),local_siz(2),siz(3), &
   1087                                                      output_fields(out_num)%n_diurnal_samples))
   1088               output_fields(out_num)%region_elements = siz(1)*local_siz(2)*siz(3)
   1089               output_fields(out_num)%reduced_k_unstruct = .true.
   1090           else
   1091               local_start(3) = output_fields(out_num)%output_grid%l_start_indx(3)
   1092               local_end(3) = output_fields(out_num)%output_grid%l_end_indx(3)
   1093               local_siz(3) = local_end(3) - local_start(3) + 1
   1094               allocate(output_fields(out_num)%buffer(siz(1),siz(2),local_siz(3), &
   1095                                                      output_fields(out_num)%n_diurnal_samples))
   1096               output_fields(out_num)%region_elements = siz(1)*siz(2)*local_siz(3)
   1097               output_fields(out_num)%reduced_k_unstruct = .false.
   1098           endif
   1099           output_fields(out_num)%total_elements = siz(1)*siz(2)*siz(3)
   1100 !----------
   1101 
   1102           IF ( output_fields(out_num)%time_max ) THEN
   1103              output_fields(out_num)%buffer = MAX_VALUE
   1104           ELSE IF ( output_fields(out_num)%time_min ) THEN
   1105              output_fields(out_num)%buffer = MIN_VALUE
   1106           ELSE
   1107              output_fields(out_num)%buffer = EMPTY
   1108           END IF
   1109        ELSE IF ( output_fields(out_num)%local_output ) THEN
   1110           IF ( SIZE(axes(:)) .LE. 1 ) THEN
   1111 ! <ERROR STATUS="FATAL">axes of <field_name> must >= 2 for local output</ERROR>
   1112              CALL error_mesg ('diag_manager_mod::register_diag_field', 'axes of '//TRIM(field_name)//&
   1113                   & ' must >= 2 for local output', FATAL)
   1114           END IF
   1115           CALL get_subfield_size(axes, out_num)
   1116           IF ( output_fields(out_num)%need_compute ) THEN
   1117              DO k = 1, num_axes
   1118                 local_start(k) = output_fields(out_num)%output_grid%l_start_indx(k)
   1119                 local_end(k) = output_fields(out_num)%output_grid%l_end_indx(k)
   1120                 local_siz(k) = local_end(k) - local_start(k) +1
   1121              END DO
   1122              ALLOCATE(output_fields(out_num)%buffer(local_siz(1), local_siz(2), local_siz(3),&
   1123                   & output_fields(out_num)%n_diurnal_samples))
   1124              IF(output_fields(out_num)%time_max) THEN
   1125                 output_fields(out_num)%buffer = MAX_VALUE
   1126              ELSE IF(output_fields(out_num)%time_min) THEN
   1127                 output_fields(out_num)%buffer = MIN_VALUE
   1128              ELSE

Page 28          Source Listing                  REGISTER_STATIC_FIELD
2021-06-01 08:54                                 diag_manager.F90

   1129                 output_fields(out_num)%buffer = EMPTY
   1130              END IF
   1131              output_fields(out_num)%region_elements = local_siz(1)*local_siz(2)*local_siz(3)
   1132              output_fields(out_num)%total_elements = siz(1)*siz(2)*siz(3)
   1133              files(output_fields(out_num)%output_file)%local = .true.
   1134           END IF
   1135        ELSE ! the field is output globally
   1136 ! size of output_fields equal size of input_fields
   1137           ALLOCATE(output_fields(out_num)%buffer(siz(1), siz(2), siz(3),&
   1138                & output_fields(out_num)%n_diurnal_samples))
   1139           IF(output_fields(out_num)%time_max) THEN
   1140              output_fields(out_num)%buffer = MAX_VALUE
   1141           ELSE IF(output_fields(out_num)%time_min) THEN
   1142              output_fields(out_num)%buffer = MIN_VALUE
   1143           ELSE
   1144              output_fields(out_num)%buffer = EMPTY
   1145           END IF
   1146           output_fields(out_num)%total_elements = siz(1)*siz(2)*siz(3)
   1147        END IF
   1148 
   1149 ! Reset to false in register_field if this is not static
   1150        output_fields(out_num)%static = .TRUE.
   1151 ! check if time average is true for static field
   1152        IF ( .NOT.dynamic1 .AND. output_fields(out_num)%time_ops ) THEN
   1153           WRITE (msg,'(a,"/",a)') TRIM(module_name), TRIM(field_name)
   1154           IF ( mpp_pe() .EQ. mpp_root_pe() ) THEN
   1155 ! <ERROR STATUS="WARNING">
   1156 !   module/field <module_name>/<field_name> is STATIC.
   1157 !   Cannot perform time operations average, maximum or
   1158 !   minimum on static fields.  Setting the time operation to 'NONE'
   1159 !   for this field.
   1160 ! </ERROR>
   1161              CALL error_mesg ('diag_manager_mod::register_static_field',&
   1162                   & 'module/field '//TRIM(msg)//' is STATIC.  Cannot perform time operations&
   1163                   & average, maximum, or minimum on static fields.  Setting the time operation&
   1164                   & to "NONE" for this field.', WARNING)
   1165           END IF
   1166           output_fields(out_num)%time_ops = .FALSE.
   1167           output_fields(out_num)%time_average = .FALSE.
   1168           output_fields(out_num)%time_method = 'point'
   1169        END IF
   1170 
   1171 ! assume that the number of axes of output_fields = that of input_fields
   1172 ! this should be changed later to take into account time-of-day axis
   1173        output_fields(out_num)%num_axes = input_fields(field)%num_axes
   1174 ! Axes are copied from input_fields if output globally or from subaxes if output locally
   1175        IF ( .NOT.output_fields(out_num)%local_output ) THEN
   1176           output_fields(out_num)%axes(1:input_fields(field)%num_axes) =&
   1177                & input_fields(field)%axes(1:input_fields(field)%num_axes)
   1178        ELSE
   1179           output_fields(out_num)%axes(1:input_fields(field)%num_axes) =&
   1180                & output_fields(out_num)%output_grid%subaxes(1:input_fields(field)%num_axes)
   1181        END IF
   1182 
   1183 ! if necessary, initialize the diurnal time axis and append its index in the
   1184 ! output field axes array
   1185        IF ( output_fields(out_num)%n_diurnal_samples > 1 ) THEN

Page 29          Source Listing                  REGISTER_STATIC_FIELD
2021-06-01 08:54                                 diag_manager.F90

   1186           output_fields(out_num)%axes(output_fields(out_num)%num_axes+1) =&
   1187                & init_diurnal_axis(output_fields(out_num)%n_diurnal_samples)
   1188           output_fields(out_num)%num_axes = output_fields(out_num)%num_axes+1
   1189        END IF
   1190 
   1191        IF ( output_fields(out_num)%reduced_k_range ) THEN
   1192 !----------
   1193 !ug support
   1194           if (domain_type .eq. DIAG_AXIS_UGDOMAIN) then
   1195               output_fields(out_num)%axes(2) = output_fields(out_num)%output_grid%subaxes(2)
   1196           else
   1197               output_fields(out_num)%axes(3) = output_fields(out_num)%output_grid%subaxes(3)
   1198           endif
   1199 !----------
   1200        END IF
   1201 
   1202 ! Initialize a time variable used in an error check
   1203        output_fields(out_num)%Time_of_prev_field_data = Time_zero
   1204 
   1205 ! Set the cell_measures attribute in the out file
   1206        CALL init_field_cell_measures(output_fields(out_num), area=area, volume=volume, err_msg=msg)
   1207        IF ( LEN_TRIM(msg).GT.0 ) THEN
   1208           CALL error_mesg ('diag_manager_mod::register_static_field',&
   1209                & TRIM(msg)//' for module/field '//TRIM(module_name)//'/'//TRIM(field_name),&
   1210                & FATAL)
   1211        END IF
   1212 
   1213 ! Add the modeling_realm attribute
   1214        IF ( PRESENT(realm) ) THEN
   1215           CALL prepend_attribute(output_fields(out_num), 'modeling_realm', lowercase(TRIM(realm)))
   1216        END IF
   1217     END DO
   1218 
   1219     IF ( input_fields(field)%mask_variant ) THEN
   1220        DO j = 1, input_fields(field)%num_output_fields
   1221           out_num = input_fields(field)%output_fields(j)
   1222           IF(output_fields(out_num)%time_average) THEN
   1223 !----------
   1224 !ug support
   1225 !Send_data requires that the reduced k dimension be the 3rd dimension
   1226 !of the counter array, so set it to be the correct size.  If the diagnostic
   1227 !is unstructured, set the second dimension of the counter array to be 1.
   1228               if (output_fields(out_num)%reduced_k_range .and. &
   1229                   domain_type .eq. DIAG_AXIS_UGDOMAIN) then
   1230                   allocate(output_fields(out_num)%counter(siz(1),local_siz(2),siz(3), &
   1231                                                           output_fields(out_num)%n_diurnal_samples))
   1232               else
   1233                   allocate(output_fields(out_num)%counter(siz(1),siz(2),siz(3), &
   1234                                                           output_fields(out_num)%n_diurnal_samples))
   1235               endif
   1236 !----------
   1237              output_fields(out_num)%counter = 0.0
   1238           END IF
   1239        END DO
   1240     END IF
   1241   END FUNCTION register_static_field

Page 30          Source Listing                  REGISTER_STATIC_FIELD
2021-06-01 08:54 Entry Points                    diag_manager.F90



ENTRY POINTS

  Name                                                  
                                                        
 diag_manager_mod_mp_register_static_field_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ALLOW_LOG                  Local  814      L(4)            4           scalar                    852,854,861                       
 AREA                       Dummy  792      I(4)            4           scalar   ARG,IN           919,920,929,930,1206              
 AXES                       Dummy  790      I(4)            4     1     1        ARG,IN           862,873,1004,1005,1010,1017,1075,1
                                                                                                  110,1115                          
 AXIS_COMPATIBLE_CHECK      Func   873      I(4)            4           scalar   PRIV             333,873                           
 CMOR_MISSING_VALUE         Param  827      R(8)            8           scalar                    339,375,827,3827                  
 DIAG_AXIS_2DDOMAIN         Param  1048     I(4)            4           scalar   PRIV             363,1048                          
 DIAG_AXIS_UGDOMAIN         Param  1059     I(4)            4           scalar   PRIV             364,1059,1082,1194,1229           
 DOMAIN_TYPE                Local  816      I(4)            4           scalar                    873,1048,1059,1082,1194,1229      
 DO_DIAG_FIELD_LOG          Local  861      L(4)            4           scalar   PRIV             345,861,3637,3762,3907            
 DO_NOT_LOG                 Dummy  791      L(4)            4           scalar   ARG,IN           851,852                           
 DYNAMIC                    Dummy  791      L(4)            4           scalar   ARG,IN           839,840                           
 DYNAMIC1                   Local  814      L(4)            4           scalar                    840,842,864,1043,1152             
 EMPTY                      Local  1107     R(8)            8           scalar   PRIV             341,1107,1129,1144,3522           
 FIELD                      Local  811      I(4)            4           scalar                    868,876,888,889,891,894,900,907,90
                                                                                                  9,947,949,951,955,957,960,963,965,
                                                                                                  969,970,972,976,978,980,981,998,10
                                                                                                  00,1005,1006,1022,1029,1030,1032,1
                                                                                                  173,1176,1177,1179,1180,1219,1220,
                                                                                                  1221                              
 FIELD_NAME                 Dummy  790      CHAR                        scalar   ARG,IN           862,867,873,882,886,887,892,896,91
                                                                                                  5,922,932,940,995,1015,1037,1112,1
                                                                                                  153,1209                          
 FILE_NUM                   Local  813      I(4)            4           scalar                    890,893,897,1047,1049,1054,1056,10
                                                                                                  57,1060,1065,1067,1068            
 FIND_INPUT_FIELD           Func   867      I(4)            4           scalar   PRIV             336,867,887,1253                  
 GET_AXIS_LENGTH            Func   1017     I(4)            4           scalar   PRIV             332,1017                          
 GET_SUBFIELD_SIZE          Subr   1115                                          PRIV             334,1115                          
 GET_SUBFIELD_VERT_SIZE     Subr   1075                                          PRIV             337,1075                          
 INIT_DIURNAL_AXIS@0        Local  1187     I(4)            4           scalar                                                      
 INIT_INPUT_FIELD           Subr   886                                           PRIV             336,886                           
 INIT_OUTPUT_FIELD          Subr   892                                           PRIV             336,892,896                       
 INTERP_METHOD              Dummy  791      CHAR                        scalar   ARG,IN           984,985,986,987,995,998           
 J                          Local  811      I(4)            4           scalar                    888,889,1009,1010,1017,1021,1022,1
                                                                                                  029,1030,1220,1221                
 K                          Local  811      I(4)            4           scalar                    1117,1118,1119,1120               
 LEN_TRIM                   Func   1207                                 scalar                    1207                              
 LOCAL_END                  Local  812      I(4)            4     1     3                         1027,1084,1085,1092,1093,1119,1120
 LOCAL_SIZ                  Local  812      I(4)            4     1     3                         1025,1085,1086,1088,1093,1094,1096
                                                                                                  ,1120,1122,1131,1230              
 LOCAL_START                Local  812      I(4)            4     1     3                         1026,1083,1085,1091,1093,1118,1120
 LOG_DIAG_FIELD_INFO        Subr   862                                           PRIV             334,862                           
 LONG_NAME                  Dummy  790      CHAR                        scalar   ARG,IN           863,954,955                       
 LOWERCASE                  Func   1215     CHAR                        scalar   TGT,PRIV         330,1215                          

Page 31          Source Listing                  REGISTER_STATIC_FIELD
2021-06-01 08:54 Symbol Table                    diag_manager.F90

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 MASK_VARIANT               Dummy  791      L(4)            4           scalar   ARG,IN           833,834                           
 MASK_VARIANT1              Local  814      L(4)            4           scalar                    834,836,949                       
 MAX_VALUE                  Local  1103     R(8)            8           scalar   PRIV             342,1103,1125,1140,3518,3786      
 MIN_VALUE                  Local  1105     R(8)            8           scalar   PRIV             342,1105,1127,1142,3452,3520,3785,
                                                                                                  3786                              
 MISSING_VALUE              Dummy  791      R(8)            8           scalar   ARG,IN           825,829,863,968                   
 MISSING_VALUE_USE          Local  810      R(8)            8           scalar                    827,829,969                       
 MODULE_IS_INITIALIZED      Local  819      L(4)            4           scalar   PRIV             346,819,1665,3768,3916,3929,3940  
 MODULE_NAME                Dummy  790      CHAR                        scalar   ARG,IN           862,867,881,886,887,892,896,914,92
                                                                                                  2,932,940,994,1014,1153,1209      
 MSG                        Local  815      CHAR            128         scalar                    1153,1162,1206,1207,1209          
 NUM_AXES                   Local  811      I(4)            4           scalar                    1004,1005,1006,1009,1117          
 OUT_NUM                    Local  811      I(4)            4           scalar                    889,890,892,893,896,897,1030,1032,
                                                                                                  1043,1047,1074,1075,1083,1084,1086
                                                                                                  ,1087,1088,1089,1091,1092,1094,109
                                                                                                  5,1096,1097,1099,1102,1103,1104,11
                                                                                                  05,1107,1109,1115,1116,1118,1119,1
                                                                                                  122,1123,1124,1125,1126,1127,1129,
                                                                                                  1131,1132,1133,1137,1138,1139,1140
                                                                                                  ,1141,1142,1144,1146,1150,1152,116
                                                                                                  6,1167,1168,1173,1175,1176,1179,11
                                                                                                  80,1185,1186,1187,1188,1191,1195,1
                                                                                                  197,1203,1206,1215,1221,1222,1228,
                                                                                                  1230,1231,1233,1234,1237          
 PREPEND_ATTRIBUTE          Local  1215                                 scalar   PRIV             338,1215,1353,1372,1437,4173      
 PREPEND_ATTRIBUTE_FIELD    Subr   1215                                          PRIV             1215,1353,1372,4173               
 PRESENT                    Func   825                                  scalar                    825,833,839,845,851,919,929,937,95
                                                                                                  4,960,962,968,975,984,1214        
 RANGE                      Dummy  791      R(8)            8     1     2        ARG,IN           863,975,976,978                   
 REALM                      Dummy  792      CHAR                        scalar   ARG,IN           1214,1215                         
 REGISTER_STATIC_FIELD      Func   790      I(4)            4           scalar                                                      
 SIZ                        Local  812      I(4)            4     1     3                         1008,1017,1022,1086,1088,1094,1096
                                                                                                  ,1099,1132,1137,1146,1230,1233    
 SIZE                       Func   1004                                 scalar                    1004,1110                         
 STANDARD_NAME              Dummy  791      CHAR                        scalar   ARG,IN           960                               
 TILE                       Local  813      I(4)            4           scalar                    846,848,875,886,887,894,897       
 TILE_COUNT                 Dummy  792      I(4)            4           scalar   ARG,IN           845,846                           
 TIME_ZERO                  Local  1203     TIME_TYPE       16          scalar   PRIV             344,1203,3577,3795,3797           
 TRIM                       Func   881                                  scalar                    881,882,914,915,922,932,940,955,96
                                                                                                  3,985,986,987,994,995,998,1014,101
                                                                                                  5,1037,1054,1065,1112,1153,1162,12
                                                                                                  09,1215                           
 UNITS                      Dummy  790      CHAR                        scalar   ARG,IN           863,962,963                       
 USE_CMOR                   Local  826      L(4)            4           scalar   PRIV             347,826,3763,3825                 
 VOLUME                     Dummy  792      I(4)            4           scalar   ARG,IN           919,920,937,938,1206              



Page 32          Source Listing                  REGISTER_STATIC_FIELD
2021-06-01 08:54 Symbol Table                    diag_manager.F90

TYPE COMPONENTS/COMMON VARIABLES

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 DIAG_GRID.L_END_INDX       I(4)            4     60       1     3                         1084,1092,1119,1896,1912,1915      
 DIAG_GRID.L_START_INDX     I(4)            4     48       1     3                         1083,1091,1118,1895,1911,1914      
 DIAG_GRID.SUBAXES          I(4)            4     72       1     3                         1180,1195,1197                     
 FILE_TYPE.USE_DOMAIN2D     L(4)            4     11360          scalar                    1056,1057,1060                     
 FILE_TYPE.USE_DOMAINUG     L(4)            4     11356          scalar                    1049,1067,1068                     
 INPUT_FIELD_TYPE.AXES      I(4)            4     832      1     3                         1005,1177                          
 INPUT_FIELD_TYPE.FIELD_NAME                                                                                               ...
                            CHAR            128   128            scalar                    957,1335,1343,1362,1365,1381,1384, 
                                                                                           1829,1846,2319,4046,4076,4085,4099 
                                                                                           ,4121,4132,4146,4157,4171,4181     
 INPUT_FIELD_TYPE.INTERP_METHOD                                                                                            ...
                            CHAR            64    768            scalar                    998,1000                           
 INPUT_FIELD_TYPE.ISSUED_MASK_IGNORE_WARNING                                                                               ...
                            L(4)            4     1064           scalar                    951,2312,2321                      
 INPUT_FIELD_TYPE.LOCAL     L(4)            4     980            scalar                    891                                
 INPUT_FIELD_TYPE.LOCAL_COORD                                                                                              ...
                            COORD_TYPE      48    1000           scalar                    894                                
 INPUT_FIELD_TYPE.LONG_NAME CHAR            128   256            scalar                    955,957                            
 INPUT_FIELD_TYPE.MASK_VARIANT                                                                                             ...
                            L(4)            4     976            scalar                    949,1219,1996,3391,3524            
 INPUT_FIELD_TYPE.MISSING_VALUE                                                                                            ...
                            R(8)            8     856            scalar                    969,1792,3198,3322,3369            
 INPUT_FIELD_TYPE.MISSING_VALUE_PRESENT                                                                                    ...
                            L(4)            4     848            scalar                    970,972,1791,3197,3321,3370        
 INPUT_FIELD_TYPE.NUM_AXES  I(4)            4     844            scalar                    1006,1173,1176,1177,1179,1180      
 INPUT_FIELD_TYPE.RANGE     R(8)            8     864      1     2                         976,980,1812,1818,1819,1837,1838   
 INPUT_FIELD_TYPE.RANGE_PRESENT                                                                                            ...
                            L(4)            4     852            scalar                    978,981,1032,1809                  
 INPUT_FIELD_TYPE.REGISTER  L(4)            4     972            scalar                    876,909,947,3680                   
 INPUT_FIELD_TYPE.SIZE      I(4)            4     956      1     3                         1022                               
 INPUT_FIELD_TYPE.UNITS     CHAR            128   384            scalar                    963,965                            
 OUTPUT_FIELD_TYPE.AXES     I(4)            4     3128     1     4                         1176,1179,1186,1195,1197           
 OUTPUT_FIELD_TYPE.BUFFER   R(8)            8     224      4     1        ALC              1086,1094,1103,1105,1107,1122,1125 
                                                                                           ,1127,1129,1137,1140,1142,1144,203 
                                                                                           0,2031,2034,2035,2050,2051,2054,20 
                                                                                           55,2074,2075,2078,2079,2094,2095,2 
                                                                                           098,2099,2145,2146,2149,2150,2154, 
                                                                                           2171,2172,2175,2176,2180,2206,2207 
                                                                                           ,2210,2211,2215,2228,2229,2232,223 
                                                                                           3,2237,2261,2262,2265,2266,2270,22 
                                                                                           82,2283,2286,2287,2291,2331,2334,2 
                                                                                           348,2351,2375,2376,2379,2380,2388, 
                                                                                           2389,2392,2393,2411,2412,2415,2416 
                                                                                           ,2422,2423,2426,2427,2451,2452,245 
                                                                                           5,2456,2460,2477,2478,2481,2482,24 
                                                                                           86,2526,2527,2530,2531,2535,2550,2 
                                                                                           551,2554,2555,2559,2596,2597,2600, 
                                                                                           2601,2605,2617,2618,2621,2622,2626 
                                                                                           ,2655,2658,2672,2675,2700,2701,270 
                                                                                           4,2705,2711,2712,2715,2716,2734,27 
                                                                                           35,2738,2739,2745,2746,2749,2750,2 
                                                                                           783,2784,2795,2796,2809,2810,2821, 
                                                                                           2822,2832,2833,2845,2846,2861,2862 

Page 33          Source Listing                  REGISTER_STATIC_FIELD
2021-06-01 08:54 Symbol Table                    diag_manager.F90

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
                                                                                           ,2873,2874,2887,2888,2899,2900,291 
                                                                                           0,2911,2923,2924,2939,2940,2951,29 
                                                                                           52,2966,2967,2979,2980,2989,2990,3 
                                                                                           003,3004,3017,3025,3037,3050,3063, 
                                                                                           3072,3101,3114,3123,3387,3388,3389 
                                                                                           ,3390,3397,3398,3399,3400,3402,342 
                                                                                           4,3425,3426,3427,3433,3434,3435,34 
                                                                                           39,3452,3453,3463,3464,3466,3467,3 
                                                                                           468,3486,3495,3518,3520,3522,3560, 
                                                                                           3710,3714,3715,3717,3718,3719,3724 
 OUTPUT_FIELD_TYPE.COUNTER  R(8)            8     368      4     1        ALC              1230,1233,1237,2038,2039,2058,2059 
                                                                                           ,2082,2083,2102,2103,3396,3398,352 
                                                                                           4                                  
 OUTPUT_FIELD_TYPE.NUM_AXES I(4)            4     3144           scalar                    1173,1186,1188                     
 OUTPUT_FIELD_TYPE.N_DIURNAL_SAMPLES                                                                                       ...
                            I(4)            4     3156           scalar                    1043,1087,1095,1123,1138,1185,1187 
                                                                                           ,1231,1234,1903,3461,3482,3490,371 
                                                                                           1                                  
 OUTPUT_FIELD_TYPE.OUTPUT_NAME                                                                                             ...
                            CHAR            128   8              scalar                    892,896,1354,1373,1438,1929,1941,1 
                                                                                           960,2000,2114,2124,3442,3610,3690, 
                                                                                           3708                               
 OUTPUT_FIELD_TYPE.PACK     I(4)            4     164            scalar                    893,897,1032                       
 OUTPUT_FIELD_TYPE.REDUCED_K_RANGE                                                                                         ...
                            L(4)            4     3264           scalar                    1074,1191,1228,1865,3371,3673      
 OUTPUT_FIELD_TYPE.REDUCED_K_UNSTRUCT                                                                                      ...
                            L(4)            4     3388           scalar                    1089,1097,1910                     
 OUTPUT_FIELD_TYPE.REGION_ELEMENTS                                                                                         ...
                            I(4)            4     3152           scalar                    1088,1096,1131,3412                
 OUTPUT_FIELD_TYPE.TIME_AVERAGE                                                                                            ...
                            L(4)            4     136            scalar                    1167,1222,1877,3374,3972           
 OUTPUT_FIELD_TYPE.TIME_MAX L(4)            4     148            scalar                    1102,1124,1139,1884,3379           
 OUTPUT_FIELD_TYPE.TIME_METHOD                                                                                             ...
                            CHAR            50    172            scalar                    893,897,1168                       
 OUTPUT_FIELD_TYPE.TIME_MIN L(4)            4     152            scalar                    1104,1126,1141,1885,3380           
 OUTPUT_FIELD_TYPE.TIME_OF_PREV_FIELD_DATA                                                                                 ...
                            TIME_TYPE       16    3292           scalar                    1203                               
 OUTPUT_FIELD_TYPE.TIME_OPS L(4)            4     160            scalar                    1152,1166,1281,3472                
 OUTPUT_FIELD_TYPE.TOTAL_ELEMENTS                                                                                          ...
                            I(4)            4     3148           scalar                    1099,1132,1146,1888,3414           

Page 34          Source Listing                  REGISTER_STATIC_FIELD
2021-06-01 08:54                                 diag_manager.F90

   1242 
   1243 !> @brief Return the diagnostic field ID of a given variable.
   1244 !! @return get_diag_field_id will return the ID returned during the register_diag_field call.
   1245 !!   If the variable is not in the diag_table, then the value "DIAG_FIELD_NOT_FOUND" will be
   1246 !!   returned.
   1247   INTEGER FUNCTION get_diag_field_id(module_name, field_name)
   1248     CHARACTER(len=*), INTENT(in) :: module_name !< Module name that registered the variable
   1249     CHARACTER(len=*), INTENT(in) :: field_name !< Variable name
   1250 
   1251 ! find_input_field will return DIAG_FIELD_NOT_FOUND if the field is not
   1252 ! included in the diag_table
   1253     get_diag_field_id = find_input_field(module_name, field_name, tile_count=1)
   1254   END FUNCTION get_diag_field_id


ENTRY POINTS

  Name                                              
                                                    
 diag_manager_mod_mp_get_diag_field_id_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 FIELD_NAME                 Dummy  1247     CHAR                        scalar   ARG,IN           1253                              
 GET_DIAG_FIELD_ID          Func   1247     I(4)            4           scalar                                                      
 MODULE_NAME                Dummy  1247     CHAR                        scalar   ARG,IN           1253                              

Page 35          Source Listing                  GET_DIAG_FIELD_ID
2021-06-01 08:54                                 diag_manager.F90

   1255 
   1256 !> @brief Finds the corresponding related output field and file for a given input field
   1257 !! @return Logical get_related_field
   1258   LOGICAL FUNCTION get_related_field(field, rel_field, out_field_id, out_file_id)
   1259     INTEGER, INTENT(in) :: field !< input field ID to find the corresponding
   1260     TYPE(output_field_type), INTENT(in) :: rel_field !< Output field that field must correspond to
   1261     INTEGER, INTENT(out) :: out_field_id !< output_field index of related output field
   1262     INTEGER, INTENT(out) :: out_file_id !< file index of the out_field_id output field
   1263 
   1264     INTEGER :: i, cm_ind, cm_file_num
   1265     INTEGER :: rel_file
   1266 
   1267 ! Output file index of field to compare to
   1268     rel_file = rel_field%output_file
   1269 
   1270 ! Default return values
   1271     out_field_id = -1
   1272     out_file_id = -1
   1273     get_related_field = .FALSE.
   1274 
   1275 ! First check if any fields are in the same file as rel_field
   1276     DO i = 1, input_fields(field)%num_output_fields
   1277        cm_ind = input_fields(field)%output_fields(i)
   1278        cm_file_num = output_fields(cm_ind)%output_file
   1279 
   1280        IF ( cm_file_num.EQ.rel_file.AND.&
   1281             & (( (output_fields(cm_ind)%time_ops.EQV.rel_field%time_ops) .AND.&
   1282             & (output_fields(cm_ind)%next_output.EQ.rel_field%next_output) .AND.&
   1283             & (output_fields(cm_ind)%last_output.EQ.rel_field%last_output) ).OR.&
   1284             & (output_fields(cm_ind)%static.OR.rel_field%static) ) ) THEN
   1285           get_related_field = .TRUE.
   1286           out_field_id = cm_ind
   1287           out_file_id = cm_file_num
   1288           EXIT
   1289        END IF
   1290     END DO
   1291 
   1292 ! Now look for the field in a different file
   1293     IF ( .NOT.get_related_field ) THEN
   1294        DO i = 1, input_fields(field)%num_output_fields
   1295           cm_ind = input_fields(field)%output_fields(i)
   1296           cm_file_num = output_fields(cm_ind)%output_file
   1297 
   1298 ! If time_method, freq, output_units, next_output, and last_output the same, or
   1299 ! the output_field is static then valid for cell_measures
   1300 !!$ For now, only static fields can be in an external file
   1301 !!$          IF ( ( (files(cm_file_num)%output_freq.EQ.files(rel_file)%output_freq) .AND.&
   1302 !!$               & (files(cm_file_num)%output_units.EQ.files(rel_file)%output_units) .AND.&
   1303 !!$               & (output_fields(cm_ind)%time_ops.EQV.rel_field%time_ops) .AND.&
   1304 !!$               & (output_fields(cm_ind)%next_output.EQ.rel_field%next_output) .AND.&
   1305 !!$               & (output_fields(cm_ind)%last_output.EQ.rel_field%last_output) ).OR.&
   1306 !!$               & ( output_fields(cm_ind)%static.OR.rel_field%static ) ) THEN
   1307           IF ( output_fields(cm_ind)%static.OR.rel_field%static ) THEN
   1308              get_related_field = .TRUE.
   1309              out_field_id = cm_ind
   1310              out_file_id = cm_file_num
   1311              EXIT

Page 36          Source Listing                  GET_RELATED_FIELD
2021-06-01 08:54                                 diag_manager.F90

   1312           END IF
   1313        END DO
   1314     END IF
   1315   END FUNCTION get_related_field


ENTRY POINTS

  Name                                              
                                                    
 diag_manager_mod_mp_get_related_field_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 CM_FILE_NUM                Local  1264     I(4)            4           scalar                    1278,1280,1287,1296,1310          
 CM_IND                     Local  1264     I(4)            4           scalar                    1277,1278,1281,1282,1283,1284,1286
                                                                                                  ,1295,1296,1307,1309              
 FIELD                      Dummy  1258     I(4)            4           scalar   ARG,IN           1276,1277,1294,1295               
 GET_RELATED_FIELD          Func   1258     L(4)            4           scalar                    1273,1285,1293,1308,1352,1371     
 I                          Local  1264     I(4)            4           scalar                    1276,1277,1294,1295               
 OUTPUT_FIELD_TYPE          Type   1260                                 scalar   PRIV             348,1260,1319                     
 OUT_FIELD_ID               Dummy  1258     I(4)            4           scalar   ARG,OUT          1271,1286,1309                    
 OUT_FILE_ID                Dummy  1258     I(4)            4           scalar   ARG,OUT          1272,1287,1310                    
 REL_FIELD                  Dummy  1258     OUTPUT_FIELD_TYPE                                                                       
                                                            3392        scalar   ARG,IN           1268,1281,1282,1283,1284,1307     
 REL_FILE                   Local  1265     I(4)            4           scalar                    1268,1280                         
 TIME_EQ                    Func   1282     L(4)            4           scalar   PRIV             1282,1283,1923,3577               

Page 37          Source Listing                  GET_RELATED_FIELD
2021-06-01 08:54                                 diag_manager.F90

   1316 
   1317 !> @brief If needed, add cell_measures and associated_file attribute to out field/file
   1318   SUBROUTINE init_field_cell_measures(output_field, area, volume, err_msg)
   1319     TYPE(output_field_type), INTENT(inout) :: output_field !< Output field that needs the cell_measures
   1320     INTEGER, INTENT(in), OPTIONAL :: area !< Field ID for area
   1321     INTEGER, INTENT(in), OPTIONAL :: volume !< Field ID for volume
   1322     CHARACTER(len=*), INTENT(out), OPTIONAL :: err_msg
   1323 
   1324     INTEGER :: cm_ind, cm_file_num, file_num
   1325 
   1326     IF ( PRESENT(err_msg) ) THEN
   1327        err_msg = ''
   1328     END IF
   1329 
   1330 ! Verify that area/volume are defined (.gt.0
   1331     IF ( PRESENT(area) ) THEN
   1332        IF ( area.LE.0 ) THEN
   1333           IF ( fms_error_handler('diag_manager_mod::init_field_cell_measure',&
   1334                & 'AREA field not in diag_table for field '//TRIM(input_fields(output_field%input_field)%module_name)//&
   1335                & '/'//TRIM(input_fields(output_field%input_field)%field_name), err_msg) ) RETURN
   1336        END IF
   1337     END IF
   1338 
   1339     IF ( PRESENT(volume) ) THEN
   1340        IF ( volume.LE.0 ) THEN
   1341           IF ( fms_error_handler('diag_manager_mod::init_field_cell_measure',&
   1342                & 'VOLUME field not in diag_table for field '//TRIM(input_fields(output_field%input_field)%module_name)//&
   1343                & '/'//TRIM(input_fields(output_field%input_field)%field_name), err_msg) ) RETURN
   1344        END IF
   1345     END IF
   1346 
   1347 ! Get the file number that the output_field will be written to
   1348     file_num = output_field%output_file
   1349 
   1350 ! Take care of the cell_measures attribute
   1351     IF ( PRESENT(area) ) THEN
   1352        IF ( get_related_field(area, output_field, cm_ind, cm_file_num) ) THEN
   1353           CALL prepend_attribute(output_field, 'cell_measures',&
   1354                & 'area: '//TRIM(output_fields(cm_ind)%output_name))
   1355           IF ( cm_file_num.NE.file_num ) THEN
   1356 ! Not in the same file, set the global attribute associated_files
   1357              CALL add_associated_files(file_num, cm_file_num, cm_ind)
   1358           END IF
   1359        ELSE
   1360           IF ( fms_error_handler('diag_manager_mod::init_field_cell_measures',&
   1361                & 'AREA measures field "'//TRIM(input_fields(area)%module_name)//'/'//&
   1362                & TRIM(input_fields(area)%field_name)//&
   1363                & '" NOT in diag_table with correct output frequency for field '//&
   1364                & TRIM(input_fields(output_field%input_field)%module_name)//&
   1365                & '/'//TRIM(input_fields(output_field%input_field)%field_name), err_msg) ) RETURN
   1366        END IF
   1367     END IF
   1368 
   1369 
   1370     IF ( PRESENT(volume) ) THEN
   1371        IF ( get_related_field(volume, output_field, cm_ind, cm_file_num) ) THEN
   1372           CALL prepend_attribute(output_field, 'cell_measures',&

Page 38          Source Listing                  INIT_FIELD_CELL_MEASURES
2021-06-01 08:54                                 diag_manager.F90

   1373                & 'volume: '//TRIM(output_fields(cm_ind)%output_name))
   1374           IF ( cm_file_num.NE.file_num ) THEN
   1375 ! Not in the same file, set the global attribute associated_files
   1376              CALL add_associated_files(file_num, cm_file_num, cm_ind)
   1377           END IF
   1378        ELSE
   1379           IF ( fms_error_handler('diag_manager_mod::init_field_cell_measures',&
   1380                & 'VOLUME measures field "'//TRIM(input_fields(volume)%module_name)//'/'//&
   1381                & TRIM(input_fields(volume)%field_name)//&
   1382                & '" NOT in diag_table with correct output frequency for field '//&
   1383                & TRIM(input_fields(output_field%input_field)%module_name)//&
   1384                & '/'//TRIM(input_fields(output_field%input_field)%field_name), err_msg) ) RETURN
   1385        END IF
   1386     END IF
   1387   END SUBROUTINE init_field_cell_measures


ENTRY POINTS

  Name                                                     
                                                           
 diag_manager_mod_mp_init_field_cell_measures_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 AREA                       Dummy  1318     I(4)            4           scalar   ARG,IN           1331,1332,1351,1352,1361,1362     
 CM_FILE_NUM                Local  1324     I(4)            4           scalar                    1352,1355,1357,1371,1374,1376     
 CM_IND                     Local  1324     I(4)            4           scalar                    1352,1354,1357,1371,1373,1376     
 ERR_MSG                    Dummy  1318     CHAR                        scalar   ARG,OUT          1326,1327,1335,1343,1365,1384     
 FILE_NUM                   Local  1324     I(4)            4           scalar                    1348,1355,1357,1374,1376          
 INIT_FIELD_CELL_MEASURES   Subr   1318                                                           777,1206,4273                     
 OUTPUT_FIELD               Dummy  1318     OUTPUT_FIELD_TYPE                                                                       
                                                            3392        scalar   ARG,INOUT        1334,1335,1342,1343,1348,1352,1353
                                                                                                  ,1364,1365,1371,1372,1383,1384    
 PRESENT                    Func   1326                                 scalar                    1326,1331,1339,1351,1370          
 TRIM                       Func   1334                                 scalar                    1334,1335,1342,1343,1354,1361,1362
                                                                                                  ,1364,1365,1373,1380,1381,1383,138
                                                                                                  4                                 
 VOLUME                     Dummy  1318     I(4)            4           scalar   ARG,IN           1339,1340,1370,1371,1380,1381     


TYPE COMPONENTS/COMMON VARIABLES

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 INPUT_FIELD_TYPE.MODULE_NAME                                                                                              ...
                            CHAR            128   0              scalar                    1334,1342,1361,1364,1380,1383,1828 
                                                                                           ,1845,1928,1940,1959,1999,2113,212 
                                                                                           3,2320,3441,3609,3689,4045,4075,40 
                                                                                           84,4098,4120,4131,4145,4156,4170,4 
                                                                                           180                                
 OUTPUT_FIELD_TYPE.INPUT_FIELD                                                                                             ...
                            I(4)            4     0              scalar                    1334,1335,1342,1343,1364,1365,1383 
                                                                                           ,1384,3366,3555,3589,3678          

Page 39          Source Listing                  INIT_FIELD_CELL_MEASURES
2021-06-01 08:54                                 diag_manager.F90

   1388 ! </SUBROUTINE>
   1389 
   1390 !> \brief Add to the associated files attribute
   1391 !!
   1392 !! \throw FATAL, "Length of asso_file_name is not long enough to hold the associated file name."
   1393 !!     The length of character array asso_file_name is not long enough to hold the full file name
   1394 !!     of the associated_file.  Please contact the developer to increase the length of the  variable.
   1395   SUBROUTINE add_associated_files(file_num, cm_file_num, cm_ind)
   1396     INTEGER, intent(in) :: file_num !< File number that needs the associated_files attribute
   1397     INTEGER, intent(in) :: cm_file_num !< file number that contains the associated field
   1398     INTEGER, intent(in) :: cm_ind !< index of the output_field in the associated file
   1399 
   1400     INTEGER :: year, month, day, hour, minute, second
   1401     INTEGER :: n
   1402     CHARACTER(len=25) :: date_prefix
   1403     CHARACTER(len=256) :: asso_file_name
   1404 
   1405 ! Create the date_string
   1406     IF ( prepend_date ) THEN
   1407        CALL get_date(diag_init_time, year, month, day, hour, minute, second)
   1408        WRITE (date_prefix, '(1I20.4, 2I2.2,".")') year, month, day
   1409        date_prefix=ADJUSTL(date_prefix)
   1410     ELSE
   1411        date_prefix=''
   1412     END IF
   1413 
   1414 ! Get the base file name
   1415 ! Verify asso_file_name is long enough to hold the file name,
   1416 ! plus 17 for the additional '.ens_??.tile?.nc' (and a null character)
   1417     IF ( LEN_TRIM(files(cm_file_num)%name)+17 > LEN(asso_file_name) ) THEN
   1418        CALL error_mesg ('diag_manager_mod::add_associated_files',&
   1419             & 'Length of asso_file_name is not long enough to hold the associated file name. '&
   1420             & //'Contact the developer', FATAL)
   1421     ELSE
   1422        asso_file_name = TRIM(files(cm_file_num)%name)
   1423     END IF
   1424 
   1425 ! Add the ensemble number string into the file name
   1426 ! As frepp does not have native support for multiple ensemble runs
   1427 ! this will not be done.  However, the code is left here for the time
   1428 ! frepp does.
   1429 !CALL get_instance_filename(TRIM(asso_file_name), asso_file_name)
   1430 
   1431 ! Append .nc suffix, if needed. Note that we no longer try to append cubic sphere tile
   1432 ! number to the name of the associated file.
   1433     n = max(len_trim(asso_file_name),3)
   1434     if (asso_file_name(n-2:n).NE.'.nc') asso_file_name = trim(asso_file_name)//'.nc'
   1435 
   1436 ! Should look like :associated_files = " output_name: output_file_name " ;
   1437     CALL prepend_attribute(files(file_num), 'associated_files',&
   1438          & TRIM(output_fields(cm_ind)%output_name)//': '//&
   1439          & TRIM(date_prefix)//TRIM(asso_file_name))
   1440   END SUBROUTINE add_associated_files

Page 40          Source Listing                  ADD_ASSOCIATED_FILES
2021-06-01 08:54 Entry Points                    diag_manager.F90



ENTRY POINTS

  Name                                                 
                                                       
 diag_manager_mod_mp_add_associated_files_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ADD_ASSOCIATED_FILES       Subr   1395                                                           1357,1376                         
 ADJUSTL                    Func   1409                                 scalar                    1409                              
 ASSO_FILE_NAME             Local  1403     CHAR            256         scalar                    1417,1422,1433,1434,1439          
 CM_FILE_NUM                Dummy  1395     I(4)            4           scalar   ARG,IN           1417,1422                         
 CM_IND                     Dummy  1395     I(4)            4           scalar   ARG,IN           1438                              
 DATE_PREFIX                Local  1402     CHAR            25          scalar                    1408,1409,1411,1439               
 DAY                        Local  1400     I(4)            4           scalar                    1407,1408                         
 DIAG_INIT_TIME             Local  1407     TIME_TYPE       16          scalar   PRIV             349,1407,3886,3889                
 FILE_NUM                   Dummy  1395     I(4)            4           scalar   ARG,IN           1437                              
 GET_DATE                   Subr   1407                                          PRIV             319,1407                          
 HOUR                       Local  1400     I(4)            4           scalar                    1407                              
 LEN                        Func   1417                                 scalar                    1417                              
 LEN_TRIM                   Func   1417                                 scalar                    1417,1433                         
 MAX                        Func   1433                                 scalar                    1433                              
 MINUTE                     Local  1400     I(4)            4           scalar                    1407                              
 MONTH                      Local  1400     I(4)            4           scalar                    1407,1408                         
 N                          Local  1401     I(4)            4           scalar                    1433,1434                         
 PREPEND_ATTRIBUTE_FILE     Subr   1437                                          PRIV             1437                              
 PREPEND_DATE               Local  1406     L(4)            4           scalar   PRIV             349,1406,3765,3890,3893           
 SECOND                     Local  1400     I(4)            4           scalar                    1407                              
 TRIM                       Func   1422                                 scalar                    1422,1434,1438,1439               
 YEAR                       Local  1400     I(4)            4           scalar                    1407,1408                         

Page 41          Source Listing                  ADD_ASSOCIATED_FILES
2021-06-01 08:54                                 diag_manager.F90

   1441 
   1442 ! <FUNCTION NAME="send_data_0d" INTERFACE="send_data">
   1443 !   <IN NAME="diag_field_id" TYPE="INTEGER"> </IN>
   1444 !   <IN NAME="field" TYPE="REAL"> </IN>
   1445 !   <IN NAME="time" TYPE="TYPE(time_type), OPTIONAL"> </IN>
   1446 !   <IN NAME="is_in" TYPE="Not Applicable"></IN>
   1447 !   <IN NAME="js_in" TYPE="Not Applicable"></IN>
   1448 !   <IN NAME="ks_in" TYPE="Not Applicable"></IN>
   1449 !   <IN NAME="mask" TYPE="Not Applicable"></IN>
   1450 !   <IN NAME="rmask" TYPE="Not Applicable"></IN>
   1451 !   <IN NAME="ie_in" TYPE="Not Applicable"></IN>
   1452 !   <IN NAME="je_in" TYPE="Not Applicable"></IN>
   1453 !   <IN NAME="ke_in" TYPE="Not Applicable"></IN>
   1454 !   <IN NAME="weight" TYPE="Not Applicable"></IN>
   1455 !   <OUT NAME="err_msg" TYPE="CHARACTER(len=*), OPTIONAL"></OUT>
   1456 !> @return Logical send_data_0d
   1457   LOGICAL FUNCTION send_data_0d(diag_field_id, field, time, err_msg)
   1458     INTEGER, INTENT(in) :: diag_field_id
   1459     REAL, INTENT(in) :: field
   1460     TYPE(time_type), INTENT(in), OPTIONAL :: time
   1461     CHARACTER(len=*), INTENT(out), OPTIONAL :: err_msg
   1462 
   1463     REAL :: field_out(1, 1, 1)
   1464 
   1465 ! If diag_field_id is < 0 it means that this field is not registered, simply return
   1466     IF ( diag_field_id <= 0 ) THEN
   1467        send_data_0d = .FALSE.
   1468        RETURN
   1469     END IF
   1470 ! First copy the data to a three d array with last element 1
   1471     field_out(1, 1, 1) = field
   1472     send_data_0d = send_data_3d(diag_field_id, field_out, time, err_msg=err_msg)
   1473   END FUNCTION send_data_0d

Page 42          Source Listing                  SEND_DATA_0D
2021-06-01 08:54 Entry Points                    diag_manager.F90



ENTRY POINTS

  Name                                         
                                               
 diag_manager_mod_mp_send_data_0d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 DIAG_FIELD_ID              Dummy  1457     I(4)            4           scalar   ARG,IN           1466,1472                         
 ERR_MSG                    Dummy  1457     CHAR                        scalar   ARG,OUT          1472                              
 FIELD                      Dummy  1457     R(8)            8           scalar   ARG,IN           1471                              
 FIELD_OUT                  Local  1463     R(8)            8     3     1        TGT              1471,1472                         
 SEND_DATA_0D               Func   1457     L(4)            4           scalar   PRIV             1467,1472                         
 SEND_DATA_3D@0             Local  1472     L(4)            4           scalar                                                      
 TIME                       Dummy  1457     TIME_TYPE       16          scalar   ARG,IN           1472                              

Page 43          Source Listing                  SEND_DATA_0D
2021-06-01 08:54                                 diag_manager.F90

   1474 ! </FUNCTION>
   1475 
   1476 ! <FUNCTION NAME="send_data_1d" INTERFACE="send_data">
   1477 !   <IN NAME="diag_field_id" TYPE="INTEGER"> </IN>
   1478 !   <IN NAME="field" TYPE="REAL, DIMENSION(:)"> </IN>
   1479 !   <IN NAME="time" TYPE="TYPE(time_type)"> </IN>
   1480 !   <IN NAME="is_in" TYPE="INTEGER, OPTIONAL"></IN>
   1481 !   <IN NAME="js_in" TYPE="Not Applicable"></IN>
   1482 !   <IN NAME="ks_in" TYPE="Not Applicable"></IN>
   1483 !   <IN NAME="mask" TYPE="LOGICAL, DIMENSION(:), OPTIONAL"></IN>
   1484 !   <IN NAME="rmask" TYPE="REAL, DIMENSION(:), OPTIONAL"></IN>
   1485 !   <IN NAME="ie_in" TYPE="INTEGER, OPTIONAL"></IN>
   1486 !   <IN NAME="je_in" TYPE="Not Applicable"></IN>
   1487 !   <IN NAME="ke_in" TYPE="Not Applicable"></IN>
   1488 !   <IN NAME="weight" TYPE="REAL, OPTIONAL"></IN>
   1489 !   <OUT NAME="err_msg" TYPE="CHARACTER(len=*), OPTIONAL"></OUT>
   1490 !> @return Logical send_data_1d
   1491   LOGICAL FUNCTION send_data_1d(diag_field_id, field, time, is_in, mask, rmask, ie_in, weight, err_msg)
   1492     INTEGER, INTENT(in) :: diag_field_id
   1493     REAL, DIMENSION(:), INTENT(in) :: field
   1494     REAL, INTENT(in), OPTIONAL :: weight
   1495     REAL, INTENT(in), DIMENSION(:), OPTIONAL :: rmask
   1496     TYPE (time_type), INTENT(in), OPTIONAL :: time
   1497     INTEGER, INTENT(in), OPTIONAL :: is_in, ie_in
   1498     LOGICAL, INTENT(in), DIMENSION(:), OPTIONAL :: mask
   1499     CHARACTER(len=*), INTENT(out), OPTIONAL :: err_msg
   1500 
   1501     REAL, DIMENSION(SIZE(field(:)), 1, 1) :: field_out
   1502     LOGICAL, DIMENSION(SIZE(field(:)), 1, 1) ::  mask_out
   1503 
   1504 ! If diag_field_id is < 0 it means that this field is not registered, simply return
   1505     IF ( diag_field_id <= 0 ) THEN
   1506        send_data_1d = .FALSE.
   1507        RETURN
   1508     END IF
   1509 
   1510 ! First copy the data to a three d array with last element 1
   1511     field_out(:, 1, 1) = field
   1512 
   1513 ! Default values for mask
   1514     IF ( PRESENT(mask) ) THEN
   1515        mask_out(:, 1, 1) = mask
   1516     ELSE
   1517        mask_out = .TRUE.
   1518     END IF
   1519 
   1520     IF ( PRESENT(rmask) ) WHERE (rmask < 0.5) mask_out(:, 1, 1) = .FALSE.
   1521     IF ( PRESENT(mask) .OR. PRESENT(rmask) ) THEN
   1522        IF ( PRESENT(is_in) .OR. PRESENT(ie_in) ) THEN
   1523           send_data_1d = send_data_3d(diag_field_id, field_out, time, is_in=is_in, js_in=1, ks_in=1,&
   1524                & mask=mask_out, ie_in=ie_in, je_in=1, ke_in=1, weight=weight, err_msg=err_msg)
   1525        ELSE
   1526           send_data_1d = send_data_3d(diag_field_id, field_out, time, mask=mask_out,&
   1527                & weight=weight, err_msg=err_msg)
   1528        END IF
   1529     ELSE
   1530        IF ( PRESENT(is_in) .OR. PRESENT(ie_in) ) THEN

Page 44          Source Listing                  SEND_DATA_1D
2021-06-01 08:54                                 diag_manager.F90

   1531           send_data_1d = send_data_3d(diag_field_id, field_out, time, is_in=is_in, js_in=1, ks_in=1,&
   1532                & ie_in=ie_in, je_in=1, ke_in=1, weight=weight, err_msg=err_msg)
   1533        ELSE
   1534           send_data_1d = send_data_3d(diag_field_id, field_out, time, weight=weight, err_msg=err_msg)
   1535        END IF
   1536     END IF
   1537   END FUNCTION send_data_1d


ENTRY POINTS

  Name                                         
                                               
 diag_manager_mod_mp_send_data_1d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 DIAG_FIELD_ID              Dummy  1491     I(4)            4           scalar   ARG,IN           1505,1523,1526,1531,1534          
 ERR_MSG                    Dummy  1491     CHAR                        scalar   ARG,OUT          1524,1527,1532,1534               
 FIELD                      Dummy  1491     R(8)            8     1     1        ARG,IN           1501,1502,1511                    
 FIELD_OUT                  Local  1501     R(8)            8     3     0                         1511,1523,1526,1531,1534          
 IE_IN                      Dummy  1491     I(4)            4           scalar   ARG,IN           1522,1524,1530,1532               
 IS_IN                      Dummy  1491     I(4)            4           scalar   ARG,IN           1522,1523,1530,1531               
 MASK                       Dummy  1491     L(4)            4     1     1        ARG,IN           1514,1515,1521                    
 MASK_OUT                   Local  1502     L(4)            4     3     0                         1515,1517,1520,1524,1526          
 PRESENT                    Func   1514                                 scalar                    1514,1520,1521,1522,1530          
 RMASK                      Dummy  1491     R(8)            8     1     1        ARG,IN           1520,1521                         
 SEND_DATA_1D               Func   1491     L(4)            4           scalar   PRIV             1506,1523,1526,1531,1534,3159     
 SIZE                       Func   1501                                 scalar                    1501,1502                         
 TIME                       Dummy  1491     TIME_TYPE       16          scalar   ARG,IN           1523,1526,1531,1534               
 WEIGHT                     Dummy  1491     R(8)            8           scalar   ARG,IN           1524,1527,1532,1534               

Page 45          Source Listing                  SEND_DATA_1D
2021-06-01 08:54                                 diag_manager.F90

   1538 ! </FUNCTION>
   1539 
   1540 ! <FUNCTION NAME="send_data_2d" INTERFACE="send_data">
   1541 !   <IN NAME="diag_field_id" TYPE="INTEGER"> </IN>
   1542 !   <IN NAME="field" TYPE="REAL, DIMENSION(:,:)"> </IN>
   1543 !   <IN NAME="time" TYPE="TYPE(time_type)"> </IN>
   1544 !   <IN NAME="is_in" TYPE="INTEGER, OPTIONAL"></IN>
   1545 !   <IN NAME="js_in" TYPE="INTEGER, OPTIONAL"></IN>
   1546 !   <IN NAME="ks_in" TYPE="Not Applicable"></IN>
   1547 !   <IN NAME="mask" TYPE="LOGICAL, DIMENSION(:,:), OPTIONAL"></IN>
   1548 !   <IN NAME="rmask" TYPE="REAL, DIMENSION(:,:), OPTIONAL"></IN>
   1549 !   <IN NAME="ie_in" TYPE="INTEGER, OPTIONAL"></IN>
   1550 !   <IN NAME="je_in" TYPE="INTEGER, OPTIONAL"></IN>
   1551 !   <IN NAME="ke_in" TYPE="Not Applicable"></IN>
   1552 !   <IN NAME="weight" TYPE="REAL, OPTIONAL"></IN>
   1553 !   <OUT NAME="err_msg" TYPE="CHARACTER(len=*), OPTIONAL"></OUT>
   1554 !> @return Logical send_data_2d
   1555   LOGICAL FUNCTION send_data_2d(diag_field_id, field, time, is_in, js_in, &
   1556        & mask, rmask, ie_in, je_in, weight, err_msg)
   1557     INTEGER, INTENT(in) :: diag_field_id
   1558     REAL, INTENT(in), DIMENSION(:,:) :: field
   1559     REAL, INTENT(in), OPTIONAL :: weight
   1560     TYPE (time_type), INTENT(in), OPTIONAL :: time
   1561     INTEGER, INTENT(in), OPTIONAL :: is_in, js_in, ie_in, je_in
   1562     LOGICAL, INTENT(in), DIMENSION(:,:), OPTIONAL :: mask
   1563     REAL, INTENT(in), DIMENSION(:,:),OPTIONAL :: rmask
   1564     CHARACTER(len=*), INTENT(out), OPTIONAL :: err_msg
   1565 
   1566     REAL, DIMENSION(SIZE(field,1),SIZE(field,2),1) :: field_out
   1567     LOGICAL, DIMENSION(SIZE(field,1),SIZE(field,2),1) ::  mask_out
   1568 
   1569 ! If diag_field_id is < 0 it means that this field is not registered, simply return
   1570     IF ( diag_field_id <= 0 ) THEN
   1571        send_data_2d = .FALSE.
   1572        RETURN
   1573     END IF
   1574 
   1575 ! First copy the data to a three d array with last element 1
   1576     field_out(:, :, 1) = field
   1577 
   1578 ! Default values for mask
   1579     IF ( PRESENT(mask) ) THEN
   1580        mask_out(:, :, 1) = mask
   1581     ELSE
   1582        mask_out = .TRUE.
   1583     END IF
   1584 
   1585     IF ( PRESENT(rmask) ) WHERE ( rmask < 0.5 ) mask_out(:, :, 1) = .FALSE.
   1586     IF ( PRESENT(mask) .OR. PRESENT(rmask) ) THEN
   1587        send_data_2d = send_data_3d(diag_field_id, field_out, time, is_in=is_in, js_in=js_in, ks_in=1, mask=mask_out,&
   1588             & ie_in=ie_in, je_in=je_in, ke_in=1, weight=weight, err_msg=err_msg)
   1589     ELSE
   1590        send_data_2d = send_data_3d(diag_field_id, field_out, time, is_in=is_in, js_in=js_in, ks_in=1,&
   1591             & ie_in=ie_in, je_in=je_in, ke_in=1, weight=weight, err_msg=err_msg)
   1592     END IF
   1593   END FUNCTION send_data_2d

Page 46          Source Listing                  SEND_DATA_2D
2021-06-01 08:54 Entry Points                    diag_manager.F90



ENTRY POINTS

  Name                                         
                                               
 diag_manager_mod_mp_send_data_2d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 DIAG_FIELD_ID              Dummy  1555     I(4)            4           scalar   ARG,IN           1570,1587,1590                    
 ERR_MSG                    Dummy  1556     CHAR                        scalar   ARG,OUT          1588,1591                         
 FIELD                      Dummy  1555     R(8)            8     2     1        ARG,IN           1566,1567,1576                    
 FIELD_OUT                  Local  1566     R(8)            8     3     0                         1576,1587,1590                    
 IE_IN                      Dummy  1556     I(4)            4           scalar   ARG,IN           1588,1591                         
 IS_IN                      Dummy  1555     I(4)            4           scalar   ARG,IN           1587,1590                         
 JE_IN                      Dummy  1556     I(4)            4           scalar   ARG,IN           1588,1591                         
 JS_IN                      Dummy  1555     I(4)            4           scalar   ARG,IN           1587,1590                         
 MASK                       Dummy  1556     L(4)            4     2     1        ARG,IN           1579,1580,1586                    
 MASK_OUT                   Local  1567     L(4)            4     3     0                         1580,1582,1585,1587               
 PRESENT                    Func   1579                                 scalar                    1579,1585,1586                    
 RMASK                      Dummy  1556     R(8)            8     2     1        ARG,IN           1585,1586                         
 SEND_DATA_2D               Func   1555     L(4)            4           scalar   PRIV             1571,1587,1590,3245               
 SIZE                       Func   1566                                 scalar                    1566,1567                         
 TIME                       Dummy  1555     TIME_TYPE       16          scalar   ARG,IN           1587,1590                         
 WEIGHT                     Dummy  1556     R(8)            8           scalar   ARG,IN           1588,1591                         

Page 47          Source Listing                  SEND_DATA_2D
2021-06-01 08:54                                 diag_manager.F90

   1594 ! </FUNCTION>
   1595 
   1596 # 1657
   1597 
   1598 
   1599 ! <FUNCTION NAME="send_data_3d" INTERFACE="send_data">
   1600 !   <IN NAME="diag_field_id" TYPE="INTEGER"> </IN>
   1601 !   <IN NAME="field" TYPE="REAL, DIMENSION(:,:,:)"> </IN>
   1602 !   <IN NAME="time" TYPE="TYPE(time_type)"> </IN>
   1603 !   <IN NAME="is_in" TYPE="INTEGER, OPTIONAL"></IN>
   1604 !   <IN NAME="js_in" TYPE="INTEGER, OPTIONAL"></IN>
   1605 !   <IN NAME="ks_in" TYPE="INTEGER, OPTIONAL"></IN>
   1606 !   <IN NAME="mask" TYPE="LOGICAL, DIMENSION(:,:,:), OPTIONAL"></IN>
   1607 !   <IN NAME="rmask" TYPE="REAL, DIMENSION(:,:,:), OPTIONAL"></IN>
   1608 !   <IN NAME="ie_in" TYPE="INTEGER, OPTIONAL"></IN>
   1609 !   <IN NAME="je_in" TYPE="INTEGER, OPTIONAL"></IN>
   1610 !   <IN NAME="ke_in" TYPE="INTEGER, OPTIONAL"></IN>
   1611 !   <IN NAME="weight" TYPE="REAL, OPTIONAL"></IN>
   1612 !   <OUT NAME="err_msg" TYPE="CHARACTER(len=*), OPTIONAL"></OUT>
   1613 !> @return Logical send_data_3d
   1614   LOGICAL FUNCTION send_data_3d(diag_field_id, field, time, is_in, js_in, ks_in, &
   1615              & mask, rmask, ie_in, je_in, ke_in, weight, err_msg)
   1616     INTEGER, INTENT(in) :: diag_field_id
   1617     REAL, DIMENSION(:,:,:), INTENT(in) :: field
   1618     REAL, INTENT(in), OPTIONAL :: weight
   1619     TYPE (time_type), INTENT(in), OPTIONAL :: time
   1620     INTEGER, INTENT(in), OPTIONAL :: is_in, js_in, ks_in,ie_in,je_in, ke_in
   1621     LOGICAL, DIMENSION(:,:,:), INTENT(in), OPTIONAL :: mask
   1622     REAL, DIMENSION(:,:,:), INTENT(in), OPTIONAL :: rmask
   1623     CHARACTER(len=*), INTENT(out), OPTIONAL :: err_msg
   1624 
   1625     REAL :: weight1
   1626     REAL :: missvalue
   1627     INTEGER :: pow_value
   1628     INTEGER :: ksr, ker
   1629     INTEGER :: i, out_num, file_num, n1, n2, n3, number_of_outputs, ii,f1,f2,f3,f4
   1630     INTEGER :: freq, units, is, js, ks, ie, je, ke, i1, j1,k1, j, k
   1631     INTEGER, DIMENSION(3) :: l_start !< local start indices on 3 axes for regional output
   1632     INTEGER, DIMENSION(3) :: l_end !< local end indices on 3 axes for regional output
   1633     INTEGER   :: hi !< halo size in x direction
   1634     INTEGER   :: hj !< halo size in y direction
   1635     INTEGER   :: twohi !< halo size in x direction
   1636     INTEGER   :: twohj !< halo size in y direction
   1637     INTEGER :: sample !< index along the diurnal time axis
   1638     INTEGER :: day !< components of the current date
   1639     INTEGER :: second !< components of the current date
   1640     INTEGER :: tick !< components of the current date
   1641     INTEGER :: status
   1642     INTEGER :: numthreads
   1643     INTEGER :: active_omp_level
   1644 
   1645     INTEGER :: omp_get_num_threads !< OMP function
   1646     INTEGER :: omp_get_level !< OMP function
   1647 
   1648     LOGICAL :: average, phys_window, need_compute
   1649     LOGICAL :: reduced_k_range, local_output
   1650     LOGICAL :: time_max, time_min, time_rms, time_sum

Page 48          Source Listing                  SEND_DATA_3D
2021-06-01 08:54                                 diag_manager.F90

   1651     LOGICAL :: missvalue_present
   1652     LOGICAL, ALLOCATABLE, DIMENSION(:,:,:) :: oor_mask
   1653     CHARACTER(len=256) :: err_msg_local
   1654     CHARACTER(len=128) :: error_string, error_string1
   1655 
   1656 ! If diag_field_id is < 0 it means that this field is not registered, simply return
   1657     IF ( diag_field_id <= 0 ) THEN
   1658        send_data_3d = .FALSE.
   1659        RETURN
   1660     ELSE
   1661        send_data_3d = .TRUE.
   1662     END IF
   1663 
   1664     IF ( PRESENT(err_msg) ) err_msg = ''
   1665     IF ( .NOT.module_is_initialized ) THEN
   1666        IF ( fms_error_handler('diag_manager_mod::send_data_3d', 'diag_manager NOT initialized', err_msg) ) RETURN
   1667     END IF
   1668     err_msg_local = ''
   1669 ! The following lines are commented out as they have not been included in the code prior to now,
   1670 ! and there are a lot of send_data calls before register_diag_field calls.  A method to do this safely
   1671 ! needs to be developed.
   1672 !
   1673 ! Set first_send_data_call to .FALSE. on first non-static field.
   1674 !!$    IF ( .NOT.input_fields(diag_field_id)%static .AND. first_send_data_call ) THEN
   1675 !!$       first_send_data_call = .FALSE.
   1676 !!$    END IF
   1677 
   1678 ! oor_mask is only used for checking out of range values.
   1679     ALLOCATE(oor_mask(SIZE(field,1),SIZE(field,2),SIZE(field,3)), STAT=status)
   1680     IF ( status .NE. 0 ) THEN
   1681        WRITE (err_msg_local, FMT='("Unable to allocate oor_mask(",I5,",",I5,",",I5,"). (STAT: ",I5,")")')&
   1682             & SIZE(field,1), SIZE(field,2), SIZE(field,3), status
   1683        IF ( fms_error_handler('diag_manager_mod::send_data_3d', err_msg_local, err_msg) ) RETURN
   1684     END IF
   1685 
   1686     IF ( PRESENT(mask) ) THEN
   1687        oor_mask = mask
   1688     ELSE
   1689        oor_mask = .TRUE.
   1690     END IF
   1691     IF ( PRESENT(rmask) ) WHERE ( rmask < 0.5 ) oor_mask = .FALSE.
   1692 
   1693 ! send_data works in either one or another of two modes.
   1694 ! 1. Input field is a window (e.g. FMS physics)
   1695 ! 2. Input field includes halo data
   1696 ! It cannot handle a window of data that has halos.
   1697 ! (A field with no windows or halos can be thought of as a special case of either mode.)
   1698 ! The logic for indexing is quite different for these two modes, but is not clearly separated.
   1699 ! If both the beggining and ending indices are present, then field is assumed to have halos.
   1700 ! If only beggining indices are present, then field is assumed to be a window.
   1701 
   1702 ! There are a number of ways a user could mess up this logic, depending on the combination
   1703 ! of presence/absence of is,ie,js,je. The checks below should catch improper combinations.
   1704     IF ( PRESENT(ie_in) ) THEN
   1705        IF ( .NOT.PRESENT(is_in) ) THEN
   1706           IF ( fms_error_handler('diag_manager_mod::send_data_3d', 'ie_in present without is_in', err_msg) ) THEN
   1707              DEALLOCATE(oor_mask)

Page 49          Source Listing                  SEND_DATA_3D
2021-06-01 08:54                                 diag_manager.F90

   1708              RETURN
   1709           END IF
   1710        END IF
   1711        IF ( PRESENT(js_in) .AND. .NOT.PRESENT(je_in) ) THEN
   1712           IF ( fms_error_handler('diag_manager_modsend_data_3d',&
   1713                & 'is_in and ie_in present, but js_in present without je_in', err_msg) ) THEN
   1714              DEALLOCATE(oor_mask)
   1715              RETURN
   1716           END IF
   1717        END IF
   1718     END IF
   1719     IF ( PRESENT(je_in) ) THEN
   1720        IF ( .NOT.PRESENT(js_in) ) THEN
   1721           IF ( fms_error_handler('diag_manager_mod::send_data_3d', 'je_in present without js_in', err_msg) ) THEN
   1722              DEALLOCATE(oor_mask)
   1723              RETURN
   1724           END IF
   1725        END IF
   1726        IF ( PRESENT(is_in) .AND. .NOT.PRESENT(ie_in) ) THEN
   1727           IF ( fms_error_handler('diag_manager_mod::send_data_3d',&
   1728                & 'js_in and je_in present, but is_in present without ie_in', err_msg)) THEN
   1729              DEALLOCATE(oor_mask)
   1730              RETURN
   1731           END IF
   1732        END IF
   1733     END IF
   1734 
   1735 ! If is, js, or ks not present default them to 1
   1736     is = 1
   1737     js = 1
   1738     ks = 1
   1739     IF ( PRESENT(is_in) ) is = is_in
   1740     IF ( PRESENT(js_in) ) js = js_in
   1741     IF ( PRESENT(ks_in) ) ks = ks_in
   1742     n1 = SIZE(field, 1)
   1743     n2 = SIZE(field, 2)
   1744     n3 = SIZE(field, 3)
   1745     ie = is+n1-1
   1746     je = js+n2-1
   1747     ke = ks+n3-1
   1748     IF ( PRESENT(ie_in) ) ie = ie_in
   1749     IF ( PRESENT(je_in) ) je = je_in
   1750     IF ( PRESENT(ke_in) ) ke = ke_in
   1751     twohi = n1-(ie-is+1)
   1752     IF ( MOD(twohi,2) /= 0 ) THEN
   1753        IF ( fms_error_handler('diag_manager_mod::send_data_3d', 'non-symmetric halos in first dimension', err_msg) ) THEN
   1754           DEALLOCATE(oor_mask)
   1755           RETURN
   1756        END IF
   1757     END IF
   1758     twohj = n2-(je-js+1)
   1759     IF ( MOD(twohj,2) /= 0 ) THEN
   1760        IF ( fms_error_handler('diag_manager_mod::send_data_3d', 'non-symmetric halos in second dimension', err_msg) ) THEN
   1761           DEALLOCATE(oor_mask)
   1762           RETURN
   1763        END IF
   1764     END IF

Page 50          Source Listing                  SEND_DATA_3D
2021-06-01 08:54                                 diag_manager.F90

   1765     hi = twohi/2
   1766     hj = twohj/2
   1767 
   1768 ! The next line is necessary to ensure that is,ie,js,ie are relative to field(1:,1:)
   1769 ! But this works only when there is no windowing.
   1770     IF ( PRESENT(ie_in) .AND. PRESENT(je_in) ) THEN
   1771        is=1+hi
   1772        ie=n1-hi
   1773        js=1+hj
   1774        je=n2-hj
   1775     END IF
   1776 
   1777 ! used for field, mask and rmask bounds
   1778     f1=1+hi
   1779     f2=n1-hi
   1780     f3=1+hj
   1781     f4=n2-hj
   1782 
   1783 ! weight is for time averaging where each time level may has a different weight
   1784     IF ( PRESENT(weight) ) THEN
   1785        weight1 = weight
   1786     ELSE
   1787        weight1 = 1.
   1788     END IF
   1789 
   1790 ! Is there a missing_value?
   1791     missvalue_present = input_fields(diag_field_id)%missing_value_present
   1792     IF ( missvalue_present ) missvalue = input_fields(diag_field_id)%missing_value
   1793 
   1794     number_of_outputs = input_fields(diag_field_id)%num_output_fields
   1795 !$OMP CRITICAL
   1796     input_fields(diag_field_id)%numthreads = 1
   1797     active_omp_level=0
   1798 
   1799     input_fields(diag_field_id)%numthreads = omp_get_num_threads()
   1800     input_fields(diag_field_id)%active_omp_level = omp_get_level()
   1801 
   1802     numthreads = input_fields(diag_field_id)%numthreads
   1803     active_omp_level = input_fields(diag_field_id)%active_omp_level
   1804 !$OMP END CRITICAL
   1805 
   1806     if(present(time)) input_fields(diag_field_id)%time = time
   1807 
   1808 ! Issue a warning if any value in field is outside the valid range
   1809     IF ( input_fields(diag_field_id)%range_present ) THEN
   1810        IF ( ISSUE_OOR_WARNINGS .OR. OOR_WARNINGS_FATAL ) THEN
   1811           WRITE (error_string, '("[",ES14.5E3,",",ES14.5E3,"]")')&
   1812                & input_fields(diag_field_id)%range(1:2)
   1813           WRITE (error_string1, '("(Min: ",ES14.5E3,", Max: ",ES14.5E3, ")")')&
   1814                   & MINVAL(field(f1:f2,f3:f4,ks:ke),MASK=oor_mask(f1:f2,f3:f4,ks:ke)),&
   1815                   & MAXVAL(field(f1:f2,f3:f4,ks:ke),MASK=oor_mask(f1:f2,f3:f4,ks:ke))
   1816           IF ( missvalue_present ) THEN
   1817              IF ( ANY(oor_mask(f1:f2,f3:f4,ks:ke) .AND.&
   1818                   &   ((field(f1:f2,f3:f4,ks:ke) < input_fields(diag_field_id)%range(1) .OR.&
   1819                   &     field(f1:f2,f3:f4,ks:ke) > input_fields(diag_field_id)%range(2)).AND.&
   1820                   &     field(f1:f2,f3:f4,ks:ke) .NE. missvalue)) ) THEN
   1821 ! <ERROR STATUS="WARNING/FATAL">

Page 51          Source Listing                  SEND_DATA_3D
2021-06-01 08:54                                 diag_manager.F90

   1822 !   A value for <module_name> in field <field_name> (Min: <min_val>, Max: <max_val>)
   1823 !   is outside the range [<lower_val>,<upper_val>] and not equal to the missing
   1824 !   value.
   1825 ! </ERROR>
   1826                 CALL error_mesg('diag_manager_mod::send_data_3d',&
   1827                      & 'A value for '//&
   1828                      &TRIM(input_fields(diag_field_id)%module_name)//' in field '//&
   1829                      &TRIM(input_fields(diag_field_id)%field_name)//' '&
   1830                      &//TRIM(error_string1)//&
   1831                      &' is outside the range '//TRIM(error_string)//',&
   1832                      & and not equal to the missing value.',&
   1833                      &OOR_WARNING)
   1834              END IF
   1835           ELSE
   1836              IF ( ANY(oor_mask(f1:f2,f3:f4,ks:ke) .AND.&
   1837                   &   (field(f1:f2,f3:f4,ks:ke) < input_fields(diag_field_id)%range(1) .OR.&
   1838                   &    field(f1:f2,f3:f4,ks:ke) > input_fields(diag_field_id)%range(2))) ) THEN
   1839 ! <ERROR STATUS="WARNING/FATAL">
   1840 !   A value for <module_name> in field <field_name> (Min: <min_val>, Max: <max_val>)
   1841 !   is outside the range [<lower_val>,<upper_val>].
   1842 ! </ERROR>
   1843                 CALL error_mesg('diag_manager_mod::send_data_3d',&
   1844                      & 'A value for '//&
   1845                      &TRIM(input_fields(diag_field_id)%module_name)//' in field '//&
   1846                      &TRIM(input_fields(diag_field_id)%field_name)//' '&
   1847                      &//TRIM(error_string1)//&
   1848                      &' is outside the range '//TRIM(error_string)//'.',&
   1849                      &OOR_WARNING)
   1850              END IF
   1851           END IF
   1852        END IF
   1853     END IF
   1854 
   1855 ! Loop through each output field that depends on this input field
   1856     num_out_fields: DO ii = 1, number_of_outputs
   1857 ! Get index to an output field
   1858        out_num = input_fields(diag_field_id)%output_fields(ii)
   1859 
   1860 ! is this field output on a local domain only?
   1861        local_output = output_fields(out_num)%local_output
   1862 ! if local_output, does the current PE take part in send_data?
   1863        need_compute = output_fields(out_num)%need_compute
   1864 
   1865        reduced_k_range = output_fields(out_num)%reduced_k_range
   1866 
   1867 ! skip all PEs not participating in outputting this field
   1868        IF ( local_output .AND. (.NOT.need_compute) ) CYCLE
   1869 
   1870 ! Get index to output file for this field
   1871        file_num = output_fields(out_num)%output_file
   1872        IF(file_num == max_files) CYCLE
   1873 ! Output frequency and units for this file is
   1874        freq = files(file_num)%output_freq
   1875        units = files(file_num)%output_units
   1876 ! Is this output field being time averaged?
   1877        average = output_fields(out_num)%time_average
   1878 ! Is this output field the rms?

Page 52          Source Listing                  SEND_DATA_3D
2021-06-01 08:54                                 diag_manager.F90

   1879 ! If so, then average is also .TRUE.
   1880        time_rms = output_fields(out_num)%time_rms
   1881 ! Power value for rms or pow(x) calculations
   1882        pow_value = output_fields(out_num)%pow_value
   1883 ! Looking for max and min value of this field over the sampling interval?
   1884        time_max = output_fields(out_num)%time_max
   1885        time_min = output_fields(out_num)%time_min
   1886 ! Sum output over time interval
   1887        time_sum = output_fields(out_num)%time_sum
   1888        IF ( output_fields(out_num)%total_elements > SIZE(field(f1:f2,f3:f4,ks:ke)) ) THEN
   1889           output_fields(out_num)%phys_window = .TRUE.
   1890        ELSE
   1891           output_fields(out_num)%phys_window = .FALSE.
   1892        END IF
   1893        phys_window = output_fields(out_num)%phys_window
   1894        IF ( need_compute ) THEN
   1895           l_start = output_fields(out_num)%output_grid%l_start_indx
   1896           l_end = output_fields(out_num)%output_grid%l_end_indx
   1897        END IF
   1898 
   1899 ! compute the diurnal index
   1900        sample = 1
   1901        IF ( PRESENT(time) ) THEN
   1902           CALL get_time(time,second,day,tick) ! current date
   1903           sample = floor((second+real(tick)/get_ticks_per_second())*output_fields(out_num)%n_diurnal_samples/SECONDS_PER_DAY
   1903 ) + 1
   1904        END IF
   1905 
   1906 ! Get the vertical layer start and end index.
   1907        IF ( reduced_k_range ) THEN
   1908 !----------
   1909 !ug support
   1910            if (output_fields(out_num)%reduced_k_unstruct) then
   1911                js = output_fields(out_num)%output_grid%l_start_indx(2)
   1912                je = output_fields(out_num)%output_grid%l_end_indx(2)
   1913            endif
   1914            l_start(3) = output_fields(out_num)%output_grid%l_start_indx(3)
   1915            l_end(3) = output_fields(out_num)%output_grid%l_end_indx(3)
   1916 !----------
   1917        END IF
   1918        ksr= l_start(3)
   1919        ker= l_end(3)
   1920 
   1921 ! Initialize output time for fields output every time step
   1922        IF ( freq == EVERY_TIME .AND. .NOT.output_fields(out_num)%static ) THEN
   1923           IF (output_fields(out_num)%next_output == output_fields(out_num)%last_output) THEN
   1924              IF(PRESENT(time)) THEN
   1925                 output_fields(out_num)%next_output = time
   1926              ELSE
   1927                 WRITE (error_string,'(a,"/",a)')&
   1928                      & TRIM(input_fields(diag_field_id)%module_name),&
   1929                      & TRIM(output_fields(out_num)%output_name)
   1930                 IF ( fms_error_handler('diag_manager_mod::send_data_3d', 'module/output_field '//TRIM(error_string)//&
   1931                      & ', time must be present when output frequency = EVERY_TIME', err_msg)) THEN
   1932                    DEALLOCATE(oor_mask)
   1933                    RETURN
   1934                 END IF

Page 53          Source Listing                  SEND_DATA_3D
2021-06-01 08:54                                 diag_manager.F90

   1935              END IF
   1936           END IF
   1937        END IF
   1938        IF ( .NOT.output_fields(out_num)%static .AND. .NOT.PRESENT(time) ) THEN
   1939           WRITE (error_string,'(a,"/",a)')&
   1940                & TRIM(input_fields(diag_field_id)%module_name), &
   1941                & TRIM(output_fields(out_num)%output_name)
   1942           IF ( fms_error_handler('diag_manager_mod::send_data_3d', 'module/output_field '//TRIM(error_string)//&
   1943                & ', time must be present for nonstatic field', err_msg)) THEN
   1944              DEALLOCATE(oor_mask)
   1945              RETURN
   1946           END IF
   1947        END IF
   1948 
   1949 ! Is it time to output for this field; CAREFUL ABOUT > vs >= HERE
   1950 !--- The fields send out within openmp parallel region will be written out in
   1951 !--- diag_send_complete.
   1952        IF ( (numthreads == 1) .AND. (active_omp_level.LE.1) ) then
   1953           IF ( .NOT.output_fields(out_num)%static .AND. freq /= END_OF_RUN ) THEN
   1954              IF ( time > output_fields(out_num)%next_output ) THEN
   1955 ! A non-static field that has skipped a time level is an error
   1956                 IF ( time > output_fields(out_num)%next_next_output .AND. freq > 0 ) THEN
   1957                    IF ( mpp_pe() .EQ. mpp_root_pe() ) THEN
   1958                       WRITE (error_string,'(a,"/",a)')&
   1959                            & TRIM(input_fields(diag_field_id)%module_name), &
   1960                            & TRIM(output_fields(out_num)%output_name)
   1961                       IF ( fms_error_handler('diag_manager_mod::send_data_3d', 'module/output_field '//TRIM(error_string)//&
   1962                            & ' is skipped one time level in output data', err_msg)) THEN
   1963                          DEALLOCATE(oor_mask)
   1964                          RETURN
   1965                       END IF
   1966                    END IF
   1967                 END IF
   1968 
   1969                 status = writing_field(out_num, .FALSE., error_string, time)
   1970                 IF(status == -1) THEN
   1971                    IF ( mpp_pe() .EQ. mpp_root_pe() ) THEN
   1972                       IF(fms_error_handler('diag_manager_mod::send_data_3d','module/output_field '//TRIM(error_string)//&
   1973                            & ', write EMPTY buffer', err_msg)) THEN
   1974                          DEALLOCATE(oor_mask)
   1975                          RETURN
   1976                       END IF
   1977                    END IF
   1978                 END IF
   1979              END IF  !time > output_fields(out_num)%next_output
   1980           END IF  !.not.output_fields(out_num)%static .and. freq /= END_OF_RUN
   1981 ! Finished output of previously buffered data, now deal with buffering new data
   1982        END IF
   1983 
   1984        IF ( .NOT.output_fields(out_num)%static .AND. .NOT.need_compute .AND. debug_diag_manager ) THEN
   1985           CALL check_bounds_are_exact_dynamic(out_num, diag_field_id, Time, err_msg=err_msg_local)
   1986           IF ( err_msg_local /= '' ) THEN
   1987              IF ( fms_error_handler('diag_manager_mod::send_data_3d', err_msg_local, err_msg) ) THEN
   1988                 DEALLOCATE(oor_mask)
   1989                 RETURN
   1990              END IF
   1991           END IF

Page 54          Source Listing                  SEND_DATA_3D
2021-06-01 08:54                                 diag_manager.F90

   1992        END IF
   1993 
   1994 ! Take care of submitted field data
   1995        IF ( average ) THEN
   1996           IF ( input_fields(diag_field_id)%mask_variant ) THEN
   1997              IF ( need_compute ) THEN
   1998                 WRITE (error_string,'(a,"/",a)')  &
   1999                      & TRIM(input_fields(diag_field_id)%module_name), &
   2000                      & TRIM(output_fields(out_num)%output_name)
   2001                 IF ( fms_error_handler('diag_manager_mod::send_data_3d', 'module/output_field '//TRIM(error_string)//&
   2002                      & ', regional output NOT supported with mask_variant', err_msg)) THEN
   2003                    DEALLOCATE(oor_mask)
   2004                    RETURN
   2005                 END IF
   2006              END IF
   2007 
   2008 ! Should reduced_k_range data be supported with the mask_variant option   ?????
   2009 ! If not, error message should be produced and the reduced_k_range loop below eliminated
   2010              IF ( PRESENT(mask) ) THEN
   2011                 IF ( missvalue_present ) THEN
   2012                    IF ( debug_diag_manager ) THEN
   2013                       CALL update_bounds(out_num, is-hi, ie-hi, js-hj, je-hj, ks, ke)
   2014                       CALL check_out_of_bounds(out_num, diag_field_id, err_msg=err_msg_local)
   2015                       IF ( err_msg_local /= '' ) THEN
   2016                          IF ( fms_error_handler('diag_manager_mod::send_data_3d', err_msg_local, err_msg) ) THEN
   2017                             DEALLOCATE(oor_mask)
   2018                             RETURN
   2019                          END IF
   2020                       END IF
   2021                    END IF
   2022                    IF( numthreads>1 .AND. phys_window ) then
   2023                       IF ( reduced_k_range ) THEN
   2024                          DO k= ksr, ker
   2025                             k1= k - ksr + 1
   2026                             DO j=js, je
   2027                                DO i=is, ie
   2028                                   IF ( mask(i-is+1+hi, j-js+1+hj, k) ) THEN
   2029                                      IF ( pow_value /= 1 ) THEN
   2030                                         output_fields(out_num)%buffer(i-hi,j-hj,k1,sample) =&
   2031                                              & output_fields(out_num)%buffer(i-hi,j-hj,k1,sample) +&
   2032                                              & (field(i-is+1+hi, j-js+1+hj, k) * weight1)**(pow_value)
   2033                                      ELSE
   2034                                         output_fields(out_num)%buffer(i-hi,j-hj,k1,sample) =&
   2035                                              & output_fields(out_num)%buffer(i-hi,j-hj,k1,sample) +&
   2036                                              & field(i-is+1+hi, j-js+1+hj, k) * weight1
   2037                                      END IF
   2038                                      output_fields(out_num)%counter(i-hi,j-hj,k1,sample) =&
   2039                                           & output_fields(out_num)%counter(i-hi,j-hj,k1,sample) + weight1
   2040                                   END IF
   2041                                END DO
   2042                             END DO
   2043                          END DO
   2044                       ELSE
   2045                          DO k=ks, ke
   2046                             DO j=js, je
   2047                                DO i=is, ie
   2048                                   IF ( mask(i-is+1+hi, j-js+1+hj, k) ) THEN

Page 55          Source Listing                  SEND_DATA_3D
2021-06-01 08:54                                 diag_manager.F90

   2049                                      IF ( pow_value /= 1 ) THEN
   2050                                         output_fields(out_num)%buffer(i-hi,j-hj,k,sample) =&
   2051                                              & output_fields(out_num)%buffer(i-hi,j-hj,k,sample) +&
   2052                                              & (field(i-is+1+hi,j-js+1+hj,k)*weight1)**(pow_value)
   2053                                      ELSE
   2054                                         output_fields(out_num)%buffer(i-hi,j-hj,k,sample) =&
   2055                                              & output_fields(out_num)%buffer(i-hi,j-hj,k,sample) +&
   2056                                              & field(i-is+1+hi,j-js+1+hj,k)*weight1
   2057                                      END IF
   2058                                      output_fields(out_num)%counter(i-hi,j-hj,k,sample) =&
   2059                                           &output_fields(out_num)%counter(i-hi,j-hj,k,sample) + weight1
   2060                                   END IF
   2061                                END DO
   2062                             END DO
   2063                          END DO
   2064                       END IF
   2065                    ELSE
   2066 !$OMP CRITICAL
   2067                       IF ( reduced_k_range ) THEN
   2068                          DO k= ksr, ker
   2069                             k1= k - ksr + 1
   2070                             DO j=js, je
   2071                                DO i=is, ie
   2072                                   IF ( mask(i-is+1+hi, j-js+1+hj, k) ) THEN
   2073                                      IF ( pow_value /= 1 ) THEN
   2074                                         output_fields(out_num)%buffer(i-hi,j-hj,k1,sample) =&
   2075                                              & output_fields(out_num)%buffer(i-hi,j-hj,k1,sample) +&
   2076                                              & (field(i-is+1+hi, j-js+1+hj, k) * weight1)**(pow_value)
   2077                                      ELSE
   2078                                         output_fields(out_num)%buffer(i-hi,j-hj,k1,sample) =&
   2079                                              & output_fields(out_num)%buffer(i-hi,j-hj,k1,sample) +&
   2080                                              & field(i-is+1+hi, j-js+1+hj, k) * weight1
   2081                                      END IF
   2082                                      output_fields(out_num)%counter(i-hi,j-hj,k1,sample) =&
   2083                                           & output_fields(out_num)%counter(i-hi,j-hj,k1,sample) + weight1
   2084                                   END IF
   2085                                END DO
   2086                             END DO
   2087                          END DO
   2088                       ELSE
   2089                          DO k=ks, ke
   2090                             DO j=js, je
   2091                                DO i=is, ie
   2092                                   IF ( mask(i-is+1+hi, j-js+1+hj, k) ) THEN
   2093                                      IF ( pow_value /= 1 ) THEN
   2094                                         output_fields(out_num)%buffer(i-hi,j-hj,k,sample) =&
   2095                                              & output_fields(out_num)%buffer(i-hi,j-hj,k,sample) +&
   2096                                              & (field(i-is+1+hi,j-js+1+hj,k)*weight1)**(pow_value)
   2097                                      ELSE
   2098                                         output_fields(out_num)%buffer(i-hi,j-hj,k,sample) =&
   2099                                              & output_fields(out_num)%buffer(i-hi,j-hj,k,sample) +&
   2100                                              & field(i-is+1+hi,j-js+1+hj,k)*weight1
   2101                                      END IF
   2102                                      output_fields(out_num)%counter(i-hi,j-hj,k,sample) =&
   2103                                           &output_fields(out_num)%counter(i-hi,j-hj,k,sample) + weight1
   2104                                   END IF
   2105                                END DO

Page 56          Source Listing                  SEND_DATA_3D
2021-06-01 08:54                                 diag_manager.F90

   2106                             END DO
   2107                          END DO
   2108                       END IF
   2109 !$OMP END CRITICAL
   2110                    END IF
   2111                 ELSE
   2112                    WRITE (error_string,'(a,"/",a)')&
   2113                         & TRIM(input_fields(diag_field_id)%module_name), &
   2114                         & TRIM(output_fields(out_num)%output_name)
   2115                    IF ( fms_error_handler('diag_manager_mod::send_data_3d', 'module/output_field '//TRIM(error_string)//&
   2116                         & ', variable mask but no missing value defined', err_msg)) THEN
   2117                       DEALLOCATE(oor_mask)
   2118                       RETURN
   2119                    END IF
   2120                 END IF
   2121              ELSE  ! no mask present
   2122                 WRITE (error_string,'(a,"/",a)')&
   2123                      & TRIM(input_fields(diag_field_id)%module_name), &
   2124                      & TRIM(output_fields(out_num)%output_name)
   2125                 IF(fms_error_handler('diag_manager_mod::send_data_3d','module/output_field '//TRIM(error_string)//&
   2126                      & ', variable mask but no mask given', err_msg)) THEN
   2127                    DEALLOCATE(oor_mask)
   2128                    RETURN
   2129                 END IF
   2130              END IF
   2131           ELSE ! mask_variant=false
   2132              IF ( PRESENT(mask) ) THEN
   2133                 IF ( missvalue_present ) THEN
   2134                    IF ( need_compute ) THEN
   2135                       IF (numthreads>1 .AND. phys_window) then
   2136                          DO k = l_start(3), l_end(3)
   2137                             k1 = k-l_start(3)+1
   2138                             DO j = js, je
   2139                                DO i = is, ie
   2140                                   IF ( l_start(1)+hi <= i .AND. i <= l_end(1)+hi .AND. l_start(2)+hj <= j .AND. j <= l_end(2
   2140 )+hj ) THEN
   2141                                      i1 = i-l_start(1)-hi+1
   2142                                      j1=  j-l_start(2)-hj+1
   2143                                      IF ( mask(i-is+1+hi, j-js+1+hj, k) ) THEN
   2144                                         IF ( pow_value /= 1 ) THEN
   2145                                            output_fields(out_num)%buffer(i1,j1,k1,sample) =&
   2146                                                 & output_fields(out_num)%buffer(i1,j1,k1,sample) +&
   2147                                                 & (field(i-is+1+hi,j-js+1+hj,k) * weight1)**(pow_value)
   2148                                         ELSE
   2149                                            output_fields(out_num)%buffer(i1,j1,k1,sample) =&
   2150                                                 & output_fields(out_num)%buffer(i1,j1,k1,sample) +&
   2151                                                 & field(i-is+1+hi,j-js+1+hj,k) * weight1
   2152                                         END IF
   2153                                      ELSE
   2154                                         output_fields(out_num)%buffer(i1,j1,k1,sample) = missvalue
   2155                                      END IF
   2156                                   END IF
   2157                                END DO
   2158                             END DO
   2159                          END DO
   2160                       ELSE
   2161 !$OMP CRITICAL

Page 57          Source Listing                  SEND_DATA_3D
2021-06-01 08:54                                 diag_manager.F90

   2162                          DO k = l_start(3), l_end(3)
   2163                             k1 = k-l_start(3)+1
   2164                             DO j = js, je
   2165                                DO i = is, ie
   2166                                   IF ( l_start(1)+hi <= i .AND. i <= l_end(1)+hi .AND. l_start(2)+hj <= j .AND. j <= l_end(2
   2166 )+hj ) THEN
   2167                                      i1 = i-l_start(1)-hi+1
   2168                                      j1=  j-l_start(2)-hj+1
   2169                                      IF ( mask(i-is+1+hi, j-js+1+hj, k) ) THEN
   2170                                         IF ( pow_value /= 1 ) THEN
   2171                                            output_fields(out_num)%buffer(i1,j1,k1,sample) =&
   2172                                                 & output_fields(out_num)%buffer(i1,j1,k1,sample) +&
   2173                                                 & (field(i-is+1+hi,j-js+1+hj,k) * weight1)**(pow_value)
   2174                                         ELSE
   2175                                            output_fields(out_num)%buffer(i1,j1,k1,sample) =&
   2176                                                 & output_fields(out_num)%buffer(i1,j1,k1,sample) +&
   2177                                                 & field(i-is+1+hi,j-js+1+hj,k) * weight1
   2178                                         END IF
   2179                                      ELSE
   2180                                         output_fields(out_num)%buffer(i1,j1,k1,sample) = missvalue
   2181                                      END IF
   2182                                   END IF
   2183                                END DO
   2184                             END DO
   2185                          END DO
   2186 !$OMP END CRITICAL
   2187                       ENDIF
   2188 !$OMP CRITICAL
   2189                       DO j = js, je
   2190                          DO i = is, ie
   2191                             IF ( l_start(1)+hi <= i .AND. i <= l_end(1)+hi .AND. l_start(2)+hj <= j .AND. j <= l_end(2)+hj )
   2191  THEN
   2192                                output_fields(out_num)%num_elements(sample) = &
   2193                                     output_fields(out_num)%num_elements(sample) + l_end(3) - l_start(3) + 1
   2194                             END IF
   2195                          END DO
   2196                       END DO
   2197 !$OMP END CRITICAL
   2198                    ELSE IF ( reduced_k_range ) THEN
   2199                       IF (numthreads>1 .AND. phys_window) then
   2200                          DO k=ksr, ker
   2201                             k1 = k - ksr + 1
   2202                             DO j=js, je
   2203                                DO i=is, ie
   2204                                   IF ( mask(i-is+1+hi,j-js+1+hj,k) ) THEN
   2205                                      IF ( pow_value /= 1 ) THEN
   2206                                         output_fields(out_num)%buffer(i-hi,j-hj,k1,sample) =&
   2207                                              & output_fields(out_num)%buffer(i-hi,j-hj,k1,sample) +&
   2208                                              & (field(i-is+1+hi,j-js+1+hj,k) * weight1)**(pow_value)
   2209                                      ELSE
   2210                                         output_fields(out_num)%buffer(i-hi,j-hj,k1,sample) =&
   2211                                              & output_fields(out_num)%buffer(i-hi,j-hj,k1,sample) +&
   2212                                              & field(i-is+1+hi,j-js+1+hj,k) * weight1
   2213                                      END IF
   2214                                   ELSE
   2215                                      output_fields(out_num)%buffer(i-hi,j-hj,k1,sample)= missvalue
   2216                                   END IF

Page 58          Source Listing                  SEND_DATA_3D
2021-06-01 08:54                                 diag_manager.F90

   2217                                END DO
   2218                             END DO
   2219                          END DO
   2220                       ELSE
   2221 !$OMP CRITICAL
   2222                          DO k=ksr, ker
   2223                             k1 = k - ksr + 1
   2224                             DO j=js, je
   2225                                DO i=is, ie
   2226                                   IF ( mask(i-is+1+hi,j-js+1+hj,k) ) THEN
   2227                                      IF ( pow_value /= 1 ) THEN
   2228                                         output_fields(out_num)%buffer(i-hi,j-hj,k1,sample) =&
   2229                                              & output_fields(out_num)%buffer(i-hi,j-hj,k1,sample) +&
   2230                                              & (field(i-is+1+hi,j-js+1+hj,k) * weight1)**(pow_value)
   2231                                      ELSE
   2232                                         output_fields(out_num)%buffer(i-hi,j-hj,k1,sample) =&
   2233                                              & output_fields(out_num)%buffer(i-hi,j-hj,k1,sample) +&
   2234                                              & field(i-is+1+hi,j-js+1+hj,k) * weight1
   2235                                      END IF
   2236                                   ELSE
   2237                                      output_fields(out_num)%buffer(i-hi,j-hj,k1,sample)= missvalue
   2238                                   END IF
   2239                                END DO
   2240                             END DO
   2241                          END DO
   2242 !$OMP END CRITICAL
   2243                       END IF
   2244                    ELSE
   2245                       IF ( debug_diag_manager ) THEN
   2246                          CALL update_bounds(out_num, is-hi, ie-hi, js-hj, je-hj, ks, ke)
   2247                          CALL check_out_of_bounds(out_num, diag_field_id, err_msg=err_msg_local)
   2248                          IF ( err_msg_local /= '' ) THEN
   2249                             IF ( fms_error_handler('diag_manager_mod::send_data_3d', err_msg_local, err_msg) ) THEN
   2250                                DEALLOCATE(oor_mask)
   2251                                RETURN
   2252                             END IF
   2253                          END IF
   2254                       END IF
   2255                       IF (numthreads>1 .AND. phys_window) then
   2256                          DO k=ks, ke
   2257                             DO j=js, je
   2258                                DO i=is, ie
   2259                                   IF ( mask(i-is+1+hi,j-js+1+hj,k) ) THEN
   2260                                      IF ( pow_value /= 1 ) THEN
   2261                                         output_fields(out_num)%buffer(i-hi,j-hj,k,sample) =&
   2262                                              & output_fields(out_num)%buffer(i-hi,j-hj,k,sample) +&
   2263                                              & (field(i-is+1+hi,j-js+1+hj,k) * weight1)**(pow_value)
   2264                                      ELSE
   2265                                         output_fields(out_num)%buffer(i-hi,j-hj,k,sample) =&
   2266                                              & output_fields(out_num)%buffer(i-hi,j-hj,k,sample) +&
   2267                                              & field(i-is+1+hi,j-js+1+hj,k) * weight1
   2268                                      END IF
   2269                                   ELSE
   2270                                      output_fields(out_num)%buffer(i-hi,j-hj,k,sample)= missvalue
   2271                                   END IF
   2272                                END DO
   2273                             END DO

Page 59          Source Listing                  SEND_DATA_3D
2021-06-01 08:54                                 diag_manager.F90

   2274                          END DO
   2275                       ELSE
   2276 !$OMP CRITICAL
   2277                          DO k=ks, ke
   2278                             DO j=js, je
   2279                                DO i=is, ie
   2280                                   IF ( mask(i-is+1+hi,j-js+1+hj,k) ) THEN
   2281                                      IF ( pow_value /= 1 ) THEN
   2282                                         output_fields(out_num)%buffer(i-hi,j-hj,k,sample) =&
   2283                                              & output_fields(out_num)%buffer(i-hi,j-hj,k,sample) +&
   2284                                              & (field(i-is+1+hi,j-js+1+hj,k) * weight1)**(pow_value)
   2285                                      ELSE
   2286                                         output_fields(out_num)%buffer(i-hi,j-hj,k,sample) =&
   2287                                              & output_fields(out_num)%buffer(i-hi,j-hj,k,sample) +&
   2288                                              & field(i-is+1+hi,j-js+1+hj,k) * weight1
   2289                                      END IF
   2290                                   ELSE
   2291                                      output_fields(out_num)%buffer(i-hi,j-hj,k,sample)= missvalue
   2292                                   END IF
   2293                                END DO
   2294                             END DO
   2295                          END DO
   2296 !$OMP END CRITICAL
   2297                       END IF
   2298                    END IF
   2299 !$OMP CRITICAL
   2300                    IF ( need_compute .AND. .NOT.phys_window ) THEN
   2301                       IF ( ANY(mask(l_start(1)+hi:l_end(1)+hi,l_start(2)+hj:l_end(2)+hj,l_start(3):l_end(3))) ) &
   2302                            & output_fields(out_num)%count_0d(sample) =&
   2303                            & output_fields(out_num)%count_0d(sample) + weight1
   2304                    ELSE
   2305                       IF ( ANY(mask(f1:f2,f3:f4,ks:ke)) ) output_fields(out_num)%count_0d(sample) =&
   2306                            & output_fields(out_num)%count_0d(sample)+weight1
   2307                    END IF
   2308 !$OMP END CRITICAL
   2309 
   2310                 ELSE ! missing value NOT present
   2311                    IF (   (.NOT.ALL(mask(f1:f2,f3:f4,ks:ke)) .AND. mpp_pe() .EQ. mpp_root_pe()).AND.&
   2312                         &  .NOT.input_fields(diag_field_id)%issued_mask_ignore_warning ) THEN
   2313 ! <ERROR STATUS="WARNING">
   2314 !   Mask will be ignored since missing values were not specified for field <field_name>
   2315 !   in module <module_name>
   2316 ! </ERROR>
   2317                       CALL error_mesg('diag_manager_mod::send_data_3d',&
   2318                            & 'Mask will be ignored since missing values were not specified for field '//&
   2319                            & trim(input_fields(diag_field_id)%field_name)//' in module '//&
   2320                            & trim(input_fields(diag_field_id)%module_name), WARNING)
   2321                       input_fields(diag_field_id)%issued_mask_ignore_warning = .TRUE.
   2322                    END IF
   2323                    IF ( need_compute ) THEN
   2324                       IF (numthreads>1 .AND. phys_window) then
   2325                          DO j = js, je
   2326                             DO i = is, ie
   2327                                IF ( l_start(1)+hi <= i .AND. i <= l_end(1)+hi .AND. l_start(2)+hj <= j .AND. j <= l_end(2)+h
   2327 j ) THEN
   2328                                   i1 = i-l_start(1)-hi+1
   2329                                   j1 =  j-l_start(2)-hj+1

Page 60          Source Listing                  SEND_DATA_3D
2021-06-01 08:54                                 diag_manager.F90

   2330                                   IF ( pow_value /= 1 ) THEN
   2331                                      output_fields(out_num)%buffer(i1,j1,:,sample)= output_fields(out_num)%buffer(i1,j1,:,sa
   2331 mple)+ &
   2332                                           & (field(i-is+1+hi,j-js+1+hj,l_start(3):l_end(3))*weight1)**(pow_value)
   2333                                   ELSE
   2334                                      output_fields(out_num)%buffer(i1,j1,:,sample)= output_fields(out_num)%buffer(i1,j1,:,sa
   2334 mple)+ &
   2335                                           & field(i-is+1+hi,j-js+1+hj,l_start(3):l_end(3))*weight1
   2336                                END IF
   2337                                END IF
   2338                             END DO
   2339                          END DO
   2340                       ELSE
   2341 !$OMP CRITICAL
   2342                          DO j = js, je
   2343                             DO i = is, ie
   2344                                IF ( l_start(1)+hi <= i .AND. i <= l_end(1)+hi .AND. l_start(2)+hj <= j .AND. j <= l_end(2)+h
   2344 j ) THEN
   2345                                   i1 = i-l_start(1)-hi+1
   2346                                   j1 =  j-l_start(2)-hj+1
   2347                                   IF ( pow_value /= 1 ) THEN
   2348                                      output_fields(out_num)%buffer(i1,j1,:,sample)= output_fields(out_num)%buffer(i1,j1,:,sa
   2348 mple)+ &
   2349                                           & (field(i-is+1+hi,j-js+1+hj,l_start(3):l_end(3))*weight1)**(pow_value)
   2350                                   ELSE
   2351                                      output_fields(out_num)%buffer(i1,j1,:,sample)= output_fields(out_num)%buffer(i1,j1,:,sa
   2351 mple)+ &
   2352                                           & field(i-is+1+hi,j-js+1+hj,l_start(3):l_end(3))*weight1
   2353                                END IF
   2354                                END IF
   2355                             END DO
   2356                          END DO
   2357 !$OMP END CRITICAL
   2358                       END IF
   2359 !$OMP CRITICAL
   2360                       DO j = js, je
   2361                          DO i = is, ie
   2362                             IF ( l_start(1)+hi <= i .AND. i <= l_end(1)+hi .AND. l_start(2)+hj <= j .AND. j <= l_end(2)+hj )
   2362  THEN
   2363                                output_fields(out_num)%num_elements(sample)=&
   2364                                     & output_fields(out_num)%num_elements(sample)+l_end(3)-l_start(3)+1
   2365 
   2366                             END IF
   2367                          END DO
   2368                       END DO
   2369 !$OMP END CRITICAL
   2370                    ELSE IF ( reduced_k_range ) THEN
   2371                       IF (numthreads>1 .AND. phys_window) then
   2372                          ksr= l_start(3)
   2373                          ker= l_end(3)
   2374                          IF ( pow_value /= 1 ) THEN
   2375                             output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,:,sample) =&
   2376                                  & output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,:,sample) +&
   2377                                  & (field(f1:f2,f3:f4,ksr:ker)*weight1)**(pow_value)
   2378                          ELSE
   2379                             output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,:,sample) =&
   2380                                  & output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,:,sample) +&

Page 61          Source Listing                  SEND_DATA_3D
2021-06-01 08:54                                 diag_manager.F90

   2381                                  & field(f1:f2,f3:f4,ksr:ker)*weight1
   2382                          END IF
   2383                       ELSE
   2384 !$OMP CRITICAL
   2385                          ksr= l_start(3)
   2386                          ker= l_end(3)
   2387                          IF ( pow_value /= 1 ) THEN
   2388                             output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,:,sample) =&
   2389                                  & output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,:,sample) +&
   2390                                  & (field(f1:f2,f3:f4,ksr:ker)*weight1)**(pow_value)
   2391                          ELSE
   2392                             output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,:,sample) =&
   2393                                  & output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,:,sample) +&
   2394                                  & field(f1:f2,f3:f4,ksr:ker)*weight1
   2395                          END IF
   2396 !$OMP END CRITICAL
   2397                       END IF
   2398                    ELSE
   2399                       IF ( debug_diag_manager ) THEN
   2400                          CALL update_bounds(out_num, is-hi, ie-hi, js-hj, je-hj, ks, ke)
   2401                          CALL check_out_of_bounds(out_num, diag_field_id, err_msg=err_msg_local)
   2402                          IF ( err_msg_local /= '') THEN
   2403                             IF ( fms_error_handler('diag_manager_mod::send_data_3d', err_msg_local, err_msg) ) THEN
   2404                                DEALLOCATE(oor_mask)
   2405                                RETURN
   2406                             END IF
   2407                          END IF
   2408                       END IF
   2409                       IF (numthreads>1 .AND. phys_window) then
   2410                          IF ( pow_value /= 1 ) THEN
   2411                             output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,ks:ke,sample) =&
   2412                                  & output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,ks:ke,sample) +&
   2413                                  & (field(f1:f2,f3:f4,ks:ke)*weight1)**(pow_value)
   2414                          ELSE
   2415                             output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,ks:ke,sample) =&
   2416                                  & output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,ks:ke,sample) +&
   2417                                  & field(f1:f2,f3:f4,ks:ke)*weight1
   2418                          END IF
   2419                       ELSE
   2420 !$OMP CRITICAL
   2421                          IF ( pow_value /= 1 ) THEN
   2422                             output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,ks:ke,sample) =&
   2423                                  & output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,ks:ke,sample) +&
   2424                                  & (field(f1:f2,f3:f4,ks:ke)*weight1)**(pow_value)
   2425                          ELSE
   2426                             output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,ks:ke,sample) =&
   2427                                  & output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,ks:ke,sample) +&
   2428                                  & field(f1:f2,f3:f4,ks:ke)*weight1
   2429                          END IF
   2430 !$OMP END CRITICAL
   2431                       END IF
   2432                    END IF
   2433 !$OMP CRITICAL
   2434                    IF ( .NOT.phys_window ) output_fields(out_num)%count_0d(sample) =&
   2435                         & output_fields(out_num)%count_0d(sample) + weight1
   2436 !$OMP END CRITICAL
   2437                 END IF

Page 62          Source Listing                  SEND_DATA_3D
2021-06-01 08:54                                 diag_manager.F90

   2438              ELSE ! mask NOT present
   2439                 IF ( missvalue_present ) THEN
   2440                    IF ( need_compute ) THEN
   2441                       if( numthreads>1 .AND. phys_window ) then
   2442                          DO k = l_start(3), l_end(3)
   2443                             k1 = k - l_start(3) + 1
   2444                             DO j = js, je
   2445                                DO i = is, ie
   2446                                   IF ( l_start(1)+hi <= i .AND. i <= l_end(1)+hi .AND. l_start(2)+hj <= j .AND. j <= l_end(2
   2446 )+hj) THEN
   2447                                      i1 = i-l_start(1)-hi+1
   2448                                      j1=  j-l_start(2)-hj+1
   2449                                      IF ( field(i-is+1+hi,j-js+1+hj,k) /= missvalue ) THEN
   2450                                         IF ( pow_value /= 1 ) THEN
   2451                                            output_fields(out_num)%buffer(i1,j1,k1,sample) =&
   2452                                                 & output_fields(out_num)%buffer(i1,j1,k1,sample) +&
   2453                                                 & (field(i-is+1+hi,j-js+1+hj,k) * weight1)**(pow_value)
   2454                                         ELSE
   2455                                            output_fields(out_num)%buffer(i1,j1,k1,sample) =&
   2456                                                 & output_fields(out_num)%buffer(i1,j1,k1,sample) +&
   2457                                                 & field(i-is+1+hi,j-js+1+hj,k) * weight1
   2458                                         END IF
   2459                                      ELSE
   2460                                         output_fields(out_num)%buffer(i1,j1,k1,sample) = missvalue
   2461                                      END IF
   2462                                   END IF
   2463                                END DO
   2464                             END DO
   2465                          END DO
   2466                       ELSE
   2467 !$OMP CRITICAL
   2468                          DO k = l_start(3), l_end(3)
   2469                             k1 = k - l_start(3) + 1
   2470                             DO j = js, je
   2471                                DO i = is, ie
   2472                                   IF ( l_start(1)+hi <= i .AND. i <= l_end(1)+hi .AND. l_start(2)+hj <= j .AND. j <= l_end(2
   2472 )+hj) THEN
   2473                                      i1 = i-l_start(1)-hi+1
   2474                                      j1=  j-l_start(2)-hj+1
   2475                                      IF ( field(i-is+1+hi,j-js+1+hj,k) /= missvalue ) THEN
   2476                                         IF ( pow_value /= 1 ) THEN
   2477                                            output_fields(out_num)%buffer(i1,j1,k1,sample) =&
   2478                                                 & output_fields(out_num)%buffer(i1,j1,k1,sample) +&
   2479                                                 & (field(i-is+1+hi,j-js+1+hj,k) * weight1)**(pow_value)
   2480                                         ELSE
   2481                                            output_fields(out_num)%buffer(i1,j1,k1,sample) =&
   2482                                                 & output_fields(out_num)%buffer(i1,j1,k1,sample) +&
   2483                                                 & field(i-is+1+hi,j-js+1+hj,k) * weight1
   2484                                         END IF
   2485                                      ELSE
   2486                                         output_fields(out_num)%buffer(i1,j1,k1,sample) = missvalue
   2487                                      END IF
   2488                                   END IF
   2489                                END DO
   2490                             END DO
   2491                          END DO
   2492 !$OMP END CRITICAL

Page 63          Source Listing                  SEND_DATA_3D
2021-06-01 08:54                                 diag_manager.F90

   2493                       END IF
   2494 !$OMP CRITICAL
   2495                       DO j = js, je
   2496                          DO i = is, ie
   2497                             IF ( l_start(1)+hi <= i .AND. i <= l_end(1)+hi .AND. l_start(2)+hj <= j .AND. j <= l_end(2)+hj) 
   2497 THEN
   2498                                output_fields(out_num)%num_elements(sample) =&
   2499                                     & output_fields(out_num)%num_elements(sample) + l_end(3) - l_start(3) + 1
   2500                             END IF
   2501                          END DO
   2502                       END DO
   2503                       IF ( .NOT.phys_window ) THEN
   2504                          outer0: DO k = l_start(3), l_end(3)
   2505                             DO j=l_start(2)+hj, l_end(2)+hj
   2506                                DO i=l_start(1)+hi, l_end(1)+hi
   2507                                   IF ( field(i,j,k) /= missvalue ) THEN
   2508                                      output_fields(out_num)%count_0d(sample) = output_fields(out_num)%count_0d(sample) + wei
   2508 ght1
   2509                                      EXIT outer0
   2510                                   END IF
   2511                                END DO
   2512                             END DO
   2513                          END DO outer0
   2514                       END IF
   2515 !$OMP END CRITICAL
   2516                    ELSE IF ( reduced_k_range ) THEN
   2517                       if( numthreads>1 .AND. phys_window ) then
   2518                          ksr= l_start(3)
   2519                          ker= l_end(3)
   2520                          DO k = ksr, ker
   2521                             k1 = k - ksr + 1
   2522                             DO j=js, je
   2523                                DO i=is, ie
   2524                                   IF ( field(i-is+1+hi,j-js+1+hj,k) /= missvalue ) THEN
   2525                                      IF ( pow_value /= 1 ) THEN
   2526                                         output_fields(out_num)%buffer(i-hi,j-hj,k1,sample) =&
   2527                                              & output_fields(out_num)%buffer(i-hi,j-hj,k1,sample) +&
   2528                                              & (field(i-is+1+hi,j-js+1+hj,k) * weight1)**(pow_value)
   2529                                      ELSE
   2530                                         output_fields(out_num)%buffer(i-hi,j-hj,k1,sample) =&
   2531                                              & output_fields(out_num)%buffer(i-hi,j-hj,k1,sample) +&
   2532                                              & field(i-is+1+hi,j-js+1+hj,k) * weight1
   2533                                      END IF
   2534                                   ELSE
   2535                                      output_fields(out_num)%buffer(i-hi,j-hj,k1,sample) = missvalue
   2536                                   END IF
   2537                                END DO
   2538                             END DO
   2539                          END DO
   2540                       else
   2541 !$OMP CRITICAL
   2542                          ksr= l_start(3)
   2543                          ker= l_end(3)
   2544                          DO k = ksr, ker
   2545                             k1 = k - ksr + 1
   2546                             DO j=js, je
   2547                                DO i=is, ie

Page 64          Source Listing                  SEND_DATA_3D
2021-06-01 08:54                                 diag_manager.F90

   2548                                   IF ( field(i-is+1+hi,j-js+1+hj,k) /= missvalue ) THEN
   2549                                      IF ( pow_value /= 1 ) THEN
   2550                                         output_fields(out_num)%buffer(i-hi,j-hj,k1,sample) =&
   2551                                              & output_fields(out_num)%buffer(i-hi,j-hj,k1,sample) +&
   2552                                              & (field(i-is+1+hi,j-js+1+hj,k) * weight1)**(pow_value)
   2553                                      ELSE
   2554                                         output_fields(out_num)%buffer(i-hi,j-hj,k1,sample) =&
   2555                                              & output_fields(out_num)%buffer(i-hi,j-hj,k1,sample) +&
   2556                                              & field(i-is+1+hi,j-js+1+hj,k) * weight1
   2557                                      END IF
   2558                                   ELSE
   2559                                      output_fields(out_num)%buffer(i-hi,j-hj,k1,sample) = missvalue
   2560                                   END IF
   2561                                END DO
   2562                             END DO
   2563                          END DO
   2564 !$OMP END CRITICAL
   2565                       END IF
   2566 !$OMP CRITICAL
   2567                       outer3: DO k = ksr, ker
   2568                          k1=k-ksr+1
   2569                          DO j=f3, f4
   2570                             DO i=f1, f2
   2571                                IF ( field(i,j,k) /= missvalue ) THEN
   2572                                   output_fields(out_num)%count_0d(sample) = output_fields(out_num)%count_0d(sample) + weight
   2572 1
   2573                                   EXIT outer3
   2574                                END IF
   2575                             END DO
   2576                          END DO
   2577                       END DO outer3
   2578 !$OMP END CRITICAL
   2579                    ELSE
   2580                       IF ( debug_diag_manager ) THEN
   2581                          CALL update_bounds(out_num, is-hi, ie-hi, js-hj, je-hj, ks, ke)
   2582                          CALL check_out_of_bounds(out_num, diag_field_id, err_msg=err_msg_local)
   2583                          IF ( err_msg_local /= '' ) THEN
   2584                             IF ( fms_error_handler('diag_manager_mod::send_data_3d', err_msg_local, err_msg) ) THEN
   2585                                DEALLOCATE(oor_mask)
   2586                                RETURN
   2587                             END IF
   2588                          END IF
   2589                       END IF
   2590                       IF( numthreads > 1 .AND. phys_window ) then
   2591                          DO k=ks, ke
   2592                             DO j=js, je
   2593                                DO i=is, ie
   2594                                   IF ( field(i-is+1+hi,j-js+1+hj,k) /= missvalue )  THEN
   2595                                      IF ( pow_value /= 1 ) THEN
   2596                                         output_fields(out_num)%buffer(i-hi,j-hj,k,sample) =&
   2597                                              & output_fields(out_num)%buffer(i-hi,j-hj,k,sample) +&
   2598                                              & (field(i-is+1+hi,j-js+1+hj,k) * weight1)**(pow_value)
   2599                                      ELSE
   2600                                         output_fields(out_num)%buffer(i-hi,j-hj,k,sample) =&
   2601                                              & output_fields(out_num)%buffer(i-hi,j-hj,k,sample) +&
   2602                                              & field(i-is+1+hi,j-js+1+hj,k) * weight1
   2603                                      END IF

Page 65          Source Listing                  SEND_DATA_3D
2021-06-01 08:54                                 diag_manager.F90

   2604                                   ELSE
   2605                                      output_fields(out_num)%buffer(i-hi,j-hj,k,sample) = missvalue
   2606                                   END IF
   2607                                END DO
   2608                             END DO
   2609                          END DO
   2610                       ELSE
   2611 !$OMP CRITICAL
   2612                          DO k=ks, ke
   2613                             DO j=js, je
   2614                                DO i=is, ie
   2615                                   IF ( field(i-is+1+hi,j-js+1+hj,k) /= missvalue )  THEN
   2616                                      IF ( pow_value /= 1 ) THEN
   2617                                         output_fields(out_num)%buffer(i-hi,j-hj,k,sample) =&
   2618                                              & output_fields(out_num)%buffer(i-hi,j-hj,k,sample) +&
   2619                                              & (field(i-is+1+hi,j-js+1+hj,k) * weight1)**(pow_value)
   2620                                      ELSE
   2621                                         output_fields(out_num)%buffer(i-hi,j-hj,k,sample) =&
   2622                                              & output_fields(out_num)%buffer(i-hi,j-hj,k,sample) +&
   2623                                              & field(i-is+1+hi,j-js+1+hj,k) * weight1
   2624                                      END IF
   2625                                   ELSE
   2626                                      output_fields(out_num)%buffer(i-hi,j-hj,k,sample) = missvalue
   2627                                   END IF
   2628                                END DO
   2629                             END DO
   2630                          END DO
   2631 !$OMP END CRITICAL
   2632                       END IF
   2633 !$OMP CRITICAL
   2634                       outer1: DO k=ks, ke
   2635                          DO j=f3, f4
   2636                             DO i=f1, f2
   2637                                IF ( field(i,j,k) /= missvalue ) THEN
   2638                                   output_fields(out_num)%count_0d(sample) = output_fields(out_num)%count_0d(sample) + weight
   2638 1
   2639                                   EXIT outer1
   2640                                END IF
   2641                             END DO
   2642                          END DO
   2643                       END DO outer1
   2644 !$OMP END CRITICAL
   2645                    END IF
   2646                 ELSE ! no missing value defined, No mask
   2647                    IF ( need_compute ) THEN
   2648                       IF( numthreads > 1 .AND. phys_window ) then
   2649                          DO j = js, je
   2650                             DO i = is, ie
   2651                                IF ( l_start(1)+hi <= i .AND. i <= l_end(1)+hi .AND. l_start(2)+hj <= j .AND. j <= l_end(2)+h
   2651 j ) THEN
   2652                                   i1 = i-l_start(1)-hi+1
   2653                                   j1=  j-l_start(2)-hj+1
   2654                                   IF ( pow_value /= 1 ) THEN
   2655                                      output_fields(out_num)%buffer(i1,j1,:,sample)= output_fields(out_num)%buffer(i1,j1,:,sa
   2655 mple) +&
   2656                                           & (field(i-is+1+hi,j-js+1+hj,l_start(3):l_end(3))*weight1)**(pow_value)
   2657                                   ELSE

Page 66          Source Listing                  SEND_DATA_3D
2021-06-01 08:54                                 diag_manager.F90

   2658                                      output_fields(out_num)%buffer(i1,j1,:,sample)= output_fields(out_num)%buffer(i1,j1,:,sa
   2658 mple) +&
   2659                                           & field(i-is+1+hi,j-js+1+hj,l_start(3):l_end(3))*weight1
   2660                                END IF
   2661                                END IF
   2662                             END DO
   2663                          END DO
   2664                       ELSE
   2665 !$OMP CRITICAL
   2666                          DO j = js, je
   2667                             DO i = is, ie
   2668                                IF ( l_start(1)+hi <= i .AND. i <= l_end(1)+hi .AND. l_start(2)+hj <= j .AND. j <= l_end(2)+h
   2668 j ) THEN
   2669                                   i1 = i-l_start(1)-hi+1
   2670                                   j1=  j-l_start(2)-hj+1
   2671                                   IF ( pow_value /= 1 ) THEN
   2672                                      output_fields(out_num)%buffer(i1,j1,:,sample)= output_fields(out_num)%buffer(i1,j1,:,sa
   2672 mple) +&
   2673                                           & (field(i-is+1+hi,j-js+1+hj,l_start(3):l_end(3))*weight1)**(pow_value)
   2674                                   ELSE
   2675                                      output_fields(out_num)%buffer(i1,j1,:,sample)= output_fields(out_num)%buffer(i1,j1,:,sa
   2675 mple) +&
   2676                                           & field(i-is+1+hi,j-js+1+hj,l_start(3):l_end(3))*weight1
   2677                                END IF
   2678                                END IF
   2679                             END DO
   2680                          END DO
   2681 !$OMP END CRITICAL
   2682                       END IF
   2683 
   2684 !$OMP CRITICAL
   2685                       DO j = js, je
   2686                          DO i = is, ie
   2687                             IF ( l_start(1)+hi <= i .AND. i <= l_end(1)+hi .AND. l_start(2)+hj <= j .AND. j <= l_end(2)+hj )
   2687  THEN
   2688                                output_fields(out_num)%num_elements(sample) =&
   2689                                     & output_fields(out_num)%num_elements(sample)+l_end(3)-l_start(3)+1
   2690                             END IF
   2691                          END DO
   2692                       END DO
   2693 !$OMP END CRITICAL
   2694 ! Accumulate time average
   2695                    ELSE IF ( reduced_k_range ) THEN
   2696                       ksr= l_start(3)
   2697                       ker= l_end(3)
   2698                       IF( numthreads > 1 .AND. phys_window ) then
   2699                          IF ( pow_value /= 1 ) THEN
   2700                             output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,:,sample) =&
   2701                                  & output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,:,sample) + &
   2702                                  & (field(f1:f2,f3:f4,ksr:ker)*weight1)**(pow_value)
   2703                          ELSE
   2704                             output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,:,sample) =&
   2705                                  & output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,:,sample) + &
   2706                                  & field(f1:f2,f3:f4,ksr:ker)*weight1
   2707                          END IF
   2708                       ELSE
   2709 !$OMP CRITICAL

Page 67          Source Listing                  SEND_DATA_3D
2021-06-01 08:54                                 diag_manager.F90

   2710                          IF ( pow_value /= 1 ) THEN
   2711                             output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,:,sample) =&
   2712                                  & output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,:,sample) + &
   2713                                  & (field(f1:f2,f3:f4,ksr:ker)*weight1)**(pow_value)
   2714                          ELSE
   2715                             output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,:,sample) =&
   2716                                  & output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,:,sample) + &
   2717                                  & field(f1:f2,f3:f4,ksr:ker)*weight1
   2718                          END IF
   2719 !$OMP END CRITICAL
   2720                       END IF
   2721                    ELSE
   2722                       IF ( debug_diag_manager ) THEN
   2723                          CALL update_bounds(out_num, is-hi, ie-hi, js-hj, je-hj, ks, ke)
   2724                          CALL check_out_of_bounds(out_num, diag_field_id, err_msg=err_msg_local)
   2725                          IF ( err_msg_local /= '' ) THEN
   2726                             IF ( fms_error_handler('diag_manager_mod::send_data_3d', err_msg_local, err_msg) ) THEN
   2727                                DEALLOCATE(oor_mask)
   2728                                RETURN
   2729                             END IF
   2730                          END IF
   2731                       END IF
   2732                       IF( numthreads > 1 .AND. phys_window ) then
   2733                          IF ( pow_value /= 1 ) THEN
   2734                             output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,ks:ke,sample) =&
   2735                                  & output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,ks:ke,sample) +&
   2736                                  & (field(f1:f2,f3:f4,ks:ke)*weight1)**(pow_value)
   2737                          ELSE
   2738                             output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,ks:ke,sample) =&
   2739                                  & output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,ks:ke,sample) +&
   2740                                  & field(f1:f2,f3:f4,ks:ke)*weight1
   2741                          END IF
   2742                       ELSE
   2743 !$OMP CRITICAL
   2744                          IF ( pow_value /= 1 ) THEN
   2745                             output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,ks:ke,sample) =&
   2746                                  & output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,ks:ke,sample) +&
   2747                                  & (field(f1:f2,f3:f4,ks:ke)*weight1)**(pow_value)
   2748                          ELSE
   2749                             output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,ks:ke,sample) =&
   2750                                  & output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,ks:ke,sample) +&
   2751                                  & field(f1:f2,f3:f4,ks:ke)*weight1
   2752                          END IF
   2753 !$OMP END CRITICAL
   2754                       END IF
   2755                    END IF
   2756 !$OMP CRITICAL
   2757                    IF ( .NOT.phys_window ) output_fields(out_num)%count_0d(sample) =&
   2758                         & output_fields(out_num)%count_0d(sample) + weight1
   2759 !$OMP END CRITICAL
   2760                 END IF
   2761              END IF ! if mask present
   2762           END IF  !if mask_variant
   2763 !$OMP CRITICAL
   2764           IF ( .NOT.need_compute .AND. .NOT.reduced_k_range )&
   2765                & output_fields(out_num)%num_elements(sample) =&
   2766                & output_fields(out_num)%num_elements(sample) + (ie-is+1)*(je-js+1)*(ke-ks+1)

Page 68          Source Listing                  SEND_DATA_3D
2021-06-01 08:54                                 diag_manager.F90

   2767           IF ( reduced_k_range ) &
   2768                & output_fields(out_num)%num_elements(sample) = output_fields(out_num)%num_elements(sample) +&
   2769                & (ie-is+1)*(je-js+1)*(ker-ksr+1)
   2770 !$OMP END CRITICAL
   2771 ! Add processing for Max and Min
   2772        ELSE IF ( time_max ) THEN
   2773           IF ( PRESENT(mask) ) THEN
   2774              IF ( need_compute ) THEN
   2775                 DO k = l_start(3), l_end(3)
   2776                    k1 = k - l_start(3) + 1
   2777                    DO j = js, je
   2778                       DO i = is, ie
   2779                          IF ( l_start(1)+hi <= i .AND. i <= l_end(1)+hi .AND. l_start(2)+hj <= j .AND. j <= l_end(2)+hj ) TH
   2779 EN
   2780                             i1 = i-l_start(1)-hi+1
   2781                             j1=  j-l_start(2)-hj+1
   2782                             IF ( mask(i-is+1+hi,j-js+1+hj,k) .AND.&
   2783                                  & field(i-is+1+hi,j-js+1+hj,k)>output_fields(out_num)%buffer(i1,j1,k1,sample)) THEN
   2784                                output_fields(out_num)%buffer(i1,j1,k1,sample) = field(i-is+1+hi,j-js+1+hj,k)
   2785                             END IF
   2786                          END IF
   2787                       END DO
   2788                    END DO
   2789                 END DO
   2790 ! Maximum time value with masking
   2791              ELSE IF ( reduced_k_range ) THEN
   2792                 ksr = l_start(3)
   2793                 ker = l_end(3)
   2794                 WHERE ( mask(f1:f2,f3:f4,ksr:ker) .AND. &
   2795                      & field(f1:f2,f3:f4,ksr:ker) > output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,:,sample))&
   2796                      & output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,:,sample) = field(f1:f2,f3:f4,ksr:ker)
   2797              ELSE
   2798                 IF ( debug_diag_manager ) THEN
   2799                    CALL update_bounds(out_num, is-hi, ie-hi, js-hj, je-hj, ks, ke)
   2800                    CALL check_out_of_bounds(out_num, diag_field_id, err_msg=err_msg_local)
   2801                    IF ( err_msg_local /= '' ) THEN
   2802                       IF ( fms_error_handler('diag_manager_mod::send_data_3d', err_msg_local, err_msg) ) THEN
   2803                          DEALLOCATE(oor_mask)
   2804                          RETURN
   2805                       END IF
   2806                    END IF
   2807                 END IF
   2808                 WHERE ( mask(f1:f2,f3:f4,ks:ke) .AND.&
   2809                      & field(f1:f2,f3:f4,ks:ke)>output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,ks:ke,sample))&
   2810                      & output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,ks:ke,sample) = field(f1:f2,f3:f4,ks:ke)
   2811              END IF
   2812           ELSE
   2813              IF ( need_compute ) THEN
   2814                 DO k = l_start(3), l_end(3)
   2815                    k1 = k - l_start(3) + 1
   2816                    DO j = js, je
   2817                       DO i = is, ie
   2818                          IF(l_start(1)+hi <= i .AND. i <= l_end(1)+hi .AND. l_start(2)+hj <= j .AND. j <= l_end(2)+hj ) THEN
   2819                             i1 = i-l_start(1)-hi+1
   2820                             j1 =  j-l_start(2)-hj+1
   2821                             IF ( field(i-is+1+hi,j-js+1+hj,k) > output_fields(out_num)%buffer(i1,j1,k1,sample) ) THEN
   2822                                output_fields(out_num)%buffer(i1,j1,k1,sample) = field(i-is+1+hi,j-js+1+hj,k)

Page 69          Source Listing                  SEND_DATA_3D
2021-06-01 08:54                                 diag_manager.F90

   2823                             END IF
   2824                          END IF
   2825                       END DO
   2826                    END DO
   2827                 END DO
   2828 ! Maximum time value
   2829              ELSE IF ( reduced_k_range ) THEN
   2830                 ksr = l_start(3)
   2831                 ker = l_end(3)
   2832                 WHERE ( field(f1:f2,f3:f4,ksr:ker) > output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,:,sample) ) &
   2833                      & output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,:,sample) = field(f1:f2,f3:f4,ksr:ker)
   2834              ELSE
   2835                 IF ( debug_diag_manager ) THEN
   2836                    CALL update_bounds(out_num, is-hi, ie-hi, js-hj, je-hj, ks, ke)
   2837                    CALL check_out_of_bounds(out_num, diag_field_id, err_msg=err_msg_local)
   2838                    IF ( err_msg_local /= '' ) THEN
   2839                       IF ( fms_error_handler('diag_manager_mod::send_data_3d', err_msg_local, err_msg) ) THEN
   2840                          DEALLOCATE(oor_mask)
   2841                          RETURN
   2842                       END IF
   2843                    END IF
   2844                 END IF
   2845                 WHERE ( field(f1:f2,f3:f4,ks:ke) > output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,ks:ke,sample) ) &
   2846                      & output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,ks:ke,sample) = field(f1:f2,f3:f4,ks:ke)
   2847              END IF
   2848           END IF
   2849           output_fields(out_num)%count_0d(sample) = 1
   2850        ELSE IF ( time_min ) THEN
   2851           IF ( PRESENT(mask) ) THEN
   2852              IF ( need_compute ) THEN
   2853                 DO k = l_start(3), l_end(3)
   2854                    k1 = k - l_start(3) + 1
   2855                    DO j = js, je
   2856                       DO i = is, ie
   2857                          IF ( l_start(1)+hi <= i .AND. i <= l_end(1)+hi .AND. l_start(2)+hj <= j .AND. j <= l_end(2)+hj ) TH
   2857 EN
   2858                             i1 = i-l_start(1)-hi+1
   2859                             j1 =  j-l_start(2)-hj+1
   2860                             IF ( mask(i-is+1+hi,j-js+1+hj,k) .AND.&
   2861                                  & field(i-is+1+hi,j-js+1+hj,k) < output_fields(out_num)%buffer(i1,j1,k1,sample) ) THEN
   2862                                output_fields(out_num)%buffer(i1,j1,k1,sample) = field(i-is+1+hi,j-js+1+hj,k)
   2863                             END IF
   2864                          END IF
   2865                       END DO
   2866                    END DO
   2867                 END DO
   2868 ! Minimum time value with masking
   2869              ELSE IF ( reduced_k_range ) THEN
   2870                 ksr= l_start(3)
   2871                 ker= l_end(3)
   2872                 WHERE ( mask(f1:f2,f3:f4,ksr:ker) .AND.&
   2873                      & field(f1:f2,f3:f4,ksr:ker) < output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,:,sample)) &
   2874                      & output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,:,sample) = field(f1:f2,f3:f4,ksr:ker)
   2875              ELSE
   2876                 IF ( debug_diag_manager ) THEN
   2877                    CALL update_bounds(out_num, is-hi, ie-hi, js-hj, je-hj, ks, ke)
   2878                    CALL check_out_of_bounds(out_num, diag_field_id, err_msg=err_msg_local)

Page 70          Source Listing                  SEND_DATA_3D
2021-06-01 08:54                                 diag_manager.F90

   2879                    IF ( err_msg_local /= '' ) THEN
   2880                       IF ( fms_error_handler('diag_manager_mod::send_data_3d', err_msg_local, err_msg) ) THEN
   2881                          DEALLOCATE(oor_mask)
   2882                          RETURN
   2883                       END IF
   2884                    END IF
   2885                 END IF
   2886                 WHERE ( mask(f1:f2,f3:f4,ks:ke) .AND.&
   2887                      & field(f1:f2,f3:f4,ks:ke) < output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,ks:ke,sample) ) &
   2888                      & output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,ks:ke,sample) = field(f1:f2,f3:f4,ks:ke)
   2889              END IF
   2890           ELSE
   2891              IF ( need_compute ) THEN
   2892                 DO k = l_start(3), l_end(3)
   2893                    k1 = k - l_start(3) + 1
   2894                    DO j = js, je
   2895                       DO i = is, ie
   2896                          IF ( l_start(1)+hi <=i.AND.i<=l_end(1)+hi.AND.l_start(2)+hj<=j.AND.j<=l_end(2)+hj) THEN
   2897                             i1 = i-l_start(1)-hi+1
   2898                             j1=  j-l_start(2)-hj+1
   2899                             IF ( field(i-is+1+hi,j-js+1+hj,k) < output_fields(out_num)%buffer(i1,j1,k1,sample) ) THEN
   2900                                output_fields(out_num)%buffer(i1,j1,k1,sample) = field(i-is+1+hi,j-js+1+hj,k)
   2901                             END IF
   2902                          END IF
   2903                       END DO
   2904                    END DO
   2905                 END DO
   2906 ! Minimum time value
   2907              ELSE IF ( reduced_k_range ) THEN
   2908                 ksr= l_start(3)
   2909                 ker= l_end(3)
   2910                 WHERE ( field(f1:f2,f3:f4,ksr:ker) < output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,:,sample) ) &
   2911                      output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,:,sample) = field(f1:f2,f3:f4,ksr:ker)
   2912              ELSE
   2913                 IF ( debug_diag_manager ) THEN
   2914                    CALL update_bounds(out_num, is-hi, ie-hi, js-hj, je-hj, ks, ke)
   2915                    CALL check_out_of_bounds(out_num, diag_field_id, err_msg=err_msg_local)
   2916                    IF ( err_msg_local /= '' ) THEN
   2917                       IF ( fms_error_handler('diag_manager_mod::send_data_3d', err_msg_local, err_msg) ) THEN
   2918                          DEALLOCATE(oor_mask)
   2919                          RETURN
   2920                       END IF
   2921                    END IF
   2922                 END IF
   2923                 WHERE ( field(f1:f2,f3:f4,ks:ke) < output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,ks:ke,sample) )&
   2924                      & output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,ks:ke,sample) = field(f1:f2,f3:f4,ks:ke)
   2925              END IF
   2926           END IF
   2927           output_fields(out_num)%count_0d(sample) = 1
   2928        ELSE IF ( time_sum ) THEN
   2929           IF ( PRESENT(mask) ) THEN
   2930              IF ( need_compute ) THEN
   2931                 DO k = l_start(3), l_end(3)
   2932                    k1 = k - l_start(3) + 1
   2933                    DO j = js, je
   2934                       DO i = is, ie
   2935                          IF ( l_start(1)+hi <= i .AND. i <= l_end(1)+hi .AND. l_start(2)+hj <= j .AND. j <= l_end(2)+hj ) TH

Page 71          Source Listing                  SEND_DATA_3D
2021-06-01 08:54                                 diag_manager.F90

   2935 EN
   2936                             i1 = i-l_start(1)-hi+1
   2937                             j1 =  j-l_start(2)-hj+1
   2938                             IF ( mask(i-is+1+hi,j-js+1+hj,k) ) THEN
   2939                                output_fields(out_num)%buffer(i1,j1,k1,sample) = &
   2940                                     output_fields(out_num)%buffer(i1,j1,k1,sample) + &
   2941                                     field(i-is+1+hi,j-js+1+hj,k)
   2942                             END IF
   2943                          END IF
   2944                       END DO
   2945                    END DO
   2946                 END DO
   2947 ! Minimum time value with masking
   2948              ELSE IF ( reduced_k_range ) THEN
   2949                 ksr= l_start(3)
   2950                 ker= l_end(3)
   2951                 output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,:,sample) = &
   2952                      &   output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,:,sample) + &
   2953                      &   field(f1:f2,f3:f4,ksr:ker)
   2954              ELSE
   2955                 IF ( debug_diag_manager ) THEN
   2956                    CALL update_bounds(out_num, is-hi, ie-hi, js-hj, je-hj, ks, ke)
   2957                    CALL check_out_of_bounds(out_num, diag_field_id, err_msg=err_msg_local)
   2958                    IF ( err_msg_local /= '' ) THEN
   2959                       IF ( fms_error_handler('diag_manager_mod::send_data_3d', err_msg_local, err_msg) ) THEN
   2960                          DEALLOCATE(oor_mask)
   2961                          RETURN
   2962                       END IF
   2963                    END IF
   2964                 END IF
   2965                 WHERE ( mask(f1:f2,f3:f4,ks:ke) ) &
   2966                      & output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,ks:ke,sample) = &
   2967                      &  output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,ks:ke,sample) + &
   2968                      &  field(f1:f2,f3:f4,ks:ke)
   2969              END IF
   2970           ELSE
   2971              IF ( need_compute ) THEN
   2972                 DO k = l_start(3), l_end(3)
   2973                    k1 = k - l_start(3) + 1
   2974                    DO j = js, je
   2975                       DO i = is, ie
   2976                          IF ( l_start(1)+hi <=i.AND.i<=l_end(1)+hi.AND.l_start(2)+hj<=j.AND.j<=l_end(2)+hj) THEN
   2977                             i1 = i-l_start(1)-hi+1
   2978                             j1=  j-l_start(2)-hj+1
   2979                             output_fields(out_num)%buffer(i1,j1,k1,sample) = &
   2980                                &    output_fields(out_num)%buffer(i1,j1,k1,sample) + &
   2981                                &    field(i-is+1+hi,j-js+1+hj,k)
   2982                          END IF
   2983                       END DO
   2984                    END DO
   2985                 END DO
   2986              ELSE IF ( reduced_k_range ) THEN
   2987                 ksr= l_start(3)
   2988                 ker= l_end(3)
   2989                 output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,:,sample) = &
   2990                      &  output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,:,sample) + &
   2991                      &  field(f1:f2,f3:f4,ksr:ker)

Page 72          Source Listing                  SEND_DATA_3D
2021-06-01 08:54                                 diag_manager.F90

   2992              ELSE
   2993                 IF ( debug_diag_manager ) THEN
   2994                    CALL update_bounds(out_num, is-hi, ie-hi, js-hj, je-hj, ks, ke)
   2995                    CALL check_out_of_bounds(out_num, diag_field_id, err_msg=err_msg_local)
   2996                    IF ( err_msg_local /= '' ) THEN
   2997                       IF ( fms_error_handler('diag_manager_mod::send_data_3d', err_msg_local, err_msg) ) THEN
   2998                          DEALLOCATE(oor_mask)
   2999                          RETURN
   3000                       END IF
   3001                    END IF
   3002                 END IF
   3003                 output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,ks:ke,sample) = &
   3004                 &    output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,ks:ke,sample) + &
   3005                 &    field(f1:f2,f3:f4,ks:ke)
   3006              END IF
   3007           END IF
   3008           output_fields(out_num)%count_0d(sample) = 1
   3009        ELSE  ! ( not average, not min, not max, not sum )
   3010           output_fields(out_num)%count_0d(sample) = 1
   3011           IF ( need_compute ) THEN
   3012              DO j = js, je
   3013                 DO i = is, ie
   3014                    IF ( l_start(1)+hi <= i .AND. i <= l_end(1)+hi .AND. l_start(2)+hj <= j .AND. j <= l_end(2)+hj ) THEN
   3015                       i1 = i-l_start(1)-hi+1
   3016                       j1 = j-l_start(2)-hj+1
   3017                       output_fields(out_num)%buffer(i1,j1,:,sample) = field(i-is+1+hi,j-js+1+hj,l_start(3):l_end(3))
   3018                    END IF
   3019                 END DO
   3020              END DO
   3021 ! instantaneous output
   3022           ELSE IF ( reduced_k_range ) THEN
   3023              ksr = l_start(3)
   3024              ker = l_end(3)
   3025              output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,:,sample) = field(f1:f2,f3:f4,ksr:ker)
   3026           ELSE
   3027              IF ( debug_diag_manager ) THEN
   3028                 CALL update_bounds(out_num, is-hi, ie-hi, js-hj, je-hj, ks, ke)
   3029                 CALL check_out_of_bounds(out_num, diag_field_id, err_msg=err_msg_local)
   3030                 IF ( err_msg_local /= '' ) THEN
   3031                    IF ( fms_error_handler('diag_manager_mod::send_data_3d', err_msg_local, err_msg) ) THEN
   3032                       DEALLOCATE(oor_mask)
   3033                       RETURN
   3034                    END IF
   3035                 END IF
   3036              END IF
   3037              output_fields(out_num)%buffer(is-hi:ie-hi,js-hj:je-hj,ks:ke,sample) = field(f1:f2,f3:f4,ks:ke)
   3038           END IF
   3039 
   3040           IF ( PRESENT(mask) .AND. missvalue_present ) THEN
   3041              IF ( need_compute ) THEN
   3042                 DO k = l_start(3), l_end(3)
   3043                    k1 = k - l_start(3) + 1
   3044                    DO j = js, je
   3045                       DO i = is, ie
   3046                          IF ( l_start(1)+hi <= i .AND. i <= l_end(1)+hi .AND. l_start(2)+hj <= j .AND. j <= l_end(2)+hj ) TH
   3046 EN
   3047                             i1 = i-l_start(1)-hi+1

Page 73          Source Listing                  SEND_DATA_3D
2021-06-01 08:54                                 diag_manager.F90

   3048                             j1 =  j-l_start(2)-hj+1
   3049                             IF ( .NOT.mask(i-is+1+hi,j-js+1+hj,k) )&
   3050                                  & output_fields(out_num)%buffer(i1,j1,k1,sample) = missvalue
   3051                          END IF
   3052                       END DO
   3053                    END DO
   3054                 END DO
   3055              ELSE IF ( reduced_k_range ) THEN
   3056                 ksr= l_start(3)
   3057                 ker= l_end(3)
   3058                 DO k=ksr, ker
   3059                    k1= k - ksr + 1
   3060                    DO j=js, je
   3061                       DO i=is, ie
   3062                          IF ( .NOT.mask(i-is+1+hi,j-js+1+hj,k) ) &
   3063                               & output_fields(out_num)%buffer(i-hi,j-hj,k1,sample)= missvalue
   3064                       END DO
   3065                    END DO
   3066                 END DO
   3067              ELSE
   3068                 DO k=ks, ke
   3069                    DO j=js, je
   3070                       DO i=is, ie
   3071                          IF ( .NOT.mask(i-is+1+hi,j-js+1+hj,k) )&
   3072                               & output_fields(out_num)%buffer(i-hi,j-hj,k,sample)= missvalue
   3073                       END DO
   3074                    END DO
   3075                 END DO
   3076              END IF
   3077           END IF
   3078        END IF !average
   3079 
   3080        IF ( output_fields(out_num)%static .AND. .NOT.need_compute .AND. debug_diag_manager ) THEN
   3081           CALL check_bounds_are_exact_static(out_num, diag_field_id, err_msg=err_msg_local)
   3082           IF ( err_msg_local /= '' ) THEN
   3083              IF ( fms_error_handler('diag_manager_mod::send_data_3d', err_msg_local, err_msg)) THEN
   3084                 DEALLOCATE(oor_mask)
   3085                 RETURN
   3086              END IF
   3087           END IF
   3088        END IF
   3089 
   3090 ! If rmask and missing value present, then insert missing value
   3091        IF ( PRESENT(rmask) .AND. missvalue_present ) THEN
   3092           IF ( need_compute ) THEN
   3093              DO k = l_start(3), l_end(3)
   3094                 k1 = k - l_start(3) + 1
   3095                 DO j = js, je
   3096                    DO i = is, ie
   3097                       IF ( l_start(1)+hi <= i .AND. i <= l_end(1)+hi .AND. l_start(2)+hj <= j .AND. j <= l_end(2)+hj ) THEN
   3098                          i1 = i-l_start(1)-hi+1
   3099                          j1 =  j-l_start(2)-hj+1
   3100                          IF ( rmask(i-is+1+hi,j-js+1+hj,k) < 0.5 ) &
   3101                               & output_fields(out_num)%buffer(i1,j1,k1,sample) = missvalue
   3102                       END IF
   3103                    END DO
   3104                 END DO

Page 74          Source Listing                  SEND_DATA_3D
2021-06-01 08:54                                 diag_manager.F90

   3105              END DO
   3106           ELSE IF ( reduced_k_range ) THEN
   3107              ksr= l_start(3)
   3108              ker= l_end(3)
   3109              DO k= ksr, ker
   3110                 k1 = k - ksr + 1
   3111                 DO j=js, je
   3112                    DO i=is, ie
   3113                       IF ( rmask(i-is+1+hi,j-js+1+hj,k) < 0.5 ) &
   3114                            & output_fields(out_num)%buffer(i-hi,j-hj,k1,sample)= missvalue
   3115                    END DO
   3116                 END DO
   3117              END DO
   3118           ELSE
   3119              DO k=ks, ke
   3120                 DO j=js, je
   3121                    DO i=is, ie
   3122                       IF ( rmask(i-is+1+hi,j-js+1+hj,k) < 0.5 ) &
   3123                            & output_fields(out_num)%buffer(i-hi,j-hj,k,sample)= missvalue
   3124                    END DO
   3125                 END DO
   3126              END DO
   3127           END IF
   3128        END IF
   3129 
   3130     END DO num_out_fields
   3131 
   3132     DEALLOCATE(oor_mask)
   3133   END FUNCTION send_data_3d

Page 75          Source Listing                  SEND_DATA_3D
2021-06-01 08:54 Entry Points                    diag_manager.F90



ENTRY POINTS

  Name                                         
                                               
 diag_manager_mod_mp_send_data_3d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ACTIVE_OMP_LEVEL           Local  1643     I(4)            4           scalar                    1797,1803,1952                    
 ALL                        Func   2311                                 scalar                    2311                              
 ANY                        Func   1817                                 scalar                    1817,1836,2301,2305               
 AVERAGE                    Local  1648     L(4)            4           scalar                    1877,1995                         
 CHECK_BOUNDS_ARE_EXACT_DYN                                                                                                         
 AMIC                       Subr   1985                                          PRIV             335,1985                          
 CHECK_BOUNDS_ARE_EXACT_STA                                                                                                         
 TIC                        Subr   3081                                          PRIV             335,3081                          
 CHECK_OUT_OF_BOUNDS        Subr   2014                                          PRIV             335,2014,2247,2401,2582,2724,2800,
                                                                                                  2837,2878,2915,2957,2995,3029     
 DAY                        Local  1638     I(4)            4           scalar                    1902                              
 DIAG_FIELD_ID              Dummy  1614     I(4)            4           scalar   ARG,IN           1657,1791,1792,1794,1796,1799,1800
                                                                                                  ,1802,1803,1806,1809,1812,1818,181
                                                                                                  9,1828,1829,1837,1838,1845,1846,18
                                                                                                  58,1928,1940,1959,1985,1996,1999,2
                                                                                                  014,2113,2123,2247,2312,2319,2320,
                                                                                                  2321,2401,2582,2724,2800,2837,2878
                                                                                                  ,2915,2957,2995,3029,3081         
 END_OF_RUN                 Param  1953     I(4)            4           scalar   PRIV             340,1953,3459,3505,3592,3682,3687 
 ERROR_STRING               Local  1654     CHAR            128         scalar                    1811,1831,1848,1927,1930,1939,1942
                                                                                                  ,1958,1961,1969,1972,1998,2001,211
                                                                                                  2,2115,2122,2125                  
 ERROR_STRING1              Local  1654     CHAR            128         scalar                    1813,1830,1847                    
 ERR_MSG                    Dummy  1615     CHAR                        scalar   ARG,OUT          1664,1666,1683,1706,1713,1721,1728
                                                                                                  ,1753,1760,1931,1943,1962,1973,198
                                                                                                  7,2002,2016,2116,2126,2249,2403,25
                                                                                                  84,2726,2802,2839,2880,2917,2959,2
                                                                                                  997,3031,3083                     
 ERR_MSG_LOCAL              Local  1653     CHAR            256         scalar                    1668,1681,1683,1985,1986,1987,2014
                                                                                                  ,2015,2016,2247,2248,2249,2401,240
                                                                                                  2,2403,2582,2583,2584,2724,2725,27
                                                                                                  26,2800,2801,2802,2837,2838,2839,2
                                                                                                  878,2879,2880,2915,2916,2917,2957,
                                                                                                  2958,2959,2995,2996,2997,3029,3030
                                                                                                  ,3031,3081,3082,3083              
 EVERY_TIME                 Param  1922     I(4)            4           scalar   PRIV             339,1922,3508                     
 F1                         Local  1629     I(4)            4           scalar                    1778,1814,1815,1817,1818,1819,1820
                                                                                                  ,1836,1837,1838,1888,2305,2311,237
                                                                                                  7,2381,2390,2394,2413,2417,2424,24
                                                                                                  28,2570,2636,2702,2706,2713,2717,2
                                                                                                  736,2740,2747,2751,2794,2795,2796,
                                                                                                  2808,2809,2810,2832,2833,2845,2846
                                                                                                  ,2872,2873,2874,2886,2887,2888,291
                                                                                                  0,2911,2923,2924,2953,2965,2968,29

Page 76          Source Listing                  SEND_DATA_3D
2021-06-01 08:54 Symbol Table                    diag_manager.F90

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
                                                                                                  91,3005,3025,3037                 
 F2                         Local  1629     I(4)            4           scalar                    1779,1814,1815,1817,1818,1819,1820
                                                                                                  ,1836,1837,1838,1888,2305,2311,237
                                                                                                  7,2381,2390,2394,2413,2417,2424,24
                                                                                                  28,2570,2636,2702,2706,2713,2717,2
                                                                                                  736,2740,2747,2751,2794,2795,2796,
                                                                                                  2808,2809,2810,2832,2833,2845,2846
                                                                                                  ,2872,2873,2874,2886,2887,2888,291
                                                                                                  0,2911,2923,2924,2953,2965,2968,29
                                                                                                  91,3005,3025,3037                 
 F3                         Local  1629     I(4)            4           scalar                    1780,1814,1815,1817,1818,1819,1820
                                                                                                  ,1836,1837,1838,1888,2305,2311,237
                                                                                                  7,2381,2390,2394,2413,2417,2424,24
                                                                                                  28,2569,2635,2702,2706,2713,2717,2
                                                                                                  736,2740,2747,2751,2794,2795,2796,
                                                                                                  2808,2809,2810,2832,2833,2845,2846
                                                                                                  ,2872,2873,2874,2886,2887,2888,291
                                                                                                  0,2911,2923,2924,2953,2965,2968,29
                                                                                                  91,3005,3025,3037                 
 F4                         Local  1629     I(4)            4           scalar                    1781,1814,1815,1817,1818,1819,1820
                                                                                                  ,1836,1837,1838,1888,2305,2311,237
                                                                                                  7,2381,2390,2394,2413,2417,2424,24
                                                                                                  28,2569,2635,2702,2706,2713,2717,2
                                                                                                  736,2740,2747,2751,2794,2795,2796,
                                                                                                  2808,2809,2810,2832,2833,2845,2846
                                                                                                  ,2872,2873,2874,2886,2887,2888,291
                                                                                                  0,2911,2923,2924,2953,2965,2968,29
                                                                                                  91,3005,3025,3037                 
 FIELD                      Dummy  1614     R(8)            8     3     1        ARG,IN           1679,1682,1742,1743,1744,1814,1815
                                                                                                  ,1818,1819,1820,1837,1838,1888,203
                                                                                                  2,2036,2052,2056,2076,2080,2096,21
                                                                                                  00,2147,2151,2173,2177,2208,2212,2
                                                                                                  230,2234,2263,2267,2284,2288,2332,
                                                                                                  2335,2349,2352,2377,2381,2390,2394
                                                                                                  ,2413,2417,2424,2428,2449,2453,245
                                                                                                  7,2475,2479,2483,2507,2524,2528,25
                                                                                                  32,2548,2552,2556,2571,2594,2598,2
                                                                                                  602,2615,2619,2623,2637,2656,2659,
                                                                                                  2673,2676,2702,2706,2713,2717,2736
                                                                                                  ,2740,2747,2751,2783,2784,2795,279
                                                                                                  6,2809,2810,2821,2822,2832,2833,28
                                                                                                  45,2846,2861,2862,2873,2874,2887,2
                                                                                                  888,2899,2900,2910,2911,2923,2924,
                                                                                                  2941,2953,2968,2981,2991,3005,3017
                                                                                                  ,3025,3037                        
 FILE_NUM                   Local  1629     I(4)            4           scalar                    1871,1872,1874,1875               
 FLOOR                      Func   1903                                 scalar                    1903                              
 FREQ                       Local  1630     I(4)            4           scalar                    1874,1922,1953,1956               
 GET_TICKS_PER_SECOND       Func   1903     I(4)            4           scalar   PRIV             320,1903                          
 GET_TIME                   Subr   1902                                          PRIV             318,1902                          
 HI                         Local  1633     I(4)            4           scalar                    1765,1771,1772,1778,1779,2013,2028
                                                                                                  ,2030,2031,2032,2034,2035,2036,203
                                                                                                  8,2039,2048,2050,2051,2052,2054,20
                                                                                                  55,2056,2058,2059,2072,2074,2075,2
                                                                                                  076,2078,2079,2080,2082,2083,2092,

Page 77          Source Listing                  SEND_DATA_3D
2021-06-01 08:54 Symbol Table                    diag_manager.F90

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
                                                                                                  2094,2095,2096,2098,2099,2100,2102
                                                                                                  ,2103,2140,2141,2143,2147,2151,216
                                                                                                  6,2167,2169,2173,2177,2191,2204,22
                                                                                                  06,2207,2208,2210,2211,2212,2215,2
                                                                                                  226,2228,2229,2230,2232,2233,2234,
                                                                                                  2237,2246,2259,2261,2262,2263,2265
                                                                                                  ,2266,2267,2270,2280,2282,2283,228
                                                                                                  4,2286,2287,2288,2291,2301,2327,23
                                                                                                  28,2332,2335,2344,2345,2349,2352,2
                                                                                                  362,2375,2376,2379,2380,2388,2389,
                                                                                                  2392,2393,2400,2411,2412,2415,2416
                                                                                                  ,2422,2423,2426,2427,2446,2447,244
                                                                                                  9,2453,2457,2472,2473,2475,2479,24
                                                                                                  83,2497,2506,2524,2526,2527,2528,2
                                                                                                  530,2531,2532,2535,2548,2550,2551,
                                                                                                  2552,2554,2555,2556,2559,2581,2594
                                                                                                  ,2596,2597,2598,2600,2601,2602,260
                                                                                                  5,2615,2617,2618,2619,2621,2622,26
                                                                                                  23,2626,2651,2652,2656,2659,2668,2
                                                                                                  669,2673,2676,2687,2700,2701,2704,
                                                                                                  2705,2711,2712,2715,2716,2723,2734
                                                                                                  ,2735,2738,2739,2745,2746,2749,275
                                                                                                  0,2779,2780,2782,2783,2784,2795,27
                                                                                                  96,2799,2809,2810,2818,2819,2821,2
                                                                                                  822,2832,2833,2836,2845,2846,2857,
                                                                                                  2858,2860,2861,2862,2873,2874,2877
                                                                                                  ,2887,2888,2896,2897,2899,2900,291
                                                                                                  0,2911,2914,2923,2924,2935,2936,29
                                                                                                  38,2941,2951,2952,2956,2966,2967,2
                                                                                                  976,2977,2981,2989,2990,2994,3003,
                                                                                                  3004,3014,3015,3017,3025,3028,3037
                                                                                                  ,3046,3047,3049,3062,3063,3071,307
                                                                                                  2,3097,3098,3100,3113,3114,3122,31
                                                                                                  23                                
 HJ                         Local  1634     I(4)            4           scalar                    1766,1773,1774,1780,1781,2013,2028
                                                                                                  ,2030,2031,2032,2034,2035,2036,203
                                                                                                  8,2039,2048,2050,2051,2052,2054,20
                                                                                                  55,2056,2058,2059,2072,2074,2075,2
                                                                                                  076,2078,2079,2080,2082,2083,2092,
                                                                                                  2094,2095,2096,2098,2099,2100,2102
                                                                                                  ,2103,2140,2142,2143,2147,2151,216
                                                                                                  6,2168,2169,2173,2177,2191,2204,22
                                                                                                  06,2207,2208,2210,2211,2212,2215,2
                                                                                                  226,2228,2229,2230,2232,2233,2234,
                                                                                                  2237,2246,2259,2261,2262,2263,2265
                                                                                                  ,2266,2267,2270,2280,2282,2283,228
                                                                                                  4,2286,2287,2288,2291,2301,2327,23
                                                                                                  29,2332,2335,2344,2346,2349,2352,2
                                                                                                  362,2375,2376,2379,2380,2388,2389,
                                                                                                  2392,2393,2400,2411,2412,2415,2416
                                                                                                  ,2422,2423,2426,2427,2446,2448,244
                                                                                                  9,2453,2457,2472,2474,2475,2479,24
                                                                                                  83,2497,2505,2524,2526,2527,2528,2
                                                                                                  530,2531,2532,2535,2548,2550,2551,
                                                                                                  2552,2554,2555,2556,2559,2581,2594

Page 78          Source Listing                  SEND_DATA_3D
2021-06-01 08:54 Symbol Table                    diag_manager.F90

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
                                                                                                  ,2596,2597,2598,2600,2601,2602,260
                                                                                                  5,2615,2617,2618,2619,2621,2622,26
                                                                                                  23,2626,2651,2653,2656,2659,2668,2
                                                                                                  670,2673,2676,2687,2700,2701,2704,
                                                                                                  2705,2711,2712,2715,2716,2723,2734
                                                                                                  ,2735,2738,2739,2745,2746,2749,275
                                                                                                  0,2779,2781,2782,2783,2784,2795,27
                                                                                                  96,2799,2809,2810,2818,2820,2821,2
                                                                                                  822,2832,2833,2836,2845,2846,2857,
                                                                                                  2859,2860,2861,2862,2873,2874,2877
                                                                                                  ,2887,2888,2896,2898,2899,2900,291
                                                                                                  0,2911,2914,2923,2924,2935,2937,29
                                                                                                  38,2941,2951,2952,2956,2966,2967,2
                                                                                                  976,2978,2981,2989,2990,2994,3003,
                                                                                                  3004,3014,3016,3017,3025,3028,3037
                                                                                                  ,3046,3048,3049,3062,3063,3071,307
                                                                                                  2,3097,3099,3100,3113,3114,3122,31
                                                                                                  23                                
 I                          Local  1629     I(4)            4           scalar                    2027,2028,2030,2031,2032,2034,2035
                                                                                                  ,2036,2038,2039,2047,2048,2050,205
                                                                                                  1,2052,2054,2055,2056,2058,2059,20
                                                                                                  71,2072,2074,2075,2076,2078,2079,2
                                                                                                  080,2082,2083,2091,2092,2094,2095,
                                                                                                  2096,2098,2099,2100,2102,2103,2139
                                                                                                  ,2140,2141,2143,2147,2151,2165,216
                                                                                                  6,2167,2169,2173,2177,2190,2191,22
                                                                                                  03,2204,2206,2207,2208,2210,2211,2
                                                                                                  212,2215,2225,2226,2228,2229,2230,
                                                                                                  2232,2233,2234,2237,2258,2259,2261
                                                                                                  ,2262,2263,2265,2266,2267,2270,227
                                                                                                  9,2280,2282,2283,2284,2286,2287,22
                                                                                                  88,2291,2326,2327,2328,2332,2335,2
                                                                                                  343,2344,2345,2349,2352,2361,2362,
                                                                                                  2445,2446,2447,2449,2453,2457,2471
                                                                                                  ,2472,2473,2475,2479,2483,2496,249
                                                                                                  7,2506,2507,2523,2524,2526,2527,25
                                                                                                  28,2530,2531,2532,2535,2547,2548,2
                                                                                                  550,2551,2552,2554,2555,2556,2559,
                                                                                                  2570,2571,2593,2594,2596,2597,2598
                                                                                                  ,2600,2601,2602,2605,2614,2615,261
                                                                                                  7,2618,2619,2621,2622,2623,2626,26
                                                                                                  36,2637,2650,2651,2652,2656,2659,2
                                                                                                  667,2668,2669,2673,2676,2686,2687,
                                                                                                  2778,2779,2780,2782,2783,2784,2817
                                                                                                  ,2818,2819,2821,2822,2856,2857,285
                                                                                                  8,2860,2861,2862,2895,2896,2897,28
                                                                                                  99,2900,2934,2935,2936,2938,2941,2
                                                                                                  975,2976,2977,2981,3013,3014,3015,
                                                                                                  3017,3045,3046,3047,3049,3061,3062
                                                                                                  ,3063,3070,3071,3072,3096,3097,309
                                                                                                  8,3100,3112,3113,3114,3121,3122,31
                                                                                                  23                                
 I1                         Local  1630     I(4)            4           scalar                    2141,2145,2146,2149,2150,2154,2167
                                                                                                  ,2171,2172,2175,2176,2180,2328,233
                                                                                                  1,2334,2345,2348,2351,2447,2451,24

Page 79          Source Listing                  SEND_DATA_3D
2021-06-01 08:54 Symbol Table                    diag_manager.F90

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
                                                                                                  52,2455,2456,2460,2473,2477,2478,2
                                                                                                  481,2482,2486,2652,2655,2658,2669,
                                                                                                  2672,2675,2780,2783,2784,2819,2821
                                                                                                  ,2822,2858,2861,2862,2897,2899,290
                                                                                                  0,2936,2939,2940,2977,2979,2980,30
                                                                                                  15,3017,3047,3050,3098,3101       
 IE                         Local  1630     I(4)            4           scalar                    1745,1748,1751,1772,2013,2027,2047
                                                                                                  ,2071,2091,2139,2165,2190,2203,222
                                                                                                  5,2246,2258,2279,2326,2343,2361,23
                                                                                                  75,2376,2379,2380,2388,2389,2392,2
                                                                                                  393,2400,2411,2412,2415,2416,2422,
                                                                                                  2423,2426,2427,2445,2471,2496,2523
                                                                                                  ,2547,2581,2593,2614,2650,2667,268
                                                                                                  6,2700,2701,2704,2705,2711,2712,27
                                                                                                  15,2716,2723,2734,2735,2738,2739,2
                                                                                                  745,2746,2749,2750,2766,2769,2778,
                                                                                                  2795,2796,2799,2809,2810,2817,2832
                                                                                                  ,2833,2836,2845,2846,2856,2873,287
                                                                                                  4,2877,2887,2888,2895,2910,2911,29
                                                                                                  14,2923,2924,2934,2951,2952,2956,2
                                                                                                  966,2967,2975,2989,2990,2994,3003,
                                                                                                  3004,3013,3025,3028,3037,3045,3061
                                                                                                  ,3070,3096,3112,3121              
 IE_IN                      Dummy  1615     I(4)            4           scalar   ARG,IN           1704,1726,1748,1770               
 II                         Local  1629     I(4)            4           scalar                    1856,1858                         
 IS                         Local  1630     I(4)            4           scalar                    1736,1739,1745,1751,1771,2013,2027
                                                                                                  ,2028,2032,2036,2047,2048,2052,205
                                                                                                  6,2071,2072,2076,2080,2091,2092,20
                                                                                                  96,2100,2139,2143,2147,2151,2165,2
                                                                                                  169,2173,2177,2190,2203,2204,2208,
                                                                                                  2212,2225,2226,2230,2234,2246,2258
                                                                                                  ,2259,2263,2267,2279,2280,2284,228
                                                                                                  8,2326,2332,2335,2343,2349,2352,23
                                                                                                  61,2375,2376,2379,2380,2388,2389,2
                                                                                                  392,2393,2400,2411,2412,2415,2416,
                                                                                                  2422,2423,2426,2427,2445,2449,2453
                                                                                                  ,2457,2471,2475,2479,2483,2496,252
                                                                                                  3,2524,2528,2532,2547,2548,2552,25
                                                                                                  56,2581,2593,2594,2598,2602,2614,2
                                                                                                  615,2619,2623,2650,2656,2659,2667,
                                                                                                  2673,2676,2686,2700,2701,2704,2705
                                                                                                  ,2711,2712,2715,2716,2723,2734,273
                                                                                                  5,2738,2739,2745,2746,2749,2750,27
                                                                                                  66,2769,2778,2782,2783,2784,2795,2
                                                                                                  796,2799,2809,2810,2817,2821,2822,
                                                                                                  2832,2833,2836,2845,2846,2856,2860
                                                                                                  ,2861,2862,2873,2874,2877,2887,288
                                                                                                  8,2895,2899,2900,2910,2911,2914,29
                                                                                                  23,2924,2934,2938,2941,2951,2952,2
                                                                                                  956,2966,2967,2975,2981,2989,2990,
                                                                                                  2994,3003,3004,3013,3017,3025,3028
                                                                                                  ,3037,3045,3049,3061,3062,3070,307
                                                                                                  1,3096,3100,3112,3113,3121,3122   
 ISSUE_OOR_WARNINGS         Local  1810     L(4)            4           scalar   PRIV             347,1810,3763,3846                
 IS_IN                      Dummy  1614     I(4)            4           scalar   ARG,IN           1705,1726,1739                    

Page 80          Source Listing                  SEND_DATA_3D
2021-06-01 08:54 Symbol Table                    diag_manager.F90

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 J                          Local  1630     I(4)            4           scalar                    2026,2028,2030,2031,2032,2034,2035
                                                                                                  ,2036,2038,2039,2046,2048,2050,205
                                                                                                  1,2052,2054,2055,2056,2058,2059,20
                                                                                                  70,2072,2074,2075,2076,2078,2079,2
                                                                                                  080,2082,2083,2090,2092,2094,2095,
                                                                                                  2096,2098,2099,2100,2102,2103,2138
                                                                                                  ,2140,2142,2143,2147,2151,2164,216
                                                                                                  6,2168,2169,2173,2177,2189,2191,22
                                                                                                  02,2204,2206,2207,2208,2210,2211,2
                                                                                                  212,2215,2224,2226,2228,2229,2230,
                                                                                                  2232,2233,2234,2237,2257,2259,2261
                                                                                                  ,2262,2263,2265,2266,2267,2270,227
                                                                                                  8,2280,2282,2283,2284,2286,2287,22
                                                                                                  88,2291,2325,2327,2329,2332,2335,2
                                                                                                  342,2344,2346,2349,2352,2360,2362,
                                                                                                  2444,2446,2448,2449,2453,2457,2470
                                                                                                  ,2472,2474,2475,2479,2483,2495,249
                                                                                                  7,2505,2507,2522,2524,2526,2527,25
                                                                                                  28,2530,2531,2532,2535,2546,2548,2
                                                                                                  550,2551,2552,2554,2555,2556,2559,
                                                                                                  2569,2571,2592,2594,2596,2597,2598
                                                                                                  ,2600,2601,2602,2605,2613,2615,261
                                                                                                  7,2618,2619,2621,2622,2623,2626,26
                                                                                                  35,2637,2649,2651,2653,2656,2659,2
                                                                                                  666,2668,2670,2673,2676,2685,2687,
                                                                                                  2777,2779,2781,2782,2783,2784,2816
                                                                                                  ,2818,2820,2821,2822,2855,2857,285
                                                                                                  9,2860,2861,2862,2894,2896,2898,28
                                                                                                  99,2900,2933,2935,2937,2938,2941,2
                                                                                                  974,2976,2978,2981,3012,3014,3016,
                                                                                                  3017,3044,3046,3048,3049,3060,3062
                                                                                                  ,3063,3069,3071,3072,3095,3097,309
                                                                                                  9,3100,3111,3113,3114,3120,3122,31
                                                                                                  23                                
 J1                         Local  1630     I(4)            4           scalar                    2142,2145,2146,2149,2150,2154,2168
                                                                                                  ,2171,2172,2175,2176,2180,2329,233
                                                                                                  1,2334,2346,2348,2351,2448,2451,24
                                                                                                  52,2455,2456,2460,2474,2477,2478,2
                                                                                                  481,2482,2486,2653,2655,2658,2670,
                                                                                                  2672,2675,2781,2783,2784,2820,2821
                                                                                                  ,2822,2859,2861,2862,2898,2899,290
                                                                                                  0,2937,2939,2940,2978,2979,2980,30
                                                                                                  16,3017,3048,3050,3099,3101       
 JE                         Local  1630     I(4)            4           scalar                    1746,1749,1758,1774,1912,2013,2026
                                                                                                  ,2046,2070,2090,2138,2164,2189,220
                                                                                                  2,2224,2246,2257,2278,2325,2342,23
                                                                                                  60,2375,2376,2379,2380,2388,2389,2
                                                                                                  392,2393,2400,2411,2412,2415,2416,
                                                                                                  2422,2423,2426,2427,2444,2470,2495
                                                                                                  ,2522,2546,2581,2592,2613,2649,266
                                                                                                  6,2685,2700,2701,2704,2705,2711,27
                                                                                                  12,2715,2716,2723,2734,2735,2738,2
                                                                                                  739,2745,2746,2749,2750,2766,2769,
                                                                                                  2777,2795,2796,2799,2809,2810,2816
                                                                                                  ,2832,2833,2836,2845,2846,2855,287

Page 81          Source Listing                  SEND_DATA_3D
2021-06-01 08:54 Symbol Table                    diag_manager.F90

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
                                                                                                  3,2874,2877,2887,2888,2894,2910,29
                                                                                                  11,2914,2923,2924,2933,2951,2952,2
                                                                                                  956,2966,2967,2974,2989,2990,2994,
                                                                                                  3003,3004,3012,3025,3028,3037,3044
                                                                                                  ,3060,3069,3095,3111,3120         
 JE_IN                      Dummy  1615     I(4)            4           scalar   ARG,IN           1711,1719,1749,1770               
 JS                         Local  1630     I(4)            4           scalar                    1737,1740,1746,1758,1773,1911,2013
                                                                                                  ,2026,2028,2032,2036,2046,2048,205
                                                                                                  2,2056,2070,2072,2076,2080,2090,20
                                                                                                  92,2096,2100,2138,2143,2147,2151,2
                                                                                                  164,2169,2173,2177,2189,2202,2204,
                                                                                                  2208,2212,2224,2226,2230,2234,2246
                                                                                                  ,2257,2259,2263,2267,2278,2280,228
                                                                                                  4,2288,2325,2332,2335,2342,2349,23
                                                                                                  52,2360,2375,2376,2379,2380,2388,2
                                                                                                  389,2392,2393,2400,2411,2412,2415,
                                                                                                  2416,2422,2423,2426,2427,2444,2449
                                                                                                  ,2453,2457,2470,2475,2479,2483,249
                                                                                                  5,2522,2524,2528,2532,2546,2548,25
                                                                                                  52,2556,2581,2592,2594,2598,2602,2
                                                                                                  613,2615,2619,2623,2649,2656,2659,
                                                                                                  2666,2673,2676,2685,2700,2701,2704
                                                                                                  ,2705,2711,2712,2715,2716,2723,273
                                                                                                  4,2735,2738,2739,2745,2746,2749,27
                                                                                                  50,2766,2769,2777,2782,2783,2784,2
                                                                                                  795,2796,2799,2809,2810,2816,2821,
                                                                                                  2822,2832,2833,2836,2845,2846,2855
                                                                                                  ,2860,2861,2862,2873,2874,2877,288
                                                                                                  7,2888,2894,2899,2900,2910,2911,29
                                                                                                  14,2923,2924,2933,2938,2941,2951,2
                                                                                                  952,2956,2966,2967,2974,2981,2989,
                                                                                                  2990,2994,3003,3004,3012,3017,3025
                                                                                                  ,3028,3037,3044,3049,3060,3062,306
                                                                                                  9,3071,3095,3100,3111,3113,3120,31
                                                                                                  22                                
 JS_IN                      Dummy  1614     I(4)            4           scalar   ARG,IN           1711,1720,1740                    
 K                          Local  1630     I(4)            4           scalar                    2024,2025,2028,2032,2036,2045,2048
                                                                                                  ,2050,2051,2052,2054,2055,2056,205
                                                                                                  8,2059,2068,2069,2072,2076,2080,20
                                                                                                  89,2092,2094,2095,2096,2098,2099,2
                                                                                                  100,2102,2103,2136,2137,2143,2147,
                                                                                                  2151,2162,2163,2169,2173,2177,2200
                                                                                                  ,2201,2204,2208,2212,2222,2223,222
                                                                                                  6,2230,2234,2256,2259,2261,2262,22
                                                                                                  63,2265,2266,2267,2270,2277,2280,2
                                                                                                  282,2283,2284,2286,2287,2288,2291,
                                                                                                  2442,2443,2449,2453,2457,2468,2469
                                                                                                  ,2475,2479,2483,2504,2507,2520,252
                                                                                                  1,2524,2528,2532,2544,2545,2548,25
                                                                                                  52,2556,2567,2568,2571,2591,2594,2
                                                                                                  596,2597,2598,2600,2601,2602,2605,
                                                                                                  2612,2615,2617,2618,2619,2621,2622
                                                                                                  ,2623,2626,2634,2637,2775,2776,278
                                                                                                  2,2783,2784,2814,2815,2821,2822,28
                                                                                                  53,2854,2860,2861,2862,2892,2893,2

Page 82          Source Listing                  SEND_DATA_3D
2021-06-01 08:54 Symbol Table                    diag_manager.F90

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
                                                                                                  899,2900,2931,2932,2938,2941,2972,
                                                                                                  2973,2981,3042,3043,3049,3058,3059
                                                                                                  ,3062,3068,3071,3072,3093,3094,310
                                                                                                  0,3109,3110,3113,3119,3122,3123   
 K1                         Local  1630     I(4)            4           scalar                    2025,2030,2031,2034,2035,2038,2039
                                                                                                  ,2069,2074,2075,2078,2079,2082,208
                                                                                                  3,2137,2145,2146,2149,2150,2154,21
                                                                                                  63,2171,2172,2175,2176,2180,2201,2
                                                                                                  206,2207,2210,2211,2215,2223,2228,
                                                                                                  2229,2232,2233,2237,2443,2451,2452
                                                                                                  ,2455,2456,2460,2469,2477,2478,248
                                                                                                  1,2482,2486,2521,2526,2527,2530,25
                                                                                                  31,2535,2545,2550,2551,2554,2555,2
                                                                                                  559,2568,2776,2783,2784,2815,2821,
                                                                                                  2822,2854,2861,2862,2893,2899,2900
                                                                                                  ,2932,2939,2940,2973,2979,2980,304
                                                                                                  3,3050,3059,3063,3094,3101,3110,31
                                                                                                  14                                
 KE                         Local  1630     I(4)            4           scalar                    1747,1750,1814,1815,1817,1818,1819
                                                                                                  ,1820,1836,1837,1838,1888,2013,204
                                                                                                  5,2089,2246,2256,2277,2305,2311,24
                                                                                                  00,2411,2412,2413,2415,2416,2417,2
                                                                                                  422,2423,2424,2426,2427,2428,2581,
                                                                                                  2591,2612,2634,2723,2734,2735,2736
                                                                                                  ,2738,2739,2740,2745,2746,2747,274
                                                                                                  9,2750,2751,2766,2799,2808,2809,28
                                                                                                  10,2836,2845,2846,2877,2886,2887,2
                                                                                                  888,2914,2923,2924,2956,2965,2966,
                                                                                                  2967,2968,2994,3003,3004,3005,3028
                                                                                                  ,3037,3068,3119                   
 KER                        Local  1628     I(4)            4           scalar                    1919,2024,2068,2200,2222,2373,2377
                                                                                                  ,2381,2386,2390,2394,2519,2520,254
                                                                                                  3,2544,2567,2697,2702,2706,2713,27
                                                                                                  17,2769,2793,2794,2795,2796,2831,2
                                                                                                  832,2833,2871,2872,2873,2874,2909,
                                                                                                  2910,2911,2950,2953,2988,2991,3024
                                                                                                  ,3025,3057,3058,3108,3109         
 KE_IN                      Dummy  1615     I(4)            4           scalar   ARG,IN           1750                              
 KS                         Local  1630     I(4)            4           scalar                    1738,1741,1747,1814,1815,1817,1818
                                                                                                  ,1819,1820,1836,1837,1838,1888,201
                                                                                                  3,2045,2089,2246,2256,2277,2305,23
                                                                                                  11,2400,2411,2412,2413,2415,2416,2
                                                                                                  417,2422,2423,2424,2426,2427,2428,
                                                                                                  2581,2591,2612,2634,2723,2734,2735
                                                                                                  ,2736,2738,2739,2740,2745,2746,274
                                                                                                  7,2749,2750,2751,2766,2799,2808,28
                                                                                                  09,2810,2836,2845,2846,2877,2886,2
                                                                                                  887,2888,2914,2923,2924,2956,2965,
                                                                                                  2966,2967,2968,2994,3003,3004,3005
                                                                                                  ,3028,3037,3068,3119              
 KSR                        Local  1628     I(4)            4           scalar                    1918,2024,2025,2068,2069,2200,2201
                                                                                                  ,2222,2223,2372,2377,2381,2385,239
                                                                                                  0,2394,2518,2520,2521,2542,2544,25
                                                                                                  45,2567,2568,2696,2702,2706,2713,2
                                                                                                  717,2769,2792,2794,2795,2796,2830,

Page 83          Source Listing                  SEND_DATA_3D
2021-06-01 08:54 Symbol Table                    diag_manager.F90

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
                                                                                                  2832,2833,2870,2872,2873,2874,2908
                                                                                                  ,2910,2911,2949,2953,2987,2991,302
                                                                                                  3,3025,3056,3058,3059,3107,3109,31
                                                                                                  10                                
 KS_IN                      Dummy  1614     I(4)            4           scalar   ARG,IN           1741                              
 LOCAL_OUTPUT               Local  1649     L(4)            4           scalar                    1861,1868                         
 L_END                      Local  1632     I(4)            4     1     3                         1896,1915,1919,2136,2140,2162,2166
                                                                                                  ,2191,2193,2301,2327,2332,2335,234
                                                                                                  4,2349,2352,2362,2364,2373,2386,24
                                                                                                  42,2446,2468,2472,2497,2499,2504,2
                                                                                                  505,2506,2519,2543,2651,2656,2659,
                                                                                                  2668,2673,2676,2687,2689,2697,2775
                                                                                                  ,2779,2793,2814,2818,2831,2853,285
                                                                                                  7,2871,2892,2896,2909,2931,2935,29
                                                                                                  50,2972,2976,2988,3014,3017,3024,3
                                                                                                  042,3046,3057,3093,3097,3108      
 L_START                    Local  1631     I(4)            4     1     3                         1895,1914,1918,2136,2137,2140,2141
                                                                                                  ,2142,2162,2163,2166,2167,2168,219
                                                                                                  1,2193,2301,2327,2328,2329,2332,23
                                                                                                  35,2344,2345,2346,2349,2352,2362,2
                                                                                                  364,2372,2385,2442,2443,2446,2447,
                                                                                                  2448,2468,2469,2472,2473,2474,2497
                                                                                                  ,2499,2504,2505,2506,2518,2542,265
                                                                                                  1,2652,2653,2656,2659,2668,2669,26
                                                                                                  70,2673,2676,2687,2689,2696,2775,2
                                                                                                  776,2779,2780,2781,2792,2814,2815,
                                                                                                  2818,2819,2820,2830,2853,2854,2857
                                                                                                  ,2858,2859,2870,2892,2893,2896,289
                                                                                                  7,2898,2908,2931,2932,2935,2936,29
                                                                                                  37,2949,2972,2973,2976,2977,2978,2
                                                                                                  987,3014,3015,3016,3017,3023,3042,
                                                                                                  3043,3046,3047,3048,3056,3093,3094
                                                                                                  ,3097,3098,3099,3107              
 MASK                       Dummy  1615     L(4)            4     3     1        ARG,IN           1686,1687,2010,2028,2048,2072,2092
                                                                                                  ,2132,2143,2169,2204,2226,2259,228
                                                                                                  0,2301,2305,2311,2773,2782,2794,28
                                                                                                  08,2851,2860,2872,2886,2929,2938,2
                                                                                                  965,3040,3049,3062,3071           
 MAXVAL                     Func   1815                                 scalar                    1815                              
 MINVAL                     Func   1814                                 scalar                    1814                              
 MISSVALUE                  Local  1626     R(8)            8           scalar                    1792,1820,2154,2180,2215,2237,2270
                                                                                                  ,2291,2449,2460,2475,2486,2507,252
                                                                                                  4,2535,2548,2559,2571,2594,2605,26
                                                                                                  15,2626,2637,3050,3063,3072,3101,3
                                                                                                  114,3123                          
 MISSVALUE_PRESENT          Local  1651     L(4)            4           scalar                    1791,1792,1816,2011,2133,2439,3040
                                                                                                  ,3091                             
 MOD                        Func   1752                                 scalar                    1752,1759                         
 N1                         Local  1629     I(4)            4           scalar                    1742,1745,1751,1772,1779          
 N2                         Local  1629     I(4)            4           scalar                    1743,1746,1758,1774,1781          
 N3                         Local  1629     I(4)            4           scalar                    1744,1747                         
 NEED_COMPUTE               Local  1648     L(4)            4           scalar                    1863,1868,1894,1984,1997,2134,2300
                                                                                                  ,2323,2440,2647,2764,2774,2813,285
                                                                                                  2,2891,2930,2971,3011,3041,3080,30
                                                                                                  92                                

Page 84          Source Listing                  SEND_DATA_3D
2021-06-01 08:54 Symbol Table                    diag_manager.F90

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 NUMBER_OF_OUTPUTS          Local  1629     I(4)            4           scalar                    1794,1856                         
 NUMTHREADS                 Local  1642     I(4)            4           scalar                    1802,1952,2022,2135,2199,2255,2324
                                                                                                  ,2371,2409,2441,2517,2590,2648,269
                                                                                                  8,2732                            
 NUM_OUT_FIELDS             Label  1856                                 scalar                    3130                              
 OMP_GET_LEVEL              Func   1646     I(4)            4           scalar                    1800                              
 OMP_GET_NUM_THREADS        Func   1645     I(4)            4           scalar                    1799                              
 OOR_MASK                   Local  1652     L(4)            4     3     1        ALC              1679,1687,1689,1691,1707,1714,1722
                                                                                                  ,1729,1754,1761,1814,1815,1817,183
                                                                                                  6,1932,1944,1963,1974,1988,2003,20
                                                                                                  17,2117,2127,2250,2404,2585,2727,2
                                                                                                  803,2840,2881,2918,2960,2998,3032,
                                                                                                  3084,3132                         
 OOR_WARNING                Local  1833     I(4)            4           scalar   PRIV             347,1833,1849,3843                
 OOR_WARNINGS_FATAL         Local  1810     L(4)            4           scalar   PRIV             347,1810,3764,3842                
 OUTER0                     Label  2504                                 scalar                    2509,2513                         
 OUTER1                     Label  2634                                 scalar                    2639,2643                         
 OUTER3                     Label  2567                                 scalar                    2573,2577                         
 OUT_NUM                    Local  1629     I(4)            4           scalar                    1858,1861,1863,1865,1871,1877,1880
                                                                                                  ,1882,1884,1885,1887,1888,1889,189
                                                                                                  1,1893,1895,1896,1903,1910,1911,19
                                                                                                  12,1914,1915,1922,1923,1925,1929,1
                                                                                                  938,1941,1953,1954,1956,1960,1969,
                                                                                                  1984,1985,2000,2013,2014,2030,2031
                                                                                                  ,2034,2035,2038,2039,2050,2051,205
                                                                                                  4,2055,2058,2059,2074,2075,2078,20
                                                                                                  79,2082,2083,2094,2095,2098,2099,2
                                                                                                  102,2103,2114,2124,2145,2146,2149,
                                                                                                  2150,2154,2171,2172,2175,2176,2180
                                                                                                  ,2192,2193,2206,2207,2210,2211,221
                                                                                                  5,2228,2229,2232,2233,2237,2246,22
                                                                                                  47,2261,2262,2265,2266,2270,2282,2
                                                                                                  283,2286,2287,2291,2302,2303,2305,
                                                                                                  2306,2331,2334,2348,2351,2363,2364
                                                                                                  ,2375,2376,2379,2380,2388,2389,239
                                                                                                  2,2393,2400,2401,2411,2412,2415,24
                                                                                                  16,2422,2423,2426,2427,2434,2435,2
                                                                                                  451,2452,2455,2456,2460,2477,2478,
                                                                                                  2481,2482,2486,2498,2499,2508,2526
                                                                                                  ,2527,2530,2531,2535,2550,2551,255
                                                                                                  4,2555,2559,2572,2581,2582,2596,25
                                                                                                  97,2600,2601,2605,2617,2618,2621,2
                                                                                                  622,2626,2638,2655,2658,2672,2675,
                                                                                                  2688,2689,2700,2701,2704,2705,2711
                                                                                                  ,2712,2715,2716,2723,2724,2734,273
                                                                                                  5,2738,2739,2745,2746,2749,2750,27
                                                                                                  57,2758,2765,2766,2768,2783,2784,2
                                                                                                  795,2796,2799,2800,2809,2810,2821,
                                                                                                  2822,2832,2833,2836,2837,2845,2846
                                                                                                  ,2849,2861,2862,2873,2874,2877,287
                                                                                                  8,2887,2888,2899,2900,2910,2911,29
                                                                                                  14,2915,2923,2924,2927,2939,2940,2
                                                                                                  951,2952,2956,2957,2966,2967,2979,
                                                                                                  2980,2989,2990,2994,2995,3003,3004
                                                                                                  ,3008,3010,3017,3025,3028,3029,303

Page 85          Source Listing                  SEND_DATA_3D
2021-06-01 08:54 Symbol Table                    diag_manager.F90

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
                                                                                                  7,3050,3063,3072,3080,3081,3101,31
                                                                                                  14,3123                           
 PHYS_WINDOW                Local  1648     L(4)            4           scalar                    1893,2022,2135,2199,2255,2300,2324
                                                                                                  ,2371,2409,2434,2441,2503,2517,259
                                                                                                  0,2648,2698,2732,2757             
 POW_VALUE                  Local  1627     I(4)            4           scalar                    1882,2029,2032,2049,2052,2073,2076
                                                                                                  ,2093,2096,2144,2147,2170,2173,220
                                                                                                  5,2208,2227,2230,2260,2263,2281,22
                                                                                                  84,2330,2332,2347,2349,2374,2377,2
                                                                                                  387,2390,2410,2413,2421,2424,2450,
                                                                                                  2453,2476,2479,2525,2528,2549,2552
                                                                                                  ,2595,2598,2616,2619,2654,2656,267
                                                                                                  1,2673,2699,2702,2710,2713,2733,27
                                                                                                  36,2744,2747                      
 PRESENT                    Func   1664                                 scalar                    1664,1686,1691,1704,1705,1711,1719
                                                                                                  ,1720,1726,1739,1740,1741,1748,174
                                                                                                  9,1750,1770,1784,1806,1901,1924,19
                                                                                                  38,2010,2132,2773,2851,2929,3040,3
                                                                                                  091                               
 REAL                       Func   1903                                 scalar                    1903                              
 REDUCED_K_RANGE            Local  1649     L(4)            4           scalar                    1865,1907,2023,2067,2198,2370,2516
                                                                                                  ,2695,2764,2767,2791,2829,2869,290
                                                                                                  7,2948,2986,3022,3055,3106        
 RMASK                      Dummy  1615     R(8)            8     3     1        ARG,IN           1691,3091,3100,3113,3122          
 SAMPLE                     Local  1637     I(4)            4           scalar                    1900,1903,2030,2031,2034,2035,2038
                                                                                                  ,2039,2050,2051,2054,2055,2058,205
                                                                                                  9,2074,2075,2078,2079,2082,2083,20
                                                                                                  94,2095,2098,2099,2102,2103,2145,2
                                                                                                  146,2149,2150,2154,2171,2172,2175,
                                                                                                  2176,2180,2192,2193,2206,2207,2210
                                                                                                  ,2211,2215,2228,2229,2232,2233,223
                                                                                                  7,2261,2262,2265,2266,2270,2282,22
                                                                                                  83,2286,2287,2291,2302,2303,2305,2
                                                                                                  306,2331,2334,2348,2351,2363,2364,
                                                                                                  2375,2376,2379,2380,2388,2389,2392
                                                                                                  ,2393,2411,2412,2415,2416,2422,242
                                                                                                  3,2426,2427,2434,2435,2451,2452,24
                                                                                                  55,2456,2460,2477,2478,2481,2482,2
                                                                                                  486,2498,2499,2508,2526,2527,2530,
                                                                                                  2531,2535,2550,2551,2554,2555,2559
                                                                                                  ,2572,2596,2597,2600,2601,2605,261
                                                                                                  7,2618,2621,2622,2626,2638,2655,26
                                                                                                  58,2672,2675,2688,2689,2700,2701,2
                                                                                                  704,2705,2711,2712,2715,2716,2734,
                                                                                                  2735,2738,2739,2745,2746,2749,2750
                                                                                                  ,2757,2758,2765,2766,2768,2783,278
                                                                                                  4,2795,2796,2809,2810,2821,2822,28
                                                                                                  32,2833,2845,2846,2849,2861,2862,2
                                                                                                  873,2874,2887,2888,2899,2900,2910,
                                                                                                  2911,2923,2924,2927,2939,2940,2951
                                                                                                  ,2952,2966,2967,2979,2980,2989,299
                                                                                                  0,3003,3004,3008,3010,3017,3025,30
                                                                                                  37,3050,3063,3072,3101,3114,3123  
 SECOND                     Local  1639     I(4)            4           scalar                    1902,1903                         
 SECONDS_PER_DAY            Param  1903     R(8)            8           scalar   PRIV             355,1903                          

Page 86          Source Listing                  SEND_DATA_3D
2021-06-01 08:54 Symbol Table                    diag_manager.F90

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 SEND_DATA_3D               Func   1614     L(4)            4           scalar   PRIV             1472,1523,1526,1531,1534,1587,1590
                                                                                                  ,1658,1661,3282                   
 SIZE                       Func   1679                                 scalar                    1679,1682,1742,1743,1744,1888     
 STATUS                     Local  1641     I(4)            4           scalar                    1679,1680,1682,1969,1970          
 TICK                       Local  1640     I(4)            4           scalar                    1902,1903                         
 TIME                       Dummy  1614     TIME_TYPE       16          scalar   ARG,IN           1806,1901,1902,1924,1925,1938,1954
                                                                                                  ,1956,1969,1985                   
 TIME_GT                    Func   1954     L(4)            4           scalar   PRIV             1954,1956,3604,3606,3968          
 TIME_MAX                   Local  1650     L(4)            4           scalar                    1884,2772                         
 TIME_MIN                   Local  1650     L(4)            4           scalar                    1885,2850                         
 TIME_RMS                   Local  1650     L(4)            4           scalar                    1880                              
 TIME_SUM                   Local  1650     L(4)            4           scalar                    1887,2928                         
 TRIM                       Func   1828                                 scalar                    1828,1829,1830,1831,1845,1846,1847
                                                                                                  ,1848,1928,1929,1930,1940,1941,194
                                                                                                  2,1959,1960,1961,1972,1999,2000,20
                                                                                                  01,2113,2114,2115,2123,2124,2125,2
                                                                                                  319,2320                          
 TWOHI                      Local  1635     I(4)            4           scalar                    1751,1752,1765                    
 TWOHJ                      Local  1636     I(4)            4           scalar                    1758,1759,1766                    
 UNITS                      Local  1630     I(4)            4           scalar                    1875                              
 UPDATE_BOUNDS              Subr   2013                                          PRIV             334,2013,2246,2400,2581,2723,2799,
                                                                                                  2836,2877,2914,2956,2994,3028     
 WEIGHT                     Dummy  1615     R(8)            8           scalar   ARG,IN           1784,1785                         
 WEIGHT1                    Local  1625     R(8)            8           scalar                    1785,1787,2032,2036,2039,2052,2056
                                                                                                  ,2059,2076,2080,2083,2096,2100,210
                                                                                                  3,2147,2151,2173,2177,2208,2212,22
                                                                                                  30,2234,2263,2267,2284,2288,2303,2
                                                                                                  306,2332,2335,2349,2352,2377,2381,
                                                                                                  2390,2394,2413,2417,2424,2428,2435
                                                                                                  ,2453,2457,2479,2483,2508,2528,253
                                                                                                  2,2552,2556,2572,2598,2602,2619,26
                                                                                                  23,2638,2656,2659,2673,2676,2702,2
                                                                                                  706,2713,2717,2736,2740,2747,2751,
                                                                                                  2758                              
 WRITING_FIELD@0            Local  1969     I(4)            4           scalar                                                      


TYPE COMPONENTS/COMMON VARIABLES

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 INPUT_FIELD_TYPE.ACTIVE_OMP_LEVEL                                                                                         ...
                            I(4)            4     988            scalar                    1800,1803,3557,3591                
 INPUT_FIELD_TYPE.NUMTHREADS                                                                                               ...
                            I(4)            4     984            scalar                    1796,1799,1802,3556,3591           
 INPUT_FIELD_TYPE.TIME      TIME_TYPE       16    1048           scalar                    1806,3593                          
 OUTPUT_FIELD_TYPE.COUNT_0D R(8)            8     512      1     1        ALC              2302,2303,2305,2306,2434,2435,2508 
                                                                                           ,2572,2638,2757,2758,2849,2927,300 
                                                                                           8,3010,3417,3515,3684              
 OUTPUT_FIELD_TYPE.NUM_ELEMENTS                                                                                            ...
                            I(4)            4     584      1     1        ALC              2192,2193,2363,2364,2498,2499,2688 
                                                                                           ,2689,2765,2766,2768,3412,3414,351 
                                                                                           6,3683                             
 OUTPUT_FIELD_TYPE.PHYS_WINDOW                                                                                             ...
                            L(4)            4     3256           scalar                    1889,1891,1893,3372                

Page 87          Source Listing                  SEND_DATA_3D
2021-06-01 08:54 Symbol Table                    diag_manager.F90

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 OUTPUT_FIELD_TYPE.POW_VALUE                                                                                               ...
                            I(4)            4     168            scalar                    1882                               
 OUTPUT_FIELD_TYPE.TIME_RMS L(4)            4     140            scalar                    1880,3377                          
 OUTPUT_FIELD_TYPE.TIME_SUM L(4)            4     156            scalar                    1887                               

Page 88          Source Listing                  SEND_DATA_3D
2021-06-01 08:54                                 diag_manager.F90

   3134 ! </FUNCTION>
   3135 
   3136 ! <FUNCTION NAME="send_tile_averaged_data1d" INTERFACE="send_tile_averaged_data">
   3137 !   <IN NAME="diag_field_id" TYPE="INTEGER"></IN>
   3138 !   <IN NAME="field" TYPE="REAL, DIMENSION(:,:,:)"></IN>
   3139 !   <IN NAME="area" TYPE="REAL, DIMENSION(:,:,:)">  </IN>
   3140 !   <IN NAME="time" TYPE="TYPE(time_type)">  </IN>
   3141 !   <IN NAME="mask" TYPE="LOGICAL, DIMENSION(:,:,:), OPTIONAL"></IN>
   3142 !> @return Logical send_tile_averaged_data1d
   3143   LOGICAL FUNCTION send_tile_averaged_data1d ( id, field, area, time, mask )
   3144     INTEGER, INTENT(in) :: id  !< id od the diagnostic field
   3145     REAL, INTENT(in) :: field(:,:) !< field to average and send
   3146     REAL, INTENT(in) :: area (:,:) !< area of tiles (== averaging weights), arbitrary units
   3147     TYPE(time_type), INTENT(in)  :: time !< current time
   3148     LOGICAL, INTENT(in),OPTIONAL :: mask (:,:) !< land mask
   3149 
   3150     REAL, DIMENSION(SIZE(field,1)) :: out(SIZE(field,1))
   3151 
   3152 ! If id is < 0 it means that this field is not registered, simply return
   3153     IF ( id <= 0 ) THEN
   3154        send_tile_averaged_data1d = .FALSE.
   3155        RETURN
   3156     END IF
   3157 
   3158     CALL average_tiles1d (id, field, area, mask, out)
   3159     send_tile_averaged_data1d = send_data(id, out, time=time, mask=ANY(mask,DIM=2))
   3160   END FUNCTION send_tile_averaged_data1d


ENTRY POINTS

  Name                                                      
                                                            
 diag_manager_mod_mp_send_tile_averaged_data1d_             

Page 89          Source Listing                  SEND_TILE_AVERAGED_DATA1D
2021-06-01 08:54 Symbol Table                    diag_manager.F90



SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ANY                        Func   3159                                 scalar                    3159                              
 AREA                       Dummy  3143     R(8)            8     2     1        ARG,IN           3158                              
 FIELD                      Dummy  3143     R(8)            8     2     1        ARG,IN           3150,3158                         
 ID                         Dummy  3143     I(4)            4           scalar   ARG,IN           3153,3158,3159                    
 MASK                       Dummy  3143     L(4)            4     2     1        ARG,IN           3158,3159                         
 OUT                        Local  3150     R(8)            8     1     0                         3158,3159                         
 SEND_DATA                  Local  3159                                 scalar                    370,3159,3245,3282                
 SEND_TILE_AVERAGED_DATA1D  Func   3143     L(4)            4           scalar   PRIV             3154,3159                         
 SIZE                       Func   3150                                 scalar                    3150                              
 TIME                       Dummy  3143     TIME_TYPE       16          scalar   ARG,IN           3159                              

Page 90          Source Listing                  SEND_TILE_AVERAGED_DATA1D
2021-06-01 08:54                                 diag_manager.F90

   3161 
   3162 ! <SUBROUTINE NAME="average_tiles1d">
   3163 !   <OVERVIEW>
   3164 !   </OVERVIEW>
   3165 !   <TEMPLATE>
   3166 !     SUBROUTINE average_tiles1d(diag_field_id, x, area, mask, out)
   3167 !   </TEMPLATE>
   3168 !   <DESCRIPTION>
   3169 !   </DESCRIPTION>
   3170 !   <IN NAME="diag_field_id" TYPE="INTEGER"></IN>
   3171 !   <IN NAME="x" TYPE="REAL, DIMENSION(:,:)">(ug_index, tile) field to average</IN>
   3172 !   <IN NAME="area" TYPE="REAL, DIMENSION(:,:,:)">(ug_index, tile) fractional area</IN>
   3173 !   <IN NAME="mask" TYPE="LOGICAL, DIMENSION(:,:,:)">(ug_index, tile) land mask</IN>
   3174 !   <OUT NAME="out" TYPE="REAL, DIMENSION(:,:)">(ug_index) result of averaging</OUT>
   3175   SUBROUTINE average_tiles1d(diag_field_id, x, area, mask, out)
   3176     INTEGER, INTENT(in) :: diag_field_id
   3177     REAL, DIMENSION(:,:), INTENT(in) :: x !< (ug_index, tile) field to average
   3178     REAL, DIMENSION(:,:), INTENT(in) :: area !< (ug_index, tile) fractional area
   3179     LOGICAL, DIMENSION(:,:), INTENT(in) :: mask !< (ug_index, tile) land mask
   3180     REAL, DIMENSION(:), INTENT(out) :: out !< (ug_index) result of averaging
   3181 
   3182     INTEGER  :: it !< iterator over tile number
   3183     REAL, DIMENSION(SIZE(x,1)) :: s !< area accumulator
   3184     REAL :: local_missing_value
   3185 
   3186 ! # FATAL if diag_field_id is less than 0, indicates field was not in diag_table.
   3187 ! The calling functions should not have passed in an invalid diag_field_id
   3188     IF ( diag_field_id <= 0 ) THEN
   3189 ! <ERROR STATUS="FATAL">
   3190 !   diag_field_id less than 0.  Contact developers.
   3191 ! </ERROR>
   3192        CALL error_mesg('diag_manager_mod::average_tiles1d',&
   3193             & "diag_field_id less than 0.  Contact developers.", FATAL)
   3194     END IF
   3195 
   3196 ! Initialize local_missing_value
   3197     IF ( input_fields(diag_field_id)%missing_value_present ) THEN
   3198        local_missing_value = input_fields(diag_field_id)%missing_value
   3199     ELSE
   3200        local_missing_value = 0.0
   3201     END IF
   3202 
   3203 ! Initialize s and out to zero.
   3204     s(:) = 0.0
   3205     out(:) = 0.0
   3206 
   3207     DO it = 1, SIZE(area,dim=2)
   3208        WHERE ( mask(:,it) )
   3209           out(:) = out(:) + x(:,it)*area(:,it)
   3210           s(:) = s(:) + area(:,it)
   3211        END WHERE
   3212     END DO
   3213 
   3214     WHERE ( s(:) > 0 )
   3215        out(:) = out(:)/s(:)
   3216     ELSEWHERE
   3217        out(:) = local_missing_value

Page 91          Source Listing                  AVERAGE_TILES1D
2021-06-01 08:54                                 diag_manager.F90

   3218     END WHERE
   3219   END SUBROUTINE average_tiles1d


ENTRY POINTS

  Name                                            
                                                  
 diag_manager_mod_mp_average_tiles1d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 AREA                       Dummy  3175     R(8)            8     2     1        ARG,IN           3207,3209,3210                    
 AVERAGE_TILES1D            Subr   3175                                                           3158                              
 DIAG_FIELD_ID              Dummy  3175     I(4)            4           scalar   ARG,IN           3188,3197,3198                    
 IT                         Local  3182     I(4)            4           scalar                    3207,3208,3209,3210               
 LOCAL_MISSING_VALUE        Local  3184     R(8)            8           scalar                    3198,3200,3217                    
 MASK                       Dummy  3175     L(4)            4     2     1        ARG,IN           3208                              
 OUT                        Dummy  3175     R(8)            8     1     1        ARG,OUT          3205,3209,3215,3217               
 S                          Local  3183     R(8)            8     1     0                         3204,3210,3214,3215               
 SIZE                       Func   3183                                 scalar                    3183,3207                         
 X                          Dummy  3175     R(8)            8     2     1        ARG,IN           3183,3209                         

Page 92          Source Listing                  AVERAGE_TILES1D
2021-06-01 08:54                                 diag_manager.F90

   3220 
   3221 
   3222 ! <FUNCTION NAME="send_tile_averaged_data2d" INTERFACE="send_tile_averaged_data">
   3223 !   <IN NAME="diag_field_id" TYPE="INTEGER"></IN>
   3224 !   <IN NAME="field" TYPE="REAL, DIMENSION(:,:,:)"></IN>
   3225 !   <IN NAME="area" TYPE="REAL, DIMENSION(:,:,:)">  </IN>
   3226 !   <IN NAME="time" TYPE="TYPE(time_type)">  </IN>
   3227 !   <IN NAME="mask" TYPE="LOGICAL, DIMENSION(:,:,:), OPTIONAL"></IN>
   3228 !> @return Logical send_tile_averaged_data2d
   3229   LOGICAL FUNCTION send_tile_averaged_data2d ( id, field, area, time, mask )
   3230     INTEGER, INTENT(in) :: id  !< id od the diagnostic field
   3231     REAL, INTENT(in) :: field(:,:,:) !< field to average and send
   3232     REAL, INTENT(in) :: area (:,:,:) !< area of tiles (== averaging weights), arbitrary units
   3233     TYPE(time_type), INTENT(in)  :: time !< current time
   3234     LOGICAL, INTENT(in),OPTIONAL :: mask (:,:,:) !< land mask
   3235 
   3236     REAL, DIMENSION(SIZE(field,1),SIZE(field,2)) :: out(SIZE(field,1), SIZE(field,2))
   3237 
   3238 ! If id is < 0 it means that this field is not registered, simply return
   3239     IF ( id <= 0 ) THEN
   3240        send_tile_averaged_data2d = .FALSE.
   3241        RETURN
   3242     END IF
   3243 
   3244     CALL average_tiles(id, field, area, mask, out)
   3245     send_tile_averaged_data2d = send_data(id, out, time, mask=ANY(mask,DIM=3))
   3246   END FUNCTION send_tile_averaged_data2d


ENTRY POINTS

  Name                                                      
                                                            
 diag_manager_mod_mp_send_tile_averaged_data2d_             

Page 93          Source Listing                  SEND_TILE_AVERAGED_DATA2D
2021-06-01 08:54 Symbol Table                    diag_manager.F90



SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ANY                        Func   3245                                 scalar                    3245                              
 AREA                       Dummy  3229     R(8)            8     3     1        ARG,IN           3244                              
 FIELD                      Dummy  3229     R(8)            8     3     1        ARG,IN           3236,3244                         
 ID                         Dummy  3229     I(4)            4           scalar   ARG,IN           3239,3244,3245                    
 MASK                       Dummy  3229     L(4)            4     3     1        ARG,IN           3244,3245                         
 OUT                        Local  3236     R(8)            8     2     0                         3244,3245                         
 SEND_TILE_AVERAGED_DATA2D  Func   3229     L(4)            4           scalar   PRIV             3240,3245                         
 SIZE                       Func   3236                                 scalar                    3236                              
 TIME                       Dummy  3229     TIME_TYPE       16          scalar   ARG,IN           3245                              

Page 94          Source Listing                  SEND_TILE_AVERAGED_DATA2D
2021-06-01 08:54                                 diag_manager.F90

   3247 ! </FUNCTION>
   3248 
   3249 ! <FUNCTION NAME="send_tile_averaged_data3d" INTERFACE="send_tile_averaged_data">
   3250 !   <IN NAME="diag_field_id" TYPE="INTEGER"></IN>
   3251 !   <IN NAME="field" TYPE="REAL, DIMENSION(:,:,:,:)"></IN>
   3252 !   <IN NAME="area" TYPE="REAL, DIMENSION(:,:,:)"></IN>
   3253 !   <IN NAME="time" TYPE="TYPE(time_type)"></IN>
   3254 !   <IN NAME="mask" TYPE="LOGICAL, DIMENSION(:,:,:), OPTIONAL">  </IN>
   3255 !> @return Logical send_tile_averaged_data3d
   3256   LOGICAL FUNCTION send_tile_averaged_data3d( id, field, area, time, mask )
   3257     INTEGER, INTENT(in) :: id !< id of the diagnostic field
   3258     REAL, DIMENSION(:,:,:,:), INTENT(in) :: field !< (lon, lat, tile, lev) field to average and send
   3259     REAL, DIMENSION(:,:,:), INTENT(in) :: area (:,:,:) !< (lon, lat, tile) tile areas ( == averaging weights), arbitrary uni
   3259 ts
   3260     TYPE(time_type), INTENT(in)  :: time !< current time
   3261     LOGICAL, DIMENSION(:,:,:), INTENT(in), OPTIONAL :: mask !< (lon, lat, tile) land mask
   3262 
   3263     REAL, DIMENSION(SIZE(field,1),SIZE(field,2),SIZE(field,4)) :: out
   3264     LOGICAL, DIMENSION(SIZE(field,1),SIZE(field,2),SIZE(field,4)) :: mask3
   3265     INTEGER :: it
   3266 
   3267 ! If id is < 0 it means that this field is not registered, simply return
   3268     IF ( id <= 0 ) THEN
   3269        send_tile_averaged_data3d = .FALSE.
   3270        RETURN
   3271     END IF
   3272 
   3273     DO it=1, SIZE(field,4)
   3274        CALL average_tiles(id, field(:,:,:,it), area, mask, out(:,:,it) )
   3275     END DO
   3276 
   3277     mask3(:,:,1) = ANY(mask,DIM=3)
   3278     DO it = 2, SIZE(field,4)
   3279        mask3(:,:,it) = mask3(:,:,1)
   3280     END DO
   3281 
   3282     send_tile_averaged_data3d = send_data( id, out, time, mask=mask3 )
   3283   END FUNCTION send_tile_averaged_data3d

Page 95          Source Listing                  SEND_TILE_AVERAGED_DATA3D
2021-06-01 08:54 Entry Points                    diag_manager.F90



ENTRY POINTS

  Name                                                      
                                                            
 diag_manager_mod_mp_send_tile_averaged_data3d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ANY                        Func   3277                                 scalar                    3277                              
 AREA                       Dummy  3256     R(8)            8     3     1        ARG,IN           3274                              
 FIELD                      Dummy  3256     R(8)            8     4     1        ARG,IN           3263,3264,3273,3274,3278          
 ID                         Dummy  3256     I(4)            4           scalar   ARG,IN           3268,3274,3282                    
 IT                         Local  3265     I(4)            4           scalar                    3273,3274,3278,3279               
 MASK                       Dummy  3256     L(4)            4     3     1        ARG,IN           3274,3277                         
 MASK3                      Local  3264     L(4)            4     3     0                         3277,3279,3282                    
 OUT                        Local  3263     R(8)            8     3     0                         3274,3282                         
 SEND_TILE_AVERAGED_DATA3D  Func   3256     L(4)            4           scalar   PRIV             3269,3282                         
 SIZE                       Func   3263                                 scalar                    3263,3264,3273,3278               
 TIME                       Dummy  3256     TIME_TYPE       16          scalar   ARG,IN           3282                              

Page 96          Source Listing                  SEND_TILE_AVERAGED_DATA3D
2021-06-01 08:54                                 diag_manager.F90

   3284 ! </FUNCTION>
   3285 
   3286 ! <SUBROUTINE NAME="average_tiles">
   3287 !   <OVERVIEW>
   3288 !   </OVERVIEW>
   3289 !   <TEMPLATE>
   3290 !     SUBROUTINE average_tiles(diag_field_id, x, area, mask, out)
   3291 !   </TEMPLATE>
   3292 !   <DESCRIPTION>
   3293 !   </DESCRIPTION>
   3294 !   <IN NAME="diag_field_id" TYPE="INTEGER"></IN>
   3295 !   <IN NAME="x" TYPE="REAL, DIMENSION(:,:,:)">(lon, lat, tile) field to average</IN>
   3296 !   <IN NAME="area" TYPE="REAL, DIMENSION(:,:,:)">(lon, lat, tile) fractional area</IN>
   3297 !   <IN NAME="mask" TYPE="LOGICAL, DIMENSION(:,:,:)">(lon, lat, tile) land mask</IN>
   3298 !   <OUT NAME="out" TYPE="REAL, DIMENSION(:,:)">(lon, lat) result of averaging</OUT>
   3299   SUBROUTINE average_tiles(diag_field_id, x, area, mask, out)
   3300     INTEGER, INTENT(in) :: diag_field_id
   3301     REAL, DIMENSION(:,:,:), INTENT(in) :: x !< (lon, lat, tile) field to average
   3302     REAL, DIMENSION(:,:,:), INTENT(in) :: area !< (lon, lat, tile) fractional area
   3303     LOGICAL, DIMENSION(:,:,:), INTENT(in) :: mask !< (lon, lat, tile) land mask
   3304     REAL, DIMENSION(:,:), INTENT(out) :: out !< (lon, lat) result of averaging
   3305 
   3306     INTEGER  :: it !< iterator over tile number
   3307     REAL, DIMENSION(SIZE(x,1),SIZE(x,2)) :: s !< area accumulator
   3308     REAL :: local_missing_value
   3309 
   3310 ! # FATAL if diag_field_id is less than 0, indicates field was not in diag_table.
   3311 ! The calling functions should not have passed in an invalid diag_field_id
   3312     IF ( diag_field_id <= 0 ) THEN
   3313 ! <ERROR STATUS="FATAL">
   3314 !   diag_field_id less than 0.  Contact developers.
   3315 ! </ERROR>
   3316        CALL error_mesg('diag_manager_mod::average_tiles',&
   3317             & "diag_field_id less than 0.  Contact developers.", FATAL)
   3318     END IF
   3319 
   3320 ! Initialize local_missing_value
   3321     IF ( input_fields(diag_field_id)%missing_value_present ) THEN
   3322        local_missing_value = input_fields(diag_field_id)%missing_value
   3323     ELSE
   3324        local_missing_value = 0.0
   3325     END IF
   3326 
   3327 ! Initialize s and out to zero.
   3328     s(:,:) = 0.0
   3329     out(:,:) = 0.0
   3330 
   3331     DO it = 1, SIZE(area,3)
   3332        WHERE ( mask(:,:,it) )
   3333           out(:,:) = out(:,:) + x(:,:,it)*area(:,:,it)
   3334           s(:,:) = s(:,:) + area(:,:,it)
   3335        END WHERE
   3336     END DO
   3337 
   3338     WHERE ( s(:,:) > 0 )
   3339        out(:,:) = out(:,:)/s(:,:)
   3340     ELSEWHERE

Page 97          Source Listing                  AVERAGE_TILES
2021-06-01 08:54                                 diag_manager.F90

   3341        out(:,:) = local_missing_value
   3342     END WHERE
   3343   END SUBROUTINE average_tiles


ENTRY POINTS

  Name                                          
                                                
 diag_manager_mod_mp_average_tiles_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 AREA                       Dummy  3299     R(8)            8     3     1        ARG,IN           3331,3333,3334                    
 AVERAGE_TILES              Subr   3299                                                           3244,3274                         
 DIAG_FIELD_ID              Dummy  3299     I(4)            4           scalar   ARG,IN           3312,3321,3322                    
 IT                         Local  3306     I(4)            4           scalar                    3331,3332,3333,3334               
 LOCAL_MISSING_VALUE        Local  3308     R(8)            8           scalar                    3322,3324,3341                    
 MASK                       Dummy  3299     L(4)            4     3     1        ARG,IN           3332                              
 OUT                        Dummy  3299     R(8)            8     2     1        ARG,OUT          3329,3333,3339,3341               
 S                          Local  3307     R(8)            8     2     0                         3328,3334,3338,3339               
 SIZE                       Func   3307                                 scalar                    3307,3331                         
 X                          Dummy  3299     R(8)            8     3     1        ARG,IN           3307,3333                         

Page 98          Source Listing                  AVERAGE_TILES
2021-06-01 08:54                                 diag_manager.F90

   3344 ! </SUBROUTINE>
   3345 
   3346 !> @return Integer writing_field
   3347   INTEGER FUNCTION writing_field(out_num, at_diag_end, error_string, time)
   3348     INTEGER, INTENT(in) :: out_num
   3349     LOGICAL, INTENT(in) :: at_diag_end
   3350     CHARACTER(len=*), INTENT(out) :: error_string
   3351     TYPE(time_type), INTENT(in) :: time
   3352 
   3353     TYPE(time_type) :: middle_time
   3354     TYPE(time_type) :: filename_time
   3355     LOGICAL :: time_max, time_min, reduced_k_range, missvalue_present
   3356     LOGICAL :: average, time_rms, need_compute, phys_window
   3357     INTEGER :: in_num, file_num, freq, units
   3358     INTEGER :: b1,b2,b3,b4 !< size of buffer along x,y,z,and diurnal axes
   3359     INTEGER :: i, j, k, m
   3360     REAL    :: missvalue, num
   3361     real,allocatable,dimension(:,:,:,:) :: diurnal_buffer
   3362     writing_field = 0
   3363 
   3364     need_compute = output_fields(out_num)%need_compute
   3365 
   3366     in_num = output_fields(out_num)%input_field
   3367     IF ( input_fields(in_num)%static ) RETURN
   3368 
   3369     missvalue = input_fields(in_num)%missing_value
   3370     missvalue_present = input_fields(in_num)%missing_value_present
   3371     reduced_k_range = output_fields(out_num)%reduced_k_range
   3372     phys_window = output_fields(out_num)%phys_window
   3373 ! Is this output field being time averaged?
   3374     average = output_fields(out_num)%time_average
   3375 ! Are we taking the rms of the field?
   3376 ! If so, then average is also .TRUE.
   3377     time_rms = output_fields(out_num)%time_rms
   3378 ! Looking for max and min value of this field over the sampling interval?
   3379     time_max = output_fields(out_num)%time_max
   3380     time_min = output_fields(out_num)%time_min
   3381     file_num = output_fields(out_num)%output_file
   3382     freq = files(file_num)%output_freq
   3383     units = files(file_num)%output_units
   3384 
   3385 ! If average get size: Average intervals are last_output, next_output
   3386     IF ( average ) THEN
   3387        b1=SIZE(output_fields(out_num)%buffer,1)
   3388        b2=SIZE(output_fields(out_num)%buffer,2)
   3389        b3=SIZE(output_fields(out_num)%buffer,3)
   3390        b4=SIZE(output_fields(out_num)%buffer,4)
   3391        IF ( input_fields(in_num)%mask_variant ) THEN
   3392           DO m=1, b4
   3393              DO k=1, b3
   3394                 DO j=1, b2
   3395                    DO i=1, b1
   3396                       IF ( output_fields(out_num)%counter(i,j,k,m) > 0. )THEN
   3397                          output_fields(out_num)%buffer(i,j,k,m) = &
   3398                               & output_fields(out_num)%buffer(i,j,k,m)/output_fields(out_num)%counter(i,j,k,m)
   3399                          IF ( time_rms ) output_fields(out_num)%buffer(i,j,k,m) = &
   3400                               SQRT(output_fields(out_num)%buffer(i,j,k,m))

Page 99          Source Listing                  WRITING_FIELD
2021-06-01 08:54                                 diag_manager.F90

   3401                       ELSE
   3402                          output_fields(out_num)%buffer(i,j,k,m) =  missvalue
   3403                       END IF
   3404                    END DO
   3405                 END DO
   3406              END DO
   3407           END DO
   3408        ELSE  !not mask variant
   3409           DO m = 1, b4
   3410              IF ( phys_window ) THEN
   3411                 IF ( need_compute .OR. reduced_k_range ) THEN
   3412                    num = REAL(output_fields(out_num)%num_elements(m)/output_fields(out_num)%region_elements)
   3413                 ELSE
   3414                    num = REAL(output_fields(out_num)%num_elements(m)/output_fields(out_num)%total_elements)
   3415                 END IF
   3416              ELSE
   3417                 num = output_fields(out_num)%count_0d(m)
   3418              END IF
   3419              IF ( num > 0. ) THEN
   3420                 IF ( missvalue_present ) THEN
   3421                    DO k=1, b3
   3422                       DO j=1, b2
   3423                          DO i=1, b1
   3424                             IF ( output_fields(out_num)%buffer(i,j,k,m) /= missvalue ) THEN
   3425                                output_fields(out_num)%buffer(i,j,k,m) = output_fields(out_num)%buffer(i,j,k,m)/num
   3426                                IF ( time_rms ) output_fields(out_num)%buffer(i,j,k,m) =&
   3427                                     & SQRT(output_fields(out_num)%buffer(i,j,k,m))
   3428                             END IF
   3429                          END DO
   3430                       END DO
   3431                    END DO
   3432                 ELSE
   3433                    output_fields(out_num)%buffer(:,:,:,m) = output_fields(out_num)%buffer(:,:,:,m)/num
   3434                    IF ( time_rms ) output_fields(out_num)%buffer(:,:,:,m) =&
   3435                         & SQRT(output_fields(out_num)%buffer(:,:,:,m))
   3436                 END IF
   3437              ELSE IF ( .NOT. at_diag_end ) THEN
   3438                 IF ( missvalue_present ) THEN
   3439                    IF(ANY(output_fields(out_num)%buffer /= missvalue)) THEN
   3440                       WRITE (error_string,'(a,"/",a)')&
   3441                            & TRIM(input_fields(in_num)%module_name), &
   3442                            & TRIM(output_fields(out_num)%output_name)
   3443                       writing_field = -1
   3444                       RETURN
   3445                    END IF
   3446                 END IF
   3447              END IF
   3448           END DO
   3449        END IF ! mask_variant
   3450     ELSE IF ( time_min .OR. time_max ) THEN
   3451        IF ( missvalue_present ) THEN
   3452           WHERE ( ABS(output_fields(out_num)%buffer) == MIN_VALUE )
   3453              output_fields(out_num)%buffer = missvalue
   3454           END WHERE
   3455        END IF ! if missvalue is NOT present buffer retains max_value or min_value
   3456     END IF !average
   3457 

Page 100         Source Listing                  WRITING_FIELD
2021-06-01 08:54                                 diag_manager.F90

   3458 ! Output field
   3459     IF ( at_diag_end .AND. freq == END_OF_RUN ) output_fields(out_num)%next_output = time
   3460 ! if (time .eq. output_fields(out_num)%next_output) then
   3461     if (output_fields(out_num)%n_diurnal_samples > 1) then
   3462 !> allocate the buffer for diurnal data
   3463           allocate(diurnal_buffer(size(output_fields(out_num)%buffer,1),size(output_fields(out_num)%buffer,2),&
   3464                     size(output_fields(out_num)%buffer,4),size(output_fields(out_num)%buffer,3)))
   3465 !> swap the last 2 axes in the data buffer to match the netcdf output order
   3466           do i = 1,size(output_fields(out_num)%buffer,4)
   3467           do j = 1,size(output_fields(out_num)%buffer,3)
   3468                diurnal_buffer(:,:,i,j) = output_fields(out_num)%buffer(:,:,j,i)
   3469           enddo
   3470           enddo
   3471     endif
   3472     IF ( (output_fields(out_num)%time_ops) .AND. (.NOT. mix_snapshot_average_fields) ) THEN
   3473        middle_time = (output_fields(out_num)%last_output+output_fields(out_num)%next_output)/2
   3474        if (trim(files(file_num)%filename_time_bounds) == "begin") then
   3475            filename_time = output_fields(out_num)%last_output
   3476        elseif (trim(files(file_num)%filename_time_bounds) == "middle") then
   3477            filename_time = middle_time
   3478        elseif (trim(files(file_num)%filename_time_bounds) == "end") then
   3479            filename_time = output_fields(out_num)%next_output
   3480        endif
   3481 
   3482        if (output_fields(out_num)%n_diurnal_samples > 1) then
   3483           CALL diag_data_out(file_num, out_num, diurnal_buffer, middle_time, &
   3484                  & use_mpp_io_arg=use_mpp_io, filename_time=filename_time)
   3485        else
   3486           CALL diag_data_out(file_num, out_num, output_fields(out_num)%buffer, middle_time, &
   3487                  & use_mpp_io_arg=use_mpp_io, filename_time=filename_time)
   3488        endif
   3489     ELSE
   3490        if (output_fields(out_num)%n_diurnal_samples > 1) then
   3491             CALL diag_data_out(file_num, out_num, &
   3492                  & diurnal_buffer, output_fields(out_num)%next_output, use_mpp_io_arg=use_mpp_io)
   3493        else
   3494             CALL diag_data_out(file_num, out_num, &
   3495                  & output_fields(out_num)%buffer, output_fields(out_num)%next_output,&
   3496                  & use_mpp_io_arg=use_mpp_io)
   3497        endif
   3498     END IF
   3499 !output_fields(out_num)%last_output = output_fields(out_num)%next_output
   3500 ! endif
   3501     IF ( at_diag_end ) RETURN
   3502 
   3503 ! Take care of cleaning up the time counters and the storeage size
   3504     output_fields(out_num)%last_output = output_fields(out_num)%next_output
   3505     IF ( freq == END_OF_RUN ) THEN
   3506        output_fields(out_num)%next_output = time
   3507     ELSE
   3508        IF ( freq == EVERY_TIME ) THEN
   3509           output_fields(out_num)%next_output = time
   3510        ELSE
   3511           output_fields(out_num)%next_output = output_fields(out_num)%next_next_output
   3512           output_fields(out_num)%next_next_output = &
   3513                & diag_time_inc(output_fields(out_num)%next_next_output, freq, units)
   3514        END IF

Page 101         Source Listing                  WRITING_FIELD
2021-06-01 08:54                                 diag_manager.F90

   3515        output_fields(out_num)%count_0d(:) = 0.0
   3516        output_fields(out_num)%num_elements(:) = 0
   3517        IF ( time_max ) THEN
   3518           output_fields(out_num)%buffer = MAX_VALUE
   3519        ELSE IF ( time_min ) THEN
   3520           output_fields(out_num)%buffer = MIN_VALUE
   3521        ELSE
   3522           output_fields(out_num)%buffer = EMPTY
   3523        END IF
   3524        IF ( input_fields(in_num)%mask_variant .AND. average ) output_fields(out_num)%counter = 0.0
   3525     END IF
   3526     if (allocated(diurnal_buffer))deallocate(diurnal_buffer)
   3527   END FUNCTION writing_field


ENTRY POINTS

  Name                                          
                                                
 diag_manager_mod_mp_writing_field_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ABS                        Func   3452                                 scalar                    3452                              
 ALLOCATED                  Func   3526                                 scalar                    3526                              
 ANY                        Func   3439                                 scalar                    3439                              
 AT_DIAG_END                Dummy  3347     L(4)            4           scalar   ARG,IN           3437,3459,3501                    
 AVERAGE                    Local  3356     L(4)            4           scalar                    3374,3386,3524                    
 B1                         Local  3358     I(4)            4           scalar                    3387,3395,3423                    
 B2                         Local  3358     I(4)            4           scalar                    3388,3394,3422                    
 B3                         Local  3358     I(4)            4           scalar                    3389,3393,3421                    
 B4                         Local  3358     I(4)            4           scalar                    3390,3392,3409                    
 DIAG_DATA_OUT              Subr   3483                                          PRIV             337,3483,3486,3491,3494,3559,3722,
                                                                                                  3724                              
 DIURNAL_BUFFER             Local  3361     R(8)            8     4     1        ALC              3463,3468,3483,3492,3526          
 ERROR_STRING               Dummy  3347     CHAR                        scalar   ARG,OUT          3440                              
 FILENAME_TIME              Local  3354     TIME_TYPE       16          scalar                    3475,3477,3479,3484,3487          
 FILE_NUM                   Local  3357     I(4)            4           scalar                    3381,3382,3383,3474,3476,3478,3483
                                                                                                  ,3486,3491,3494                   
 FREQ                       Local  3357     I(4)            4           scalar                    3382,3459,3505,3508,3513          
 I                          Local  3359     I(4)            4           scalar                    3395,3396,3397,3398,3399,3400,3402
                                                                                                  ,3423,3424,3425,3426,3427,3466,346
                                                                                                  8                                 
 IN_NUM                     Local  3357     I(4)            4           scalar                    3366,3367,3369,3370,3391,3441,3524
 J                          Local  3359     I(4)            4           scalar                    3394,3396,3397,3398,3399,3400,3402
                                                                                                  ,3422,3424,3425,3426,3427,3467,346
                                                                                                  8                                 
 K                          Local  3359     I(4)            4           scalar                    3393,3396,3397,3398,3399,3400,3402
                                                                                                  ,3421,3424,3425,3426,3427         
 M                          Local  3359     I(4)            4           scalar                    3392,3396,3397,3398,3399,3400,3402
                                                                                                  ,3409,3412,3414,3417,3424,3425,342
                                                                                                  6,3427,3433,3434,3435             
 MIDDLE_TIME                Local  3353     TIME_TYPE       16          scalar                    3473,3477,3483,3486               
 MISSVALUE                  Local  3360     R(8)            8           scalar                    3369,3402,3424,3439,3453          

Page 102         Source Listing                  WRITING_FIELD
2021-06-01 08:54 Symbol Table                    diag_manager.F90

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 MISSVALUE_PRESENT          Local  3355     L(4)            4           scalar                    3370,3420,3438,3451               
 MIX_SNAPSHOT_AVERAGE_FIELD                                                                                                         
 S                          Local  3472     L(4)            4           scalar   PRIV             344,3472,3761,3851                
 NEED_COMPUTE               Local  3356     L(4)            4           scalar                    3364,3411                         
 NUM                        Local  3360     R(8)            8           scalar                    3412,3414,3417,3419,3425,3433     
 OUT_NUM                    Dummy  3347     I(4)            4           scalar   ARG,IN           3364,3366,3371,3372,3374,3377,3379
                                                                                                  ,3380,3381,3387,3388,3389,3390,339
                                                                                                  6,3397,3398,3399,3400,3402,3412,34
                                                                                                  14,3417,3424,3425,3426,3427,3433,3
                                                                                                  434,3435,3439,3442,3452,3453,3459,
                                                                                                  3461,3463,3464,3466,3467,3468,3472
                                                                                                  ,3473,3475,3479,3482,3483,3486,349
                                                                                                  0,3491,3492,3494,3495,3504,3506,35
                                                                                                  09,3511,3512,3513,3515,3516,3518,3
                                                                                                  520,3522,3524                     
 PHYS_WINDOW                Local  3356     L(4)            4           scalar                    3372,3410                         
 REAL                       Func   3412                                 scalar                    3412,3414                         
 REDUCED_K_RANGE            Local  3355     L(4)            4           scalar                    3371,3411                         
 SIZE                       Func   3387                                 scalar                    3387,3388,3389,3390,3463,3464,3466
                                                                                                  ,3467                             
 SQRT                       Func   3400                                 scalar                    3400,3427,3435                    
 TIME                       Dummy  3347     TIME_TYPE       16          scalar   ARG,IN           3459,3506,3509                    
 TIME_MAX                   Local  3355     L(4)            4           scalar                    3379,3450,3517                    
 TIME_MIN                   Local  3355     L(4)            4           scalar                    3380,3450,3519                    
 TIME_PLUS                  Func   3473     RECORD          16          scalar   PRIV             3473,3602                         
 TIME_RMS                   Local  3356     L(4)            4           scalar                    3377,3399,3426,3434               
 TIME_SCALAR_DIVIDE         Func   3473     RECORD          16          scalar   PRIV             3473                              
 TRIM                       Func   3441                                 scalar                    3441,3442,3474,3476,3478          
 UNITS                      Local  3357     I(4)            4           scalar                    3383,3513                         
 USE_MPP_IO                 Local  3484     L(4)            4           scalar   PRIV             350,3484,3487,3492,3496,3561,3643,
                                                                                                  3722,3724,3729,3765,3865          
 WRITING_FIELD              Func   3347     I(4)            4           scalar                    1969,3362,3443,3617,3698,3700     


TYPE COMPONENTS/COMMON VARIABLES

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 FILE_TYPE.FILENAME_TIME_BOUNDS                                                                                            ...
                            CHAR            10    11388          scalar                    3474,3476,3478                     

Page 103         Source Listing                  WRITING_FIELD
2021-06-01 08:54                                 diag_manager.F90

   3528 
   3529   SUBROUTINE diag_manager_set_time_end(Time_end_in)
   3530     TYPE (time_type), INTENT(in) :: Time_end_in
   3531 
   3532     Time_end = Time_end_in
   3533 
   3534   END SUBROUTINE diag_manager_set_time_end


ENTRY POINTS

  Name                                                      
                                                            
 diag_manager_mod_mp_diag_manager_set_time_end_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 DIAG_MANAGER_SET_TIME_END  Subr   3529                                                                                             
 TIME_END                   Local  3532     TIME_TYPE       16          scalar                    3532,3577,3594,3797               
 TIME_END_IN                Dummy  3529     TIME_TYPE       16          scalar   ARG,IN           3532                              

Page 104         Source Listing                  DIAG_MANAGER_SET_TIME_END
2021-06-01 08:54                                 diag_manager.F90

   3535 
   3536 !-----------------------------------------------------------------------
   3537 !>@brief The subroutine 'diag_send_complete_instant' allows the user to
   3538 !! save diagnostic data on variable intervals (user defined in code logic)
   3539 !! to the same file.  The argument (time_type) will be written to the
   3540 !! time axis correspondingly.
   3541 !>@details The user is responsible for any averaging of accumulated data
   3542 !! as this routine is not designed for instantaneous values.  This routine
   3543 !! works only for send_data calls within OpenMP regions as they are buffered
   3544 !! until the complete signal is given.
   3545   SUBROUTINE diag_send_complete_instant(time)
   3546     TYPE (time_type), INTENT(in) :: time
   3547 !--- local variables
   3548     integer :: file, j, freq, in_num, file_num, out_num
   3549 
   3550     DO file = 1, num_files
   3551       freq = files(file)%output_freq
   3552       IF (freq == 0) then
   3553         DO j = 1, files(file)%num_fields
   3554           out_num = files(file)%fields(j)
   3555           in_num = output_fields(out_num)%input_field
   3556           IF ( (input_fields(in_num)%numthreads == 1) .AND.&
   3557                & (input_fields(in_num)%active_omp_level.LE.1) ) CYCLE
   3558           file_num = output_fields(out_num)%output_file
   3559           CALL diag_data_out(file_num, out_num, &
   3560                & output_fields(out_num)%buffer, time, &
   3561                & use_mpp_io_arg=use_mpp_io)
   3562         END DO
   3563       END IF
   3564     END DO
   3565   END SUBROUTINE diag_send_complete_instant

Page 105         Source Listing                  DIAG_SEND_COMPLETE_INSTANT
2021-06-01 08:54 Entry Points                    diag_manager.F90



ENTRY POINTS

  Name                                                       
                                                             
 diag_manager_mod_mp_diag_send_complete_instant_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 DIAG_SEND_COMPLETE_INSTANT Subr   3545                                                                                             
 FILE                       Local  3548     I(4)            4           scalar                    3550,3551,3553,3554               
 FILE_NUM                   Local  3548     I(4)            4           scalar                    3558,3559                         
 FREQ                       Local  3548     I(4)            4           scalar                    3551,3552                         
 IN_NUM                     Local  3548     I(4)            4           scalar                    3555,3556,3557                    
 J                          Local  3548     I(4)            4           scalar                    3553,3554                         
 NUM_FILES                  Local  3550     I(4)            4           scalar   PRIV             340,3550,3585,3640                
 OUT_NUM                    Local  3548     I(4)            4           scalar                    3554,3555,3558,3559,3560          
 TIME                       Dummy  3545     TIME_TYPE       16          scalar   ARG,IN           3560                              


TYPE COMPONENTS/COMMON VARIABLES

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 FILE_TYPE.FIELDS           I(4)            4     256      1     300                       3554,3588,3666                     
 FILE_TYPE.NUM_FIELDS       I(4)            4     1456           scalar                    3553,3587,3665                     

Page 106         Source Listing                  DIAG_SEND_COMPLETE_INSTANT
2021-06-01 08:54                                 diag_manager.F90

   3566 
   3567 !-----------------------------------------------------------------------
   3568   SUBROUTINE diag_send_complete(time_step, err_msg)
   3569     TYPE (time_type), INTENT(in)           :: time_step
   3570     character(len=*), INTENT(out), optional :: err_msg
   3571 
   3572     type(time_type)    :: next_time, time
   3573     integer            :: file, j, out_num, in_num, freq, status
   3574     logical            :: local_output, need_compute
   3575     CHARACTER(len=128) :: error_string
   3576 
   3577     IF ( Time_end == Time_zero ) THEN
   3578 ! <ERROR STATUS="FATAL">
   3579 !   diag_manager_set_time_end must be called before diag_send_complete
   3580 ! </ERROR>
   3581        CALL error_mesg('diag_manager_mod::diag_send_complete',&
   3582             & "diag_manager_set_time_end must be called before diag_send_complete", FATAL)
   3583     END IF
   3584 
   3585     DO file = 1, num_files
   3586        freq = files(file)%output_freq
   3587        DO j = 1, files(file)%num_fields
   3588           out_num = files(file)%fields(j) !this is position of output_field in array output_fields
   3589           in_num = output_fields(out_num)%input_field
   3590 
   3591           IF ( (input_fields(in_num)%numthreads == 1) .AND. (input_fields(in_num)%active_omp_level.LE.1) ) CYCLE
   3592           IF ( output_fields(out_num)%static .OR. freq == END_OF_RUN ) CYCLE
   3593           time = input_fields(in_num)%time
   3594           IF ( time >= time_end ) CYCLE
   3595 
   3596 ! is this field output on a local domain only?
   3597           local_output = output_fields(out_num)%local_output
   3598 ! if local_output, does the current PE take part in send_data?
   3599           need_compute = output_fields(out_num)%need_compute
   3600 ! skip all PEs not participating in outputting this field
   3601           IF ( local_output .AND. (.NOT.need_compute) ) CYCLE
   3602           next_time = time + time_step
   3603 
   3604           IF ( next_time > output_fields(out_num)%next_output ) THEN
   3605 ! A non-static field that has skipped a time level is an error
   3606              IF ( next_time > output_fields(out_num)%next_next_output .AND. freq > 0 ) THEN
   3607                 IF ( mpp_pe() .EQ. mpp_root_pe() ) THEN
   3608                    WRITE (error_string,'(a,"/",a)')&
   3609                         & TRIM(input_fields(in_num)%module_name), &
   3610                         & TRIM(output_fields(out_num)%output_name)
   3611                    IF ( fms_error_handler('diag_send_complete',&
   3612                         & 'module/output_field '//TRIM(error_string)//&
   3613                         & ' is skipped one time level in output data', err_msg)) RETURN
   3614                 END IF
   3615              END IF
   3616 
   3617              status = writing_field(out_num, .FALSE., error_string, next_time)
   3618              IF ( status == -1 ) THEN
   3619                 IF ( mpp_pe() .EQ. mpp_root_pe() ) THEN
   3620                    IF(fms_error_handler('diag_manager_mod::diag_send_complete','module/output_field '//TRIM(error_string)//&
   3621                         & ', write EMPTY buffer', err_msg)) RETURN
   3622                 END IF

Page 107         Source Listing                  DIAG_SEND_COMPLETE
2021-06-01 08:54                                 diag_manager.F90

   3623              END IF
   3624           END IF  !time > output_fields(out_num)%next_output
   3625        END DO
   3626     END DO
   3627 
   3628   END SUBROUTINE diag_send_complete


ENTRY POINTS

  Name                                               
                                                     
 diag_manager_mod_mp_diag_send_complete_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 DIAG_SEND_COMPLETE         Subr   3568                                                                                             
 ERROR_STRING               Local  3575     CHAR            128         scalar                    3608,3612,3617,3620               
 ERR_MSG                    Dummy  3568     CHAR                        scalar   ARG,OUT          3613,3621                         
 FILE                       Local  3573     I(4)            4           scalar                    3585,3586,3587,3588               
 FREQ                       Local  3573     I(4)            4           scalar                    3586,3592,3606                    
 IN_NUM                     Local  3573     I(4)            4           scalar                    3589,3591,3593,3609               
 J                          Local  3573     I(4)            4           scalar                    3587,3588                         
 LOCAL_OUTPUT               Local  3574     L(4)            4           scalar                    3597,3601                         
 NEED_COMPUTE               Local  3574     L(4)            4           scalar                    3599,3601                         
 NEXT_TIME                  Local  3572     TIME_TYPE       16          scalar                    3602,3604,3606,3617               
 OUT_NUM                    Local  3573     I(4)            4           scalar                    3588,3589,3592,3597,3599,3604,3606
                                                                                                  ,3610,3617                        
 STATUS                     Local  3573     I(4)            4           scalar                    3617,3618                         
 TIME                       Local  3572     TIME_TYPE       16          scalar                    3593,3594,3602                    
 TIME_GE                    Func   3594     L(4)            4           scalar   PRIV             3594,3687,3688                    
 TIME_STEP                  Dummy  3568     TIME_TYPE       16          scalar   ARG,IN           3602                              
 TRIM                       Func   3609                                 scalar                    3609,3610,3612,3620               

Page 108         Source Listing                  DIAG_SEND_COMPLETE
2021-06-01 08:54                                 diag_manager.F90

   3629 
   3630 !> @brief Flushes diagnostic buffers where necessary. Close diagnostics files.
   3631 !!   A warning will be issued here if a field in diag_table is not registered
   3632   SUBROUTINE diag_manager_end(time)
   3633     TYPE(time_type), INTENT(in) :: time
   3634 
   3635     INTEGER :: file
   3636 
   3637     IF ( do_diag_field_log ) THEN
   3638        CALL mpp_close (diag_log_unit)
   3639     END IF
   3640     DO file = 1, num_files
   3641        CALL closing_file(file, time)
   3642     END DO
   3643   if (.not.use_mpp_io) then
   3644     if (allocated(fileobjU)) deallocate(fileobjU)
   3645     if (allocated(fileobj)) deallocate(fileobj)
   3646     if (allocated(fileobjND)) deallocate(fileobjND)
   3647   if (allocated(fnum_for_domain)) deallocate(fnum_for_domain)
   3648   endif
   3649   END SUBROUTINE diag_manager_end


ENTRY POINTS

  Name                                             
                                                   
 diag_manager_mod_mp_diag_manager_end_             

Page 109         Source Listing                  DIAG_MANAGER_END
2021-06-01 08:54 Symbol Table                    diag_manager.F90



SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ALLOCATED                  Func   3644                                 scalar                    3644,3645,3646,3647               
 DIAG_LOG_UNIT              Local  3638     I(4)            4           scalar   PRIV             346,3638,3908,3909                
 DIAG_MANAGER_END           Subr   3632                                                                                             
 FILE                       Local  3635     I(4)            4           scalar                    3640,3641                         
 FILEOBJ                    Local  3645     RECORD          2040  1     1        ALC,TGT,PRIV     351,3645,3867                     
 FILEOBJND                  Local  3646     RECORD          872   1     1        ALC,TGT,PRIV     351,3646,3868                     
 FILEOBJU                   Local  3644     RECORD          1672  1     1        ALC,TGT,PRIV     351,3644,3866                     
 FNUM_FOR_DOMAIN            Local  3647     CHAR            2     1     1        ALC,PRIV         351,3647,3869,3871                
 MPP_CLOSE                  Subr   3638                                          PRIV             321,3638                          
 TIME                       Dummy  3632     TIME_TYPE       16          scalar   ARG,IN           3641                              

Page 110         Source Listing                  DIAG_MANAGER_END
2021-06-01 08:54                                 diag_manager.F90

   3650 
   3651 !> @brief Replaces diag_manager_end; close just one file: files(file)
   3652   SUBROUTINE closing_file(file, time)
   3653     INTEGER, INTENT(in) :: file
   3654     TYPE(time_type), INTENT(in) :: time
   3655 
   3656     INTEGER :: j, i, input_num, freq, status, loop1, loop2
   3657     INTEGER :: stdout_unit
   3658     LOGICAL :: reduced_k_range, need_compute, local_output
   3659     CHARACTER(len=128) :: message
   3660     real,allocatable,dimension(:,:,:,:) :: diurnal_buffer
   3661 
   3662     stdout_unit = stdout()
   3663 
   3664 ! Output all registered, non_static output_fields
   3665     DO j = 1, files(file)%num_fields
   3666        i = files(file)%fields(j) !this is position of output_field in array output_fields
   3667 
   3668 ! is this field output on a local domain only?
   3669        local_output = output_fields(i)%local_output
   3670 ! if local_output, does the current PE take part in send_data?
   3671        need_compute = output_fields(i)%need_compute
   3672 
   3673        reduced_k_range = output_fields(i)%reduced_k_range
   3674 
   3675 ! skip all PEs not participating in outputting this field
   3676        IF ( local_output .AND. (.NOT. need_compute) ) CYCLE
   3677 ! skip fields that were not registered or non-static
   3678        input_num = output_fields(i)%input_field
   3679        IF ( input_fields(input_num)%static ) CYCLE
   3680        IF ( .NOT.input_fields(input_num)%register ) CYCLE
   3681        freq = files(file)%output_freq
   3682        IF ( freq /= END_OF_RUN .AND. files(file)%file_unit < 0 &
   3683             & .AND. ALL(output_fields(i)%num_elements(:) == 0)&
   3684             & .AND. ALL(output_fields(i)%count_0d(:) == 0) ) CYCLE
   3685 ! Is it time to output for this field; CAREFUL ABOUT >= vs > HERE
   3686 ! For end should be >= because no more data is coming
   3687        IF ( time >= output_fields(i)%next_output .OR. freq == END_OF_RUN ) THEN
   3688           IF ( time >= output_fields(i)%next_next_output .AND. freq > 0 ) THEN
   3689              WRITE (message,'(a,"/",a)') TRIM(input_fields(input_num)%module_name), &
   3690                   & TRIM(output_fields(i)%output_name)
   3691 ! <ERROR STATUS="WARNING">
   3692 !   <input_fields(input_num)%module_name>/<output_fields(i)%output_name> skip one time
   3693 !   level, maybe send_data never called
   3694 ! </ERROR>
   3695              IF ( mpp_pe() .EQ. mpp_root_pe() ) &
   3696                   & CALL error_mesg('diag_manager_mod::closing_file', 'module/output_field ' //&
   3697                   & TRIM(message)//', skip one time level, maybe send_data never called', WARNING)
   3698              status = writing_field(i, .TRUE.,message,time)
   3699           ELSE
   3700              status = writing_field(i, .TRUE., message, time)
   3701           END IF
   3702        ELSEIF ( .NOT.output_fields(i)%written_once ) THEN
   3703 ! <ERROR STATUS="NOTE">
   3704 !   <output_fields(i)%output_name) NOT available, check if output interval > runlength.
   3705 !   NetCDF fill_values are written
   3706 ! </ERROR>

Page 111         Source Listing                  CLOSING_FILE
2021-06-01 08:54                                 diag_manager.F90

   3707           CALL error_mesg('Potential error in diag_manager_end ',&
   3708                & TRIM(output_fields(i)%output_name)//' NOT available,'//&
   3709                & ' check if output interval > runlength. Netcdf fill_values are written', NOTE)
   3710           output_fields(i)%buffer = FILL_VALUE
   3711           if (output_fields(i)%n_diurnal_samples > 1) then
   3712 !> allocate the buffer for diurnal data
   3713                if (.not. allocated(diurnal_buffer)) &
   3714                     allocate(diurnal_buffer(size(output_fields(i)%buffer,1),size(output_fields(i)%buffer,2),&
   3715                     size(output_fields(i)%buffer,4),size(output_fields(i)%buffer,3)))
   3716 !> swap the last 2 axes in the data buffer to match the netcdf output order
   3717                do loop1 = 1,size(output_fields(i)%buffer,4)
   3718                do loop2 = 1,size(output_fields(i)%buffer,3)
   3719                     diurnal_buffer(:,:,loop1,loop2) = output_fields(i)%buffer(:,:,loop2,loop1)
   3720                enddo
   3721                enddo
   3722                CALL diag_data_out(file, i, diurnal_buffer, time, .TRUE., use_mpp_io_arg=use_mpp_io)
   3723           else
   3724           CALL diag_data_out(file, i, output_fields(i)%buffer, time, .TRUE., use_mpp_io_arg=use_mpp_io)
   3725           endif
   3726        END IF
   3727     END DO
   3728 ! Now it's time to output static fields
   3729     CALL write_static(file, use_mpp_io)
   3730 
   3731 ! Write out the number of bytes of data saved to this file
   3732     IF ( write_bytes_in_file ) THEN
   3733        CALL mpp_sum (files(file)%bytes_written)
   3734        IF ( mpp_pe() == mpp_root_pe() )&
   3735             & WRITE (stdout_unit,'(a,i12,a,a)') 'Diag_Manager: ',files(file)%bytes_written, &
   3736             & ' bytes of data written to file ',TRIM(files(file)%name)
   3737     END IF
   3738      if (allocated(diurnal_buffer)) deallocate(diurnal_buffer)
   3739   END SUBROUTINE closing_file

Page 112         Source Listing                  CLOSING_FILE
2021-06-01 08:54 Entry Points                    diag_manager.F90



ENTRY POINTS

  Name                                         
                                               
 diag_manager_mod_mp_closing_file_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ALL                        Func   3683                                 scalar                    3683,3684                         
 ALLOCATED                  Func   3713                                 scalar                    3713,3738                         
 CLOSING_FILE               Subr   3652                                                           3641                              
 DIURNAL_BUFFER             Local  3660     R(8)            8     4     1        ALC              3713,3714,3719,3722,3738          
 FILE                       Dummy  3652     I(4)            4           scalar   ARG,IN           3665,3666,3681,3682,3722,3724,3729
                                                                                                  ,3733,3735,3736                   
 FILL_VALUE                 Local  3710     R(8)            8           scalar   PRIV             341,3710                          
 FREQ                       Local  3656     I(4)            4           scalar                    3681,3682,3687,3688               
 I                          Local  3656     I(4)            4           scalar                    3666,3669,3671,3673,3678,3683,3684
                                                                                                  ,3687,3688,3690,3698,3700,3702,370
                                                                                                  8,3710,3711,3714,3715,3717,3718,37
                                                                                                  19,3722,3724                      
 INPUT_NUM                  Local  3656     I(4)            4           scalar                    3678,3679,3680,3689               
 J                          Local  3656     I(4)            4           scalar                    3665,3666                         
 LOCAL_OUTPUT               Local  3658     L(4)            4           scalar                    3669,3676                         
 LOOP1                      Local  3656     I(4)            4           scalar                    3717,3719                         
 LOOP2                      Local  3656     I(4)            4           scalar                    3718,3719                         
 MESSAGE                    Local  3659     CHAR            128         scalar                    3689,3697,3698,3700               
 MPP_SUM                    Local  3733                                 scalar   PRIV             322,3733                          
 MPP_SUM_INT4_SCALAR        Subr   3733                                          PRIV             3733                              
 NEED_COMPUTE               Local  3658     L(4)            4           scalar                    3671,3676                         
 NOTE                       Param  3709     I(4)            4           scalar   PRIV             329,3709,3828,3837,3845,3848,3873,
                                                                                                  3876,3892,4085                    
 REDUCED_K_RANGE            Local  3658     L(4)            4           scalar                    3673                              
 SIZE                       Func   3714                                 scalar                    3714,3715,3717,3718               
 STATUS                     Local  3656     I(4)            4           scalar                    3698,3700                         
 STDOUT_UNIT                Local  3657     I(4)            4           scalar                    3662,3735                         
 TIME                       Dummy  3652     TIME_TYPE       16          scalar   ARG,IN           3687,3688,3698,3700,3722,3724     
 TRIM                       Func   3689                                 scalar                    3689,3690,3697,3708,3736          
 WRITE_BYTES_IN_FILE        Local  3732     L(4)            4           scalar   PRIV             345,3732,3762                     
 WRITE_STATIC               Subr   3729                                          PRIV             337,3729                          


TYPE COMPONENTS/COMMON VARIABLES

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 FILE_TYPE.BYTES_WRITTEN    I(4)            4     1480           scalar                    3733,3735,3904                     
 FILE_TYPE.FILE_UNIT        I(4)            4     1476           scalar                    3682                               
 OUTPUT_FIELD_TYPE.WRITTEN_ONCE                                                                                            ...
                            L(4)            4     3260           scalar                    3702                               

Page 113         Source Listing                  CLOSING_FILE
2021-06-01 08:54                                 diag_manager.F90

   3740 
   3741 !> @brief Initialize Diagnostics Manager.
   3742 !! @details Open and read diag_table. Select fields and files for diagnostic output.
   3743   SUBROUTINE diag_manager_init(diag_model_subset, time_init, err_msg)
   3744     INTEGER, OPTIONAL, INTENT(IN) :: diag_model_subset
   3745     INTEGER, DIMENSION(6), OPTIONAL, INTENT(IN) :: time_init !< Model time diag_manager initialized
   3746     CHARACTER(len=*), INTENT(out), OPTIONAL :: err_msg
   3747 
   3748     CHARACTER(len=*), PARAMETER :: SEP = '|'
   3749 
   3750     INTEGER, PARAMETER :: FltKind = R4_KIND
   3751     INTEGER, PARAMETER :: DblKind = R8_KIND
   3752     INTEGER :: diag_subset_output
   3753     INTEGER :: mystat
   3754     INTEGER, ALLOCATABLE, DIMENSION(:) :: pelist
   3755     INTEGER :: stdlog_unit, stdout_unit
   3756     integer :: j
   3757 # 3819
   3758 
   3759     CHARACTER(len=256) :: err_msg_local
   3760 
   3761     NAMELIST /diag_manager_nml/ append_pelist_name, mix_snapshot_average_fields, max_output_fields, &
   3762          & max_input_fields, max_axes, do_diag_field_log, write_bytes_in_file, debug_diag_manager,&
   3763          & max_num_axis_sets, max_files, use_cmor, issue_oor_warnings,&
   3764          & oor_warnings_fatal, max_out_per_in_field, flush_nc_files, region_out_use_alt_value, max_field_attributes,&
   3765          & max_file_attributes, max_axis_attributes, prepend_date, use_mpp_io
   3766 
   3767 ! If the module was already initialized do nothing
   3768     IF ( module_is_initialized ) RETURN
   3769 
   3770 ! Clear the err_msg variable if contains any residual information
   3771     IF ( PRESENT(err_msg) ) err_msg = ''
   3772 
   3773 ! Initialize diag_util_mod and diag_data_mod
   3774 ! These init routine only write out the version number to the log file
   3775     call diag_util_init()
   3776     call diag_data_init()
   3777 
   3778 ! Determine pack_size from how many bytes a real value has (how compiled)
   3779     pack_size = SIZE(TRANSFER(0.0_DblKind, (/0.0, 0.0, 0.0, 0.0/)))
   3780     IF ( pack_size.NE.1 .AND. pack_size.NE.2 ) THEN
   3781        IF ( fms_error_handler('diag_manager_mod::diag_manager_init', 'unknown pack_size.  Must be 1, or 2.', err_msg) ) RETU
   3781 RN
   3782     END IF
   3783 
   3784 ! Get min and max values for real(kind=R4_KIND)
   3785     min_value = HUGE(0.0_FltKind)
   3786     max_value = -min_value
   3787 
   3788 ! get stdlog and stdout unit number
   3789     stdlog_unit = stdlog()
   3790     stdout_unit = stdout()
   3791 
   3792 ! version number to logfile
   3793     CALL write_version_number("DIAG_MANAGER_MOD", version)
   3794 
   3795     Time_zero = set_time(0,0)

Page 114         Source Listing                  DIAG_MANAGER_INIT
2021-06-01 08:54                                 diag_manager.F90

   3796 !--- initialize time_end to time_zero
   3797     Time_end  = Time_zero
   3798     diag_subset_output = DIAG_ALL
   3799     IF ( PRESENT(diag_model_subset) ) THEN
   3800        IF ( diag_model_subset >= DIAG_OTHER .AND. diag_model_subset <= DIAG_ALL ) THEN
   3801           diag_subset_output = diag_model_subset
   3802        ELSE
   3803           IF ( fms_error_handler('diag_manager_mod::diag_manager_init', 'invalid value of diag_model_subset',err_msg) ) RETU
   3803 RN
   3804        END IF
   3805     END IF
   3806 
   3807 
   3808     READ (input_nml_file, NML=diag_manager_nml, IOSTAT=mystat)
   3809 # 3879
   3810 
   3811 ! Check the status of reading the diag_manager_nml
   3812 
   3813     IF ( check_nml_error(IOSTAT=mystat, NML_NAME='DIAG_MANAGER_NML') < 0 ) THEN
   3814        IF ( mpp_pe() == mpp_root_pe() ) THEN
   3815           CALL error_mesg('diag_manager_mod::diag_manager_init', 'DIAG_MANAGER_NML not found in input.nml.  Using defaults.'
   3815 ,&
   3816                & WARNING)
   3817        END IF
   3818     END IF
   3819 
   3820     IF ( mpp_pe() == mpp_root_pe() ) THEN
   3821        WRITE (stdlog_unit, diag_manager_nml)
   3822     END IF
   3823 
   3824 ! Issue note about using the CMOR missing value.
   3825     IF ( use_cmor ) THEN
   3826        err_msg_local = ''
   3827        WRITE (err_msg_local,'(ES8.1E2)') CMOR_MISSING_VALUE
   3828        CALL error_mesg('diag_manager_mod::diag_manager_init', 'Using CMOR missing value ('//TRIM(err_msg_local)//').', NOTE)
   3829     END IF
   3830 
   3831 ! Issue note if attempting to set diag_manager_nml::max_files larger than
   3832 ! mpp_get_maxunits() -- Default is 1024 set in mpp_io.F90
   3833     IF ( max_files .GT. mpp_get_maxunits() ) THEN
   3834        err_msg_local = ''
   3835        WRITE (err_msg_local,'(A,I6,A,I6,A,I6,A)') "DIAG_MANAGER_NML variable 'max_files' (",max_files,") is larger than '",&
   3836             & mpp_get_maxunits(),"'.  Forcing 'max_files' to be ",mpp_get_maxunits(),"."
   3837        CALL error_mesg('diag_manager_mod::diag_managet_init', TRIM(err_msg_local), NOTE)
   3838        max_files = mpp_get_maxunits()
   3839     END IF
   3840 
   3841 ! How to handle Out of Range Warnings.
   3842     IF ( oor_warnings_fatal ) THEN
   3843        oor_warning = FATAL
   3844        CALL error_mesg('diag_manager_mod::diag_manager_init', 'Out &
   3845             &of Range warnings are fatal.', NOTE)
   3846     ELSEIF ( .NOT.issue_oor_warnings ) THEN
   3847        CALL error_mesg('diag_manager_mod::diag_manager_init', 'Out &
   3848             &of Range warnings will be ignored.', NOTE)
   3849     END IF
   3850 

Page 115         Source Listing                  DIAG_MANAGER_INIT
2021-06-01 08:54                                 diag_manager.F90

   3851     IF ( mix_snapshot_average_fields ) THEN
   3852        IF ( mpp_pe() == mpp_root_pe() ) THEN
   3853           CALL error_mesg('diag_manager_mod::diag_manager_init', 'Setting diag_manager_nml variable '//&
   3854                & 'mix_snapshot_average_fields = .TRUE. will cause ERRORS in the time coordinates '//&
   3855                & 'of all time averaged fields.  Strongly recommend setting mix_snapshot_average_fields '//&
   3856                & '= .FALSE.', WARNING)
   3857        END IF
   3858     END IF
   3859     ALLOCATE(output_fields(max_output_fields))
   3860     ALLOCATE(input_fields(max_input_fields))
   3861     DO j = 1, max_input_fields
   3862       ALLOCATE(input_fields(j)%output_fields(MAX_OUT_PER_IN_FIELD))
   3863     END DO
   3864     ALLOCATE(files(max_files))
   3865     if (.not.use_mpp_io) then
   3866       ALLOCATE(fileobjU(max_files))
   3867       ALLOCATE(fileobj(max_files))
   3868       ALLOCATE(fileobjND(max_files))
   3869       ALLOCATE(fnum_for_domain(max_files))
   3870 !> Initialize fnum_for_domain with "dn" which stands for done
   3871       fnum_for_domain(:) = "dn"
   3872        CALL error_mesg('diag_manager_mod::diag_manager_init',&
   3873                & 'diag_manager is using fms2_io', NOTE)
   3874     else
   3875        CALL error_mesg('diag_manager_mod::diag_manager_init',&
   3876                & 'diag_manager is using mpp_io', NOTE)
   3877        CALL error_mesg('diag_manager_mod::diag_manager_init',&
   3878              &'MPP_IO is no longer supported.  Please remove from namelist',&
   3879               &WARNING)
   3880     endif
   3881     ALLOCATE(pelist(mpp_npes()))
   3882     CALL mpp_get_current_pelist(pelist, pelist_name)
   3883 
   3884 ! set the diag_init_time if time_init present.  Otherwise, set it to base_time
   3885     IF ( PRESENT(time_init) ) THEN
   3886        diag_init_time = set_date(time_init(1), time_init(2), time_init(3), time_init(4),&
   3887             & time_init(5), time_init(6))
   3888     ELSE
   3889        diag_init_time = base_time
   3890        IF ( prepend_date .EQV. .TRUE. ) THEN
   3891           CALL error_mesg('diag_manager_mod::diag_manager_init',&
   3892                & 'prepend_date only supported when diag_manager_init is called with time_init present.', NOTE)
   3893           prepend_date = .FALSE.
   3894        END IF
   3895     END IF
   3896 
   3897     CALL parse_diag_table(DIAG_SUBSET=diag_subset_output, ISTAT=mystat, ERR_MSG=err_msg_local)
   3898     IF ( mystat /= 0 ) THEN
   3899        IF ( fms_error_handler('diag_manager_mod::diag_manager_init',&
   3900             & 'Error parsing diag_table. '//TRIM(err_msg_local), err_msg) ) RETURN
   3901     END IF
   3902 
   3903 !initialize files%bytes_written to zero
   3904     files(:)%bytes_written = 0
   3905 
   3906 ! open diag field log file
   3907     IF ( do_diag_field_log.AND.mpp_pe().EQ.mpp_root_pe() ) THEN

Page 116         Source Listing                  DIAG_MANAGER_INIT
2021-06-01 08:54                                 diag_manager.F90

   3908        CALL mpp_open(diag_log_unit, 'diag_field_log.out', nohdrs=.TRUE.)
   3909        WRITE (diag_log_unit,'(777a)') &
   3910             & 'Module',        SEP, 'Field',          SEP, 'Long Name',    SEP,&
   3911             & 'Units',         SEP, 'Number of Axis', SEP, 'Time Axis',    SEP,&
   3912             & 'Missing Value', SEP, 'Min Value',      SEP, 'Max Value',    SEP,&
   3913             & 'AXES LIST'
   3914     END IF
   3915 
   3916     module_is_initialized = .TRUE.
   3917 ! create axis_id for scalars here
   3918     null_axis_id = diag_axis_init('scalar_axis', (/0./), 'none', 'N', 'none')
   3919     RETURN
   3920   END SUBROUTINE diag_manager_init


ENTRY POINTS

  Name                                              
                                                    
 diag_manager_mod_mp_diag_manager_init_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 APPEND_PELIST_NAME         Local  3761     L(4)            4           scalar   PRIV             344,3761                          
 BASE_TIME                  Local  3889     TIME_TYPE       16          scalar   PRIV             342,3889,3931                     
 CHECK_NML_ERROR            Func   3813     I(4)            4           scalar   PRIV             330,3813                          
 DBLKIND                    Param  3751     I(4)            4           scalar                    3779                              
 DIAG_ALL                   Param  3798     I(4)            4           scalar                    339,372,3798,3800                 
 DIAG_AXIS_INIT             Func   3918     I(4)            4           scalar                    332,371,3918,4014,4022            
 DIAG_DATA_INIT             Subr   3776                                          PRIV             349,3776                          
 DIAG_MANAGER_INIT          Subr   3743                                                                                             
 DIAG_MANAGER_NML           Local  3761                                 scalar                    3808,3821                         
 DIAG_MODEL_SUBSET          Dummy  3743     I(4)            4           scalar   ARG,IN           3799,3800,3801                    
 DIAG_OTHER                 Param  3800     I(4)            4           scalar                    339,372,3800                      
 DIAG_SUBSET_OUTPUT         Local  3752     I(4)            4           scalar                    3798,3801,3897                    
 DIAG_UTIL_INIT             Subr   3775                                          PRIV             338,3775                          
 ERR_MSG                    Dummy  3743     CHAR                        scalar   ARG,OUT          3771,3781,3803,3900               
 ERR_MSG_LOCAL              Local  3759     CHAR            256         scalar                    3826,3827,3828,3834,3835,3837,3897
                                                                                                  ,3900                             
 FLTKIND                    Param  3750     I(4)            4           scalar                    3785                              
 FLUSH_NC_FILES             Local  3764     L(4)            4           scalar   PRIV             348,3764                          
 HUGE                       Func   3785                                 scalar                    3785                              
 INPUT_NML_FILE             Local  3808     CHAR                  1     1        ALC,TGT,PRIV     325,3808                          
 J                          Local  3756     I(4)            4           scalar                    3861,3862                         
 MAX_AXES                   Local  3762     I(4)            4           scalar   PRIV             346,3762                          
 MAX_AXIS_ATTRIBUTES        Local  3765     I(4)            4           scalar   PRIV             349,3765                          
 MAX_FIELD_ATTRIBUTES       Local  3764     I(4)            4           scalar   PRIV             348,3764,4091                     
 MAX_FILE_ATTRIBUTES        Local  3765     I(4)            4           scalar   PRIV             349,3765                          
 MAX_INPUT_FIELDS           Local  3762     I(4)            4           scalar   PRIV             341,3762,3860,3861                
 MAX_NUM_AXIS_SETS          Local  3763     I(4)            4           scalar   PRIV             346,3763                          
 MAX_OUTPUT_FIELDS          Local  3761     I(4)            4           scalar   PRIV             341,3761,3859                     
 MAX_OUT_PER_IN_FIELD       Local  3764     I(4)            4           scalar   PRIV             348,3764,3862                     
 MPP_GET_CURRENT_PELIST     Subr   3882                                          PRIV             322,3882                          
 MPP_GET_MAXUNITS           Func   3833     I(4)            4           scalar   PRIV             321,3833,3836,3838                

Page 117         Source Listing                  DIAG_MANAGER_INIT
2021-06-01 08:54 Symbol Table                    diag_manager.F90

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 MPP_NPES                   Func   3881     I(4)            4           scalar   PRIV             322,3881                          
 MPP_OPEN                   Subr   3908                                          PRIV             321,3908                          
 MYSTAT                     Local  3753     I(4)            4           scalar                    3808,3813,3897,3898               
 PACK_SIZE                  Local  3779     I(4)            4           scalar   PRIV             347,3779,3780                     
 PARSE_DIAG_TABLE           Subr   3897                                          PRIV             352,3897                          
 PELIST                     Local  3754     I(4)            4     1     1        ALC              3881,3882                         
 PELIST_NAME                Local  3882     CHAR            32          scalar   PRIV             346,3882                          
 PRESENT                    Func   3771                                 scalar                    3771,3799,3885                    
 R4_KIND                    Param  3750     I(4)            4           scalar   PRIV             3750                              
 R8_KIND                    Param  3751     I(4)            4           scalar   PRIV             3751                              
 REGION_OUT_USE_ALT_VALUE   Local  3764     L(4)            4           scalar   PRIV             348,3764                          
 SEP                        Param  3748     CHAR            1           scalar                    3910,3911,3912                    
 SET_DATE                   Local  3886                                 scalar   PRIV             318,3886                          
 SET_DATE_I                 Func   3886     RECORD          16          scalar   PRIV             3886                              
 SET_TIME                   Local  3795                                 scalar   PRIV             318,3795                          
 SET_TIME_I                 Func   3795     RECORD          16          scalar   PRIV             3795                              
 SIZE                       Func   3779                                 scalar                    3779                              
 STDLOG                     Func   3789     I(4)            4           scalar   PRIV             329,3789                          
 STDLOG_UNIT                Local  3755     I(4)            4           scalar                    3789,3821                         
 STDOUT_UNIT                Local  3755     I(4)            4           scalar                    3790                              
 TIME_INIT                  Dummy  3743     I(4)            4     1     6        ARG,IN           3885,3886,3887                    
 TRANSFER                   Func   3779                                 scalar                    3779                              
 TRIM                       Func   3828                                 scalar                    3828,3837,3900                    
 VERSION                    Param  3793     CHAR            7           scalar                    3793                              
 WRITE_VERSION_NUMBER       Subr   3793                                          PRIV             329,3793                          

Page 118         Source Listing                  DIAG_MANAGER_INIT
2021-06-01 08:54                                 diag_manager.F90

   3921 
   3922 !> @brief Return base time for diagnostics.
   3923 !! @return time_type get_base_time
   3924 !! @details Return base time for diagnostics (note: base time must be >= model time).
   3925   TYPE(time_type) FUNCTION get_base_time ()
   3926 ! <ERROR STATUS="FATAL">
   3927 !   MODULE has not been initialized
   3928 ! </ERROR>
   3929     IF ( .NOT.module_is_initialized ) CALL error_mesg('diag_manager_mod::get_base_time', &
   3930          & 'module has not been initialized', FATAL)
   3931     get_base_time = base_time
   3932   END FUNCTION get_base_time


ENTRY POINTS

  Name                                          
                                                
 diag_manager_mod_mp_get_base_time_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 GET_BASE_TIME              Func   3925     TIME_TYPE       16          scalar                                                      

Page 119         Source Listing                  GET_BASE_TIME
2021-06-01 08:54                                 diag_manager.F90

   3933 
   3934 !> @brief Return base date for diagnostics.
   3935 !! @details Return date information for diagnostic reference time.
   3936   SUBROUTINE get_base_date(year, month, day, hour, minute, second)
   3937     INTEGER, INTENT(out) :: year, month, day, hour, minute, second
   3938 
   3939 ! <ERROR STATUS="FATAL">module has not been initialized</ERROR>
   3940     IF (.NOT.module_is_initialized) CALL error_mesg ('diag_manager_mod::get_base_date', &
   3941          & 'module has not been initialized', FATAL)
   3942     year   = base_year
   3943     month  = base_month
   3944     day    = base_day
   3945     hour   = base_hour
   3946     minute = base_minute
   3947     second = base_second
   3948   END SUBROUTINE get_base_date


ENTRY POINTS

  Name                                          
                                                
 diag_manager_mod_mp_get_base_date_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 BASE_DAY                   Local  3944     I(4)            4           scalar   PRIV             342,3944                          
 BASE_HOUR                  Local  3945     I(4)            4           scalar   PRIV             343,3945                          
 BASE_MINUTE                Local  3946     I(4)            4           scalar   PRIV             343,3946                          
 BASE_MONTH                 Local  3943     I(4)            4           scalar   PRIV             342,3943                          
 BASE_SECOND                Local  3947     I(4)            4           scalar   PRIV             343,3947                          
 BASE_YEAR                  Local  3942     I(4)            4           scalar   PRIV             342,3942                          
 DAY                        Dummy  3936     I(4)            4           scalar   ARG,OUT          3944                              
 GET_BASE_DATE              Subr   3936                                                                                             
 HOUR                       Dummy  3936     I(4)            4           scalar   ARG,OUT          3945                              
 MINUTE                     Dummy  3936     I(4)            4           scalar   ARG,OUT          3946                              
 MONTH                      Dummy  3936     I(4)            4           scalar   ARG,OUT          3943                              
 SECOND                     Dummy  3936     I(4)            4           scalar   ARG,OUT          3947                              
 YEAR                       Dummy  3936     I(4)            4           scalar   ARG,OUT          3942                              

Page 120         Source Listing                  GET_BASE_DATE
2021-06-01 08:54                                 diag_manager.F90

   3949 
   3950 !> @brief Determine whether data is needed for the current model time step.
   3951 !! @return Logical need_data
   3952 !! @details Determine whether data is needed for the current model time step.
   3953 !!     Since diagnostic data are buffered, the "next" model time is passed
   3954 !!     instead of the current model time. This call can be used to minimize
   3955 !!     overhead for complicated diagnostics.
   3956   LOGICAL FUNCTION need_data(diag_field_id, next_model_time)
   3957     TYPE(time_type), INTENT(in) :: next_model_time !< next_model_time = current model time + model time_step
   3958     INTEGER, INTENT(in) :: diag_field_id
   3959 
   3960     INTEGER :: i, out_num
   3961 
   3962     need_data = .FALSE.
   3963     IF ( diag_field_id < 0 ) RETURN ! this field is unused
   3964     DO i = 1, input_fields(diag_field_id)%num_output_fields
   3965 ! Get index to an output field
   3966        out_num = input_fields(diag_field_id)%output_fields(i)
   3967        IF ( .NOT.output_fields(out_num)%static ) THEN
   3968           IF ( next_model_time > output_fields(out_num)%next_output ) need_data=.TRUE.
   3969 ! Is this output field being time averaged?
   3970 ! assume average data based on every timestep
   3971 ! needs to be changed when different forms of averaging are implemented
   3972           IF ( output_fields(out_num)%time_average) need_data = .TRUE.
   3973        END IF
   3974     END DO
   3975     RETURN
   3976   END FUNCTION need_data

Page 121         Source Listing                  NEED_DATA
2021-06-01 08:54 Entry Points                    diag_manager.F90



ENTRY POINTS

  Name                                      
                                            
 diag_manager_mod_mp_need_data_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 DIAG_FIELD_ID              Dummy  3956     I(4)            4           scalar   ARG,IN           3963,3964,3966                    
 I                          Local  3960     I(4)            4           scalar                    3964,3966                         
 NEED_DATA                  Func   3956     L(4)            4           scalar                                                      
 NEXT_MODEL_TIME            Dummy  3956     TIME_TYPE       16          scalar   ARG,IN           3968                              
 OUT_NUM                    Local  3960     I(4)            4           scalar                    3966,3967,3968,3972               

Page 122         Source Listing                  NEED_DATA
2021-06-01 08:54                                 diag_manager.F90

   3977 
   3978 !> @brief Finds or initializes a diurnal time axis and returns its' ID.
   3979 !! @return Integer init_diurnal_axis
   3980 !! @details Given number of time intervals in the day, finds or initializes a diurnal time axis
   3981 !!     and returns its ID. It uses get_base_date, so should be in the file where it's accessible.
   3982 !!     The units are 'days since BASE_DATE', all diurnal axes belong to the set 'diurnal'
   3983   INTEGER FUNCTION init_diurnal_axis(n_samples)
   3984     INTEGER, INTENT(in) :: n_samples !< number of intervals during the day
   3985 
   3986     REAL :: DATA  (n_samples)   !< central points of time intervals
   3987     REAL :: edges (n_samples+1) !< boundaries of time intervals
   3988     INTEGER :: edges_id !< id of the corresponding edges
   3989     INTEGER :: i
   3990     INTEGER :: year !< components of the base date
   3991     INTEGER :: month !< components of the base date
   3992     INTEGER :: day !< components of the base date
   3993     INTEGER :: hour !< components of the base date
   3994     INTEGER :: minute !< components of the base date
   3995     INTEGER :: second !< components of the base date
   3996     CHARACTER(32)  :: name  !< name of the axis
   3997     CHARACTER(128) :: units !< units of time
   3998 
   3999     CALL get_base_date(year, month, day, hour, minute, second)
   4000     WRITE (units,11) 'hours', year, month, day, hour, minute, second
   4001 11  FORMAT(a,' since ',i4.4,'-',i2.2,'-',i2.2,' ',i2.2,':',i2.2,':',i2.2)
   4002 ! compute central points and units
   4003     edges(1) = 0.0
   4004     DO i = 1, n_samples
   4005        DATA (i) = 24.0*(REAL(i)-0.5)/n_samples
   4006        edges(i+1) = 24.0* REAL(i)/n_samples
   4007     END DO
   4008 
   4009 ! define edges
   4010     name = ''
   4011     WRITE (name,'(a,i2.2)') 'time_of_day_edges_', n_samples
   4012     edges_id = get_axis_num(name, 'diurnal')
   4013     IF ( edges_id <= 0 ) THEN
   4014        edges_id =  diag_axis_init(name,edges,units,'N','time of day edges', set_name='diurnal')
   4015     END IF
   4016 
   4017 ! define axis itself
   4018     name = ''
   4019     WRITE (name,'(a,i2.2)') 'time_of_day_', n_samples
   4020     init_diurnal_axis = get_axis_num(name, 'diurnal')
   4021     IF ( init_diurnal_axis <= 0 ) THEN
   4022        init_diurnal_axis = diag_axis_init(name, DATA, units, 'N', 'time of day', set_name='diurnal', edges=edges_id)
   4023     END IF
   4024   END FUNCTION init_diurnal_axis

Page 123         Source Listing                  INIT_DIURNAL_AXIS
2021-06-01 08:54 Entry Points                    diag_manager.F90



ENTRY POINTS

  Name                                              
                                                    
 diag_manager_mod_mp_init_diurnal_axis_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 11                         Label  4001                                                           4000                              
 DATA                       Local  3986     R(8)            8     1     0                         4005,4022                         
 DAY                        Local  3992     I(4)            4           scalar                    3999,4000                         
 EDGES                      Local  3987     R(8)            8     1     0                         4003,4006,4014                    
 EDGES_ID                   Local  3988     I(4)            4           scalar                    4012,4013,4014,4022               
 GET_AXIS_NUM               Func   4012     I(4)            4           scalar   PRIV             332,4012,4020                     
 GET_BASE_DATE              Subr   3999                                                           371,3999                          
 HOUR                       Local  3993     I(4)            4           scalar                    3999,4000                         
 I                          Local  3989     I(4)            4           scalar                    4004,4005,4006                    
 INIT_DIURNAL_AXIS          Func   3983     I(4)            4           scalar                    1187,4020,4021,4022               
 MINUTE                     Local  3994     I(4)            4           scalar                    3999,4000                         
 MONTH                      Local  3991     I(4)            4           scalar                    3999,4000                         
 NAME                       Local  3996     CHAR            32          scalar                    4010,4011,4012,4014,4018,4019,4020
                                                                                                  ,4022                             
 N_SAMPLES                  Dummy  3983     I(4)            4           scalar   ARG,IN           3986,3987,4004,4005,4006,4011,4019
 REAL                       Func   4005                                 scalar                    4005,4006                         
 SECOND                     Local  3995     I(4)            4           scalar                    3999,4000                         
 UNITS                      Local  3997     CHAR            128         scalar                    4000,4014,4022                    
 YEAR                       Local  3990     I(4)            4           scalar                    3999,4000                         

Page 124         Source Listing                  INIT_DIURNAL_AXIS
2021-06-01 08:54                                 diag_manager.F90

   4025 ! </FUNCTION>
   4026 
   4027   SUBROUTINE diag_field_attribute_init(diag_field_id, name, type, cval, ival, rval)
   4028     INTEGER, INTENT(in) :: diag_field_id !< input field ID, obtained from diag_manager_mod::register_diag_field.
   4029     CHARACTER(len=*), INTENT(in) :: name !< Name of the attribute
   4030     INTEGER, INTENT(in) :: type !< NetCDF type (NF90_FLOAT, NF90_INT, NF90_CHAR)
   4031     CHARACTER(len=*), INTENT(in), OPTIONAL :: cval !< Character string attribute value
   4032     INTEGER, DIMENSION(:), INTENT(in), OPTIONAL :: ival !< Integer attribute value(s)
   4033     REAL, DIMENSION(:), INTENT(in), OPTIONAL :: rval !< Real attribute value(s)
   4034 
   4035     INTEGER :: istat, length, i, j, this_attribute, out_field
   4036     CHARACTER(len=1024) :: err_msg
   4037 
   4038     IF ( .NOT.first_send_data_call ) THEN
   4039 ! Call error due to unable to add attribute after send_data called
   4040 ! <ERROR STATUS="FATAL">
   4041 !   Attempting to add attribute <name> to module/input_field <module_name>/<field_name>
   4042 !   after first send_data call.  Too late.
   4043 ! </ERROR>
   4044        CALL error_mesg('diag_manager_mod::diag_field_add_attribute', 'Attempting to add attribute "'&
   4045             &//TRIM(name)//'" to module/input_field "'//TRIM(input_fields(diag_field_id)%module_name)//'/'&
   4046             &//TRIM(input_fields(diag_field_id)%field_name)//'" after first send_data call.  Too late.', FATAL)
   4047     END IF
   4048 
   4049 ! Simply return if diag_field_id <= 0 --- not in diag_table
   4050     IF ( diag_field_id .LE. 0 ) THEN
   4051        RETURN
   4052     ELSE
   4053        DO j=1,input_fields(diag_field_id)%num_output_fields
   4054           out_field = input_fields(diag_field_id)%output_fields(j)
   4055 
   4056 ! Allocate memory for the attributes
   4057           CALL attribute_init(output_fields(out_field))
   4058 
   4059 ! Check if attribute already exists
   4060           this_attribute = 0
   4061           DO i=1, output_fields(out_field)%num_attributes
   4062              IF ( TRIM(output_fields(out_field)%attributes(i)%name) .EQ. TRIM(name) ) THEN
   4063                 this_attribute = i
   4064                 EXIT
   4065              END IF
   4066           END DO
   4067 
   4068           IF ( this_attribute.NE.0 .AND. (type.EQ.NF90_INT .OR. type.EQ.NF90_FLOAT) ) THEN
   4069 ! <ERROR STATUS="FATAL">
   4070 !   Attribute <name> already defined for module/input_field <module_name>/<field_name>.
   4071 !   Contact the developers
   4072 ! </ERROR>
   4073              CALL error_mesg('diag_manager_mod::diag_field_add_attribute',&
   4074                   & 'Attribute "'//TRIM(name)//'" already defined for module/input_field "'&
   4075                   &//TRIM(input_fields(diag_field_id)%module_name)//'/'&
   4076                   &//TRIM(input_fields(diag_field_id)%field_name)//'".  Contact the developers.', FATAL)
   4077           ELSE IF ( this_attribute.NE.0 .AND. type.EQ.NF90_CHAR .AND. debug_diag_manager ) THEN
   4078 ! <ERROR STATUS="NOTE">
   4079 !   Attribute <name> already defined for module/input_field <module_name>/<field_name>.
   4080 !   Prepending.
   4081 ! </ERROR>

Page 125         Source Listing                  DIAG_FIELD_ATTRIBUTE_INIT
2021-06-01 08:54                                 diag_manager.F90

   4082              CALL error_mesg('diag_manager_mod::diag_field_add_attribute',&
   4083                   & 'Attribute "'//TRIM(name)//'" already defined for module/input_field "'&
   4084                   &//TRIM(input_fields(diag_field_id)%module_name)//'/'&
   4085                   &//TRIM(input_fields(diag_field_id)%field_name)//'".  Prepending.', NOTE)
   4086           ELSE IF ( this_attribute.EQ.0 ) THEN
   4087 ! Defining a new attribute
   4088 ! Increase the number of field attributes
   4089              this_attribute = output_fields(out_field)%num_attributes + 1
   4090 ! Checking to see if num_attributes == max_field_attributes, and return error message
   4091              IF ( this_attribute .GT. max_field_attributes ) THEN
   4092 ! <ERROR STATUS="FATAL">
   4093 !   Number of attributes exceeds max_field_attributes for attribute <name> to module/input_field <module_name>/<field_name>.
   4094 !   Increase diag_manager_nml:max_field_attributes.
   4095 ! </ERROR>
   4096                 CALL error_mesg('diag_manager_mod::diag_field_add_attribute',&
   4097                      & 'Number of attributes exceeds max_field_attributes for attribute "'&
   4098                      &//TRIM(name)//'" to module/input_field "'//TRIM(input_fields(diag_field_id)%module_name)//'/'&
   4099                      &//TRIM(input_fields(diag_field_id)%field_name)//'".  Increase diag_manager_nml:max_field_attributes.',
   4099 &
   4100                      & FATAL)
   4101              ELSE
   4102                 output_fields(out_field)%num_attributes = this_attribute
   4103 ! Set name and type
   4104                 output_fields(out_field)%attributes(this_attribute)%name = name
   4105                 output_fields(out_field)%attributes(this_attribute)%type = type
   4106 ! Initialize catt to a blank string, as len_trim doesn't always work on an uninitialized string
   4107                 output_fields(out_field)%attributes(this_attribute)%catt = ''
   4108              END IF
   4109           END IF
   4110 
   4111           SELECT CASE (type)
   4112           CASE (NF90_INT)
   4113              IF ( .NOT.PRESENT(ival) ) THEN
   4114 ! <ERROR STATUS="FATAL">
   4115 !   Number type claims INTEGER, but ival not present for attribute <name> to module/input_field <module_name>/<field_name>.
   4116 !   Contact the developers.
   4117 ! </ERROR>
   4118                 CALL error_mesg('diag_manager_mod::diag_field_add_attribute',&
   4119                      & 'Attribute type claims INTEGER, but ival not present for attribute "'&
   4120                      &//TRIM(name)//'" to module/input_field "'//TRIM(input_fields(diag_field_id)%module_name)//'/'&
   4121                      &//TRIM(input_fields(diag_field_id)%field_name)//'". Contact then developers.', FATAL)
   4122              END IF
   4123              length = SIZE(ival)
   4124 ! Allocate iatt(:) to size of ival
   4125              ALLOCATE(output_fields(out_field)%attributes(this_attribute)%iatt(length), STAT=istat)
   4126              IF ( istat.NE.0 ) THEN
   4127 ! <ERROR STATUS="FATAL">
   4128 !   Unable to allocate iatt for attribute <name> to module/input_field <module_name>/<field_name>
   4129 ! </ERROR>
   4130                 CALL error_mesg('diag_manager_mod::diag_field_add_attribute', 'Unable to allocate iatt for attribute "'&
   4131                      &//TRIM(name)//'" to module/input_field "'//TRIM(input_fields(diag_field_id)%module_name)//'/'&
   4132                      &//TRIM(input_fields(diag_field_id)%field_name)//'"', FATAL)
   4133              END IF
   4134 ! Set remaining fields
   4135              output_fields(out_field)%attributes(this_attribute)%len = length
   4136              output_fields(out_field)%attributes(this_attribute)%iatt = ival
   4137           CASE (NF90_FLOAT)

Page 126         Source Listing                  DIAG_FIELD_ATTRIBUTE_INIT
2021-06-01 08:54                                 diag_manager.F90

   4138              IF ( .NOT.PRESENT(rval) ) THEN
   4139 ! <ERROR STATUS="FATAL">
   4140 !   Attribute type claims READ, but rval not present for attribute <name> to module/input_field <module_name>/<field_name>.
   4141 !   Contact the developers.
   4142 ! </ERROR>
   4143                 CALL error_mesg('diag_manager_mod::diag_field_add_attribute',&
   4144                      & 'Attribute type claims REAL, but rval not present for attribute "'&
   4145                      &//TRIM(name)//'" to module/input_field "'//TRIM(input_fields(diag_field_id)%module_name)//'/'&
   4146                      &//TRIM(input_fields(diag_field_id)%field_name)//'". Contact the developers.', FATAL)
   4147              END IF
   4148              length = SIZE(rval)
   4149 ! Allocate iatt(:) to size of rval
   4150              ALLOCATE(output_fields(out_field)%attributes(this_attribute)%fatt(length), STAT=istat)
   4151              IF ( istat.NE.0 ) THEN
   4152 ! <ERROR STATUS="FATAL">
   4153 !   Unable to allocate fatt for attribute <name> to module/input_field <module_name>/<field_name>
   4154 ! </ERROR>
   4155                 CALL error_mesg('diag_manager_mod::diag_field_add_attribute', 'Unable to allocate fatt for attribute "'&
   4156                      &//TRIM(name)//'" to module/input_field "'//TRIM(input_fields(diag_field_id)%module_name)//'/'&
   4157                      &//TRIM(input_fields(diag_field_id)%field_name)//'"', FATAL)
   4158              END IF
   4159 ! Set remaining fields
   4160              output_fields(out_field)%attributes(this_attribute)%len = length
   4161              output_fields(out_field)%attributes(this_attribute)%fatt = rval
   4162           CASE (NF90_CHAR)
   4163              IF ( .NOT.PRESENT(cval) ) THEN
   4164 ! <ERROR STATUS="FATAL">
   4165 !   Attribute type claims CHARACTER, but cval not present for attribute <name> to module/input_field <module_name>/<field_na
   4165 me>.
   4166 !   Contact the developers.
   4167 ! </ERROR>
   4168                 CALL error_mesg('diag_manager_mod::diag_field_add_attribute',&
   4169                      & 'Attribute type claims CHARACTER, but cval not present for attribute "'&
   4170                      &//TRIM(name)//'" to module/input_field "'//TRIM(input_fields(diag_field_id)%module_name)//'/'&
   4171                      &//TRIM(input_fields(diag_field_id)%field_name)//'". Contact the developers.', FATAL)
   4172              END IF
   4173              CALL prepend_attribute(output_fields(out_field), TRIM(name), TRIM(cval))
   4174           CASE default
   4175 ! <ERROR STATUS="FATAL">
   4176 !   Unknown attribute type for attribute <name> to module/input_field <module_name>/<field_name>.
   4177 !   Contact the developers.
   4178 ! </ERROR>
   4179              CALL error_mesg('diag_manager_mod::diag_field_add_attribute', 'Unknown attribute type for attribute "'&
   4180                   &//TRIM(name)//'" to module/input_field "'//TRIM(input_fields(diag_field_id)%module_name)//'/'&
   4181                   &//TRIM(input_fields(diag_field_id)%field_name)//'". Contact the developers.', FATAL)
   4182           END SELECT
   4183        END DO
   4184     END IF
   4185   END SUBROUTINE diag_field_attribute_init

Page 127         Source Listing                  DIAG_FIELD_ATTRIBUTE_INIT
2021-06-01 08:54 Entry Points                    diag_manager.F90



ENTRY POINTS

  Name                                                      
                                                            
 diag_manager_mod_mp_diag_field_attribute_init_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ATTRIBUTE_INIT             Local  4057                                 scalar   PRIV             338,4057                          
 ATTRIBUTE_INIT_FIELD       Subr   4057                                          PRIV             4057                              
 CVAL                       Dummy  4027     CHAR                        scalar   ARG,IN           4163,4173                         
 DIAG_FIELD_ATTRIBUTE_INIT  Subr   4027                                                           4222,4238,4251                    
 DIAG_FIELD_ID              Dummy  4027     I(4)            4           scalar   ARG,IN           4045,4046,4050,4053,4054,4075,4076
                                                                                                  ,4084,4085,4098,4099,4120,4121,413
                                                                                                  1,4132,4145,4146,4156,4157,4170,41
                                                                                                  71,4180,4181                      
 ERR_MSG                    Local  4036     CHAR            1024        scalar                                                      
 I                          Local  4035     I(4)            4           scalar                    4061,4062,4063                    
 ISTAT                      Local  4035     I(4)            4           scalar                    4125,4126,4150,4151               
 IVAL                       Dummy  4027     I(4)            4     1     1        ARG,IN           4113,4123,4136                    
 J                          Local  4035     I(4)            4           scalar                    4053,4054                         
 LENGTH                     Local  4035     I(4)            4           scalar                    4123,4125,4135,4148,4150,4160     
 NAME                       Dummy  4027     CHAR                        scalar   ARG,IN           4045,4062,4074,4083,4098,4104,4120
                                                                                                  ,4131,4145,4156,4170,4173,4180    
 NF90_CHAR                  Param  4077     I(4)            4           scalar   PRIV             358,4077,4162,4222                
 NF90_FLOAT                 Param  4068     I(4)            4           scalar   PRIV             358,4068,4137,4238                
 NF90_INT                   Param  4068     I(4)            4           scalar   PRIV             358,4068,4112,4251                
 OUT_FIELD                  Local  4035     I(4)            4           scalar                    4054,4057,4061,4062,4089,4102,4104
                                                                                                  ,4105,4107,4125,4135,4136,4150,416
                                                                                                  0,4161,4173                       
 PRESENT                    Func   4113                                 scalar                    4113,4138,4163                    
 RVAL                       Dummy  4027     R(8)            8     1     1        ARG,IN           4138,4148,4161                    
 SIZE                       Func   4123                                 scalar                    4123,4148                         
 THIS_ATTRIBUTE             Local  4035     I(4)            4           scalar                    4060,4063,4068,4077,4086,4089,4091
                                                                                                  ,4102,4104,4105,4107,4125,4135,413
                                                                                                  6,4150,4160,4161                  
 TRIM                       Func   4045                                 scalar                    4045,4046,4062,4074,4075,4076,4083
                                                                                                  ,4084,4085,4098,4099,4120,4121,413
                                                                                                  1,4132,4145,4146,4156,4157,4170,41
                                                                                                  71,4173,4180,4181                 
 TYPE                       Dummy  4027     I(4)            4           scalar   ARG,IN           4068,4077,4105,4111               



Page 128         Source Listing                  DIAG_FIELD_ATTRIBUTE_INIT
2021-06-01 08:54 Symbol Table                    diag_manager.F90

TYPE COMPONENTS/COMMON VARIABLES

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 DIAG_ATTTYPE.CATT          CHAR            1280  136            scalar                    4107                               
 DIAG_ATTTYPE.FATT          R(8)            8     1416     1     1        ALC              4150,4161                          
 DIAG_ATTTYPE.IATT          I(4)            4     1488     1     1        ALC              4125,4136                          
 DIAG_ATTTYPE.LEN           I(4)            4     4              scalar                    4135,4160                          
 DIAG_ATTTYPE.NAME          CHAR            128   8              scalar                    4062,4104                          
 DIAG_ATTTYPE.TYPE          I(4)            4     0              scalar                    4105                               
 OUTPUT_FIELD_TYPE.ATTRIBUTES                                                                                              ...
                            RECORD          1560  3312     1     1        ALC              4062,4104,4105,4107,4125,4135,4136 
                                                                                           ,4150,4160,4161                    
 OUTPUT_FIELD_TYPE.NUM_ATTRIBUTES                                                                                          ...
                            I(4)            4     3384           scalar                    4061,4089,4102                     

Page 129         Source Listing                  DIAG_FIELD_ATTRIBUTE_INIT
2021-06-01 08:54                                 diag_manager.F90

   4186 
   4187 ! <SUBROUTINE NAME="diag_field_add_attribute_scalar_r" INTERFACE="diag_field_add_attribute">
   4188 !   <IN NAME="diag_field_id" TYPE="INTEGER" />
   4189 !   <IN NAME="att_name" TYPE="CHARACTER(len=*)" />
   4190 !   <IN NAME="att_value" TYPE="REAL" />
   4191   SUBROUTINE diag_field_add_attribute_scalar_r(diag_field_id, att_name, att_value)
   4192     INTEGER, INTENT(in) :: diag_field_id
   4193     CHARACTER(len=*), INTENT(in) :: att_name
   4194     REAL, INTENT(in) :: att_value
   4195 
   4196     CALL diag_field_add_attribute_r1d(diag_field_id, att_name, (/ att_value /))
   4197   END SUBROUTINE diag_field_add_attribute_scalar_r


ENTRY POINTS

  Name                                                              
                                                                    
 diag_manager_mod_mp_diag_field_add_attribute_scalar_r_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ATT_NAME                   Dummy  4191     CHAR                        scalar   ARG,IN           4196                              
 ATT_VALUE                  Dummy  4191     R(8)            8           scalar   ARG,IN           4196                              
 DIAG_FIELD_ADD_ATTRIBUTE_S                                                                                                         
 CALAR_R                    Subr   4191                                          PRIV                                               
 DIAG_FIELD_ID              Dummy  4191     I(4)            4           scalar   ARG,IN           4196                              

Page 130         Source Listing                  DIAG_FIELD_ADD_ATTRIBUTE_SCALAR_R
2021-06-01 08:54                                 diag_manager.F90

   4198 ! </SUBROUTINE>
   4199 
   4200 ! <SUBROUTINE NAME="diag_field_add_attribute_scalar_i" INTERFACE="diag_field_add_attribute">
   4201 !   <IN NAME="diag_field_id" TYPE="INTEGER" />
   4202 !   <IN NAME="att_name" TYPE="CHARACTER(len=*)" />
   4203 !   <IN NAME="att_value" TYPE="INTEGER" />
   4204   SUBROUTINE diag_field_add_attribute_scalar_i(diag_field_id, att_name, att_value)
   4205     INTEGER, INTENT(in) :: diag_field_id
   4206     CHARACTER(len=*), INTENT(in) :: att_name
   4207     INTEGER, INTENT(in) :: att_value
   4208 
   4209     CALL diag_field_add_attribute_i1d(diag_field_id, att_name, (/ att_value /))
   4210   END SUBROUTINE diag_field_add_attribute_scalar_i


ENTRY POINTS

  Name                                                              
                                                                    
 diag_manager_mod_mp_diag_field_add_attribute_scalar_i_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ATT_NAME                   Dummy  4204     CHAR                        scalar   ARG,IN           4209                              
 ATT_VALUE                  Dummy  4204     I(4)            4           scalar   ARG,IN           4209                              
 DIAG_FIELD_ADD_ATTRIBUTE_S                                                                                                         
 CALAR_I                    Subr   4204                                          PRIV                                               
 DIAG_FIELD_ID              Dummy  4204     I(4)            4           scalar   ARG,IN           4209                              

Page 131         Source Listing                  DIAG_FIELD_ADD_ATTRIBUTE_SCALAR_I
2021-06-01 08:54                                 diag_manager.F90

   4211 ! </SUBROUTINE>
   4212 
   4213 ! <SUBROUTINE NAME="diag_field_add_attribute_scalar_c" INTERFACE="diag_field_add_attribute">
   4214 !   <IN NAME="diag_field_id" TYPE="INTEGER" />
   4215 !   <IN NAME="att_name" TYPE="CHARACTER(len=*)" />
   4216 !   <IN NAME="att_value" TYPE="CHARACTER(len=*)" />
   4217   SUBROUTINE diag_field_add_attribute_scalar_c(diag_field_id, att_name, att_value)
   4218     INTEGER, INTENT(in) :: diag_field_id
   4219     CHARACTER(len=*), INTENT(in) :: att_name
   4220     CHARACTER(len=*), INTENT(in) :: att_value
   4221 
   4222     CALL diag_field_attribute_init(diag_field_id, att_name, NF90_CHAR, cval=att_value)
   4223   END SUBROUTINE diag_field_add_attribute_scalar_c


ENTRY POINTS

  Name                                                              
                                                                    
 diag_manager_mod_mp_diag_field_add_attribute_scalar_c_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ATT_NAME                   Dummy  4217     CHAR                        scalar   ARG,IN           4222                              
 ATT_VALUE                  Dummy  4217     CHAR                        scalar   ARG,IN           4222                              
 DIAG_FIELD_ADD_ATTRIBUTE_S                                                                                                         
 CALAR_C                    Subr   4217                                          PRIV                                               
 DIAG_FIELD_ID              Dummy  4217     I(4)            4           scalar   ARG,IN           4222                              

Page 132         Source Listing                  DIAG_FIELD_ADD_ATTRIBUTE_SCALAR_C
2021-06-01 08:54                                 diag_manager.F90

   4224 ! </SUBROUTINE>
   4225 
   4226 ! <SUBROUTINE NAME="diag_field_add_attribute_r1d" INTERFACE="diag_field_add_attribute">
   4227 !   <IN NAME="diag_field_id" TYPE="INTEGER" />
   4228 !   <IN NAME="att_name" TYPE="CHARACTER(len=*)" />
   4229 !   <IN NAME="att_value" TYPE="REAL, DIMENSION(:)" />
   4230   SUBROUTINE diag_field_add_attribute_r1d(diag_field_id, att_name, att_value)
   4231     INTEGER, INTENT(in) :: diag_field_id
   4232     CHARACTER(len=*), INTENT(in) :: att_name
   4233     REAL, DIMENSION(:), INTENT(in) :: att_value
   4234 
   4235     INTEGER :: num_attributes, len
   4236     CHARACTER(len=512) :: err_msg
   4237 
   4238     CALL diag_field_attribute_init(diag_field_id, att_name, NF90_FLOAT, rval=att_value)
   4239   END SUBROUTINE diag_field_add_attribute_r1d


ENTRY POINTS

  Name                                                         
                                                               
 diag_manager_mod_mp_diag_field_add_attribute_r1d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ATT_NAME                   Dummy  4230     CHAR                        scalar   ARG,IN           4238                              
 ATT_VALUE                  Dummy  4230     R(8)            8     1     1        ARG,IN           4238                              
 DIAG_FIELD_ADD_ATTRIBUTE_R                                                                                                         
 1D                         Subr   4230                                          PRIV             4196                              
 DIAG_FIELD_ID              Dummy  4230     I(4)            4           scalar   ARG,IN           4238                              
 ERR_MSG                    Local  4236     CHAR            512         scalar                                                      
 LEN                        Local  4235     I(4)            4           scalar                                                      
 NUM_ATTRIBUTES             Local  4235     I(4)            4           scalar                                                      

Page 133         Source Listing                  DIAG_FIELD_ADD_ATTRIBUTE_R1D
2021-06-01 08:54                                 diag_manager.F90

   4240 ! </SUBROUTINE>
   4241 
   4242 ! <SUBROUTINE NAME="diag_field_add_attribute_i1d" INTERFACE="diag_field_add_attribute">
   4243 !   <IN NAME="diag_field_id" TYPE="INTEGER" />
   4244 !   <IN NAME="att_name" TYPE="CHARACTER(len=*)" />
   4245 !   <IN NAME="att_value" TYPE="INTEGER, DIMENSION(:)" />
   4246   SUBROUTINE diag_field_add_attribute_i1d(diag_field_id, att_name, att_value)
   4247     INTEGER, INTENT(in) :: diag_field_id
   4248     CHARACTER(len=*), INTENT(in) :: att_name
   4249     INTEGER, DIMENSION(:), INTENT(in) :: att_value
   4250 
   4251     CALL diag_field_attribute_init(diag_field_id, att_name, NF90_INT, ival=att_value)
   4252   END SUBROUTINE diag_field_add_attribute_i1d


ENTRY POINTS

  Name                                                         
                                                               
 diag_manager_mod_mp_diag_field_add_attribute_i1d_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ATT_NAME                   Dummy  4246     CHAR                        scalar   ARG,IN           4251                              
 ATT_VALUE                  Dummy  4246     I(4)            4     1     1        ARG,IN           4251                              
 DIAG_FIELD_ADD_ATTRIBUTE_I                                                                                                         
 1D                         Subr   4246                                          PRIV             4209                              
 DIAG_FIELD_ID              Dummy  4246     I(4)            4           scalar   ARG,IN           4251                              

Page 134         Source Listing                  DIAG_FIELD_ADD_ATTRIBUTE_I1D
2021-06-01 08:54                                 diag_manager.F90

   4253 
   4254 !> @brief Add the cell_measures attribute to a diag out field
   4255 !! @details Add the cell_measures attribute to a give diag field.  This is useful if the
   4256 !!     area/volume fields for the diagnostic field are defined in another module after
   4257 !!     the diag_field.
   4258   SUBROUTINE diag_field_add_cell_measures(diag_field_id, area, volume)
   4259     INTEGER, INTENT(in) :: diag_field_id
   4260     INTEGER, INTENT(in), OPTIONAL :: area !< diag ids of area
   4261     INTEGER, INTENT(in), OPTIONAL :: volume !< diag ids of volume
   4262 
   4263     integer :: j, ind
   4264 
   4265     IF ( diag_field_id.GT.0 ) THEN
   4266        IF ( .NOT.PRESENT(area) .AND. .NOT.present(volume) ) THEN
   4267           CALL ERROR_MESG('diag_manager_mod::diag_field_add_cell_measures', &
   4268                & 'either area or volume arguments must be present', FATAL )
   4269        END IF
   4270 
   4271        DO j=1, input_fields(diag_field_id)%num_output_fields
   4272           ind = input_fields(diag_field_id)%output_fields(j)
   4273           CALL init_field_cell_measures(output_fields(ind), area=area, volume=volume)
   4274        END DO
   4275     END IF
   4276   END SUBROUTINE diag_field_add_cell_measures


ENTRY POINTS

  Name                                                         
                                                               
 diag_manager_mod_mp_diag_field_add_cell_measures_             

Page 135         Source Listing                  DIAG_FIELD_ADD_CELL_MEASURES
2021-06-01 08:54 Symbol Table                    diag_manager.F90



SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 AREA                       Dummy  4258     I(4)            4           scalar   ARG,IN           4266,4273                         
 DIAG_FIELD_ADD_CELL_MEASUR                                                                                                         
 ES                         Subr   4258                                                                                             
 DIAG_FIELD_ID              Dummy  4258     I(4)            4           scalar   ARG,IN           4265,4271,4272                    
 IND                        Local  4263     I(4)            4           scalar                    4272,4273                         
 J                          Local  4263     I(4)            4           scalar                    4271,4272                         
 PRESENT                    Func   4266                                 scalar                    4266                              
 VOLUME                     Dummy  4258     I(4)            4           scalar   ARG,IN           4266,4273                         

Page 136         Source Listing                  DIAG_FIELD_ADD_CELL_MEASURES
2021-06-01 08:54                                 diag_manager.F90

   4277 ! </SUBROUTINE>
   4278 END MODULE diag_manager_mod


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 CENTER                     Param  333      I(4)            4           scalar                    333,376                           
 CONSTANTS_MOD              Module 355                                                            355                               
 COORD_TYPE                 Type   343                                  scalar   PRIV             343                               
 DIAG_AXIS_ADD_ATTRIBUTE    Local  333                                  scalar                    333,375                           
 DIAG_AXIS_MOD              Module 332                                                            332,363,364                       
 DIAG_DATA_MOD              Module 339                                                            339,351                           
 DIAG_DAYS                  Param  340      I(4)            4           scalar                    340,373                           
 DIAG_FIELD_ADD_ATTRIBUTE   Local  524                                  scalar                    374                               
 DIAG_FIELD_ADD_CELL_MEASUR                                                                                                         
 ES                         Subr   374                                                            374                               
 DIAG_FIELD_NOT_FOUND       Param  349      I(4)            4           scalar                    349,382                           
 DIAG_GRID_END              Subr   354                                                            354,378                           
 DIAG_GRID_INIT             Subr   354                                                            354,378                           
 DIAG_GRID_MOD              Module 354                                                            354                               
 DIAG_HOURS                 Param  340      I(4)            4           scalar                    340,373                           
 DIAG_MANAGER_END           Subr   370                                                            370                               
 DIAG_MANAGER_INIT          Subr   370                                                            370                               
 DIAG_MANAGER_MOD           Module 135                                                                                              
 DIAG_MANAGER_SET_TIME_END  Subr   379                                                            379                               
 DIAG_MINUTES               Param  340      I(4)            4           scalar                    340,373                           
 DIAG_MONTHS                Param  340      I(4)            4           scalar                    340,373                           
 DIAG_OCEAN                 Param  339      I(4)            4           scalar                    339,372                           
 DIAG_OUTPUT_MOD            Module 353                                                            353                               
 DIAG_SECONDS               Param  340      I(4)            4           scalar                    340,372                           
 DIAG_SEND_COMPLETE         Subr   379                                                            379                               
 DIAG_SEND_COMPLETE_INSTANT Subr   380                                                            380                               
 DIAG_TABLE_MOD             Module 352                                                            352                               
 DIAG_UTIL_MOD              Module 334                                                            334                               
 DIAG_YEARS                 Param  340      I(4)            4           scalar                    340,373                           
 EAST                       Param  333      I(4)            4           scalar                    333,376                           
 FILE_EXIST                 Func   330      L(4)            4           scalar   PRIV             330                               
 FMS_IO_MOD                 Module 331                                                            331                               
 FMS_MOD                    Module 329                                                            329                               
 GET_BASE_TIME@0            Local  3925     TIME_TYPE       16          scalar                                                      
 GET_DATE_DIF               Func   337      R(8)            8           scalar                    337,372                           
 GET_DIAG_FIELD_ID@0        Local  1247     I(4)            4           scalar                                                      
 GET_DIAG_GLOBAL_ATT        Subr   353                                                            353,373                           
 GET_DOMAIN2D               Func   332      RECORD          752         scalar   PRIV             332                               
 GET_INSTANCE_FILENAME      Subr   331                                           PRIV             331                               
 GET_MOSAIC_TILE_FILE       Local  330                                  scalar   PRIV             330                               
 GET_RELATED_FIELD@0        Local  1258     L(4)            4           scalar                                                      
 GET_TILE_COUNT             Func   332      I(4)            4           scalar   PRIV             332                               
 GLOBAL_DESCRIPTOR          Local  343      CHAR            256         scalar   PRIV             343                               
 MPP_IO_MOD                 Module 321                                                            321                               
 MPP_MOD                    Module 322                                                            322,325                           
 NEED_DATA@0                Local  3956     L(4)            4           scalar                                                      
 NETCDF                     Module 358                                                            358                               
 NORTH                      Param  333      I(4)            4           scalar                    333,376                           
 NUM_OUTPUT_FIELDS          Local  341      I(4)            4           scalar   PRIV             341                               

Page 137         Source Listing                  DIAG_FIELD_ADD_CELL_MEASURES
2021-06-01 08:54 Symbol Table                    diag_manager.F90

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 Operator (>=)                     318                                                                                              
 PLATFORM_MOD               Module 136                                                            136                               
 REGISTER_DIAG_FIELD        Local  511                                  scalar                    371                               
 REGISTER_DIAG_FIELD_SCALAR                                                                                                         
 @0                         Local  552      I(4)            4           scalar                                                      
 SEND_DATA_0D@0             Local  1457     L(4)            4           scalar                                                      
 SEND_DATA_1D@0             Local  1491     L(4)            4           scalar                                                      
 SEND_DATA_2D@0             Local  1555     L(4)            4           scalar                                                      
 SEND_TILE_AVERAGED_DATA    Local  517                                  scalar                    370                               
 SEND_TILE_AVERAGED_DATA1D@                                                                                                         
 0                          Local  3143     L(4)            4           scalar                                                      
 SEND_TILE_AVERAGED_DATA2D@                                                                                                         
 0                          Local  3229     L(4)            4           scalar                                                      
 SEND_TILE_AVERAGED_DATA3D@                                                                                                         
 0                          Local  3256     L(4)            4           scalar                                                      
 SET_DIAG_GLOBAL_ATT        Subr   353                                                            353,374                           
 TIME_MANAGER_MOD           Module 318                                                            318                               
 TIME_UNIT_LIST             Local  346      CHAR            10    1     6        PRIV             346                               

Page 138         Source Listing                  DIAG_FIELD_ADD_CELL_MEASURES
2021-06-01 08:54 Subprograms/Common Blocks       diag_manager.F90



SUBPROGRAMS/COMMON BLOCKS

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 ADD_ASSOCIATED_FILES       Subr   1395                                                           1357,1376                         
 AVERAGE_TILES              Subr   3299                                                           3244,3274                         
 AVERAGE_TILES1D            Subr   3175                                                           3158                              
 CLOSING_FILE               Subr   3652                                                           3641                              
 DIAG_FIELD_ADD_ATTRIBUTE_I                                                                                                         
 1D                         Subr   4246                                          PRIV             4209                              
 DIAG_FIELD_ADD_ATTRIBUTE_R                                                                                                         
 1D                         Subr   4230                                          PRIV             4196                              
 DIAG_FIELD_ADD_ATTRIBUTE_S                                                                                                         
 CALAR_C                    Subr   4217                                          PRIV                                               
 DIAG_FIELD_ADD_ATTRIBUTE_S                                                                                                         
 CALAR_I                    Subr   4204                                          PRIV                                               
 DIAG_FIELD_ADD_ATTRIBUTE_S                                                                                                         
 CALAR_R                    Subr   4191                                          PRIV                                               
 DIAG_FIELD_ADD_CELL_MEASUR                                                                                                         
 ES                         Subr   4258                                                                                             
 DIAG_FIELD_ATTRIBUTE_INIT  Subr   4027                                                           4222,4238,4251                    
 DIAG_MANAGER_END           Subr   3632                                                                                             
 DIAG_MANAGER_INIT          Subr   3743                                                                                             
 DIAG_MANAGER_MOD           Module 135                                                                                              
 DIAG_MANAGER_SET_TIME_END  Subr   3529                                                                                             
 DIAG_SEND_COMPLETE         Subr   3568                                                                                             
 DIAG_SEND_COMPLETE_INSTANT Subr   3545                                                                                             
 GET_BASE_DATE              Subr   3936                                                                                             
 GET_BASE_TIME              Func   3925     TIME_TYPE       16          scalar                                                      
 GET_DIAG_FIELD_ID          Func   1247     I(4)            4           scalar                                                      
 GET_RELATED_FIELD          Func   1258     L(4)            4           scalar                    1273,1285,1293,1308,1352,1371     
 INIT_DIURNAL_AXIS          Func   3983     I(4)            4           scalar                    1187,4020,4021,4022               
 INIT_FIELD_CELL_MEASURES   Subr   1318                                                           777,1206,4273                     
 NEED_DATA                  Func   3956     L(4)            4           scalar                                                      
 REGISTER_DIAG_FIELD_ARRAY  Func   602      I(4)            4           scalar   PRIV             568,648,663,674,675,685,703,719   
 REGISTER_DIAG_FIELD_SCALAR Func   552      I(4)            4           scalar   PRIV             568,573                           
 REGISTER_STATIC_FIELD      Func   790      I(4)            4           scalar                                                      
 SEND_DATA_0D               Func   1457     L(4)            4           scalar   PRIV             1467,1472                         
 SEND_DATA_1D               Func   1491     L(4)            4           scalar   PRIV             1506,1523,1526,1531,1534,3159     
 SEND_DATA_2D               Func   1555     L(4)            4           scalar   PRIV             1571,1587,1590,3245               
 SEND_DATA_3D               Func   1614     L(4)            4           scalar   PRIV             1472,1523,1526,1531,1534,1587,1590
                                                                                                  ,1658,1661,3282                   
 SEND_TILE_AVERAGED_DATA1D  Func   3143     L(4)            4           scalar   PRIV             3154,3159                         
 SEND_TILE_AVERAGED_DATA2D  Func   3229     L(4)            4           scalar   PRIV             3240,3245                         
 SEND_TILE_AVERAGED_DATA3D  Func   3256     L(4)            4           scalar   PRIV             3269,3282                         
 WRITING_FIELD              Func   3347     I(4)            4           scalar                    1969,3362,3443,3617,3698,3700     

COMPILER OPTIONS BEING USED

       -align noall                          -align nonone
       -align nocommons                      -align nodcommons
       -align noqcommons                     -align nozcommons
       -align records                        -align nosequence
       -align norec1byte                     -align norec2byte
       -align norec4byte                     -align norec8byte

Page 139         Source Listing                  DIAG_FIELD_ADD_CELL_MEASURES
2021-06-01 08:54                                 diag_manager.F90

       -align norec16byte                    -align norec32byte
       -align norec64byte                    -align noarray8byte
       -align noarray16byte                  -align noarray32byte
       -align noarray64byte                  -align noarray128byte
       -align noarray256byte                 -altparam
       -assume accuracy_sensitive            -assume nobscc
       -assume nobuffered_io                 -assume nobuffered_stdout
       -assume byterecl                      -assume nocontiguous_assumed_shape
       -assume nocontiguous_pointer          -assume cc_omp
       -assume nocstring                     -assume nodummy_aliases
       -assume nofpe_summary                 -assume noieee_fpe_flags
       -assume nominus0                      -assume noold_boz
       -assume old_complex_align             -assume old_unit_star
       -assume old_inquire_recl              -assume old_ldout_format
       -assume old_ldout_zero                -assume noold_logical_assign
       -assume noold_logical_ldio            -assume old_maxminloc
       -assume old_xor                       -assume noprotect_allocates
       -assume protect_constants             -assume noprotect_parens
       -assume split_common                  -assume source_include
       -assume nostd_intent_in               -assume std_minus0_rounding
       -assume nostd_mod_proc_name           -assume std_value
       -assume realloc_lhs                   -assume underscore
       -assume no2underscores                -assume norecursion
       -auto                            no   -auto_scalar
  no   -bintext                              -ccdefault default
       -check noarg_temp_created             -check noassume
       -check nobounds                       -check nocontiguous
       -check noformat                       -check nooutput_conversion
       -check nooverflow                     -check nopointers
       -check noshape                        -check nostack
       -check nouninitialized                -check noudio_iostat
       -coarray-num-procs 0             no   -coarray-config-file
       -convert native                       -cross_reference
       -D __INTEL_COMPILER=1910              -D __INTEL_COMPILER_UPDATE=0
       -D __unix__                           -D __unix
       -D __linux__                          -D __linux
       -D __gnu_linux__                      -D unix
       -D linux                              -D __ELF__
       -D __x86_64                           -D __x86_64__
       -D __amd64                            -D __amd64__
       -D __INTEL_COMPILER_BUILD_DATE=20191121       -D _OPENMP=201611
       -D __INTEL_OFFLOAD                    -D __MMX__
       -D __SSE__                            -D __SSE_MATH__
       -D __SSE2__                           -D __SSE2_MATH__
       -D __pentium4                         -D __pentium4__
       -D __tune_pentium4__                  -D PACKAGE_NAME='"GFDL FMS Library"'
       -D PACKAGE_TARNAME='"FMS"'            -D PACKAGE_VERSION='"2021.02.0"'
       -D PACKAGE_STRING='"GFDL FMS Library 2021.02.0"'       -D PACKAGE_BUGREPORT='"gfdl.climate.model.info@noaa.gov"'
       -D PACKAGE_URL='"https://www.gfdl.noaa.gov/fms"'       -D PACKAGE='"FMS"'
       -D VERSION='"2021.02.0"'              -D STDC_HEADERS=1
       -D HAVE_SYS_TYPES_H=1                 -D HAVE_SYS_STAT_H=1
       -D HAVE_STDLIB_H=1                    -D HAVE_STRING_H=1
       -D HAVE_MEMORY_H=1                    -D HAVE_STRINGS_H=1
       -D HAVE_INTTYPES_H=1                  -D HAVE_STDINT_H=1
       -D HAVE_UNISTD_H=1                    -D HAVE_DLFCN_H=1
       -D LT_OBJDIR='".libs/"'               -D HAVE_MPI_H=1
       -D HAVE_NETCDF_H=1                    -D HAVE_SCHED_GETAFFINITY=1

Page 140         Source Listing                  DIAG_FIELD_ADD_CELL_MEASURES
2021-06-01 08:54                                 diag_manager.F90

       -D HAVE_MOD_MPI=1                     -D HAVE_MOD_NETCDF=1
       -D HAVE_CRAY_POINTER=1                -D HAVE_QUAD_PRECISION=1
       -D HAVE_INTERNAL_NML=1                -D use_netCDF=1
       -D use_libMPI=1                       -D INTERNAL_FILE_NML
       -double_size 64                  no   -d_lines
  no   -Qdyncom                              -error_limit 30
  no   -f66                             no   -f77rtl
  no   -fast                                 -fpscomp nofilesfromcmd
       -fpscomp nogeneral                    -fpscomp noioformat
       -fpscomp noldio_spacing               -fpscomp nologicals
  no   -fpconstant                           -fpe3
       -fprm nearest                         -ftz
       -fp_model noprecise                   -fp_model fast
       -fp_model nostrict                    -fp_model nosource
       -fp_model nodouble                    -fp_model noextended
       -fp_model novery_fast                 -fp_model noexcept
       -fp_model nono_except                 -fp_modbits nofp_contract
       -fp_modbits nono_fp_contract          -fp_modbits nofenv_access
       -fp_modbits nono_fenv_access          -fp_modbits nocx_limited_range
       -fp_modbits nono_cx_limited_range       -fp_modbits noprec_div
       -fp_modbits nono_prec_div             -fp_modbits noprec_sqrt
       -fp_modbits nono_prec_sqrt            -fp_modbits ftz
       -fp_modbits nono_ftz                  -fp_modbits nointrin_limited_range
       -fp_modbits nono_intrin_limited_range       -fp_modbits notrunc_compares
       -fp_modbits nono_trunc_compares       -fp_modbits noieee_nan_compares
       -fp_modbits nono_ieee_nan_compares       -fp_modbits honor_f32_conversion
       -fp_modbits nono_honor_f32_conversion       -fp_modbits honor_f64_conversion
       -fp_modbits nono_honor_f64_conversion       -fp_modbits nono_x87_copy
       -fp_modbits nono_no_x87_copy          -fp_modbits noexception_semantics
       -fp_modbits nono_exception_semantics       -fp_modbits noprecise_libm_functions
       -fp_modbits nono_precise_libm_functions       -heap_arrays 0
  no   -threadprivate_compat                 -free
       -g2                                   -iface nomixed_str_len_arg
       -iface nono_mixed_str_len_arg         -init noarrays
       -init nohuge                          -init noinfinity
       -init nominus_huge                    -init nominus_infinity
       -init nominus_tiny                    -init nonan
       -init nosnan                          -init notiny
       -init nozero                     no   -intconstant
       -integer_size 32                 no   -mixed_str_len_arg
       -module ../.mods                      -names lowercase
  no   -noinclude                       no   -o
       -offload-build=host                   -openmp
       -openmp-simd                          -openmp-offload
       -O0                              no   -pad_source
       -real_size 64                    no   -recursive
       -reentrancy threaded                  -vec=simd
       -show nofullpath                      -show noinclude
       -show map                             -show options
  no   -syntax_only                     no   -threadcom
  no   -U                               no   -vms
       -w noall                              -w nonone
       -w noalignments                       -w nodeclarations
       -w noexternals                        -w nogeneral
       -w noignore_bounds                    -w noignore_loc
       -w nointerfaces                       -w noshape
       -w notruncated_source                 -w nouncalled

Page 141         Source Listing                  DIAG_FIELD_ADD_CELL_MEASURES
2021-06-01 08:54                                 diag_manager.F90

       -w nouninitialized                    -w nounused
       -w nousage                       no   -wrap-margins

       -includepath : /opt/netcdf/4.6.1/INTEL/include/,/opt/intel/2020/compilers_and_libraries/linux/pstl/include/,
           /opt/intel/2020/compilers_and_libraries_2020.0.166/linux/compiler/include/,.f90,./.f90,./.f90,../include/.f90,
           ./.f90,/opt/netcdf/4.6.1/INTEL/include/.f90,/opt/intel/2020/compilers_and_libraries/linux/mpi/intel64/include/.f90,
           /opt/intel/2020/compilers_and_libraries/linux/mpi/intel64/include/.f90,/opt/intel/2020/compilers_and_libraries/linux/ipp/include/.f90,
           /opt/intel/2020/compilers_and_libraries/linux/mkl/include/.f90,/opt/intel/2020/compilers_and_libraries/linux/pstl/include/.f90,
           /opt/intel/2020/compilers_and_libraries/linux/tbb/include/.f90,/opt/intel/2020/compilers_and_libraries/linux/daal/include/.f90,
           /opt/intel/2020/compilers_and_libraries_2020.0.166/linux/compiler/include/intel64/.f90,/opt/intel/2020/compilers_and_libraries_2020.0.166/linux/compiler/include/icc/.f90,
           /opt/intel/2020/compilers_and_libraries_2020.0.166/linux/compiler/include/.f90,/usr/local/include/.f90,
           /usr/lib/gcc/x86_64-redhat-linux/4.8.5/include/.f90,/usr/include/.f90,/usr/include/.f90,/usr/include/.f90
       -list filename : diag_manager.lst
  no   -o

COMPILER: Intel(R) Fortran 19.1-1555
